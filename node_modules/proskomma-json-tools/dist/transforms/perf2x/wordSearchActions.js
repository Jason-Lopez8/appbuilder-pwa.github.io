"use strict";

var wordSearchActions = {
  startDocument: [{
    description: "Set up state variables and output",
    test: () => true,
    action: _ref => {
      var {
        config,
        context,
        workspace,
        output
      } = _ref;
      workspace.chapter = null;
      workspace.verses = null;
      workspace.matches = new Set([]);
    }
  }],
  mark: [{
    description: "Update CV state",
    test: () => true,
    action: _ref2 => {
      var {
        config,
        context,
        workspace,
        output
      } = _ref2;
      var element = context.sequences[0].element;
      if (element.subType === 'chapter') {
        workspace.chapter = element.atts['number'];
      } else if (element.subType === 'verses') {
        workspace.verses = element.atts['number'];
      }
    }
  }],
  text: [{
    description: "Add matching verses to set",
    test: _ref3 => {
      var {
        context,
        workspace
      } = _ref3;
      return workspace.chapter && workspace.verses;
    },
    action: _ref4 => {
      var {
        config,
        context,
        workspace,
        output
      } = _ref4;
      var text = context.sequences[0].element.text;
      if (text.toLowerCase().includes(config.toSearch.toLowerCase())) {
        workspace.matches.add("".concat(workspace.chapter, ":").concat(workspace.verses));
      }
    }
  }],
  endDocument: [{
    description: "Sort matches",
    test: () => true,
    action: _ref5 => {
      var {
        config,
        context,
        workspace,
        output
      } = _ref5;
      output.matches = Array.from(workspace.matches).map(cv => cv.split(':').map(b => parseInt(b))).sort((a, b) => a[0] * 1000 + a[1] - (b[0] * 1000 + b[1])).map(cva => cva.join(':'));
    }
  }]
};
module.exports = wordSearchActions;