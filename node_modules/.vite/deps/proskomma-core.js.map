{
  "version": 3,
  "sources": ["../../core-js-pure/internals/global.js", "../../core-js-pure/internals/fails.js", "../../core-js-pure/internals/function-bind-native.js", "../../core-js-pure/internals/function-apply.js", "../../core-js-pure/internals/function-uncurry-this.js", "../../core-js-pure/internals/classof-raw.js", "../../core-js-pure/internals/function-uncurry-this-clause.js", "../../core-js-pure/internals/document-all.js", "../../core-js-pure/internals/is-callable.js", "../../core-js-pure/internals/descriptors.js", "../../core-js-pure/internals/function-call.js", "../../core-js-pure/internals/object-property-is-enumerable.js", "../../core-js-pure/internals/create-property-descriptor.js", "../../core-js-pure/internals/indexed-object.js", "../../core-js-pure/internals/is-null-or-undefined.js", "../../core-js-pure/internals/require-object-coercible.js", "../../core-js-pure/internals/to-indexed-object.js", "../../core-js-pure/internals/is-object.js", "../../core-js-pure/internals/path.js", "../../core-js-pure/internals/get-built-in.js", "../../core-js-pure/internals/object-is-prototype-of.js", "../../core-js-pure/internals/engine-user-agent.js", "../../core-js-pure/internals/engine-v8-version.js", "../../core-js-pure/internals/symbol-constructor-detection.js", "../../core-js-pure/internals/use-symbol-as-uid.js", "../../core-js-pure/internals/is-symbol.js", "../../core-js-pure/internals/try-to-string.js", "../../core-js-pure/internals/a-callable.js", "../../core-js-pure/internals/get-method.js", "../../core-js-pure/internals/ordinary-to-primitive.js", "../../core-js-pure/internals/is-pure.js", "../../core-js-pure/internals/define-global-property.js", "../../core-js-pure/internals/shared-store.js", "../../core-js-pure/internals/shared.js", "../../core-js-pure/internals/to-object.js", "../../core-js-pure/internals/has-own-property.js", "../../core-js-pure/internals/uid.js", "../../core-js-pure/internals/well-known-symbol.js", "../../core-js-pure/internals/to-primitive.js", "../../core-js-pure/internals/to-property-key.js", "../../core-js-pure/internals/document-create-element.js", "../../core-js-pure/internals/ie8-dom-define.js", "../../core-js-pure/internals/object-get-own-property-descriptor.js", "../../core-js-pure/internals/is-forced.js", "../../core-js-pure/internals/function-bind-context.js", "../../core-js-pure/internals/v8-prototype-define-bug.js", "../../core-js-pure/internals/an-object.js", "../../core-js-pure/internals/object-define-property.js", "../../core-js-pure/internals/create-non-enumerable-property.js", "../../core-js-pure/internals/export.js", "../../core-js-pure/modules/es.object.define-property.js", "../../core-js-pure/es/object/define-property.js", "../../core-js-pure/stable/object/define-property.js", "../../@babel/runtime-corejs3/core-js-stable/object/define-property.js", "../../@babel/runtime-corejs3/helpers/interopRequireDefault.js", "../../core-js-pure/internals/is-array.js", "../../core-js-pure/internals/to-string-tag-support.js", "../../core-js-pure/internals/classof.js", "../../core-js-pure/internals/inspect-source.js", "../../core-js-pure/internals/is-constructor.js", "../../core-js-pure/internals/math-trunc.js", "../../core-js-pure/internals/to-integer-or-infinity.js", "../../core-js-pure/internals/to-absolute-index.js", "../../core-js-pure/internals/to-length.js", "../../core-js-pure/internals/length-of-array-like.js", "../../core-js-pure/internals/create-property.js", "../../core-js-pure/internals/array-method-has-species-support.js", "../../core-js-pure/internals/array-slice.js", "../../core-js-pure/modules/es.array.slice.js", "../../core-js-pure/internals/entry-virtual.js", "../../core-js-pure/es/array/virtual/slice.js", "../../core-js-pure/es/instance/slice.js", "../../core-js-pure/stable/instance/slice.js", "../../@babel/runtime-corejs3/core-js-stable/instance/slice.js", "../../core-js-pure/internals/to-string.js", "../../core-js-pure/internals/string-multibyte.js", "../../core-js-pure/internals/weak-map-basic-detection.js", "../../core-js-pure/internals/shared-key.js", "../../core-js-pure/internals/hidden-keys.js", "../../core-js-pure/internals/internal-state.js", "../../core-js-pure/internals/function-name.js", "../../core-js-pure/internals/array-includes.js", "../../core-js-pure/internals/object-keys-internal.js", "../../core-js-pure/internals/enum-bug-keys.js", "../../core-js-pure/internals/object-keys.js", "../../core-js-pure/internals/object-define-properties.js", "../../core-js-pure/internals/html.js", "../../core-js-pure/internals/object-create.js", "../../core-js-pure/internals/correct-prototype-getter.js", "../../core-js-pure/internals/object-get-prototype-of.js", "../../core-js-pure/internals/define-built-in.js", "../../core-js-pure/internals/iterators-core.js", "../../core-js-pure/internals/object-to-string.js", "../../core-js-pure/internals/set-to-string-tag.js", "../../core-js-pure/internals/iterators.js", "../../core-js-pure/internals/iterator-create-constructor.js", "../../core-js-pure/internals/a-possible-prototype.js", "../../core-js-pure/internals/object-set-prototype-of.js", "../../core-js-pure/internals/iterator-define.js", "../../core-js-pure/internals/create-iter-result-object.js", "../../core-js-pure/modules/es.string.iterator.js", "../../core-js-pure/internals/iterator-close.js", "../../core-js-pure/internals/call-with-safe-iteration-closing.js", "../../core-js-pure/internals/is-array-iterator-method.js", "../../core-js-pure/internals/get-iterator-method.js", "../../core-js-pure/internals/get-iterator.js", "../../core-js-pure/internals/array-from.js", "../../core-js-pure/internals/check-correctness-of-iteration.js", "../../core-js-pure/modules/es.array.from.js", "../../core-js-pure/es/array/from.js", "../../core-js-pure/stable/array/from.js", "../../@babel/runtime-corejs3/core-js-stable/array/from.js", "../../core-js-pure/internals/does-not-exceed-safe-integer.js", "../../core-js-pure/internals/array-species-constructor.js", "../../core-js-pure/internals/array-species-create.js", "../../core-js-pure/modules/es.array.concat.js", "../../core-js-pure/modules/es.object.to-string.js", "../../core-js-pure/internals/object-get-own-property-names.js", "../../core-js-pure/internals/array-slice-simple.js", "../../core-js-pure/internals/object-get-own-property-names-external.js", "../../core-js-pure/internals/object-get-own-property-symbols.js", "../../core-js-pure/internals/well-known-symbol-wrapped.js", "../../core-js-pure/internals/well-known-symbol-define.js", "../../core-js-pure/internals/symbol-define-to-primitive.js", "../../core-js-pure/internals/array-iteration.js", "../../core-js-pure/modules/es.symbol.constructor.js", "../../core-js-pure/internals/symbol-registry-detection.js", "../../core-js-pure/modules/es.symbol.for.js", "../../core-js-pure/modules/es.symbol.key-for.js", "../../core-js-pure/modules/es.json.stringify.js", "../../core-js-pure/modules/es.object.get-own-property-symbols.js", "../../core-js-pure/modules/es.symbol.js", "../../core-js-pure/modules/es.symbol.async-iterator.js", "../../core-js-pure/modules/es.symbol.description.js", "../../core-js-pure/modules/es.symbol.has-instance.js", "../../core-js-pure/modules/es.symbol.is-concat-spreadable.js", "../../core-js-pure/modules/es.symbol.iterator.js", "../../core-js-pure/modules/es.symbol.match.js", "../../core-js-pure/modules/es.symbol.match-all.js", "../../core-js-pure/modules/es.symbol.replace.js", "../../core-js-pure/modules/es.symbol.search.js", "../../core-js-pure/modules/es.symbol.species.js", "../../core-js-pure/modules/es.symbol.split.js", "../../core-js-pure/modules/es.symbol.to-primitive.js", "../../core-js-pure/modules/es.symbol.to-string-tag.js", "../../core-js-pure/modules/es.symbol.unscopables.js", "../../core-js-pure/modules/es.json.to-string-tag.js", "../../core-js-pure/modules/es.math.to-string-tag.js", "../../core-js-pure/modules/es.reflect.to-string-tag.js", "../../core-js-pure/es/symbol/index.js", "../../core-js-pure/internals/add-to-unscopables.js", "../../core-js-pure/modules/es.array.iterator.js", "../../core-js-pure/internals/dom-iterables.js", "../../core-js-pure/modules/web.dom-collections.iterator.js", "../../core-js-pure/stable/symbol/index.js", "../../@babel/runtime-corejs3/core-js-stable/symbol.js", "../../core-js-pure/es/get-iterator-method.js", "../../core-js-pure/stable/get-iterator-method.js", "../../core-js-pure/actual/get-iterator-method.js", "../../core-js-pure/full/get-iterator-method.js", "../../core-js-pure/features/get-iterator-method.js", "../../@babel/runtime-corejs3/core-js/get-iterator-method.js", "../../core-js-pure/modules/es.array.is-array.js", "../../core-js-pure/es/array/is-array.js", "../../core-js-pure/stable/array/is-array.js", "../../@babel/runtime-corejs3/core-js-stable/array/is-array.js", "../../core-js-pure/actual/array/is-array.js", "../../core-js-pure/full/array/is-array.js", "../../core-js-pure/features/array/is-array.js", "../../@babel/runtime-corejs3/core-js/array/is-array.js", "../../@babel/runtime-corejs3/helpers/arrayWithHoles.js", "../../core-js-pure/modules/esnext.symbol.dispose.js", "../../core-js-pure/actual/symbol/index.js", "../../core-js-pure/modules/esnext.symbol.async-dispose.js", "../../core-js-pure/modules/esnext.symbol.matcher.js", "../../core-js-pure/modules/esnext.symbol.metadata-key.js", "../../core-js-pure/modules/esnext.symbol.observable.js", "../../core-js-pure/modules/esnext.symbol.metadata.js", "../../core-js-pure/modules/esnext.symbol.pattern-match.js", "../../core-js-pure/modules/esnext.symbol.replace-all.js", "../../core-js-pure/full/symbol/index.js", "../../core-js-pure/features/symbol/index.js", "../../@babel/runtime-corejs3/core-js/symbol.js", "../../@babel/runtime-corejs3/helpers/iterableToArrayLimit.js", "../../core-js-pure/actual/instance/slice.js", "../../core-js-pure/full/instance/slice.js", "../../core-js-pure/features/instance/slice.js", "../../@babel/runtime-corejs3/core-js/instance/slice.js", "../../core-js-pure/actual/array/from.js", "../../core-js-pure/full/array/from.js", "../../core-js-pure/features/array/from.js", "../../@babel/runtime-corejs3/core-js/array/from.js", "../../@babel/runtime-corejs3/helpers/arrayLikeToArray.js", "../../@babel/runtime-corejs3/helpers/unsupportedIterableToArray.js", "../../@babel/runtime-corejs3/helpers/nonIterableRest.js", "../../@babel/runtime-corejs3/helpers/slicedToArray.js", "../../core-js-pure/modules/es.regexp.flags.js", "../../core-js-pure/internals/regexp-flags.js", "../../core-js-pure/internals/regexp-get-flags.js", "../../core-js-pure/es/regexp/flags.js", "../../core-js-pure/es/instance/flags.js", "../../core-js-pure/stable/instance/flags.js", "../../@babel/runtime-corejs3/core-js-stable/instance/flags.js", "../../core-js-pure/internals/delete-property-or-throw.js", "../../core-js-pure/internals/array-sort.js", "../../core-js-pure/internals/array-method-is-strict.js", "../../core-js-pure/internals/engine-ff-version.js", "../../core-js-pure/internals/engine-is-ie-or-edge.js", "../../core-js-pure/internals/engine-webkit-version.js", "../../core-js-pure/modules/es.array.sort.js", "../../core-js-pure/es/array/virtual/sort.js", "../../core-js-pure/es/instance/sort.js", "../../core-js-pure/stable/instance/sort.js", "../../@babel/runtime-corejs3/core-js-stable/instance/sort.js", "../../core-js-pure/internals/whitespaces.js", "../../core-js-pure/internals/string-trim.js", "../../core-js-pure/internals/number-parse-int.js", "../../core-js-pure/modules/es.parse-int.js", "../../core-js-pure/es/parse-int.js", "../../core-js-pure/stable/parse-int.js", "../../@babel/runtime-corejs3/core-js-stable/parse-int.js", "../../core-js-pure/modules/es.array.index-of.js", "../../core-js-pure/es/array/virtual/index-of.js", "../../core-js-pure/es/instance/index-of.js", "../../core-js-pure/stable/instance/index-of.js", "../../@babel/runtime-corejs3/core-js-stable/instance/index-of.js", "../../core-js-pure/internals/array-for-each.js", "../../core-js-pure/modules/es.array.for-each.js", "../../core-js-pure/es/array/virtual/for-each.js", "../../core-js-pure/stable/array/virtual/for-each.js", "../../core-js-pure/stable/instance/for-each.js", "../../@babel/runtime-corejs3/core-js-stable/instance/for-each.js", "../../core-js-pure/modules/es.object.create.js", "../../core-js-pure/es/object/create.js", "../../core-js-pure/stable/object/create.js", "../../@babel/runtime-corejs3/core-js-stable/object/create.js", "../../core-js-pure/es/array/virtual/concat.js", "../../core-js-pure/es/instance/concat.js", "../../core-js-pure/stable/instance/concat.js", "../../@babel/runtime-corejs3/core-js-stable/instance/concat.js", "../../xregexp/lib/xregexp.js", "../../core-js-pure/internals/array-reduce.js", "../../core-js-pure/internals/engine-is-node.js", "../../core-js-pure/modules/es.array.reduce.js", "../../core-js-pure/es/array/virtual/reduce.js", "../../core-js-pure/es/instance/reduce.js", "../../core-js-pure/stable/instance/reduce.js", "../../@babel/runtime-corejs3/core-js-stable/instance/reduce.js", "../../core-js-pure/modules/es.array.map.js", "../../core-js-pure/es/array/virtual/map.js", "../../core-js-pure/es/instance/map.js", "../../core-js-pure/stable/instance/map.js", "../../@babel/runtime-corejs3/core-js-stable/instance/map.js", "../../xregexp/lib/addons/build.js", "../../xregexp/lib/addons/matchrecursive.js", "../../xregexp/lib/addons/unicode-base.js", "../../xregexp/tools/output/categories.js", "../../xregexp/lib/addons/unicode-categories.js", "../../xregexp/tools/output/properties.js", "../../xregexp/lib/addons/unicode-properties.js", "../../xregexp/tools/output/scripts.js", "../../xregexp/lib/addons/unicode-scripts.js", "../../xregexp/lib/index.js", "../../tslib/tslib.js", "../../graphql/version.mjs", "../../graphql/jsutils/devAssert.mjs", "../../graphql/jsutils/isPromise.mjs", "../../graphql/jsutils/isObjectLike.mjs", "../../graphql/jsutils/invariant.mjs", "../../graphql/language/location.mjs", "../../graphql/language/printLocation.mjs", "../../graphql/error/GraphQLError.mjs", "../../graphql/error/syntaxError.mjs", "../../graphql/language/ast.mjs", "../../graphql/language/directiveLocation.mjs", "../../graphql/language/kinds.mjs", "../../graphql/language/characterClasses.mjs", "../../graphql/language/blockString.mjs", "../../graphql/language/tokenKind.mjs", "../../graphql/language/lexer.mjs", "../../graphql/jsutils/inspect.mjs", "../../graphql/jsutils/instanceOf.mjs", "../../graphql/language/source.mjs", "../../graphql/language/parser.mjs", "../../graphql/jsutils/didYouMean.mjs", "../../graphql/jsutils/identityFunc.mjs", "../../graphql/jsutils/keyMap.mjs", "../../graphql/jsutils/keyValMap.mjs", "../../graphql/jsutils/mapValue.mjs", "../../graphql/jsutils/naturalCompare.mjs", "../../graphql/jsutils/suggestionList.mjs", "../../graphql/jsutils/toObjMap.mjs", "../../graphql/language/printString.mjs", "../../graphql/language/visitor.mjs", "../../graphql/language/printer.mjs", "../../graphql/utilities/valueFromASTUntyped.mjs", "../../graphql/type/assertName.mjs", "../../graphql/type/definition.mjs", "../../graphql/utilities/typeComparators.mjs", "../../graphql/type/scalars.mjs", "../../graphql/type/directives.mjs", "../../graphql/jsutils/isIterableObject.mjs", "../../graphql/utilities/astFromValue.mjs", "../../graphql/type/introspection.mjs", "../../graphql/type/schema.mjs", "../../graphql/type/validate.mjs", "../../graphql/utilities/typeFromAST.mjs", "../../graphql/utilities/TypeInfo.mjs", "../../graphql/language/predicates.mjs", "../../graphql/validation/rules/ExecutableDefinitionsRule.mjs", "../../graphql/validation/rules/FieldsOnCorrectTypeRule.mjs", "../../graphql/validation/rules/FragmentsOnCompositeTypesRule.mjs", "../../graphql/validation/rules/KnownArgumentNamesRule.mjs", "../../graphql/validation/rules/KnownDirectivesRule.mjs", "../../graphql/validation/rules/KnownFragmentNamesRule.mjs", "../../graphql/validation/rules/KnownTypeNamesRule.mjs", "../../graphql/validation/rules/LoneAnonymousOperationRule.mjs", "../../graphql/validation/rules/LoneSchemaDefinitionRule.mjs", "../../graphql/validation/rules/NoFragmentCyclesRule.mjs", "../../graphql/validation/rules/NoUndefinedVariablesRule.mjs", "../../graphql/validation/rules/NoUnusedFragmentsRule.mjs", "../../graphql/validation/rules/NoUnusedVariablesRule.mjs", "../../graphql/utilities/sortValueNode.mjs", "../../graphql/validation/rules/OverlappingFieldsCanBeMergedRule.mjs", "../../graphql/validation/rules/PossibleFragmentSpreadsRule.mjs", "../../graphql/validation/rules/PossibleTypeExtensionsRule.mjs", "../../graphql/validation/rules/ProvidedRequiredArgumentsRule.mjs", "../../graphql/validation/rules/ScalarLeafsRule.mjs", "../../graphql/jsutils/printPathArray.mjs", "../../graphql/jsutils/Path.mjs", "../../graphql/utilities/coerceInputValue.mjs", "../../graphql/utilities/valueFromAST.mjs", "../../graphql/execution/values.mjs", "../../graphql/execution/collectFields.mjs", "../../graphql/validation/rules/SingleFieldSubscriptionsRule.mjs", "../../graphql/jsutils/groupBy.mjs", "../../graphql/validation/rules/UniqueArgumentDefinitionNamesRule.mjs", "../../graphql/validation/rules/UniqueArgumentNamesRule.mjs", "../../graphql/validation/rules/UniqueDirectiveNamesRule.mjs", "../../graphql/validation/rules/UniqueDirectivesPerLocationRule.mjs", "../../graphql/validation/rules/UniqueEnumValueNamesRule.mjs", "../../graphql/validation/rules/UniqueFieldDefinitionNamesRule.mjs", "../../graphql/validation/rules/UniqueFragmentNamesRule.mjs", "../../graphql/validation/rules/UniqueInputFieldNamesRule.mjs", "../../graphql/validation/rules/UniqueOperationNamesRule.mjs", "../../graphql/validation/rules/UniqueOperationTypesRule.mjs", "../../graphql/validation/rules/UniqueTypeNamesRule.mjs", "../../graphql/validation/rules/UniqueVariableNamesRule.mjs", "../../graphql/validation/rules/ValuesOfCorrectTypeRule.mjs", "../../graphql/validation/rules/VariablesAreInputTypesRule.mjs", "../../graphql/validation/rules/VariablesInAllowedPositionRule.mjs", "../../graphql/validation/specifiedRules.mjs", "../../graphql/validation/ValidationContext.mjs", "../../graphql/validation/validate.mjs", "../../graphql/jsutils/memoize3.mjs", "../../graphql/jsutils/promiseForObject.mjs", "../../graphql/jsutils/promiseReduce.mjs", "../../graphql/jsutils/toError.mjs", "../../graphql/error/locatedError.mjs", "../../graphql/execution/execute.mjs", "../../graphql/graphql.mjs", "../../graphql/type/index.mjs", "../../graphql/language/index.mjs", "../../graphql/jsutils/isAsyncIterable.mjs", "../../graphql/execution/mapAsyncIterator.mjs", "../../graphql/execution/subscribe.mjs", "../../graphql/execution/index.mjs", "../../graphql/validation/rules/custom/NoDeprecatedCustomRule.mjs", "../../graphql/validation/rules/custom/NoSchemaIntrospectionCustomRule.mjs", "../../graphql/validation/index.mjs", "../../graphql/error/index.mjs", "../../graphql/utilities/getIntrospectionQuery.mjs", "../../graphql/utilities/getOperationAST.mjs", "../../graphql/utilities/getOperationRootType.mjs", "../../graphql/utilities/introspectionFromSchema.mjs", "../../graphql/utilities/buildClientSchema.mjs", "../../graphql/utilities/extendSchema.mjs", "../../graphql/utilities/buildASTSchema.mjs", "../../graphql/utilities/lexicographicSortSchema.mjs", "../../graphql/utilities/printSchema.mjs", "../../graphql/utilities/concatAST.mjs", "../../graphql/utilities/separateOperations.mjs", "../../graphql/utilities/stripIgnoredCharacters.mjs", "../../graphql/utilities/assertValidName.mjs", "../../graphql/utilities/findBreakingChanges.mjs", "../../graphql/utilities/index.mjs", "../../graphql/index.mjs", "../../@graphql-tools/utils/cjs/loaders.js", "../../@graphql-tools/utils/cjs/helpers.js", "../../@graphql-tools/utils/cjs/jsutils.js", "../../@graphql-tools/utils/cjs/errors.js", "../../@graphql-tools/utils/cjs/AggregateError.js", "../../@graphql-tools/utils/cjs/inspect.js", "../../@graphql-tools/utils/cjs/getArgumentValues.js", "../../@graphql-tools/utils/cjs/get-directives.js", "../../@graphql-tools/utils/cjs/get-fields-with-directives.js", "../../@graphql-tools/utils/cjs/get-arguments-with-directives.js", "../../@graphql-tools/utils/cjs/get-implementing-types.js", "../../@graphql-tools/utils/cjs/astFromType.js", "../../@graphql-tools/utils/cjs/astFromValueUntyped.js", "../../@graphql-tools/utils/cjs/memoize.js", "../../@graphql-tools/utils/cjs/rootTypes.js", "../../@graphql-tools/utils/cjs/print-schema-with-directives.js", "../../@graphql-tools/utils/cjs/validate-documents.js", "../../@graphql-tools/utils/cjs/parse-graphql-json.js", "../../@graphql-tools/utils/cjs/comments.js", "../../@graphql-tools/utils/cjs/parse-graphql-sdl.js", "../../@graphql-tools/utils/cjs/build-operation-for-field.js", "../../@graphql-tools/utils/cjs/types.js", "../../@graphql-tools/utils/cjs/Interfaces.js", "../../@graphql-tools/utils/cjs/getObjectTypeFromTypeMap.js", "../../@graphql-tools/utils/cjs/stub.js", "../../@graphql-tools/utils/cjs/rewire.js", "../../@graphql-tools/utils/cjs/transformInputValue.js", "../../@graphql-tools/utils/cjs/mapSchema.js", "../../@graphql-tools/utils/cjs/filterSchema.js", "../../@graphql-tools/utils/cjs/heal.js", "../../@graphql-tools/utils/cjs/getResolversFromSchema.js", "../../@graphql-tools/utils/cjs/forEachField.js", "../../@graphql-tools/utils/cjs/forEachDefaultValue.js", "../../@graphql-tools/utils/cjs/addTypes.js", "../../@graphql-tools/utils/cjs/prune.js", "../../@graphql-tools/utils/cjs/mergeDeep.js", "../../@graphql-tools/utils/cjs/selectionSets.js", "../../@graphql-tools/utils/cjs/getResponseKeyFromInfo.js", "../../@graphql-tools/utils/cjs/fields.js", "../../@graphql-tools/utils/cjs/renameType.js", "../../@graphql-tools/utils/cjs/mapAsyncIterator.js", "../../@graphql-tools/utils/cjs/updateArgument.js", "../../@graphql-tools/utils/cjs/implementsAbstractType.js", "../../@graphql-tools/utils/cjs/observableToAsyncIterable.js", "../../@graphql-tools/utils/cjs/getOperationASTFromRequest.js", "../../@graphql-tools/utils/cjs/directives.js", "../../@graphql-tools/utils/cjs/AccumulatorMap.js", "../../@graphql-tools/utils/cjs/collectFields.js", "../../@graphql-tools/utils/cjs/visitResult.js", "../../@graphql-tools/utils/cjs/valueMatchesCriteria.js", "../../@graphql-tools/utils/cjs/isAsyncIterable.js", "../../@graphql-tools/utils/cjs/isDocumentNode.js", "../../@graphql-tools/utils/cjs/executor.js", "../../@graphql-tools/utils/cjs/withCancel.js", "../../@graphql-tools/utils/cjs/fixSchemaAst.js", "../../@graphql-tools/utils/cjs/extractExtensionsFromSchema.js", "../../@graphql-tools/utils/cjs/Path.js", "../../@graphql-tools/utils/cjs/index.js", "../../@graphql-tools/schema/cjs/assertResolversPresent.js", "../../@graphql-tools/schema/cjs/chainResolvers.js", "../../@graphql-tools/schema/cjs/checkForResolveTypeResolver.js", "../../@graphql-tools/schema/cjs/extendResolversFromInterfaces.js", "../../@graphql-tools/schema/cjs/addResolversToSchema.js", "../../@graphql-tools/merge/cjs/merge-resolvers.js", "../../@graphql-tools/merge/cjs/typedefs-mergers/arguments.js", "../../@graphql-tools/merge/cjs/typedefs-mergers/directives.js", "../../@graphql-tools/merge/cjs/typedefs-mergers/enum-values.js", "../../@graphql-tools/merge/cjs/typedefs-mergers/enum.js", "../../@graphql-tools/merge/cjs/typedefs-mergers/utils.js", "../../@graphql-tools/merge/cjs/typedefs-mergers/fields.js", "../../@graphql-tools/merge/cjs/typedefs-mergers/input-type.js", "../../@graphql-tools/merge/cjs/typedefs-mergers/merge-named-type-array.js", "../../@graphql-tools/merge/cjs/typedefs-mergers/interface.js", "../../@graphql-tools/merge/cjs/typedefs-mergers/type.js", "../../@graphql-tools/merge/cjs/typedefs-mergers/scalar.js", "../../@graphql-tools/merge/cjs/typedefs-mergers/union.js", "../../@graphql-tools/merge/cjs/typedefs-mergers/schema-def.js", "../../@graphql-tools/merge/cjs/typedefs-mergers/merge-nodes.js", "../../@graphql-tools/merge/cjs/typedefs-mergers/merge-typedefs.js", "../../@graphql-tools/merge/cjs/typedefs-mergers/index.js", "../../@graphql-tools/merge/cjs/extensions.js", "../../@graphql-tools/merge/cjs/index.js", "../../@graphql-tools/schema/cjs/makeExecutableSchema.js", "../../@graphql-tools/schema/cjs/types.js", "../../@graphql-tools/schema/cjs/merge-schemas.js", "../../@graphql-tools/schema/cjs/index.js", "../../async-mutex/lib/errors.js", "../../async-mutex/lib/Semaphore.js", "../../async-mutex/lib/Mutex.js", "../../async-mutex/lib/withTimeout.js", "../../async-mutex/lib/tryAcquire.js", "../../async-mutex/lib/index.js", "node-modules-polyfills:crypto", "node-modules-polyfills-commonjs:crypto", "node-modules-polyfills:fs", "node-modules-polyfills-commonjs:fs", "../../checksum/checksum.js", "../../bitset/bitset.js", "../../proskomma-core/package.json", "../../utf8-string-bytes/index.js", "../../base64-js/index.js", "../../proskomma-core/src/util/byteArray.cjs", "../../proskomma-core/src/util/canons.cjs", "../../proskomma-core/src/util/enums.cjs", "../../pure-uuid/uuid.js", "../../btoa/index.js", "../../proskomma-core/src/util/generateId.cjs", "../../proskomma-core/src/util/graftDefs.cjs", "../../proskomma-core/src/util/tokenDefs.cjs", "../../proskomma-core/src/util/scopeDefs.cjs", "../../proskomma-core/src/util/itemDefs.cjs", "../../proskomma-core/src/util/succinct.cjs", "../../proskomma-core/src/util/inspectSuccinct.cjs", "../../proskomma-core/src/util/parserConstantDefs.cjs", "../../proskomma-core/src/util/tags.cjs", "../../proskomma-core/src/util/versification.cjs", "../../proskomma-core/src/util/index.cjs", "../../proskomma-core/src/model/doc_set_helpers/selectors.cjs", "../../proskomma-core/src/model/doc_set_helpers/block.cjs", "../../proskomma-core/src/model/doc_set_helpers/unsuccinctify.cjs", "../../proskomma-core/src/model/doc_set_helpers/enum.cjs", "../../proskomma-core/src/model/doc_set_helpers/item.cjs", "../../proskomma-core/src/model/doc_set_helpers/rehash.cjs", "../../proskomma-core/src/model/doc_set_helpers/update.cjs", "../../proskomma-core/src/model/doc_set_helpers/serialize.cjs", "../../proskomma-core/src/model/doc_set.cjs", "../../proskomma-core/node_modules/ajv/lib/compile/codegen/code.ts", "../../proskomma-core/node_modules/ajv/lib/compile/codegen/scope.ts", "../../proskomma-core/node_modules/ajv/lib/compile/codegen/index.ts", "../../proskomma-core/node_modules/ajv/lib/compile/util.ts", "../../proskomma-core/node_modules/ajv/lib/compile/names.ts", "../../proskomma-core/node_modules/ajv/lib/compile/errors.ts", "../../proskomma-core/node_modules/ajv/lib/compile/validate/boolSchema.ts", "../../proskomma-core/node_modules/ajv/lib/compile/rules.ts", "../../proskomma-core/node_modules/ajv/lib/compile/validate/applicability.ts", "../../proskomma-core/node_modules/ajv/lib/compile/validate/dataType.ts", "../../proskomma-core/node_modules/ajv/lib/compile/validate/defaults.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/code.ts", "../../proskomma-core/node_modules/ajv/lib/compile/validate/keyword.ts", "../../proskomma-core/node_modules/ajv/lib/compile/validate/subschema.ts", "../../proskomma-core/node_modules/json-schema-traverse/index.js", "../../proskomma-core/node_modules/ajv/lib/compile/resolve.ts", "../../proskomma-core/node_modules/ajv/lib/compile/validate/index.ts", "../../proskomma-core/node_modules/ajv/lib/runtime/validation_error.ts", "../../proskomma-core/node_modules/ajv/lib/compile/ref_error.ts", "../../proskomma-core/node_modules/ajv/lib/compile/index.ts", "../../proskomma-core/node_modules/ajv/dist/refs/data.json", "../../proskomma-core/node_modules/ajv/lib/runtime/uri.ts", "../../proskomma-core/node_modules/ajv/lib/core.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/core/id.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/core/ref.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/core/index.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/validation/limitNumber.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/validation/multipleOf.ts", "../../proskomma-core/node_modules/ajv/lib/runtime/ucs2length.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/validation/limitLength.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/validation/pattern.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/validation/limitProperties.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/validation/required.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/validation/limitItems.ts", "../../proskomma-core/node_modules/ajv/lib/runtime/equal.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/validation/uniqueItems.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/validation/const.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/validation/enum.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/validation/index.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/applicator/additionalItems.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/applicator/items.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/applicator/prefixItems.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/applicator/items2020.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/applicator/contains.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/applicator/dependencies.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/applicator/propertyNames.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/applicator/additionalProperties.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/applicator/properties.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/applicator/patternProperties.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/applicator/not.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/applicator/anyOf.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/applicator/oneOf.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/applicator/allOf.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/applicator/if.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/applicator/thenElse.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/applicator/index.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/format/format.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/format/index.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/metadata.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/draft7.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/discriminator/types.ts", "../../proskomma-core/node_modules/ajv/lib/vocabularies/discriminator/index.ts", "../../proskomma-core/node_modules/ajv/dist/refs/json-schema-draft-07.json", "../../proskomma-core/node_modules/ajv/lib/ajv.ts", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/succinct/0_2_0/proskomma_succinct.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/structure/0_2_1/document_structure.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/structure/0_2_1/sequence_structure.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/structure/0_2_1/block_structure.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/structure/0_2_1/contentElement_structure.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/constraint/0_2_1/perf_document_constraint.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/constraint/0_2_1/perf_sequence_constraint.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/constraint/0_2_1/perf_block_constraint.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/constraint/0_2_1/perf_contentElement_constraint.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/constraint/0_2_1/sofria_document_constraint.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/constraint/0_2_1/sofria_sequence_constraint.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/constraint/0_2_1/sofria_block_constraint.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/constraint/0_2_1/sofria_contentElement_constraint.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/structure/0_3_0/document_structure.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/structure/0_3_0/sequence_structure.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/structure/0_3_0/block_structure.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/structure/0_3_0/contentElement_structure.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/structure/0_3_0/hooks_structure.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/constraint/0_3_0/perf_document_constraint.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/constraint/0_3_0/perf_sequence_constraint.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/constraint/0_3_0/perf_block_constraint.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/constraint/0_3_0/perf_contentElement_constraint.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/constraint/0_3_0/sofria_document_constraint.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/constraint/0_3_0/sofria_sequence_constraint.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/constraint/0_3_0/sofria_block_constraint.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/schema/constraint/0_3_0/sofria_contentElement_constraint.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/validator.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/usfmHelps.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/alignment/renderActions/verseWords.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/alignment/renderActions/stripAlignment.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/alignment/renderActions/mergeAlignement.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/alignment/renderActions/index.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/ProskommaRenderAction.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/ProskommaRender.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/PerfRenderFromJson.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/alignment/transforms/verseWords.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/mergeActions.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/perfToPerf/renderActions/identity.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/alignment/transforms/stripAlignment.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/alignment/transforms/mergeAlignment.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/alignment/transforms/index.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/alignment/index.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/xToPerf/renderActions/index.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/xToPerf/transforms/usfmToPerf.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/xToPerf/transforms/index.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/xToPerf/index.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/sofriaToSofria/renderActions/identity.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/sofriaToSofria/renderActions/index.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/sofriaToSofria/transforms/identity.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/sofriaToSofria/transforms/index.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/sofriaToSofria/index.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/perfToX/renderActions/wordCount.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/perfToX/renderActions/calculateUsfmChapterPositions.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/perfToX/renderActions/perfToUsfm.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/perfToX/renderActions/index.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/perfToX/transforms/wordCount.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/perfToX/transforms/calculateUsfmChapterPositions.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/perfToX/transforms/perfToUsfm.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/perfToX/transforms/index.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/perfToX/index.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/perfToPerf/renderActions/justTheBible.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/perfToPerf/renderActions/index.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/perfToPerf/transforms/identity.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/perfToPerf/transforms/justTheBible.js", "../../deep-copy-all/dist/dca-library.js", "../../deep-copy-all/dist/deepCopyAll.min.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/perfToPerf/transforms/mergePerfText.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/perfToPerf/transforms/index.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/perfToPerf/index.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/render/index.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/pipelines/usfmToPerfPipeline.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/pipelines/mergeAlignmentPipeline.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/pipelines/stripAlignmentPipeline.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/pipelines/perfToUsfmPipeline.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/pipelines/justTheBiblePipeline.json", "../../proskomma-core/node_modules/proskomma-json-tools/dist/pipelines/index.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/classes/PipelineHandler.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/PerfRenderFromProskomma.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/SofriaRenderFromJson.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/SofriaRenderFromProskomma.js", "../../proskomma-core/node_modules/proskomma-json-tools/dist/index.js", "../../proskomma-core/src/parser/lexers/lexingRegexes.cjs", "../../proskomma-core/src/parser/lexers/object_for_fragment.cjs", "../../proskomma-core/src/parser/lexers/usfm.cjs", "node-modules-polyfills:events", "node-modules-polyfills:process", "../../rollup-plugin-node-polyfills/polyfills/inherits.js", "node-modules-polyfills:util", "node-modules-polyfills:buffer", "../../rollup-plugin-node-polyfills/polyfills/readable-stream/buffer-list.js", "node-modules-polyfills:string_decoder", "../../rollup-plugin-node-polyfills/polyfills/readable-stream/readable.js", "../../rollup-plugin-node-polyfills/polyfills/readable-stream/writable.js", "../../rollup-plugin-node-polyfills/polyfills/readable-stream/duplex.js", "../../rollup-plugin-node-polyfills/polyfills/readable-stream/transform.js", "../../rollup-plugin-node-polyfills/polyfills/readable-stream/passthrough.js", "node-modules-polyfills:stream", "node-modules-polyfills-commonjs:stream", "node-modules-polyfills-commonjs:string_decoder", "../../sax/lib/sax.js", "../../proskomma-core/src/parser/lexers/usx/usx_lexer.cjs", "../../proskomma-core/src/parser/lexers/usx/index.cjs", "../../proskomma-core/src/parser/model/index.cjs", "../../proskomma-core/src/parser/lib/tokenize.cjs", "../../proskomma-core/src/parser/lexers/tsv.cjs", "../../proskomma-core/src/parser/lexers/nodes.cjs", "../../proskomma-core/src/parser/lexers/index.cjs", "../../proskomma-core/src/parser/parser_specs.cjs", "../../proskomma-core/src/parser/index.cjs", "../../proskomma-core/src/pipelines/perf2x/perf2usfmPipeline.json", "../../proskomma-core/src/pipelines/perf2x/perf2PkJsonPipeline.json", "../../proskomma-core/src/pipelines/perf2x/index.cjs", "../../proskomma-core/src/transforms/calculateUsfmChapterPositions.cjs", "../../proskomma-core/src/transforms/perf2usfm.cjs", "../../proskomma-core/src/transforms/perf2PkJson.cjs", "../../proskomma-core/src/transforms/index.cjs", "../../proskomma-core/src/model/document_helpers/chapter_verse.cjs", "../../proskomma-core/src/model/document_helpers/sequences.cjs", "../../proskomma-core/src/model/document_helpers/blocks.cjs", "../../proskomma-core/src/model/document_helpers/succinct_filter.cjs", "../../proskomma-core/src/model/document_helpers/serialize_succinct.cjs", "../../proskomma-core/src/model/document_helpers/pre_enums.cjs", "../../proskomma-core/src/model/document.cjs", "../../proskomma-core/src/graph/queries/key_value.cjs", "../../proskomma-core/src/graph/queries/cv.cjs", "../../proskomma-core/src/graph/queries/idParts.cjs", "../../proskomma-core/src/graph/queries/input_att_spec.cjs", "../../proskomma-core/src/graph/queries/input_key_matches.cjs", "../../proskomma-core/src/graph/queries/input_key_value.cjs", "../../proskomma-core/src/graph/queries/input_key_values.cjs", "../../proskomma-core/src/graph/queries/inputItemObject.cjs", "../../proskomma-core/src/graph/queries/item.cjs", "../../proskomma-core/src/graph/lib/dump.cjs", "../../proskomma-core/src/graph/queries/itemGroup.cjs", "../../proskomma-core/src/graph/queries/kv_entry.cjs", "../../proskomma-core/src/graph/queries/regex_index.cjs", "../../proskomma-core/src/graph/queries/row_equals_spec.cjs", "../../proskomma-core/src/graph/queries/row_match_spec.cjs", "../../proskomma-core/src/graph/queries/verseRange.cjs", "../../proskomma-core/src/graph/queries/orig.cjs", "../../proskomma-core/src/graph/queries/verseNumber.cjs", "../../proskomma-core/src/graph/queries/cell.cjs", "../../proskomma-core/src/graph/queries/cIndex.cjs", "../../proskomma-core/src/graph/queries/cvVerseElement.cjs", "../../proskomma-core/src/graph/queries/cvVerses.cjs", "../../proskomma-core/src/graph/queries/cvIndex.cjs", "../../proskomma-core/src/graph/queries/cvNavigation.cjs", "../../proskomma-core/src/graph/queries/inputBlockSpec.cjs", "../../proskomma-core/src/graph/queries/node.cjs", "../../proskomma-core/src/graph/queries/kv_sequence.cjs", "../../proskomma-core/src/graph/queries/table_sequence.cjs", "../../proskomma-core/src/graph/lib/tribos_expression.cjs", "../../proskomma-core/src/graph/lib/tribos_step.cjs", "../../proskomma-core/src/graph/lib/tribos.cjs", "../../proskomma-core/src/graph/queries/tree_sequence.cjs", "../../proskomma-core/src/graph/queries/block.cjs", "../../proskomma-core/src/graph/lib/sequence_chars.cjs", "../../proskomma-core/src/graph/queries/sequence.cjs", "../../proskomma-core/src/graph/lib/do_cv.cjs", "../../proskomma-core/src/graph/queries/document.cjs", "../../proskomma-core/src/graph/lib/sort.cjs", "../../proskomma-core/src/graph/queries/doc_set.cjs", "../../proskomma-core/src/model/versifications/eng_vrs.cjs", "../../proskomma-core/src/model/versifications/lxx_vrs.cjs", "../../proskomma-core/src/model/versifications/org_vrs.cjs", "../../proskomma-core/src/model/versifications/rsc_vrs.cjs", "../../proskomma-core/src/model/versifications/rso_vrs.cjs", "../../proskomma-core/src/model/versifications/vul_vrs.cjs", "../../proskomma-core/src/model/versifications/index.cjs", "../../proskomma-core/src/graph/queries/index.cjs", "../../proskomma-core/src/graph/queries/selector_spec.cjs", "../../proskomma-core/src/graph/queries/input_selector_spec.cjs", "../../proskomma-core/src/graph/lib/remake_blocks.cjs", "../../proskomma-core/src/graph/mutations/add.cjs", "../../proskomma-core/src/graph/mutations/delete.cjs", "../../proskomma-core/src/graph/mutations/rehash.cjs", "../../proskomma-core/src/graph/mutations/tags.cjs", "../../proskomma-core/src/graph/mutations/update.cjs", "../../proskomma-core/src/graph/mutations/versification.cjs", "../../proskomma-core/src/graph/mutations/index.cjs", "../../proskomma-core/src/graph/queries/versification.cjs", "../../proskomma-core/src/graph/queries/cvBook.cjs", "../../proskomma-core/src/graph/queries/cvChapter.cjs", "../../proskomma-core/src/graph/index.cjs", "../../proskomma-core/src/util/scriptlike/blocksSpec.cjs", "../../proskomma-core/src/index.cjs", "../../proskomma-core/index.cjs", "../../proskomma-core/esm/wrapper.mjs"],
  "sourcesContent": ["var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n", "module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n", "var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n", "var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar call = FunctionPrototype.call;\n\n// eslint-disable-next-line es/no-reflect -- safe\nmodule.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {\n  return call.apply(apply, arguments);\n});\n", "var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n", "var uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n", "var classofRaw = require('../internals/classof-raw');\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = function (fn) {\n  // Nashorn bug:\n  //   https://github.com/zloirock/core-js/issues/1128\n  //   https://github.com/zloirock/core-js/issues/1130\n  if (classofRaw(fn) === 'Function') return uncurryThis(fn);\n};\n", "var documentAll = typeof document == 'object' && document.all;\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nvar IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;\n\nmodule.exports = {\n  all: documentAll,\n  IS_HTMLDDA: IS_HTMLDDA\n};\n", "var $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = $documentAll.IS_HTMLDDA ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n", "var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n", "var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n", "'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n", "module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n", "var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split(it, '') : $Object(it);\n} : $Object;\n", "// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n", "var isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n", "// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n", "var isCallable = require('../internals/is-callable');\nvar $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\nmodule.exports = $documentAll.IS_HTMLDDA ? function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;\n} : function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n", "module.exports = {};\n", "var path = require('../internals/path');\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (variable) {\n  return isCallable(variable) ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n", "var uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n", "module.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';\n", "var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n", "/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n", "/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n", "var getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n", "var $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n", "var isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw $TypeError(tryToString(argument) + ' is not a function');\n};\n", "var aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n", "var call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw $TypeError(\"Can't convert object to primitive value\");\n};\n", "module.exports = true;\n", "var global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n", "var global = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || defineGlobalProperty(SHARED, {});\n\nmodule.exports = store;\n", "var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.27.2',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.27.2/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n", "var requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n", "var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n", "var uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n", "var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Symbol = global.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n", "var call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n", "var toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n", "var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n", "var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n", "var DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n", "var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n", "var uncurryThis = require('../internals/function-uncurry-this-clause');\nvar aCallable = require('../internals/a-callable');\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar bind = uncurryThis(uncurryThis.bind);\n\n// optional / simple context binding\nmodule.exports = function (fn, that) {\n  aCallable(fn);\n  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n", "var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype != 42;\n});\n", "var isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw $TypeError($String(argument) + ' is not an object');\n};\n", "var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n", "var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n", "'use strict';\nvar global = require('../internals/global');\nvar apply = require('../internals/function-apply');\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar isCallable = require('../internals/is-callable');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar isForced = require('../internals/is-forced');\nvar path = require('../internals/path');\nvar bind = require('../internals/function-bind-context');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\n\nvar wrapConstructor = function (NativeConstructor) {\n  var Wrapper = function (a, b, c) {\n    if (this instanceof Wrapper) {\n      switch (arguments.length) {\n        case 0: return new NativeConstructor();\n        case 1: return new NativeConstructor(a);\n        case 2: return new NativeConstructor(a, b);\n      } return new NativeConstructor(a, b, c);\n    } return apply(NativeConstructor, this, arguments);\n  };\n  Wrapper.prototype = NativeConstructor.prototype;\n  return Wrapper;\n};\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var PROTO = options.proto;\n\n  var nativeSource = GLOBAL ? global : STATIC ? global[TARGET] : (global[TARGET] || {}).prototype;\n\n  var target = GLOBAL ? path : path[TARGET] || createNonEnumerableProperty(path, TARGET, {})[TARGET];\n  var targetPrototype = target.prototype;\n\n  var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;\n  var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;\n\n  for (key in source) {\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contains in native\n    USE_NATIVE = !FORCED && nativeSource && hasOwn(nativeSource, key);\n\n    targetProperty = target[key];\n\n    if (USE_NATIVE) if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(nativeSource, key);\n      nativeProperty = descriptor && descriptor.value;\n    } else nativeProperty = nativeSource[key];\n\n    // export native or implementation\n    sourceProperty = (USE_NATIVE && nativeProperty) ? nativeProperty : source[key];\n\n    if (USE_NATIVE && typeof targetProperty == typeof sourceProperty) continue;\n\n    // bind methods to global for calling from export context\n    if (options.bind && USE_NATIVE) resultProperty = bind(sourceProperty, global);\n    // wrap global constructors for prevent changs in this version\n    else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);\n    // make static versions for prototype methods\n    else if (PROTO && isCallable(sourceProperty)) resultProperty = uncurryThis(sourceProperty);\n    // default case\n    else resultProperty = sourceProperty;\n\n    // add a flag to not completely full polyfills\n    if (options.sham || (sourceProperty && sourceProperty.sham) || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(resultProperty, 'sham', true);\n    }\n\n    createNonEnumerableProperty(target, key, resultProperty);\n\n    if (PROTO) {\n      VIRTUAL_PROTOTYPE = TARGET + 'Prototype';\n      if (!hasOwn(path, VIRTUAL_PROTOTYPE)) {\n        createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});\n      }\n      // export virtual prototype methods\n      createNonEnumerableProperty(path[VIRTUAL_PROTOTYPE], key, sourceProperty);\n      // export real prototype methods\n      if (options.real && targetPrototype && (FORCED || !targetPrototype[key])) {\n        createNonEnumerableProperty(targetPrototype, key, sourceProperty);\n      }\n    }\n  }\n};\n", "var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\n// eslint-disable-next-line es/no-object-defineproperty -- safe\n$({ target: 'Object', stat: true, forced: Object.defineProperty !== defineProperty, sham: !DESCRIPTORS }, {\n  defineProperty: defineProperty\n});\n", "require('../../modules/es.object.define-property');\nvar path = require('../../internals/path');\n\nvar Object = path.Object;\n\nvar defineProperty = module.exports = function defineProperty(it, key, desc) {\n  return Object.defineProperty(it, key, desc);\n};\n\nif (Object.defineProperty.sham) defineProperty.sham = true;\n", "var parent = require('../../es/object/define-property');\n\nmodule.exports = parent;\n", "module.exports = require(\"core-js-pure/stable/object/define-property\");", "function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) == 'Array';\n};\n", "var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n", "var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n", "var uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n", "var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof');\nvar getBuiltIn = require('../internals/get-built-in');\nvar inspectSource = require('../internals/inspect-source');\n\nvar noop = function () { /* empty */ };\nvar empty = [];\nvar construct = getBuiltIn('Reflect', 'construct');\nvar constructorRegExp = /^\\s*(?:class|function)\\b/;\nvar exec = uncurryThis(constructorRegExp.exec);\nvar INCORRECT_TO_STRING = !constructorRegExp.exec(noop);\n\nvar isConstructorModern = function isConstructor(argument) {\n  if (!isCallable(argument)) return false;\n  try {\n    construct(noop, empty, argument);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nvar isConstructorLegacy = function isConstructor(argument) {\n  if (!isCallable(argument)) return false;\n  switch (classof(argument)) {\n    case 'AsyncFunction':\n    case 'GeneratorFunction':\n    case 'AsyncGeneratorFunction': return false;\n  }\n  try {\n    // we can't check .prototype since constructors produced by .bind haven't it\n    // `Function#toString` throws on some built-it function in some legacy engines\n    // (for example, `DOMQuad` and similar in FF41-)\n    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));\n  } catch (error) {\n    return true;\n  }\n};\n\nisConstructorLegacy.sham = true;\n\n// `IsConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-isconstructor\nmodule.exports = !construct || fails(function () {\n  var called;\n  return isConstructorModern(isConstructorModern.call)\n    || !isConstructorModern(Object)\n    || !isConstructorModern(function () { called = true; })\n    || called;\n}) ? isConstructorLegacy : isConstructorModern;\n", "var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n", "var trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n", "var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n", "var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n", "var toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n", "'use strict';\nvar toPropertyKey = require('../internals/to-property-key');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPropertyKey(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n", "var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n", "var uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis([].slice);\n", "'use strict';\nvar $ = require('../internals/export');\nvar isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar nativeSlice = require('../internals/array-slice');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\n\nvar SPECIES = wellKnownSymbol('species');\nvar $Array = Array;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.es/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = lengthOfArrayLike(O);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (isConstructor(Constructor) && (Constructor === $Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === $Array || Constructor === undefined) {\n        return nativeSlice(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? $Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n", "var path = require('../internals/path');\n\nmodule.exports = function (CONSTRUCTOR) {\n  return path[CONSTRUCTOR + 'Prototype'];\n};\n", "require('../../../modules/es.array.slice');\nvar entryVirtual = require('../../../internals/entry-virtual');\n\nmodule.exports = entryVirtual('Array').slice;\n", "var isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar method = require('../array/virtual/slice');\n\nvar ArrayPrototype = Array.prototype;\n\nmodule.exports = function (it) {\n  var own = it.slice;\n  return it === ArrayPrototype || (isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.slice) ? method : own;\n};\n", "var parent = require('../../es/instance/slice');\n\nmodule.exports = parent;\n", "module.exports = require(\"core-js-pure/stable/instance/slice\");", "var classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n", "var uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar stringSlice = uncurryThis(''.slice);\n\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = toString(requireObjectCoercible($this));\n    var position = toIntegerOrInfinity(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = charCodeAt(S, position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING\n          ? charAt(S, position)\n          : first\n        : CONVERT_TO_STRING\n          ? stringSlice(S, position, position + 2)\n          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n", "var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n", "var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n", "module.exports = {};\n", "var NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n", "var DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n", "var toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n", "var uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n", "// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n", "var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n", "var DESCRIPTORS = require('../internals/descriptors');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nexports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var props = toIndexedObject(Properties);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);\n  return O;\n};\n", "var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n", "/* global ActiveXObject -- old IE, WSH */\nvar anObject = require('../internals/an-object');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\n// eslint-disable-next-line es/no-object-create -- safe\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);\n};\n", "var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n", "var hasOwn = require('../internals/has-own-property');\nvar isCallable = require('../internals/is-callable');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar $Object = Object;\nvar ObjectPrototype = $Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es/no-object-getprototypeof -- safe\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {\n  var object = toObject(O);\n  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof $Object ? ObjectPrototype : null;\n};\n", "var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (target, key, value, options) {\n  if (options && options.enumerable) target[key] = value;\n  else createNonEnumerableProperty(target, key, value);\n  return target;\n};\n", "'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n/* eslint-disable es/no-array-prototype-keys -- safe */\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype[ITERATOR].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\nelse if (IS_PURE) IteratorPrototype = create(IteratorPrototype);\n\n// `%IteratorPrototype%[@@iterator]()` method\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator\nif (!isCallable(IteratorPrototype[ITERATOR])) {\n  defineBuiltIn(IteratorPrototype, ITERATOR, function () {\n    return this;\n  });\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n", "'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n", "var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar defineProperty = require('../internals/object-define-property').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar toString = require('../internals/object-to-string');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC, SET_METHOD) {\n  if (it) {\n    var target = STATIC ? it : it.prototype;\n    if (!hasOwn(target, TO_STRING_TAG)) {\n      defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });\n    }\n    if (SET_METHOD && !TO_STRING_TAG_SUPPORT) {\n      createNonEnumerableProperty(target, 'toString', toString);\n    }\n  }\n};\n", "module.exports = {};\n", "'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n", "var isCallable = require('../internals/is-callable');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument) {\n  if (typeof argument == 'object' || isCallable(argument)) return argument;\n  throw $TypeError(\"Can't set \" + $String(argument) + ' as a prototype');\n};\n", "/* eslint-disable no-proto -- safe */\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    setter = uncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set);\n    setter(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n", "'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar IS_PURE = require('../internals/is-pure');\nvar FunctionName = require('../internals/function-name');\nvar isCallable = require('../internals/is-callable');\nvar createIteratorConstructor = require('../internals/iterator-create-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar PROPER_FUNCTION_NAME = FunctionName.PROPER;\nvar CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {\n          defineBuiltIn(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF\n  if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {\n      createNonEnumerableProperty(IterablePrototype, 'name', VALUES);\n    } else {\n      INCORRECT_VALUES_NAME = true;\n      defaultIterator = function values() { return call(nativeIterator, this); };\n    }\n  }\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        defineBuiltIn(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    defineBuiltIn(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });\n  }\n  Iterators[NAME] = defaultIterator;\n\n  return methods;\n};\n", "// `CreateIterResultObject` abstract operation\n// https://tc39.es/ecma262/#sec-createiterresultobject\nmodule.exports = function (value, done) {\n  return { value: value, done: done };\n};\n", "'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar toString = require('../internals/to-string');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/iterator-define');\nvar createIterResultObject = require('../internals/create-iter-result-object');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: toString(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return createIterResultObject(undefined, true);\n  point = charAt(string, index);\n  state.index += point.length;\n  return createIterResultObject(point, false);\n});\n", "var call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar getMethod = require('../internals/get-method');\n\nmodule.exports = function (iterator, kind, value) {\n  var innerResult, innerError;\n  anObject(iterator);\n  try {\n    innerResult = getMethod(iterator, 'return');\n    if (!innerResult) {\n      if (kind === 'throw') throw value;\n      return value;\n    }\n    innerResult = call(innerResult, iterator);\n  } catch (error) {\n    innerError = true;\n    innerResult = error;\n  }\n  if (kind === 'throw') throw value;\n  if (innerError) throw innerResult;\n  anObject(innerResult);\n  return value;\n};\n", "var anObject = require('../internals/an-object');\nvar iteratorClose = require('../internals/iterator-close');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (error) {\n    iteratorClose(iterator, 'throw', error);\n  }\n};\n", "var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n", "var classof = require('../internals/classof');\nvar getMethod = require('../internals/get-method');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (!isNullOrUndefined(it)) return getMethod(it, ITERATOR)\n    || getMethod(it, '@@iterator')\n    || Iterators[classof(it)];\n};\n", "var call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar tryToString = require('../internals/try-to-string');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument, usingIterator) {\n  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;\n  if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));\n  throw $TypeError(tryToString(argument) + ' is not iterable');\n};\n", "'use strict';\nvar bind = require('../internals/function-bind-context');\nvar call = require('../internals/function-call');\nvar toObject = require('../internals/to-object');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar isConstructor = require('../internals/is-constructor');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar createProperty = require('../internals/create-property');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nvar $Array = Array;\n\n// `Array.from` method implementation\n// https://tc39.es/ecma262/#sec-array.from\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n  var O = toObject(arrayLike);\n  var IS_CONSTRUCTOR = isConstructor(this);\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined);\n  var iteratorMethod = getIteratorMethod(O);\n  var index = 0;\n  var length, result, step, iterator, next, value;\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\n  if (iteratorMethod && !(this === $Array && isArrayIteratorMethod(iteratorMethod))) {\n    iterator = getIterator(O, iteratorMethod);\n    next = iterator.next;\n    result = IS_CONSTRUCTOR ? new this() : [];\n    for (;!(step = call(next, iterator)).done; index++) {\n      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n      createProperty(result, index, value);\n    }\n  } else {\n    length = lengthOfArrayLike(O);\n    result = IS_CONSTRUCTOR ? new this(length) : $Array(length);\n    for (;length > index; index++) {\n      value = mapping ? mapfn(O[index], index) : O[index];\n      createProperty(result, index, value);\n    }\n  }\n  result.length = index;\n  return result;\n};\n", "var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n", "var $ = require('../internals/export');\nvar from = require('../internals/array-from');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\n\nvar INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {\n  // eslint-disable-next-line es/no-array-from -- required for testing\n  Array.from(iterable);\n});\n\n// `Array.from` method\n// https://tc39.es/ecma262/#sec-array.from\n$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {\n  from: from\n});\n", "require('../../modules/es.string.iterator');\nrequire('../../modules/es.array.from');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Array.from;\n", "var parent = require('../../es/array/from');\n\nmodule.exports = parent;\n", "module.exports = require(\"core-js-pure/stable/array/from\");", "var $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n", "var isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\nvar $Array = Array;\n\n// a part of `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (isConstructor(C) && (C === $Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? $Array : C;\n};\n", "var arraySpeciesConstructor = require('../internals/array-species-constructor');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);\n};\n", "'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !arrayMethodHasSpeciesSupport('concat');\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = lengthOfArrayLike(E);\n        doesNotExceedSafeInteger(n + len);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        doesNotExceedSafeInteger(n + 1);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n", "// empty\n", "var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n", "var toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar createProperty = require('../internals/create-property');\n\nvar $Array = Array;\nvar max = Math.max;\n\nmodule.exports = function (O, start, end) {\n  var length = lengthOfArrayLike(O);\n  var k = toAbsoluteIndex(start, length);\n  var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n  var result = $Array(max(fin - k, 0));\n  for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);\n  result.length = n;\n  return result;\n};\n", "/* eslint-disable es/no-object-getownpropertynames -- safe */\nvar classof = require('../internals/classof-raw');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar $getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar arraySlice = require('../internals/array-slice-simple');\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return $getOwnPropertyNames(it);\n  } catch (error) {\n    return arraySlice(windowNames);\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && classof(it) == 'Window'\n    ? getWindowNames(it)\n    : $getOwnPropertyNames(toIndexedObject(it));\n};\n", "// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n", "var wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n", "var path = require('../internals/path');\nvar hasOwn = require('../internals/has-own-property');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!hasOwn(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n", "var call = require('../internals/function-call');\nvar getBuiltIn = require('../internals/get-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar defineBuiltIn = require('../internals/define-built-in');\n\nmodule.exports = function () {\n  var Symbol = getBuiltIn('Symbol');\n  var SymbolPrototype = Symbol && Symbol.prototype;\n  var valueOf = SymbolPrototype && SymbolPrototype.valueOf;\n  var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n  if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {\n    // `Symbol.prototype[@@toPrimitive]` method\n    // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\n    // eslint-disable-next-line no-unused-vars -- required for .length\n    defineBuiltIn(SymbolPrototype, TO_PRIMITIVE, function (hint) {\n      return call(valueOf, this);\n    }, { arity: 1 });\n  }\n};\n", "var bind = require('../internals/function-bind-context');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = uncurryThis([].push);\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var IS_FILTER_REJECT = TYPE == 7;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that);\n    var length = lengthOfArrayLike(self);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push(target, value);      // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push(target, value);      // filterReject\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.es/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.es/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6),\n  // `Array.prototype.filterReject` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterReject: createMethod(7)\n};\n", "'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar fails = require('../internals/fails');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar $toString = require('../internals/to-string');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\nvar defineSymbolToPrimitive = require('../internals/symbol-define-to-primitive');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\n\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\n\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];\nvar TypeError = global.TypeError;\nvar QObject = global.QObject;\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar push = uncurryThis([].push);\n\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar WellKnownSymbolsStore = shared('wks');\n\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPropertyKey(P);\n  anObject(Attributes);\n  if (hasOwn(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!hasOwn(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (hasOwn(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || call($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPropertyKey(V);\n  var enumerable = call(nativePropertyIsEnumerable, this, P);\n  if (this === ObjectPrototype && hasOwn(AllSymbols, P) && !hasOwn(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !hasOwn(this, P) || !hasOwn(AllSymbols, P) || hasOwn(this, HIDDEN) && this[HIDDEN][P]\n    ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPropertyKey(P);\n  if (it === ObjectPrototype && hasOwn(AllSymbols, key) && !hasOwn(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && hasOwn(AllSymbols, key) && !(hasOwn(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!hasOwn(AllSymbols, key) && !hasOwn(hiddenKeys, key)) push(result, key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function (O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (hasOwn(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn(ObjectPrototype, key))) {\n      push(result, AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.es/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (isPrototypeOf(SymbolPrototype, this)) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) call(setter, ObjectPrototypeSymbols, value);\n      if (hasOwn(this, HIDDEN) && hasOwn(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  SymbolPrototype = $Symbol[PROTOTYPE];\n\n  defineBuiltIn(SymbolPrototype, 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  defineBuiltIn($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  definePropertiesModule.f = $defineProperties;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    nativeDefineProperty(SymbolPrototype, 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      defineBuiltIn(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, constructor: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.es/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.es/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.es/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames\n});\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\ndefineSymbolToPrimitive();\n\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n", "var NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\n/* eslint-disable es/no-symbol -- safe */\nmodule.exports = NATIVE_SYMBOL && !!Symbol['for'] && !!Symbol.keyFor;\n", "var $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar hasOwn = require('../internals/has-own-property');\nvar toString = require('../internals/to-string');\nvar shared = require('../internals/shared');\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/symbol-registry-detection');\n\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\n// `Symbol.for` method\n// https://tc39.es/ecma262/#sec-symbol.for\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  'for': function (key) {\n    var string = toString(key);\n    if (hasOwn(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = getBuiltIn('Symbol')(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  }\n});\n", "var $ = require('../internals/export');\nvar hasOwn = require('../internals/has-own-property');\nvar isSymbol = require('../internals/is-symbol');\nvar tryToString = require('../internals/try-to-string');\nvar shared = require('../internals/shared');\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/symbol-registry-detection');\n\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\n// `Symbol.keyFor` method\n// https://tc39.es/ecma262/#sec-symbol.keyfor\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(tryToString(sym) + ' is not a symbol');\n    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  }\n});\n", "var $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar apply = require('../internals/function-apply');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar arraySlice = require('../internals/array-slice');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar exec = uncurryThis(/./.exec);\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar replace = uncurryThis(''.replace);\nvar numberToString = uncurryThis(1.0.toString);\n\nvar tester = /[\\uD800-\\uDFFF]/g;\nvar low = /^[\\uD800-\\uDBFF]$/;\nvar hi = /^[\\uDC00-\\uDFFF]$/;\n\nvar WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL || fails(function () {\n  var symbol = getBuiltIn('Symbol')();\n  // MS Edge converts symbol values to JSON as {}\n  return $stringify([symbol]) != '[null]'\n    // WebKit converts symbol values to JSON as null\n    || $stringify({ a: symbol }) != '{}'\n    // V8 throws on boxed symbols\n    || $stringify(Object(symbol)) != '{}';\n});\n\n// https://github.com/tc39/proposal-well-formed-stringify\nvar ILL_FORMED_UNICODE = fails(function () {\n  return $stringify('\\uDF06\\uD834') !== '\"\\\\udf06\\\\ud834\"'\n    || $stringify('\\uDEAD') !== '\"\\\\udead\"';\n});\n\nvar stringifyWithSymbolsFix = function (it, replacer) {\n  var args = arraySlice(arguments);\n  var $replacer = replacer;\n  if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n  if (!isArray(replacer)) replacer = function (key, value) {\n    if (isCallable($replacer)) value = call($replacer, this, key, value);\n    if (!isSymbol(value)) return value;\n  };\n  args[1] = replacer;\n  return apply($stringify, null, args);\n};\n\nvar fixIllFormed = function (match, offset, string) {\n  var prev = charAt(string, offset - 1);\n  var next = charAt(string, offset + 1);\n  if ((exec(low, match) && !exec(hi, next)) || (exec(hi, match) && !exec(low, prev))) {\n    return '\\\\u' + numberToString(charCodeAt(match, 0), 16);\n  } return match;\n};\n\nif ($stringify) {\n  // `JSON.stringify` method\n  // https://tc39.es/ecma262/#sec-json.stringify\n  $({ target: 'JSON', stat: true, arity: 3, forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    stringify: function stringify(it, replacer, space) {\n      var args = arraySlice(arguments);\n      var result = apply(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);\n      return ILL_FORMED_UNICODE && typeof result == 'string' ? replace(result, tester, fixIllFormed) : result;\n    }\n  });\n}\n", "var $ = require('../internals/export');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar fails = require('../internals/fails');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar toObject = require('../internals/to-object');\n\n// V8 ~ Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FORCED = !NATIVE_SYMBOL || fails(function () { getOwnPropertySymbolsModule.f(1); });\n\n// `Object.getOwnPropertySymbols` method\n// https://tc39.es/ecma262/#sec-object.getownpropertysymbols\n$({ target: 'Object', stat: true, forced: FORCED }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    var $getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n    return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject(it)) : [];\n  }\n});\n", "// TODO: Remove this module from `core-js@4` since it's split to modules listed below\nrequire('../modules/es.symbol.constructor');\nrequire('../modules/es.symbol.for');\nrequire('../modules/es.symbol.key-for');\nrequire('../modules/es.json.stringify');\nrequire('../modules/es.object.get-own-property-symbols');\n", "var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.asyncIterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.asynciterator\ndefineWellKnownSymbol('asyncIterator');\n", "// empty\n", "var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.hasInstance` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.hasinstance\ndefineWellKnownSymbol('hasInstance');\n", "var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.isConcatSpreadable` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.isconcatspreadable\ndefineWellKnownSymbol('isConcatSpreadable');\n", "var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n", "var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.match` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.match\ndefineWellKnownSymbol('match');\n", "var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.matchAll` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.matchall\ndefineWellKnownSymbol('matchAll');\n", "var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.replace` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.replace\ndefineWellKnownSymbol('replace');\n", "var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.search` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.search\ndefineWellKnownSymbol('search');\n", "var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.species` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.species\ndefineWellKnownSymbol('species');\n", "var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.split` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.split\ndefineWellKnownSymbol('split');\n", "var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\nvar defineSymbolToPrimitive = require('../internals/symbol-define-to-primitive');\n\n// `Symbol.toPrimitive` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.toprimitive\ndefineWellKnownSymbol('toPrimitive');\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\ndefineSymbolToPrimitive();\n", "var getBuiltIn = require('../internals/get-built-in');\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\nvar setToStringTag = require('../internals/set-to-string-tag');\n\n// `Symbol.toStringTag` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.tostringtag\ndefineWellKnownSymbol('toStringTag');\n\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag(getBuiltIn('Symbol'), 'Symbol');\n", "var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.unscopables` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.unscopables\ndefineWellKnownSymbol('unscopables');\n", "var global = require('../internals/global');\nvar setToStringTag = require('../internals/set-to-string-tag');\n\n// JSON[@@toStringTag] property\n// https://tc39.es/ecma262/#sec-json-@@tostringtag\nsetToStringTag(global.JSON, 'JSON', true);\n", "// empty\n", "// empty\n", "require('../../modules/es.array.concat');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.symbol');\nrequire('../../modules/es.symbol.async-iterator');\nrequire('../../modules/es.symbol.description');\nrequire('../../modules/es.symbol.has-instance');\nrequire('../../modules/es.symbol.is-concat-spreadable');\nrequire('../../modules/es.symbol.iterator');\nrequire('../../modules/es.symbol.match');\nrequire('../../modules/es.symbol.match-all');\nrequire('../../modules/es.symbol.replace');\nrequire('../../modules/es.symbol.search');\nrequire('../../modules/es.symbol.species');\nrequire('../../modules/es.symbol.split');\nrequire('../../modules/es.symbol.to-primitive');\nrequire('../../modules/es.symbol.to-string-tag');\nrequire('../../modules/es.symbol.unscopables');\nrequire('../../modules/es.json.to-string-tag');\nrequire('../../modules/es.math.to-string-tag');\nrequire('../../modules/es.reflect.to-string-tag');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Symbol;\n", "module.exports = function () { /* empty */ };\n", "'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineProperty = require('../internals/object-define-property').f;\nvar defineIterator = require('../internals/iterator-define');\nvar createIterResultObject = require('../internals/create-iter-result-object');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.es/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.es/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.es/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.es/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return createIterResultObject(undefined, true);\n  }\n  if (kind == 'keys') return createIterResultObject(index, false);\n  if (kind == 'values') return createIterResultObject(target[index], false);\n  return createIterResultObject([index, target[index]], false);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.es/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.es/ecma262/#sec-createmappedargumentsobject\nvar values = Iterators.Arguments = Iterators.Array;\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n// V8 ~ Chrome 45- bug\nif (!IS_PURE && DESCRIPTORS && values.name !== 'values') try {\n  defineProperty(values, 'name', { value: 'values' });\n} catch (error) { /* empty */ }\n", "// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n", "require('../modules/es.array.iterator');\nvar DOMIterables = require('../internals/dom-iterables');\nvar global = require('../internals/global');\nvar classof = require('../internals/classof');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype && classof(CollectionPrototype) !== TO_STRING_TAG) {\n    createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n  }\n  Iterators[COLLECTION_NAME] = Iterators.Array;\n}\n", "var parent = require('../../es/symbol');\nrequire('../../modules/web.dom-collections.iterator');\n\nmodule.exports = parent;\n", "module.exports = require(\"core-js-pure/stable/symbol\");", "require('../modules/es.array.iterator');\nrequire('../modules/es.string.iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nmodule.exports = getIteratorMethod;\n", "var parent = require('../es/get-iterator-method');\nrequire('../modules/web.dom-collections.iterator');\n\nmodule.exports = parent;\n", "var parent = require('../stable/get-iterator-method');\n\nmodule.exports = parent;\n", "var parent = require('../actual/get-iterator-method');\n\nmodule.exports = parent;\n", "module.exports = require('../full/get-iterator-method');\n", "module.exports = require(\"core-js-pure/features/get-iterator-method\");", "var $ = require('../internals/export');\nvar isArray = require('../internals/is-array');\n\n// `Array.isArray` method\n// https://tc39.es/ecma262/#sec-array.isarray\n$({ target: 'Array', stat: true }, {\n  isArray: isArray\n});\n", "require('../../modules/es.array.is-array');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Array.isArray;\n", "var parent = require('../../es/array/is-array');\n\nmodule.exports = parent;\n", "module.exports = require(\"core-js-pure/stable/array/is-array\");", "var parent = require('../../stable/array/is-array');\n\nmodule.exports = parent;\n", "var parent = require('../../actual/array/is-array');\n\nmodule.exports = parent;\n", "module.exports = require('../../full/array/is-array');\n", "module.exports = require(\"core-js-pure/features/array/is-array\");", "var _Array$isArray = require(\"@babel/runtime-corejs3/core-js/array/is-array\");\nfunction _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.dispose` well-known symbol\n// https://github.com/tc39/proposal-explicit-resource-management\ndefineWellKnownSymbol('dispose');\n", "var parent = require('../../stable/symbol');\n\nrequire('../../modules/esnext.symbol.dispose');\n\nmodule.exports = parent;\n", "var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.asyncDispose` well-known symbol\n// https://github.com/tc39/proposal-async-explicit-resource-management\ndefineWellKnownSymbol('asyncDispose');\n", "var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.matcher` well-known symbol\n// https://github.com/tc39/proposal-pattern-matching\ndefineWellKnownSymbol('matcher');\n", "var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.metadataKey` well-known symbol\n// https://github.com/tc39/proposal-decorator-metadata\ndefineWellKnownSymbol('metadataKey');\n", "var defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.observable` well-known symbol\n// https://github.com/tc39/proposal-observable\ndefineWellKnownSymbol('observable');\n", "// TODO: Remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.metadata` well-known symbol\n// https://github.com/tc39/proposal-decorators\ndefineWellKnownSymbol('metadata');\n", "// TODO: remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.patternMatch` well-known symbol\n// https://github.com/tc39/proposal-pattern-matching\ndefineWellKnownSymbol('patternMatch');\n", "// TODO: remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\ndefineWellKnownSymbol('replaceAll');\n", "var parent = require('../../actual/symbol');\nrequire('../../modules/esnext.symbol.async-dispose');\nrequire('../../modules/esnext.symbol.matcher');\nrequire('../../modules/esnext.symbol.metadata-key');\nrequire('../../modules/esnext.symbol.observable');\n// TODO: Remove from `core-js@4`\nrequire('../../modules/esnext.symbol.metadata');\nrequire('../../modules/esnext.symbol.pattern-match');\nrequire('../../modules/esnext.symbol.replace-all');\n\nmodule.exports = parent;\n", "module.exports = require('../../full/symbol');\n", "module.exports = require(\"core-js-pure/features/symbol\");", "var _Symbol = require(\"@babel/runtime-corejs3/core-js/symbol\");\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof _Symbol && _getIteratorMethod(arr) || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "var parent = require('../../stable/instance/slice');\n\nmodule.exports = parent;\n", "var parent = require('../../actual/instance/slice');\n\nmodule.exports = parent;\n", "module.exports = require('../../full/instance/slice');\n", "module.exports = require(\"core-js-pure/features/instance/slice\");", "var parent = require('../../stable/array/from');\n\nmodule.exports = parent;\n", "var parent = require('../../actual/array/from');\n\nmodule.exports = parent;\n", "module.exports = require('../../full/array/from');\n", "module.exports = require(\"core-js-pure/features/array/from\");", "function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "var _sliceInstanceProperty = require(\"@babel/runtime-corejs3/core-js/instance/slice\");\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js/array/from\");\nvar arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context;\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = _sliceInstanceProperty(_context = Object.prototype.toString.call(o)).call(_context, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "// empty\n", "'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n", "var call = require('../internals/function-call');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar regExpFlags = require('../internals/regexp-flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (R) {\n  var flags = R.flags;\n  return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R)\n    ? call(regExpFlags, R) : flags;\n};\n", "require('../../modules/es.regexp.flags');\nvar getRegExpFlags = require('../../internals/regexp-get-flags');\n\nmodule.exports = getRegExpFlags;\n", "var isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar flags = require('../regexp/flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (it) {\n  return (it === RegExpPrototype || isPrototypeOf(RegExpPrototype, it)) ? flags(it) : it.flags;\n};\n", "var parent = require('../../es/instance/flags');\n\nmodule.exports = parent;\n", "module.exports = require(\"core-js-pure/stable/instance/flags\");", "'use strict';\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (O, P) {\n  if (!delete O[P]) throw $TypeError('Cannot delete property ' + tryToString(P) + ' of ' + tryToString(O));\n};\n", "var arraySlice = require('../internals/array-slice-simple');\n\nvar floor = Math.floor;\n\nvar mergeSort = function (array, comparefn) {\n  var length = array.length;\n  var middle = floor(length / 2);\n  return length < 8 ? insertionSort(array, comparefn) : merge(\n    array,\n    mergeSort(arraySlice(array, 0, middle), comparefn),\n    mergeSort(arraySlice(array, middle), comparefn),\n    comparefn\n  );\n};\n\nvar insertionSort = function (array, comparefn) {\n  var length = array.length;\n  var i = 1;\n  var element, j;\n\n  while (i < length) {\n    j = i;\n    element = array[i];\n    while (j && comparefn(array[j - 1], element) > 0) {\n      array[j] = array[--j];\n    }\n    if (j !== i++) array[j] = element;\n  } return array;\n};\n\nvar merge = function (array, left, right, comparefn) {\n  var llength = left.length;\n  var rlength = right.length;\n  var lindex = 0;\n  var rindex = 0;\n\n  while (lindex < llength || rindex < rlength) {\n    array[lindex + rindex] = (lindex < llength && rindex < rlength)\n      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]\n      : lindex < llength ? left[lindex++] : right[rindex++];\n  } return array;\n};\n\nmodule.exports = mergeSort;\n", "'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call -- required for testing\n    method.call(null, argument || function () { return 1; }, 1);\n  });\n};\n", "var userAgent = require('../internals/engine-user-agent');\n\nvar firefox = userAgent.match(/firefox\\/(\\d+)/i);\n\nmodule.exports = !!firefox && +firefox[1];\n", "var UA = require('../internals/engine-user-agent');\n\nmodule.exports = /MSIE|Trident/.test(UA);\n", "var userAgent = require('../internals/engine-user-agent');\n\nvar webkit = userAgent.match(/AppleWebKit\\/(\\d+)\\./);\n\nmodule.exports = !!webkit && +webkit[1];\n", "'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar deletePropertyOrThrow = require('../internals/delete-property-or-throw');\nvar toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar internalSort = require('../internals/array-sort');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar FF = require('../internals/engine-ff-version');\nvar IE_OR_EDGE = require('../internals/engine-is-ie-or-edge');\nvar V8 = require('../internals/engine-v8-version');\nvar WEBKIT = require('../internals/engine-webkit-version');\n\nvar test = [];\nvar nativeSort = uncurryThis(test.sort);\nvar push = uncurryThis(test.push);\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD = arrayMethodIsStrict('sort');\n\nvar STABLE_SORT = !fails(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 70;\n  if (FF && FF > 3) return;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 603;\n\n  var result = '';\n  var code, chr, value, index;\n\n  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)\n  for (code = 65; code < 76; code++) {\n    chr = String.fromCharCode(code);\n\n    switch (code) {\n      case 66: case 69: case 70: case 72: value = 3; break;\n      case 68: case 71: value = 4; break;\n      default: value = 2;\n    }\n\n    for (index = 0; index < 47; index++) {\n      test.push({ k: chr + index, v: value });\n    }\n  }\n\n  test.sort(function (a, b) { return b.v - a.v; });\n\n  for (index = 0; index < test.length; index++) {\n    chr = test[index].k.charAt(0);\n    if (result.charAt(result.length - 1) !== chr) result += chr;\n  }\n\n  return result !== 'DGBEFHACIJK';\n});\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (y === undefined) return -1;\n    if (x === undefined) return 1;\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    return toString(x) > toString(y) ? 1 : -1;\n  };\n};\n\n// `Array.prototype.sort` method\n// https://tc39.es/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    if (comparefn !== undefined) aCallable(comparefn);\n\n    var array = toObject(this);\n\n    if (STABLE_SORT) return comparefn === undefined ? nativeSort(array) : nativeSort(array, comparefn);\n\n    var items = [];\n    var arrayLength = lengthOfArrayLike(array);\n    var itemsLength, index;\n\n    for (index = 0; index < arrayLength; index++) {\n      if (index in array) push(items, array[index]);\n    }\n\n    internalSort(items, getSortCompare(comparefn));\n\n    itemsLength = lengthOfArrayLike(items);\n    index = 0;\n\n    while (index < itemsLength) array[index] = items[index++];\n    while (index < arrayLength) deletePropertyOrThrow(array, index++);\n\n    return array;\n  }\n});\n", "require('../../../modules/es.array.sort');\nvar entryVirtual = require('../../../internals/entry-virtual');\n\nmodule.exports = entryVirtual('Array').sort;\n", "var isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar method = require('../array/virtual/sort');\n\nvar ArrayPrototype = Array.prototype;\n\nmodule.exports = function (it) {\n  var own = it.sort;\n  return it === ArrayPrototype || (isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.sort) ? method : own;\n};\n", "var parent = require('../../es/instance/sort');\n\nmodule.exports = parent;\n", "module.exports = require(\"core-js-pure/stable/instance/sort\");", "// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n", "var uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n", "var global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar trim = require('../internals/string-trim').trim;\nvar whitespaces = require('../internals/whitespaces');\n\nvar $parseInt = global.parseInt;\nvar Symbol = global.Symbol;\nvar ITERATOR = Symbol && Symbol.iterator;\nvar hex = /^[+-]?0x/i;\nvar exec = uncurryThis(hex.exec);\nvar FORCED = $parseInt(whitespaces + '08') !== 8 || $parseInt(whitespaces + '0x16') !== 22\n  // MS Edge 18- broken with boxed symbols\n  || (ITERATOR && !fails(function () { $parseInt(Object(ITERATOR)); }));\n\n// `parseInt` method\n// https://tc39.es/ecma262/#sec-parseint-string-radix\nmodule.exports = FORCED ? function parseInt(string, radix) {\n  var S = trim(toString(string));\n  return $parseInt(S, (radix >>> 0) || (exec(hex, S) ? 16 : 10));\n} : $parseInt;\n", "var $ = require('../internals/export');\nvar $parseInt = require('../internals/number-parse-int');\n\n// `parseInt` method\n// https://tc39.es/ecma262/#sec-parseint-string-radix\n$({ global: true, forced: parseInt != $parseInt }, {\n  parseInt: $parseInt\n});\n", "require('../modules/es.parse-int');\nvar path = require('../internals/path');\n\nmodule.exports = path.parseInt;\n", "var parent = require('../es/parse-int');\n\nmodule.exports = parent;\n", "module.exports = require(\"core-js-pure/stable/parse-int\");", "'use strict';\n/* eslint-disable es/no-array-prototype-indexof -- required for testing */\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar $indexOf = require('../internals/array-includes').indexOf;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar nativeIndexOf = uncurryThis([].indexOf);\n\nvar NEGATIVE_ZERO = !!nativeIndexOf && 1 / nativeIndexOf([1], 1, -0) < 0;\nvar FORCED = NEGATIVE_ZERO || !arrayMethodIsStrict('indexOf');\n\n// `Array.prototype.indexOf` method\n// https://tc39.es/ecma262/#sec-array.prototype.indexof\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    var fromIndex = arguments.length > 1 ? arguments[1] : undefined;\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? nativeIndexOf(this, searchElement, fromIndex) || 0\n      : $indexOf(this, searchElement, fromIndex);\n  }\n});\n", "require('../../../modules/es.array.index-of');\nvar entryVirtual = require('../../../internals/entry-virtual');\n\nmodule.exports = entryVirtual('Array').indexOf;\n", "var isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar method = require('../array/virtual/index-of');\n\nvar ArrayPrototype = Array.prototype;\n\nmodule.exports = function (it) {\n  var own = it.indexOf;\n  return it === ArrayPrototype || (isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.indexOf) ? method : own;\n};\n", "var parent = require('../../es/instance/index-of');\n\nmodule.exports = parent;\n", "module.exports = require(\"core-js-pure/stable/instance/index-of\");", "'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nmodule.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n// eslint-disable-next-line es/no-array-prototype-foreach -- safe\n} : [].forEach;\n", "'use strict';\nvar $ = require('../internals/export');\nvar forEach = require('../internals/array-for-each');\n\n// `Array.prototype.forEach` method\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\n// eslint-disable-next-line es/no-array-prototype-foreach -- safe\n$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {\n  forEach: forEach\n});\n", "require('../../../modules/es.array.for-each');\nvar entryVirtual = require('../../../internals/entry-virtual');\n\nmodule.exports = entryVirtual('Array').forEach;\n", "var parent = require('../../../es/array/virtual/for-each');\n\nmodule.exports = parent;\n", "require('../../modules/web.dom-collections.iterator');\nvar classof = require('../../internals/classof');\nvar hasOwn = require('../../internals/has-own-property');\nvar isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar method = require('../array/virtual/for-each');\n\nvar ArrayPrototype = Array.prototype;\n\nvar DOMIterables = {\n  DOMTokenList: true,\n  NodeList: true\n};\n\nmodule.exports = function (it) {\n  var own = it.forEach;\n  return it === ArrayPrototype || (isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.forEach)\n    || hasOwn(DOMIterables, classof(it)) ? method : own;\n};\n", "module.exports = require(\"core-js-pure/stable/instance/for-each\");", "// TODO: Remove from `core-js@4`\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar create = require('../internals/object-create');\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\n$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {\n  create: create\n});\n", "require('../../modules/es.object.create');\nvar path = require('../../internals/path');\n\nvar Object = path.Object;\n\nmodule.exports = function create(P, D) {\n  return Object.create(P, D);\n};\n", "var parent = require('../../es/object/create');\n\nmodule.exports = parent;\n", "module.exports = require(\"core-js-pure/stable/object/create\");", "require('../../../modules/es.array.concat');\nvar entryVirtual = require('../../../internals/entry-virtual');\n\nmodule.exports = entryVirtual('Array').concat;\n", "var isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar method = require('../array/virtual/concat');\n\nvar ArrayPrototype = Array.prototype;\n\nmodule.exports = function (it) {\n  var own = it.concat;\n  return it === ArrayPrototype || (isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.concat) ? method : own;\n};\n", "var parent = require('../../es/instance/concat');\n\nmodule.exports = parent;\n", "module.exports = require(\"core-js-pure/stable/instance/concat\");", "\"use strict\";\n\nvar _sliceInstanceProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\n\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js-stable/array/from\");\n\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\n\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\n\nvar _Array$isArray = require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/slicedToArray\"));\n\nvar _flags = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/flags\"));\n\nvar _sort = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/sort\"));\n\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\n\nvar _parseInt2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/parse-int\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _create = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/create\"));\n\nvar _concat = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"));\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"]; if (!it) { if (_Array$isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { var _context9; if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = _sliceInstanceProperty2(_context9 = Object.prototype.toString.call(o)).call(_context9, 8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return _Array$from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*!\n * XRegExp 5.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2007-present MIT License\n */\n\n/**\n * XRegExp provides augmented, extensible regular expressions. You get additional regex syntax and\n * flags, beyond what browsers support natively. XRegExp is also a regex utility belt with tools to\n * make your client-side grepping simpler and more powerful, while freeing you from related\n * cross-browser inconsistencies.\n */\n// ==--------------------------==\n// Private stuff\n// ==--------------------------==\n// Property name used for extended regex instance data\nvar REGEX_DATA = 'xregexp'; // Optional features that can be installed and uninstalled\n\nvar features = {\n  astral: false,\n  namespacing: true\n}; // Storage for fixed/extended native methods\n\nvar fixed = {}; // Storage for regexes cached by `XRegExp.cache`\n\nvar regexCache = {}; // Storage for pattern details cached by the `XRegExp` constructor\n\nvar patternCache = {}; // Storage for regex syntax tokens added internally or by `XRegExp.addToken`\n\nvar tokens = []; // Token scopes\n\nvar defaultScope = 'default';\nvar classScope = 'class'; // Regexes that match native regex syntax, including octals\n\nvar nativeTokens = {\n  // Any native multicharacter token in default scope, or any single character\n  'default': /\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\\d*|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|\\(\\?(?:[:=!]|<[=!])|[?*+]\\?|{\\d+(?:,\\d*)?}\\??|[\\s\\S]/,\n  // Any native multicharacter token in character class scope, or any single character\n  'class': /\\\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|[\\s\\S]/\n}; // Any backreference or dollar-prefixed character in replacement strings\n\nvar replacementToken = /\\$(?:\\{([^\\}]+)\\}|<([^>]+)>|(\\d\\d?|[\\s\\S]?))/g; // Check for correct `exec` handling of nonparticipating capturing groups\n\nvar correctExecNpcg = /()??/.exec('')[1] === undefined; // Check for ES6 `flags` prop support\n\nvar hasFlagsProp = (0, _flags[\"default\"])(/x/) !== undefined;\n\nfunction hasNativeFlag(flag) {\n  // Can't check based on the presence of properties/getters since browsers might support such\n  // properties even when they don't support the corresponding flag in regex construction (tested\n  // in Chrome 48, where `'unicode' in /x/` is true but trying to construct a regex with flag `u`\n  // throws an error)\n  var isSupported = true;\n\n  try {\n    // Can't use regex literals for testing even in a `try` because regex literals with\n    // unsupported flags cause a compilation error in IE\n    new RegExp('', flag); // Work around a broken/incomplete IE11 polyfill for sticky introduced in core-js 3.6.0\n\n    if (flag === 'y') {\n      // Using function to avoid babel transform to regex literal\n      var gy = function () {\n        return 'gy';\n      }();\n\n      var incompleteY = '.a'.replace(new RegExp('a', gy), '.') === '..';\n\n      if (incompleteY) {\n        isSupported = false;\n      }\n    }\n  } catch (exception) {\n    isSupported = false;\n  }\n\n  return isSupported;\n} // Check for ES2021 `d` flag support\n\n\nvar hasNativeD = hasNativeFlag('d'); // Check for ES2018 `s` flag support\n\nvar hasNativeS = hasNativeFlag('s'); // Check for ES6 `u` flag support\n\nvar hasNativeU = hasNativeFlag('u'); // Check for ES6 `y` flag support\n\nvar hasNativeY = hasNativeFlag('y'); // Tracker for known flags, including addon flags\n\nvar registeredFlags = {\n  d: hasNativeD,\n  g: true,\n  i: true,\n  m: true,\n  s: hasNativeS,\n  u: hasNativeU,\n  y: hasNativeY\n}; // Flags to remove when passing to native `RegExp` constructor\n\nvar nonnativeFlags = hasNativeS ? /[^dgimsuy]+/g : /[^dgimuy]+/g;\n/**\n * Attaches extended data and `XRegExp.prototype` properties to a regex object.\n *\n * @private\n * @param {RegExp} regex Regex to augment.\n * @param {Array} captureNames Array with capture names, or `null`.\n * @param {String} xSource XRegExp pattern used to generate `regex`, or `null` if N/A.\n * @param {String} xFlags XRegExp flags used to generate `regex`, or `null` if N/A.\n * @param {Boolean} [isInternalOnly=false] Whether the regex will be used only for internal\n *   operations, and never exposed to users. For internal-only regexes, we can improve perf by\n *   skipping some operations like attaching `XRegExp.prototype` properties.\n * @returns {!RegExp} Augmented regex.\n */\n\nfunction augment(regex, captureNames, xSource, xFlags, isInternalOnly) {\n  var _context;\n\n  regex[REGEX_DATA] = {\n    captureNames: captureNames\n  };\n\n  if (isInternalOnly) {\n    return regex;\n  } // Can't auto-inherit these since the XRegExp constructor returns a nonprimitive value\n\n\n  if (regex.__proto__) {\n    regex.__proto__ = XRegExp.prototype;\n  } else {\n    for (var p in XRegExp.prototype) {\n      // An `XRegExp.prototype.hasOwnProperty(p)` check wouldn't be worth it here, since this\n      // is performance sensitive, and enumerable `Object.prototype` or `RegExp.prototype`\n      // extensions exist on `regex.prototype` anyway\n      regex[p] = XRegExp.prototype[p];\n    }\n  }\n\n  regex[REGEX_DATA].source = xSource; // Emulate the ES6 `flags` prop by ensuring flags are in alphabetical order\n\n  regex[REGEX_DATA].flags = xFlags ? (0, _sort[\"default\"])(_context = xFlags.split('')).call(_context).join('') : xFlags;\n  return regex;\n}\n/**\n * Removes any duplicate characters from the provided string.\n *\n * @private\n * @param {String} str String to remove duplicate characters from.\n * @returns {string} String with any duplicate characters removed.\n */\n\n\nfunction clipDuplicates(str) {\n  return str.replace(/([\\s\\S])(?=[\\s\\S]*\\1)/g, '');\n}\n/**\n * Copies a regex object while preserving extended data and augmenting with `XRegExp.prototype`\n * properties. The copy has a fresh `lastIndex` property (set to zero). Allows adding and removing\n * flags g and y while copying the regex.\n *\n * @private\n * @param {RegExp} regex Regex to copy.\n * @param {Object} [options] Options object with optional properties:\n *   - `addG` {Boolean} Add flag g while copying the regex.\n *   - `addY` {Boolean} Add flag y while copying the regex.\n *   - `removeG` {Boolean} Remove flag g while copying the regex.\n *   - `removeY` {Boolean} Remove flag y while copying the regex.\n *   - `isInternalOnly` {Boolean} Whether the copied regex will be used only for internal\n *     operations, and never exposed to users. For internal-only regexes, we can improve perf by\n *     skipping some operations like attaching `XRegExp.prototype` properties.\n *   - `source` {String} Overrides `<regex>.source`, for special cases.\n * @returns {RegExp} Copy of the provided regex, possibly with modified flags.\n */\n\n\nfunction copyRegex(regex, options) {\n  var _context2;\n\n  if (!XRegExp.isRegExp(regex)) {\n    throw new TypeError('Type RegExp expected');\n  }\n\n  var xData = regex[REGEX_DATA] || {};\n  var flags = getNativeFlags(regex);\n  var flagsToAdd = '';\n  var flagsToRemove = '';\n  var xregexpSource = null;\n  var xregexpFlags = null;\n  options = options || {};\n\n  if (options.removeG) {\n    flagsToRemove += 'g';\n  }\n\n  if (options.removeY) {\n    flagsToRemove += 'y';\n  }\n\n  if (flagsToRemove) {\n    flags = flags.replace(new RegExp(\"[\".concat(flagsToRemove, \"]+\"), 'g'), '');\n  }\n\n  if (options.addG) {\n    flagsToAdd += 'g';\n  }\n\n  if (options.addY) {\n    flagsToAdd += 'y';\n  }\n\n  if (flagsToAdd) {\n    flags = clipDuplicates(flags + flagsToAdd);\n  }\n\n  if (!options.isInternalOnly) {\n    if (xData.source !== undefined) {\n      xregexpSource = xData.source;\n    } // null or undefined; don't want to add to `flags` if the previous value was null, since\n    // that indicates we're not tracking original precompilation flags\n\n\n    if ((0, _flags[\"default\"])(xData) != null) {\n      // Flags are only added for non-internal regexes by `XRegExp.globalize`. Flags are never\n      // removed for non-internal regexes, so don't need to handle it\n      xregexpFlags = flagsToAdd ? clipDuplicates((0, _flags[\"default\"])(xData) + flagsToAdd) : (0, _flags[\"default\"])(xData);\n    }\n  } // Augment with `XRegExp.prototype` properties, but use the native `RegExp` constructor to avoid\n  // searching for special tokens. That would be wrong for regexes constructed by `RegExp`, and\n  // unnecessary for regexes constructed by `XRegExp` because the regex has already undergone the\n  // translation to native regex syntax\n\n\n  regex = augment(new RegExp(options.source || regex.source, flags), hasNamedCapture(regex) ? (0, _slice[\"default\"])(_context2 = xData.captureNames).call(_context2, 0) : null, xregexpSource, xregexpFlags, options.isInternalOnly);\n  return regex;\n}\n/**\n * Converts hexadecimal to decimal.\n *\n * @private\n * @param {String} hex\n * @returns {number}\n */\n\n\nfunction dec(hex) {\n  return (0, _parseInt2[\"default\"])(hex, 16);\n}\n/**\n * Returns a pattern that can be used in a native RegExp in place of an ignorable token such as an\n * inline comment or whitespace with flag x. This is used directly as a token handler function\n * passed to `XRegExp.addToken`.\n *\n * @private\n * @param {String} match Match arg of `XRegExp.addToken` handler\n * @param {String} scope Scope arg of `XRegExp.addToken` handler\n * @param {String} flags Flags arg of `XRegExp.addToken` handler\n * @returns {string} Either '' or '(?:)', depending on which is needed in the context of the match.\n */\n\n\nfunction getContextualTokenSeparator(match, scope, flags) {\n  var matchEndPos = match.index + match[0].length;\n  var precedingChar = match.input[match.index - 1];\n  var followingChar = match.input[matchEndPos];\n\n  if ( // No need to separate tokens if at the beginning or end of a group, before or after a\n  // group, or before or after a `|`\n  /^[()|]$/.test(precedingChar) || /^[()|]$/.test(followingChar) || // No need to separate tokens if at the beginning or end of the pattern\n  match.index === 0 || matchEndPos === match.input.length || // No need to separate tokens if at the beginning of a noncapturing group or lookaround.\n  // Looks only at the last 4 chars (at most) for perf when constructing long regexes.\n  /\\(\\?(?:[:=!]|<[=!])$/.test(match.input.substring(match.index - 4, match.index)) || // Avoid separating tokens when the following token is a quantifier\n  isQuantifierNext(match.input, matchEndPos, flags)) {\n    return '';\n  } // Keep tokens separated. This avoids e.g. inadvertedly changing `\\1 1` or `\\1(?#)1` to `\\11`.\n  // This also ensures all tokens remain as discrete atoms, e.g. it prevents converting the\n  // syntax error `(? :` into `(?:`.\n\n\n  return '(?:)';\n}\n/**\n * Returns native `RegExp` flags used by a regex object.\n *\n * @private\n * @param {RegExp} regex Regex to check.\n * @returns {string} Native flags in use.\n */\n\n\nfunction getNativeFlags(regex) {\n  return hasFlagsProp ? (0, _flags[\"default\"])(regex) : // Explicitly using `RegExp.prototype.toString` (rather than e.g. `String` or concatenation\n  // with an empty string) allows this to continue working predictably when\n  // `XRegExp.proptotype.toString` is overridden\n  /\\/([a-z]*)$/i.exec(RegExp.prototype.toString.call(regex))[1];\n}\n/**\n * Determines whether a regex has extended instance data used to track capture names.\n *\n * @private\n * @param {RegExp} regex Regex to check.\n * @returns {boolean} Whether the regex uses named capture.\n */\n\n\nfunction hasNamedCapture(regex) {\n  return !!(regex[REGEX_DATA] && regex[REGEX_DATA].captureNames);\n}\n/**\n * Converts decimal to hexadecimal.\n *\n * @private\n * @param {Number|String} dec\n * @returns {string}\n */\n\n\nfunction hex(dec) {\n  return (0, _parseInt2[\"default\"])(dec, 10).toString(16);\n}\n/**\n * Checks whether the next nonignorable token after the specified position is a quantifier.\n *\n * @private\n * @param {String} pattern Pattern to search within.\n * @param {Number} pos Index in `pattern` to search at.\n * @param {String} flags Flags used by the pattern.\n * @returns {Boolean} Whether the next nonignorable token is a quantifier.\n */\n\n\nfunction isQuantifierNext(pattern, pos, flags) {\n  var inlineCommentPattern = '\\\\(\\\\?#[^)]*\\\\)';\n  var lineCommentPattern = '#[^#\\\\n]*';\n  var quantifierPattern = '[?*+]|{\\\\d+(?:,\\\\d*)?}';\n  var regex = (0, _indexOf[\"default\"])(flags).call(flags, 'x') !== -1 ? // Ignore any leading whitespace, line comments, and inline comments\n  /^(?:\\s|#[^#\\n]*|\\(\\?#[^)]*\\))*(?:[?*+]|{\\d+(?:,\\d*)?})/ : // Ignore any leading inline comments\n  /^(?:\\(\\?#[^)]*\\))*(?:[?*+]|{\\d+(?:,\\d*)?})/;\n  return regex.test((0, _slice[\"default\"])(pattern).call(pattern, pos));\n}\n/**\n * Determines whether a value is of the specified type, by resolving its internal [[Class]].\n *\n * @private\n * @param {*} value Object to check.\n * @param {String} type Type to check for, in TitleCase.\n * @returns {boolean} Whether the object matches the type.\n */\n\n\nfunction isType(value, type) {\n  return Object.prototype.toString.call(value) === \"[object \".concat(type, \"]\");\n}\n/**\n * Returns the object, or throws an error if it is `null` or `undefined`. This is used to follow\n * the ES5 abstract operation `ToObject`.\n *\n * @private\n * @param {*} value Object to check and return.\n * @returns {*} The provided object.\n */\n\n\nfunction nullThrows(value) {\n  // null or undefined\n  if (value == null) {\n    throw new TypeError('Cannot convert null or undefined to object');\n  }\n\n  return value;\n}\n/**\n * Adds leading zeros if shorter than four characters. Used for fixed-length hexadecimal values.\n *\n * @private\n * @param {String} str\n * @returns {string}\n */\n\n\nfunction pad4(str) {\n  while (str.length < 4) {\n    str = \"0\".concat(str);\n  }\n\n  return str;\n}\n/**\n * Checks for flag-related errors, and strips/applies flags in a leading mode modifier. Offloads\n * the flag preparation logic from the `XRegExp` constructor.\n *\n * @private\n * @param {String} pattern Regex pattern, possibly with a leading mode modifier.\n * @param {String} flags Any combination of flags.\n * @returns {!Object} Object with properties `pattern` and `flags`.\n */\n\n\nfunction prepareFlags(pattern, flags) {\n  // Recent browsers throw on duplicate flags, so copy this behavior for nonnative flags\n  if (clipDuplicates(flags) !== flags) {\n    throw new SyntaxError(\"Invalid duplicate regex flag \".concat(flags));\n  } // Strip and apply a leading mode modifier with any combination of flags except `dgy`\n\n\n  pattern = pattern.replace(/^\\(\\?([\\w$]+)\\)/, function ($0, $1) {\n    if (/[dgy]/.test($1)) {\n      throw new SyntaxError(\"Cannot use flags dgy in mode modifier \".concat($0));\n    } // Allow duplicate flags within the mode modifier\n\n\n    flags = clipDuplicates(flags + $1);\n    return '';\n  }); // Throw on unknown native or nonnative flags\n\n  var _iterator = _createForOfIteratorHelper(flags),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var flag = _step.value;\n\n      if (!registeredFlags[flag]) {\n        throw new SyntaxError(\"Unknown regex flag \".concat(flag));\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return {\n    pattern: pattern,\n    flags: flags\n  };\n}\n/**\n * Prepares an options object from the given value.\n *\n * @private\n * @param {String|Object} value Value to convert to an options object.\n * @returns {Object} Options object.\n */\n\n\nfunction prepareOptions(value) {\n  var options = {};\n\n  if (isType(value, 'String')) {\n    (0, _forEach[\"default\"])(XRegExp).call(XRegExp, value, /[^\\s,]+/, function (match) {\n      options[match] = true;\n    });\n    return options;\n  }\n\n  return value;\n}\n/**\n * Registers a flag so it doesn't throw an 'unknown flag' error.\n *\n * @private\n * @param {String} flag Single-character flag to register.\n */\n\n\nfunction registerFlag(flag) {\n  if (!/^[\\w$]$/.test(flag)) {\n    throw new Error('Flag must be a single character A-Za-z0-9_$');\n  }\n\n  registeredFlags[flag] = true;\n}\n/**\n * Runs built-in and custom regex syntax tokens in reverse insertion order at the specified\n * position, until a match is found.\n *\n * @private\n * @param {String} pattern Original pattern from which an XRegExp object is being built.\n * @param {String} flags Flags being used to construct the regex.\n * @param {Number} pos Position to search for tokens within `pattern`.\n * @param {Number} scope Regex scope to apply: 'default' or 'class'.\n * @param {Object} context Context object to use for token handler functions.\n * @returns {Object} Object with properties `matchLength`, `output`, and `reparse`; or `null`.\n */\n\n\nfunction runTokens(pattern, flags, pos, scope, context) {\n  var i = tokens.length;\n  var leadChar = pattern[pos];\n  var result = null;\n  var match;\n  var t; // Run in reverse insertion order\n\n  while (i--) {\n    t = tokens[i];\n\n    if (t.leadChar && t.leadChar !== leadChar || t.scope !== scope && t.scope !== 'all' || t.flag && !((0, _indexOf[\"default\"])(flags).call(flags, t.flag) !== -1)) {\n      continue;\n    }\n\n    match = XRegExp.exec(pattern, t.regex, pos, 'sticky');\n\n    if (match) {\n      result = {\n        matchLength: match[0].length,\n        output: t.handler.call(context, match, scope, flags),\n        reparse: t.reparse\n      }; // Finished with token tests\n\n      break;\n    }\n  }\n\n  return result;\n}\n/**\n * Enables or disables implicit astral mode opt-in. When enabled, flag A is automatically added to\n * all new regexes created by XRegExp. This causes an error to be thrown when creating regexes if\n * the Unicode Base addon is not available, since flag A is registered by that addon.\n *\n * @private\n * @param {Boolean} on `true` to enable; `false` to disable.\n */\n\n\nfunction setAstral(on) {\n  features.astral = on;\n}\n/**\n * Adds named capture groups to the `groups` property of match arrays. See here for details:\n * https://github.com/tc39/proposal-regexp-named-groups\n *\n * @private\n * @param {Boolean} on `true` to enable; `false` to disable.\n */\n\n\nfunction setNamespacing(on) {\n  features.namespacing = on;\n} // ==--------------------------==\n// Constructor\n// ==--------------------------==\n\n/**\n * Creates an extended regular expression object for matching text with a pattern. Differs from a\n * native regular expression in that additional syntax and flags are supported. The returned object\n * is in fact a native `RegExp` and works with all native methods.\n *\n * @class XRegExp\n * @constructor\n * @param {String|RegExp} pattern Regex pattern string, or an existing regex object to copy.\n * @param {String} [flags] Any combination of flags.\n *   Native flags:\n *     - `d` - indices for capturing groups (ES2021)\n *     - `g` - global\n *     - `i` - ignore case\n *     - `m` - multiline anchors\n *     - `u` - unicode (ES6)\n *     - `y` - sticky (Firefox 3+, ES6)\n *   Additional XRegExp flags:\n *     - `n` - named capture only\n *     - `s` - dot matches all (aka singleline) - works even when not natively supported\n *     - `x` - free-spacing and line comments (aka extended)\n *     - `A` - 21-bit Unicode properties (aka astral) - requires the Unicode Base addon\n *   Flags cannot be provided when constructing one `RegExp` from another.\n * @returns {RegExp} Extended regular expression object.\n * @example\n *\n * // With named capture and flag x\n * XRegExp(`(?<year>  [0-9]{4} ) -?  # year\n *          (?<month> [0-9]{2} ) -?  # month\n *          (?<day>   [0-9]{2} )     # day`, 'x');\n *\n * // Providing a regex object copies it. Native regexes are recompiled using native (not XRegExp)\n * // syntax. Copies maintain extended data, are augmented with `XRegExp.prototype` properties, and\n * // have fresh `lastIndex` properties (set to zero).\n * XRegExp(/regex/);\n */\n\n\nfunction XRegExp(pattern, flags) {\n  if (XRegExp.isRegExp(pattern)) {\n    if (flags !== undefined) {\n      throw new TypeError('Cannot supply flags when copying a RegExp');\n    }\n\n    return copyRegex(pattern);\n  } // Copy the argument behavior of `RegExp`\n\n\n  pattern = pattern === undefined ? '' : String(pattern);\n  flags = flags === undefined ? '' : String(flags);\n\n  if (XRegExp.isInstalled('astral') && !((0, _indexOf[\"default\"])(flags).call(flags, 'A') !== -1)) {\n    // This causes an error to be thrown if the Unicode Base addon is not available\n    flags += 'A';\n  }\n\n  if (!patternCache[pattern]) {\n    patternCache[pattern] = {};\n  }\n\n  if (!patternCache[pattern][flags]) {\n    var context = {\n      hasNamedCapture: false,\n      captureNames: []\n    };\n    var scope = defaultScope;\n    var output = '';\n    var pos = 0;\n    var result; // Check for flag-related errors, and strip/apply flags in a leading mode modifier\n\n    var applied = prepareFlags(pattern, flags);\n    var appliedPattern = applied.pattern;\n    var appliedFlags = (0, _flags[\"default\"])(applied); // Use XRegExp's tokens to translate the pattern to a native regex pattern.\n    // `appliedPattern.length` may change on each iteration if tokens use `reparse`\n\n    while (pos < appliedPattern.length) {\n      do {\n        // Check for custom tokens at the current position\n        result = runTokens(appliedPattern, appliedFlags, pos, scope, context); // If the matched token used the `reparse` option, splice its output into the\n        // pattern before running tokens again at the same position\n\n        if (result && result.reparse) {\n          appliedPattern = (0, _slice[\"default\"])(appliedPattern).call(appliedPattern, 0, pos) + result.output + (0, _slice[\"default\"])(appliedPattern).call(appliedPattern, pos + result.matchLength);\n        }\n      } while (result && result.reparse);\n\n      if (result) {\n        output += result.output;\n        pos += result.matchLength || 1;\n      } else {\n        // Get the native token at the current position\n        var _XRegExp$exec = XRegExp.exec(appliedPattern, nativeTokens[scope], pos, 'sticky'),\n            _XRegExp$exec2 = (0, _slicedToArray2[\"default\"])(_XRegExp$exec, 1),\n            token = _XRegExp$exec2[0];\n\n        output += token;\n        pos += token.length;\n\n        if (token === '[' && scope === defaultScope) {\n          scope = classScope;\n        } else if (token === ']' && scope === classScope) {\n          scope = defaultScope;\n        }\n      }\n    }\n\n    patternCache[pattern][flags] = {\n      // Use basic cleanup to collapse repeated empty groups like `(?:)(?:)` to `(?:)`. Empty\n      // groups are sometimes inserted during regex transpilation in order to keep tokens\n      // separated. However, more than one empty group in a row is never needed.\n      pattern: output.replace(/(?:\\(\\?:\\))+/g, '(?:)'),\n      // Strip all but native flags\n      flags: appliedFlags.replace(nonnativeFlags, ''),\n      // `context.captureNames` has an item for each capturing group, even if unnamed\n      captures: context.hasNamedCapture ? context.captureNames : null\n    };\n  }\n\n  var generated = patternCache[pattern][flags];\n  return augment(new RegExp(generated.pattern, (0, _flags[\"default\"])(generated)), generated.captures, pattern, flags);\n} // Add `RegExp.prototype` to the prototype chain\n\n\nXRegExp.prototype = /(?:)/; // ==--------------------------==\n// Public properties\n// ==--------------------------==\n\n/**\n * The XRegExp version number as a string containing three dot-separated parts. For example,\n * '2.0.0-beta-3'.\n *\n * @static\n * @memberOf XRegExp\n * @type String\n */\n\nXRegExp.version = '5.1.1'; // ==--------------------------==\n// Public methods\n// ==--------------------------==\n// Intentionally undocumented; used in tests and addons\n\nXRegExp._clipDuplicates = clipDuplicates;\nXRegExp._hasNativeFlag = hasNativeFlag;\nXRegExp._dec = dec;\nXRegExp._hex = hex;\nXRegExp._pad4 = pad4;\n/**\n * Extends XRegExp syntax and allows custom flags. This is used internally and can be used to\n * create XRegExp addons. If more than one token can match the same string, the last added wins.\n *\n * @memberOf XRegExp\n * @param {RegExp} regex Regex object that matches the new token.\n * @param {Function} handler Function that returns a new pattern string (using native regex syntax)\n *   to replace the matched token within all future XRegExp regexes. Has access to persistent\n *   properties of the regex being built, through `this`. Invoked with three arguments:\n *   - The match array, with named backreference properties.\n *   - The regex scope where the match was found: 'default' or 'class'.\n *   - The flags used by the regex, including any flags in a leading mode modifier.\n *   The handler function becomes part of the XRegExp construction process, so be careful not to\n *   construct XRegExps within the function or you will trigger infinite recursion.\n * @param {Object} [options] Options object with optional properties:\n *   - `scope` {String} Scope where the token applies: 'default', 'class', or 'all'.\n *   - `flag` {String} Single-character flag that triggers the token. This also registers the\n *     flag, which prevents XRegExp from throwing an 'unknown flag' error when the flag is used.\n *   - `optionalFlags` {String} Any custom flags checked for within the token `handler` that are\n *     not required to trigger the token. This registers the flags, to prevent XRegExp from\n *     throwing an 'unknown flag' error when any of the flags are used.\n *   - `reparse` {Boolean} Whether the `handler` function's output should not be treated as\n *     final, and instead be reparseable by other tokens (including the current token). Allows\n *     token chaining or deferring.\n *   - `leadChar` {String} Single character that occurs at the beginning of any successful match\n *     of the token (not always applicable). This doesn't change the behavior of the token unless\n *     you provide an erroneous value. However, providing it can increase the token's performance\n *     since the token can be skipped at any positions where this character doesn't appear.\n * @example\n *\n * // Basic usage: Add \\a for the ALERT control code\n * XRegExp.addToken(\n *   /\\\\a/,\n *   () => '\\\\x07',\n *   {scope: 'all'}\n * );\n * XRegExp('\\\\a[\\\\a-\\\\n]+').test('\\x07\\n\\x07'); // -> true\n *\n * // Add the U (ungreedy) flag from PCRE and RE2, which reverses greedy and lazy quantifiers.\n * // Since `scope` is not specified, it uses 'default' (i.e., transformations apply outside of\n * // character classes only)\n * XRegExp.addToken(\n *   /([?*+]|{\\d+(?:,\\d*)?})(\\??)/,\n *   (match) => `${match[1]}${match[2] ? '' : '?'}`,\n *   {flag: 'U'}\n * );\n * XRegExp('a+', 'U').exec('aaa')[0]; // -> 'a'\n * XRegExp('a+?', 'U').exec('aaa')[0]; // -> 'aaa'\n */\n\nXRegExp.addToken = function (regex, handler, options) {\n  options = options || {};\n  var _options = options,\n      optionalFlags = _options.optionalFlags;\n\n  if (options.flag) {\n    registerFlag(options.flag);\n  }\n\n  if (optionalFlags) {\n    optionalFlags = optionalFlags.split('');\n\n    var _iterator2 = _createForOfIteratorHelper(optionalFlags),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var flag = _step2.value;\n        registerFlag(flag);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  } // Add to the private list of syntax tokens\n\n\n  tokens.push({\n    regex: copyRegex(regex, {\n      addG: true,\n      addY: hasNativeY,\n      isInternalOnly: true\n    }),\n    handler: handler,\n    scope: options.scope || defaultScope,\n    flag: options.flag,\n    reparse: options.reparse,\n    leadChar: options.leadChar\n  }); // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and flags\n  // might now produce different results\n\n  XRegExp.cache.flush('patterns');\n};\n/**\n * Caches and returns the result of calling `XRegExp(pattern, flags)`. On any subsequent call with\n * the same pattern and flag combination, the cached copy of the regex is returned.\n *\n * @memberOf XRegExp\n * @param {String} pattern Regex pattern string.\n * @param {String} [flags] Any combination of XRegExp flags.\n * @returns {RegExp} Cached XRegExp object.\n * @example\n *\n * let match;\n * while (match = XRegExp.cache('.', 'gs').exec('abc')) {\n *   // The regex is compiled once only\n * }\n */\n\n\nXRegExp.cache = function (pattern, flags) {\n  if (!regexCache[pattern]) {\n    regexCache[pattern] = {};\n  }\n\n  return regexCache[pattern][flags] || (regexCache[pattern][flags] = XRegExp(pattern, flags));\n}; // Intentionally undocumented; used in tests\n\n\nXRegExp.cache.flush = function (cacheName) {\n  if (cacheName === 'patterns') {\n    // Flush the pattern cache used by the `XRegExp` constructor\n    patternCache = {};\n  } else {\n    // Flush the regex cache populated by `XRegExp.cache`\n    regexCache = {};\n  }\n};\n/**\n * Escapes any regular expression metacharacters, for use when matching literal strings. The result\n * can safely be used at any position within a regex that uses any flags.\n *\n * @memberOf XRegExp\n * @param {String} str String to escape.\n * @returns {string} String with regex metacharacters escaped.\n * @example\n *\n * XRegExp.escape('Escaped? <.>');\n * // -> 'Escaped\\?\\u0020<\\.>'\n */\n// Following are the contexts where each metacharacter needs to be escaped because it would\n// otherwise have a special meaning, change the meaning of surrounding characters, or cause an\n// error. Context 'default' means outside character classes only.\n// - `\\` - context: all\n// - `[()*+?.$|` - context: default\n// - `]` - context: default with flag u or if forming the end of a character class\n// - `{}` - context: default with flag u or if part of a valid/complete quantifier pattern\n// - `,` - context: default if in a position that causes an unescaped `{` to turn into a quantifier.\n//   Ex: `/^a{1\\,2}$/` matches `'a{1,2}'`, but `/^a{1,2}$/` matches `'a'` or `'aa'`\n// - `#` and <whitespace> - context: default with flag x\n// - `^` - context: default, and context: class if it's the first character in the class\n// - `-` - context: class if part of a valid character class range\n\n\nXRegExp.escape = function (str) {\n  return String(nullThrows(str)). // Escape most special chars with a backslash\n  replace(/[\\\\\\[\\]{}()*+?.^$|]/g, '\\\\$&'). // Convert to \\uNNNN for special chars that can't be escaped when used with ES6 flag `u`\n  replace(/[\\s#\\-,]/g, function (match) {\n    return \"\\\\u\".concat(pad4(hex(match.charCodeAt(0))));\n  });\n};\n/**\n * Executes a regex search in a specified string. Returns a match array or `null`. If the provided\n * regex uses named capture, named capture properties are included on the match array's `groups`\n * property. Optional `pos` and `sticky` arguments specify the search start position, and whether\n * the match must start at the specified position only. The `lastIndex` property of the provided\n * regex is not used, but is updated for compatibility. Also fixes browser bugs compared to the\n * native `RegExp.prototype.exec` and can be used reliably cross-browser.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Number} [pos=0] Zero-based index at which to start the search.\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\n * @returns {Array} Match array with named capture properties on the `groups` object, or `null`. If\n *   the `namespacing` feature is off, named capture properties are directly on the match array.\n * @example\n *\n * // Basic use, with named capturing group\n * let match = XRegExp.exec('U+2620', XRegExp('U\\\\+(?<hex>[0-9A-F]{4})'));\n * match.groups.hex; // -> '2620'\n *\n * // With pos and sticky, in a loop\n * let pos = 3, result = [], match;\n * while (match = XRegExp.exec('<1><2><3><4>5<6>', /<(\\d)>/, pos, 'sticky')) {\n *   result.push(match[1]);\n *   pos = match.index + match[0].length;\n * }\n * // result -> ['2', '3', '4']\n */\n\n\nXRegExp.exec = function (str, regex, pos, sticky) {\n  var cacheKey = 'g';\n  var addY = false;\n  var fakeY = false;\n  var match;\n  addY = hasNativeY && !!(sticky || regex.sticky && sticky !== false);\n\n  if (addY) {\n    cacheKey += 'y';\n  } else if (sticky) {\n    // Simulate sticky matching by appending an empty capture to the original regex. The\n    // resulting regex will succeed no matter what at the current index (set with `lastIndex`),\n    // and will not search the rest of the subject string. We'll know that the original regex\n    // has failed if that last capture is `''` rather than `undefined` (i.e., if that last\n    // capture participated in the match).\n    fakeY = true;\n    cacheKey += 'FakeY';\n  }\n\n  regex[REGEX_DATA] = regex[REGEX_DATA] || {}; // Shares cached copies with `XRegExp.match`/`replace`\n\n  var r2 = regex[REGEX_DATA][cacheKey] || (regex[REGEX_DATA][cacheKey] = copyRegex(regex, {\n    addG: true,\n    addY: addY,\n    source: fakeY ? \"\".concat(regex.source, \"|()\") : undefined,\n    removeY: sticky === false,\n    isInternalOnly: true\n  }));\n  pos = pos || 0;\n  r2.lastIndex = pos; // Fixed `exec` required for `lastIndex` fix, named backreferences, etc.\n\n  match = fixed.exec.call(r2, str); // Get rid of the capture added by the pseudo-sticky matcher if needed. An empty string means\n  // the original regexp failed (see above).\n\n  if (fakeY && match && match.pop() === '') {\n    match = null;\n  }\n\n  if (regex.global) {\n    regex.lastIndex = match ? r2.lastIndex : 0;\n  }\n\n  return match;\n};\n/**\n * Executes a provided function once per regex match. Searches always start at the beginning of the\n * string and continue until the end, regardless of the state of the regex's `global` property and\n * initial `lastIndex`.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Function} callback Function to execute for each match. Invoked with four arguments:\n *   - The match array, with named backreference properties.\n *   - The zero-based match index.\n *   - The string being traversed.\n *   - The regex object being used to traverse the string.\n * @example\n *\n * // Extracts every other digit from a string\n * const evens = [];\n * XRegExp.forEach('1a2345', /\\d/, (match, i) => {\n *   if (i % 2) evens.push(+match[0]);\n * });\n * // evens -> [2, 4]\n */\n\n\nXRegExp.forEach = function (str, regex, callback) {\n  var pos = 0;\n  var i = -1;\n  var match;\n\n  while (match = XRegExp.exec(str, regex, pos)) {\n    // Because `regex` is provided to `callback`, the function could use the deprecated/\n    // nonstandard `RegExp.prototype.compile` to mutate the regex. However, since `XRegExp.exec`\n    // doesn't use `lastIndex` to set the search position, this can't lead to an infinite loop,\n    // at least. Actually, because of the way `XRegExp.exec` caches globalized versions of\n    // regexes, mutating the regex will not have any effect on the iteration or matched strings,\n    // which is a nice side effect that brings extra safety.\n    callback(match, ++i, str, regex);\n    pos = match.index + (match[0].length || 1);\n  }\n};\n/**\n * Copies a regex object and adds flag `g`. The copy maintains extended data, is augmented with\n * `XRegExp.prototype` properties, and has a fresh `lastIndex` property (set to zero). Native\n * regexes are not recompiled using XRegExp syntax.\n *\n * @memberOf XRegExp\n * @param {RegExp} regex Regex to globalize.\n * @returns {RegExp} Copy of the provided regex with flag `g` added.\n * @example\n *\n * const globalCopy = XRegExp.globalize(/regex/);\n * globalCopy.global; // -> true\n */\n\n\nXRegExp.globalize = function (regex) {\n  return copyRegex(regex, {\n    addG: true\n  });\n};\n/**\n * Installs optional features according to the specified options. Can be undone using\n * `XRegExp.uninstall`.\n *\n * @memberOf XRegExp\n * @param {Object|String} options Options object or string.\n * @example\n *\n * // With an options object\n * XRegExp.install({\n *   // Enables support for astral code points in Unicode addons (implicitly sets flag A)\n *   astral: true,\n *\n *   // Adds named capture groups to the `groups` property of matches\n *   namespacing: true\n * });\n *\n * // With an options string\n * XRegExp.install('astral namespacing');\n */\n\n\nXRegExp.install = function (options) {\n  options = prepareOptions(options);\n\n  if (!features.astral && options.astral) {\n    setAstral(true);\n  }\n\n  if (!features.namespacing && options.namespacing) {\n    setNamespacing(true);\n  }\n};\n/**\n * Checks whether an individual optional feature is installed.\n *\n * @memberOf XRegExp\n * @param {String} feature Name of the feature to check. One of:\n *   - `astral`\n *   - `namespacing`\n * @returns {boolean} Whether the feature is installed.\n * @example\n *\n * XRegExp.isInstalled('astral');\n */\n\n\nXRegExp.isInstalled = function (feature) {\n  return !!features[feature];\n};\n/**\n * Returns `true` if an object is a regex; `false` if it isn't. This works correctly for regexes\n * created in another frame, when `instanceof` and `constructor` checks would fail.\n *\n * @memberOf XRegExp\n * @param {*} value Object to check.\n * @returns {boolean} Whether the object is a `RegExp` object.\n * @example\n *\n * XRegExp.isRegExp('string'); // -> false\n * XRegExp.isRegExp(/regex/i); // -> true\n * XRegExp.isRegExp(RegExp('^', 'm')); // -> true\n * XRegExp.isRegExp(XRegExp('(?s).')); // -> true\n */\n\n\nXRegExp.isRegExp = function (value) {\n  return Object.prototype.toString.call(value) === '[object RegExp]';\n}; // Same as `isType(value, 'RegExp')`, but avoiding that function call here for perf since\n// `isRegExp` is used heavily by internals including regex construction\n\n/**\n * Returns the first matched string, or in global mode, an array containing all matched strings.\n * This is essentially a more convenient re-implementation of `String.prototype.match` that gives\n * the result types you actually want (string instead of `exec`-style array in match-first mode,\n * and an empty array instead of `null` when no matches are found in match-all mode). It also lets\n * you override flag g and ignore `lastIndex`, and fixes browser bugs.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {String} [scope='one'] Use 'one' to return the first match as a string. Use 'all' to\n *   return an array of all matched strings. If not explicitly specified and `regex` uses flag g,\n *   `scope` is 'all'.\n * @returns {String|Array} In match-first mode: First match as a string, or `null`. In match-all\n *   mode: Array of all matched strings, or an empty array.\n * @example\n *\n * // Match first\n * XRegExp.match('abc', /\\w/); // -> 'a'\n * XRegExp.match('abc', /\\w/g, 'one'); // -> 'a'\n * XRegExp.match('abc', /x/g, 'one'); // -> null\n *\n * // Match all\n * XRegExp.match('abc', /\\w/g); // -> ['a', 'b', 'c']\n * XRegExp.match('abc', /\\w/, 'all'); // -> ['a', 'b', 'c']\n * XRegExp.match('abc', /x/, 'all'); // -> []\n */\n\n\nXRegExp.match = function (str, regex, scope) {\n  var global = regex.global && scope !== 'one' || scope === 'all';\n  var cacheKey = (global ? 'g' : '') + (regex.sticky ? 'y' : '') || 'noGY';\n  regex[REGEX_DATA] = regex[REGEX_DATA] || {}; // Shares cached copies with `XRegExp.exec`/`replace`\n\n  var r2 = regex[REGEX_DATA][cacheKey] || (regex[REGEX_DATA][cacheKey] = copyRegex(regex, {\n    addG: !!global,\n    removeG: scope === 'one',\n    isInternalOnly: true\n  }));\n  var result = String(nullThrows(str)).match(r2);\n\n  if (regex.global) {\n    regex.lastIndex = scope === 'one' && result ? // Can't use `r2.lastIndex` since `r2` is nonglobal in this case\n    result.index + result[0].length : 0;\n  }\n\n  return global ? result || [] : result && result[0];\n};\n/**\n * Retrieves the matches from searching a string using a chain of regexes that successively search\n * within previous matches. The provided `chain` array can contain regexes and or objects with\n * `regex` and `backref` properties. When a backreference is specified, the named or numbered\n * backreference is passed forward to the next regex or returned.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {Array} chain Regexes that each search for matches within preceding results.\n * @returns {Array} Matches by the last regex in the chain, or an empty array.\n * @example\n *\n * // Basic usage; matches numbers within <b> tags\n * XRegExp.matchChain('1 <b>2</b> 3 <b>4 a 56</b>', [\n *   XRegExp('(?is)<b>.*?</b>'),\n *   /\\d+/\n * ]);\n * // -> ['2', '4', '56']\n *\n * // Passing forward and returning specific backreferences\n * const html = `<a href=\"http://xregexp.com/api/\">XRegExp</a>\n *               <a href=\"http://www.google.com/\">Google</a>`;\n * XRegExp.matchChain(html, [\n *   {regex: /<a href=\"([^\"]+)\">/i, backref: 1},\n *   {regex: XRegExp('(?i)^https?://(?<domain>[^/?#]+)'), backref: 'domain'}\n * ]);\n * // -> ['xregexp.com', 'www.google.com']\n */\n\n\nXRegExp.matchChain = function (str, chain) {\n  return function recurseChain(values, level) {\n    var item = chain[level].regex ? chain[level] : {\n      regex: chain[level]\n    };\n    var matches = [];\n\n    function addMatch(match) {\n      if (item.backref) {\n        var ERR_UNDEFINED_GROUP = \"Backreference to undefined group: \".concat(item.backref);\n        var isNamedBackref = isNaN(item.backref);\n\n        if (isNamedBackref && XRegExp.isInstalled('namespacing')) {\n          // `groups` has `null` as prototype, so using `in` instead of `hasOwnProperty`\n          if (!(match.groups && item.backref in match.groups)) {\n            throw new ReferenceError(ERR_UNDEFINED_GROUP);\n          }\n        } else if (!match.hasOwnProperty(item.backref)) {\n          throw new ReferenceError(ERR_UNDEFINED_GROUP);\n        }\n\n        var backrefValue = isNamedBackref && XRegExp.isInstalled('namespacing') ? match.groups[item.backref] : match[item.backref];\n        matches.push(backrefValue || '');\n      } else {\n        matches.push(match[0]);\n      }\n    }\n\n    var _iterator3 = _createForOfIteratorHelper(values),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var value = _step3.value;\n        (0, _forEach[\"default\"])(XRegExp).call(XRegExp, value, item.regex, addMatch);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    return level === chain.length - 1 || !matches.length ? matches : recurseChain(matches, level + 1);\n  }([str], 0);\n};\n/**\n * Returns a new string with one or all matches of a pattern replaced. The pattern can be a string\n * or regex, and the replacement can be a string or a function to be called for each match. To\n * perform a global search and replace, use the optional `scope` argument or include flag g if using\n * a regex. Replacement strings can use `$<n>` or `${n}` for named and numbered backreferences.\n * Replacement functions can use named backreferences via the last argument. Also fixes browser bugs\n * compared to the native `String.prototype.replace` and can be used reliably cross-browser.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp|String} search Search pattern to be replaced.\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\n *   Replacement strings can include special replacement syntax:\n *     - $$ - Inserts a literal $ character.\n *     - $&, $0 - Inserts the matched substring.\n *     - $` - Inserts the string that precedes the matched substring (left context).\n *     - $' - Inserts the string that follows the matched substring (right context).\n *     - $n, $nn - Where n/nn are digits referencing an existing capturing group, inserts\n *       backreference n/nn.\n *     - $<n>, ${n} - Where n is a name or any number of digits that reference an existing capturing\n *       group, inserts backreference n.\n *   Replacement functions are invoked with three or more arguments:\n *     - args[0] - The matched substring (corresponds to `$&` above). If the `namespacing` feature\n *       is off, named backreferences are accessible as properties of this argument.\n *     - args[1..n] - One argument for each backreference (corresponding to `$1`, `$2`, etc. above).\n *       If the regex has no capturing groups, no arguments appear in this position.\n *     - args[n+1] - The zero-based index of the match within the entire search string.\n *     - args[n+2] - The total string being searched.\n *     - args[n+3] - If the the search pattern is a regex with named capturing groups, the last\n *       argument is the groups object. Its keys are the backreference names and its values are the\n *       backreference values. If the `namespacing` feature is off, this argument is not present.\n * @param {String} [scope] Use 'one' to replace the first match only, or 'all'. Defaults to 'one'.\n *   Defaults to 'all' if using a regex with flag g.\n * @returns {String} New string with one or all matches replaced.\n * @example\n *\n * // Regex search, using named backreferences in replacement string\n * const name = XRegExp('(?<first>\\\\w+) (?<last>\\\\w+)');\n * XRegExp.replace('John Smith', name, '$<last>, $<first>');\n * // -> 'Smith, John'\n *\n * // Regex search, using named backreferences in replacement function\n * XRegExp.replace('John Smith', name, (...args) => {\n *   const groups = args[args.length - 1];\n *   return `${groups.last}, ${groups.first}`;\n * });\n * // -> 'Smith, John'\n *\n * // String search, with replace-all\n * XRegExp.replace('RegExp builds RegExps', 'RegExp', 'XRegExp', 'all');\n * // -> 'XRegExp builds XRegExps'\n */\n\n\nXRegExp.replace = function (str, search, replacement, scope) {\n  var isRegex = XRegExp.isRegExp(search);\n  var global = search.global && scope !== 'one' || scope === 'all';\n  var cacheKey = (global ? 'g' : '') + (search.sticky ? 'y' : '') || 'noGY';\n  var s2 = search;\n\n  if (isRegex) {\n    search[REGEX_DATA] = search[REGEX_DATA] || {}; // Shares cached copies with `XRegExp.exec`/`match`. Since a copy is used, `search`'s\n    // `lastIndex` isn't updated *during* replacement iterations\n\n    s2 = search[REGEX_DATA][cacheKey] || (search[REGEX_DATA][cacheKey] = copyRegex(search, {\n      addG: !!global,\n      removeG: scope === 'one',\n      isInternalOnly: true\n    }));\n  } else if (global) {\n    s2 = new RegExp(XRegExp.escape(String(search)), 'g');\n  } // Fixed `replace` required for named backreferences, etc.\n\n\n  var result = fixed.replace.call(nullThrows(str), s2, replacement);\n\n  if (isRegex && search.global) {\n    // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\n    search.lastIndex = 0;\n  }\n\n  return result;\n};\n/**\n * Performs batch processing of string replacements. Used like `XRegExp.replace`, but accepts an\n * array of replacement details. Later replacements operate on the output of earlier replacements.\n * Replacement details are accepted as an array with a regex or string to search for, the\n * replacement string or function, and an optional scope of 'one' or 'all'. Uses the XRegExp\n * replacement text syntax, which supports named backreference properties via `$<name>` or\n * `${name}`.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {Array} replacements Array of replacement detail arrays.\n * @returns {String} New string with all replacements.\n * @example\n *\n * str = XRegExp.replaceEach(str, [\n *   [XRegExp('(?<name>a)'), 'z$<name>'],\n *   [/b/gi, 'y'],\n *   [/c/g, 'x', 'one'], // scope 'one' overrides /g\n *   [/d/, 'w', 'all'],  // scope 'all' overrides lack of /g\n *   ['e', 'v', 'all'],  // scope 'all' allows replace-all for strings\n *   [/f/g, (match) => match.toUpperCase()]\n * ]);\n */\n\n\nXRegExp.replaceEach = function (str, replacements) {\n  var _iterator4 = _createForOfIteratorHelper(replacements),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var r = _step4.value;\n      str = XRegExp.replace(str, r[0], r[1], r[2]);\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  return str;\n};\n/**\n * Splits a string into an array of strings using a regex or string separator. Matches of the\n * separator are not included in the result array. However, if `separator` is a regex that contains\n * capturing groups, backreferences are spliced into the result each time `separator` is matched.\n * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\n * cross-browser.\n *\n * @memberOf XRegExp\n * @param {String} str String to split.\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {Array} Array of substrings.\n * @example\n *\n * // Basic use\n * XRegExp.split('a b c', ' ');\n * // -> ['a', 'b', 'c']\n *\n * // With limit\n * XRegExp.split('a b c', ' ', 2);\n * // -> ['a', 'b']\n *\n * // Backreferences in result array\n * XRegExp.split('..word1..', /([a-z]+)(\\d+)/i);\n * // -> ['..', 'word', '1', '..']\n */\n\n\nXRegExp.split = function (str, separator, limit) {\n  return fixed.split.call(nullThrows(str), separator, limit);\n};\n/**\n * Executes a regex search in a specified string. Returns `true` or `false`. Optional `pos` and\n * `sticky` arguments specify the search start position, and whether the match must start at the\n * specified position only. The `lastIndex` property of the provided regex is not used, but is\n * updated for compatibility. Also fixes browser bugs compared to the native\n * `RegExp.prototype.test` and can be used reliably cross-browser.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Number} [pos=0] Zero-based index at which to start the search.\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\n * @returns {boolean} Whether the regex matched the provided value.\n * @example\n *\n * // Basic use\n * XRegExp.test('abc', /c/); // -> true\n *\n * // With pos and sticky\n * XRegExp.test('abc', /c/, 0, 'sticky'); // -> false\n * XRegExp.test('abc', /c/, 2, 'sticky'); // -> true\n */\n// Do this the easy way :-)\n\n\nXRegExp.test = function (str, regex, pos, sticky) {\n  return !!XRegExp.exec(str, regex, pos, sticky);\n};\n/**\n * Uninstalls optional features according to the specified options. Used to undo the actions of\n * `XRegExp.install`.\n *\n * @memberOf XRegExp\n * @param {Object|String} options Options object or string.\n * @example\n *\n * // With an options object\n * XRegExp.uninstall({\n *   // Disables support for astral code points in Unicode addons (unless enabled per regex)\n *   astral: true,\n *\n *   // Don't add named capture groups to the `groups` property of matches\n *   namespacing: true\n * });\n *\n * // With an options string\n * XRegExp.uninstall('astral namespacing');\n */\n\n\nXRegExp.uninstall = function (options) {\n  options = prepareOptions(options);\n\n  if (features.astral && options.astral) {\n    setAstral(false);\n  }\n\n  if (features.namespacing && options.namespacing) {\n    setNamespacing(false);\n  }\n};\n/**\n * Returns an XRegExp object that is the union of the given patterns. Patterns can be provided as\n * regex objects or strings. Metacharacters are escaped in patterns provided as strings.\n * Backreferences in provided regex objects are automatically renumbered to work correctly within\n * the larger combined pattern. Native flags used by provided regexes are ignored in favor of the\n * `flags` argument.\n *\n * @memberOf XRegExp\n * @param {Array} patterns Regexes and strings to combine.\n * @param {String} [flags] Any combination of XRegExp flags.\n * @param {Object} [options] Options object with optional properties:\n *   - `conjunction` {String} Type of conjunction to use: 'or' (default) or 'none'.\n * @returns {RegExp} Union of the provided regexes and strings.\n * @example\n *\n * XRegExp.union(['a+b*c', /(dogs)\\1/, /(cats)\\1/], 'i');\n * // -> /a\\+b\\*c|(dogs)\\1|(cats)\\2/i\n *\n * XRegExp.union([/man/, /bear/, /pig/], 'i', {conjunction: 'none'});\n * // -> /manbearpig/i\n */\n\n\nXRegExp.union = function (patterns, flags, options) {\n  options = options || {};\n  var conjunction = options.conjunction || 'or';\n  var numCaptures = 0;\n  var numPriorCaptures;\n  var captureNames;\n\n  function rewrite(match, paren, backref) {\n    var name = captureNames[numCaptures - numPriorCaptures]; // Capturing group\n\n    if (paren) {\n      ++numCaptures; // If the current capture has a name, preserve the name\n\n      if (name) {\n        return \"(?<\".concat(name, \">\");\n      } // Backreference\n\n    } else if (backref) {\n      // Rewrite the backreference\n      return \"\\\\\".concat(+backref + numPriorCaptures);\n    }\n\n    return match;\n  }\n\n  if (!(isType(patterns, 'Array') && patterns.length)) {\n    throw new TypeError('Must provide a nonempty array of patterns to merge');\n  }\n\n  var parts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/g;\n  var output = [];\n\n  var _iterator5 = _createForOfIteratorHelper(patterns),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var pattern = _step5.value;\n\n      if (XRegExp.isRegExp(pattern)) {\n        numPriorCaptures = numCaptures;\n        captureNames = pattern[REGEX_DATA] && pattern[REGEX_DATA].captureNames || []; // Rewrite backreferences. Passing to XRegExp dies on octals and ensures patterns are\n        // independently valid; helps keep this simple. Named captures are put back\n\n        output.push(XRegExp(pattern.source).source.replace(parts, rewrite));\n      } else {\n        output.push(XRegExp.escape(pattern));\n      }\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  var separator = conjunction === 'none' ? '' : '|';\n  return XRegExp(output.join(separator), flags);\n}; // ==--------------------------==\n// Fixed/extended native methods\n// ==--------------------------==\n\n/**\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\n * bugs in the native `RegExp.prototype.exec`. Use via `XRegExp.exec`.\n *\n * @memberOf RegExp\n * @param {String} str String to search.\n * @returns {Array} Match array with named backreference properties, or `null`.\n */\n\n\nfixed.exec = function (str) {\n  var origLastIndex = this.lastIndex;\n  var match = RegExp.prototype.exec.apply(this, arguments);\n\n  if (match) {\n    // Fix browsers whose `exec` methods don't return `undefined` for nonparticipating capturing\n    // groups. This fixes IE 5.5-8, but not IE 9's quirks mode or emulation of older IEs. IE 9\n    // in standards mode follows the spec.\n    if (!correctExecNpcg && match.length > 1 && (0, _indexOf[\"default\"])(match).call(match, '') !== -1) {\n      var _context3;\n\n      var r2 = copyRegex(this, {\n        removeG: true,\n        isInternalOnly: true\n      }); // Using `str.slice(match.index)` rather than `match[0]` in case lookahead allowed\n      // matching due to characters outside the match\n\n      (0, _slice[\"default\"])(_context3 = String(str)).call(_context3, match.index).replace(r2, function () {\n        var len = arguments.length; // Skip index 0 and the last 2\n\n        for (var i = 1; i < len - 2; ++i) {\n          if ((i < 0 || arguments.length <= i ? undefined : arguments[i]) === undefined) {\n            match[i] = undefined;\n          }\n        }\n      });\n    } // Attach named capture properties\n\n\n    if (this[REGEX_DATA] && this[REGEX_DATA].captureNames) {\n      var groupsObject = match;\n\n      if (XRegExp.isInstalled('namespacing')) {\n        // https://tc39.github.io/proposal-regexp-named-groups/#sec-regexpbuiltinexec\n        match.groups = (0, _create[\"default\"])(null);\n        groupsObject = match.groups;\n      } // Skip index 0\n\n\n      for (var i = 1; i < match.length; ++i) {\n        var name = this[REGEX_DATA].captureNames[i - 1];\n\n        if (name) {\n          groupsObject[name] = match[i];\n        }\n      } // Preserve any existing `groups` obj that came from native ES2018 named capture\n\n    } else if (!match.groups && XRegExp.isInstalled('namespacing')) {\n      match.groups = undefined;\n    } // Fix browsers that increment `lastIndex` after zero-length matches\n\n\n    if (this.global && !match[0].length && this.lastIndex > match.index) {\n      this.lastIndex = match.index;\n    }\n  }\n\n  if (!this.global) {\n    // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\n    this.lastIndex = origLastIndex;\n  }\n\n  return match;\n};\n/**\n * Fixes browser bugs in the native `RegExp.prototype.test`.\n *\n * @memberOf RegExp\n * @param {String} str String to search.\n * @returns {boolean} Whether the regex matched the provided value.\n */\n\n\nfixed.test = function (str) {\n  // Do this the easy way :-)\n  return !!fixed.exec.call(this, str);\n};\n/**\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\n * bugs in the native `String.prototype.match`.\n *\n * @memberOf String\n * @param {RegExp|*} regex Regex to search with. If not a regex object, it is passed to `RegExp`.\n * @returns {Array} If `regex` uses flag g, an array of match strings or `null`. Without flag g,\n *   the result of calling `regex.exec(this)`.\n */\n\n\nfixed.match = function (regex) {\n  if (!XRegExp.isRegExp(regex)) {\n    // Use the native `RegExp` rather than `XRegExp`\n    regex = new RegExp(regex);\n  } else if (regex.global) {\n    var result = String.prototype.match.apply(this, arguments); // Fixes IE bug\n\n    regex.lastIndex = 0;\n    return result;\n  }\n\n  return fixed.exec.call(regex, nullThrows(this));\n};\n/**\n * Adds support for `${n}` (or `$<n>`) tokens for named and numbered backreferences in replacement\n * text, and provides named backreferences to replacement functions as `arguments[0].name`. Also\n * fixes browser bugs in replacement text syntax when performing a replacement using a nonregex\n * search value, and the value of a replacement regex's `lastIndex` property during replacement\n * iterations and upon completion. Note that this doesn't support SpiderMonkey's proprietary third\n * (`flags`) argument. Use via `XRegExp.replace`.\n *\n * @memberOf String\n * @param {RegExp|String} search Search pattern to be replaced.\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\n * @returns {string} New string with one or all matches replaced.\n */\n\n\nfixed.replace = function (search, replacement) {\n  var isRegex = XRegExp.isRegExp(search);\n  var origLastIndex;\n  var captureNames;\n  var result;\n\n  if (isRegex) {\n    if (search[REGEX_DATA]) {\n      captureNames = search[REGEX_DATA].captureNames;\n    } // Only needed if `search` is nonglobal\n\n\n    origLastIndex = search.lastIndex;\n  } else {\n    search += ''; // Type-convert\n  } // Don't use `typeof`; some older browsers return 'function' for regex objects\n\n\n  if (isType(replacement, 'Function')) {\n    // Stringifying `this` fixes a bug in IE < 9 where the last argument in replacement\n    // functions isn't type-converted to a string\n    result = String(this).replace(search, function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (captureNames) {\n        var groupsObject;\n\n        if (XRegExp.isInstalled('namespacing')) {\n          // https://tc39.github.io/proposal-regexp-named-groups/#sec-regexpbuiltinexec\n          groupsObject = (0, _create[\"default\"])(null);\n          args.push(groupsObject);\n        } else {\n          // Change the `args[0]` string primitive to a `String` object that can store\n          // properties. This really does need to use `String` as a constructor\n          args[0] = new String(args[0]);\n          groupsObject = args[0];\n        } // Store named backreferences\n\n\n        for (var i = 0; i < captureNames.length; ++i) {\n          if (captureNames[i]) {\n            groupsObject[captureNames[i]] = args[i + 1];\n          }\n        }\n      } // ES6 specs the context for replacement functions as `undefined`\n\n\n      return replacement.apply(void 0, args);\n    });\n  } else {\n    // Ensure that the last value of `args` will be a string when given nonstring `this`,\n    // while still throwing on null or undefined context\n    result = String(nullThrows(this)).replace(search, function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return String(replacement).replace(replacementToken, replacer);\n\n      function replacer($0, bracketed, angled, dollarToken) {\n        bracketed = bracketed || angled; // ES2018 added a new trailing `groups` arg that's passed to replacement functions\n        // when the search regex uses native named capture\n\n        var numNonCaptureArgs = isType(args[args.length - 1], 'Object') ? 4 : 3;\n        var numCaptures = args.length - numNonCaptureArgs; // Handle named or numbered backreference with curly or angled braces: ${n}, $<n>\n\n        if (bracketed) {\n          // Handle backreference to numbered capture, if `bracketed` is an integer. Use\n          // `0` for the entire match. Any number of leading zeros may be used.\n          if (/^\\d+$/.test(bracketed)) {\n            // Type-convert and drop leading zeros\n            var _n = +bracketed;\n\n            if (_n <= numCaptures) {\n              return args[_n] || '';\n            }\n          } // Handle backreference to named capture. If the name does not refer to an\n          // existing capturing group, it's an error. Also handles the error for numbered\n          // backference that does not refer to an existing group.\n          // Using `indexOf` since having groups with the same name is already an error,\n          // otherwise would need `lastIndexOf`.\n\n\n          var n = captureNames ? (0, _indexOf[\"default\"])(captureNames).call(captureNames, bracketed) : -1;\n\n          if (n < 0) {\n            throw new SyntaxError(\"Backreference to undefined group \".concat($0));\n          }\n\n          return args[n + 1] || '';\n        } // Handle `$`-prefixed variable\n        // Handle space/blank first because type conversion with `+` drops space padding\n        // and converts spaces and empty strings to `0`\n\n\n        if (dollarToken === '' || dollarToken === ' ') {\n          throw new SyntaxError(\"Invalid token \".concat($0));\n        }\n\n        if (dollarToken === '&' || +dollarToken === 0) {\n          // $&, $0 (not followed by 1-9), $00\n          return args[0];\n        }\n\n        if (dollarToken === '$') {\n          // $$\n          return '$';\n        }\n\n        if (dollarToken === '`') {\n          var _context4;\n\n          // $` (left context)\n          return (0, _slice[\"default\"])(_context4 = args[args.length - 1]).call(_context4, 0, args[args.length - 2]);\n        }\n\n        if (dollarToken === \"'\") {\n          var _context5;\n\n          // $' (right context)\n          return (0, _slice[\"default\"])(_context5 = args[args.length - 1]).call(_context5, args[args.length - 2] + args[0].length);\n        } // Handle numbered backreference without braces\n        // Type-convert and drop leading zero\n\n\n        dollarToken = +dollarToken; // XRegExp behavior for `$n` and `$nn`:\n        // - Backrefs end after 1 or 2 digits. Use `${..}` or `$<..>` for more digits.\n        // - `$1` is an error if no capturing groups.\n        // - `$10` is an error if less than 10 capturing groups. Use `${1}0` or `$<1>0`\n        //   instead.\n        // - `$01` is `$1` if at least one capturing group, else it's an error.\n        // - `$0` (not followed by 1-9) and `$00` are the entire match.\n        // Native behavior, for comparison:\n        // - Backrefs end after 1 or 2 digits. Cannot reference capturing group 100+.\n        // - `$1` is a literal `$1` if no capturing groups.\n        // - `$10` is `$1` followed by a literal `0` if less than 10 capturing groups.\n        // - `$01` is `$1` if at least one capturing group, else it's a literal `$01`.\n        // - `$0` is a literal `$0`.\n\n        if (!isNaN(dollarToken)) {\n          if (dollarToken > numCaptures) {\n            throw new SyntaxError(\"Backreference to undefined group \".concat($0));\n          }\n\n          return args[dollarToken] || '';\n        } // `$` followed by an unsupported char is an error, unlike native JS\n\n\n        throw new SyntaxError(\"Invalid token \".concat($0));\n      }\n    });\n  }\n\n  if (isRegex) {\n    if (search.global) {\n      // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\n      search.lastIndex = 0;\n    } else {\n      // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\n      search.lastIndex = origLastIndex;\n    }\n  }\n\n  return result;\n};\n/**\n * Fixes browser bugs in the native `String.prototype.split`. Use via `XRegExp.split`.\n *\n * @memberOf String\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {!Array} Array of substrings.\n */\n\n\nfixed.split = function (separator, limit) {\n  if (!XRegExp.isRegExp(separator)) {\n    // Browsers handle nonregex split correctly, so use the faster native method\n    return String.prototype.split.apply(this, arguments);\n  }\n\n  var str = String(this);\n  var output = [];\n  var origLastIndex = separator.lastIndex;\n  var lastLastIndex = 0;\n  var lastLength; // Values for `limit`, per the spec:\n  // If undefined: pow(2,32) - 1\n  // If 0, Infinity, or NaN: 0\n  // If positive number: limit = floor(limit); if (limit >= pow(2,32)) limit -= pow(2,32);\n  // If negative number: pow(2,32) - floor(abs(limit))\n  // If other: Type-convert, then use the above rules\n  // This line fails in very strange ways for some values of `limit` in Opera 10.5-10.63, unless\n  // Opera Dragonfly is open (go figure). It works in at least Opera 9.5-10.1 and 11+\n\n  limit = (limit === undefined ? -1 : limit) >>> 0;\n  (0, _forEach[\"default\"])(XRegExp).call(XRegExp, str, separator, function (match) {\n    // This condition is not the same as `if (match[0].length)`\n    if (match.index + match[0].length > lastLastIndex) {\n      output.push((0, _slice[\"default\"])(str).call(str, lastLastIndex, match.index));\n\n      if (match.length > 1 && match.index < str.length) {\n        Array.prototype.push.apply(output, (0, _slice[\"default\"])(match).call(match, 1));\n      }\n\n      lastLength = match[0].length;\n      lastLastIndex = match.index + lastLength;\n    }\n  });\n\n  if (lastLastIndex === str.length) {\n    if (!separator.test('') || lastLength) {\n      output.push('');\n    }\n  } else {\n    output.push((0, _slice[\"default\"])(str).call(str, lastLastIndex));\n  }\n\n  separator.lastIndex = origLastIndex;\n  return output.length > limit ? (0, _slice[\"default\"])(output).call(output, 0, limit) : output;\n}; // ==--------------------------==\n// Built-in syntax/flag tokens\n// ==--------------------------==\n\n/*\n * Letter escapes that natively match literal characters: `\\a`, `\\A`, etc. These should be\n * SyntaxErrors but are allowed in web reality. XRegExp makes them errors for cross-browser\n * consistency and to reserve their syntax, but lets them be superseded by addons.\n */\n\n\nXRegExp.addToken(/\\\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|x(?![\\dA-Fa-f]{2}))/, function (match, scope) {\n  // \\B is allowed in default scope only\n  if (match[1] === 'B' && scope === defaultScope) {\n    return match[0];\n  }\n\n  throw new SyntaxError(\"Invalid escape \".concat(match[0]));\n}, {\n  scope: 'all',\n  leadChar: '\\\\'\n});\n/*\n * Unicode code point escape with curly braces: `\\u{N..}`. `N..` is any one or more digit\n * hexadecimal number from 0-10FFFF, and can include leading zeros. Requires the native ES6 `u` flag\n * to support code points greater than U+FFFF. Avoids converting code points above U+FFFF to\n * surrogate pairs (which could be done without flag `u`), since that could lead to broken behavior\n * if you follow a `\\u{N..}` token that references a code point above U+FFFF with a quantifier, or\n * if you use the same in a character class.\n */\n\nXRegExp.addToken(/\\\\u{([\\dA-Fa-f]+)}/, function (match, scope, flags) {\n  var code = dec(match[1]);\n\n  if (code > 0x10FFFF) {\n    throw new SyntaxError(\"Invalid Unicode code point \".concat(match[0]));\n  }\n\n  if (code <= 0xFFFF) {\n    // Converting to \\uNNNN avoids needing to escape the literal character and keep it\n    // separate from preceding tokens\n    return \"\\\\u\".concat(pad4(hex(code)));\n  } // If `code` is between 0xFFFF and 0x10FFFF, require and defer to native handling\n\n\n  if (hasNativeU && (0, _indexOf[\"default\"])(flags).call(flags, 'u') !== -1) {\n    return match[0];\n  }\n\n  throw new SyntaxError('Cannot use Unicode code point above \\\\u{FFFF} without flag u');\n}, {\n  scope: 'all',\n  leadChar: '\\\\'\n});\n/*\n * Comment pattern: `(?# )`. Inline comments are an alternative to the line comments allowed in\n * free-spacing mode (flag x).\n */\n\nXRegExp.addToken(/\\(\\?#[^)]*\\)/, getContextualTokenSeparator, {\n  leadChar: '('\n});\n/*\n * Whitespace and line comments, in free-spacing mode (aka extended mode, flag x) only.\n */\n\nXRegExp.addToken(/\\s+|#[^\\n]*\\n?/, getContextualTokenSeparator, {\n  flag: 'x'\n});\n/*\n * Dot, in dotAll mode (aka singleline mode, flag s) only.\n */\n\nif (!hasNativeS) {\n  XRegExp.addToken(/\\./, function () {\n    return '[\\\\s\\\\S]';\n  }, {\n    flag: 's',\n    leadChar: '.'\n  });\n}\n/*\n * Named backreference: `\\k<name>`. Backreference names can use RegExpIdentifierName characters\n * only. Also allows numbered backreferences as `\\k<n>`.\n */\n\n\nXRegExp.addToken(/\\\\k<([^>]+)>/, function (match) {\n  var _context6, _context7;\n\n  // Groups with the same name is an error, else would need `lastIndexOf`\n  var index = isNaN(match[1]) ? (0, _indexOf[\"default\"])(_context6 = this.captureNames).call(_context6, match[1]) + 1 : +match[1];\n  var endIndex = match.index + match[0].length;\n\n  if (!index || index > this.captureNames.length) {\n    throw new SyntaxError(\"Backreference to undefined group \".concat(match[0]));\n  } // Keep backreferences separate from subsequent literal numbers. This avoids e.g.\n  // inadvertedly changing `(?<n>)\\k<n>1` to `()\\11`.\n\n\n  return (0, _concat[\"default\"])(_context7 = \"\\\\\".concat(index)).call(_context7, endIndex === match.input.length || isNaN(match.input[endIndex]) ? '' : '(?:)');\n}, {\n  leadChar: '\\\\'\n});\n/*\n * Numbered backreference or octal, plus any following digits: `\\0`, `\\11`, etc. Octals except `\\0`\n * not followed by 0-9 and backreferences to unopened capture groups throw an error. Other matches\n * are returned unaltered. IE < 9 doesn't support backreferences above `\\99` in regex syntax.\n */\n\nXRegExp.addToken(/\\\\(\\d+)/, function (match, scope) {\n  if (!(scope === defaultScope && /^[1-9]/.test(match[1]) && +match[1] <= this.captureNames.length) && match[1] !== '0') {\n    throw new SyntaxError(\"Cannot use octal escape or backreference to undefined group \".concat(match[0]));\n  }\n\n  return match[0];\n}, {\n  scope: 'all',\n  leadChar: '\\\\'\n});\n/*\n * Named capturing group; match the opening delimiter only: `(?<name>`. Capture names can use the\n * RegExpIdentifierName characters only. Names can't be integers. Supports Python-style\n * `(?P<name>` as an alternate syntax to avoid issues in some older versions of Opera which natively\n * supported the Python-style syntax. Otherwise, XRegExp might treat numbered backreferences to\n * Python-style named capture as octals.\n */\n\nXRegExp.addToken(/\\(\\?P?<((?:[\\$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDF70-\\uDF81\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE70-\\uDEBE\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])(?:[\\$0-9A-Z_a-z\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u07FD\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u0898-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3C-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C5D\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1715\\u171F-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u180F-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1ABF-\\u1ACE\\u1B00-\\u1B4C\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CD0-\\u1CD2\\u1CD4-\\u1CFA\\u1D00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA827\\uA82C\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD27\\uDD30-\\uDD39\\uDE80-\\uDEA9\\uDEAB\\uDEAC\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF50\\uDF70-\\uDF85\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC75\\uDC7F-\\uDCBA\\uDCC2\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD44-\\uDD47\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDC9-\\uDDCC\\uDDCE-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3B-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC5E-\\uDC61\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF39\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC3A\\uDCA0-\\uDCE9\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD35\\uDD37\\uDD38\\uDD3B-\\uDD43\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE99\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF6\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3\\uDFE4\\uDFF0\\uDFF1]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD833[\\uDF00-\\uDF2D\\uDF30-\\uDF46]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAE\\uDEC0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A]|\\uDB40[\\uDD00-\\uDDEF])*)>/, function (match) {\n  var _context8;\n\n  if (!XRegExp.isInstalled('namespacing') && (match[1] === 'length' || match[1] === '__proto__')) {\n    throw new SyntaxError(\"Cannot use reserved word as capture name \".concat(match[0]));\n  }\n\n  if ((0, _indexOf[\"default\"])(_context8 = this.captureNames).call(_context8, match[1]) !== -1) {\n    throw new SyntaxError(\"Cannot use same name for multiple groups \".concat(match[0]));\n  }\n\n  this.captureNames.push(match[1]);\n  this.hasNamedCapture = true;\n  return '(';\n}, {\n  leadChar: '('\n});\n/*\n * Capturing group; match the opening parenthesis only. Required for support of named capturing\n * groups. Also adds named capture only mode (flag n).\n */\n\nXRegExp.addToken(/\\((?!\\?)/, function (match, scope, flags) {\n  if ((0, _indexOf[\"default\"])(flags).call(flags, 'n') !== -1) {\n    return '(?:';\n  }\n\n  this.captureNames.push(null);\n  return '(';\n}, {\n  optionalFlags: 'n',\n  leadChar: '('\n});\nvar _default = XRegExp;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;", "var aCallable = require('../internals/a-callable');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\nvar $TypeError = TypeError;\n\n// `Array.prototype.{ reduce, reduceRight }` methods implementation\nvar createMethod = function (IS_RIGHT) {\n  return function (that, callbackfn, argumentsLength, memo) {\n    aCallable(callbackfn);\n    var O = toObject(that);\n    var self = IndexedObject(O);\n    var length = lengthOfArrayLike(O);\n    var index = IS_RIGHT ? length - 1 : 0;\n    var i = IS_RIGHT ? -1 : 1;\n    if (argumentsLength < 2) while (true) {\n      if (index in self) {\n        memo = self[index];\n        index += i;\n        break;\n      }\n      index += i;\n      if (IS_RIGHT ? index < 0 : length <= index) {\n        throw $TypeError('Reduce of empty array with no initial value');\n      }\n    }\n    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n      memo = callbackfn(memo, self[index], index, O);\n    }\n    return memo;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.reduce` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduce\n  left: createMethod(false),\n  // `Array.prototype.reduceRight` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduceright\n  right: createMethod(true)\n};\n", "var classof = require('../internals/classof-raw');\n\nmodule.exports = typeof process != 'undefined' && classof(process) == 'process';\n", "'use strict';\nvar $ = require('../internals/export');\nvar $reduce = require('../internals/array-reduce').left;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar CHROME_VERSION = require('../internals/engine-v8-version');\nvar IS_NODE = require('../internals/engine-is-node');\n\n// Chrome 80-82 has a critical bug\n// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\nvar CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;\nvar FORCED = CHROME_BUG || !arrayMethodIsStrict('reduce');\n\n// `Array.prototype.reduce` method\n// https://tc39.es/ecma262/#sec-array.prototype.reduce\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    var length = arguments.length;\n    return $reduce(this, callbackfn, length, length > 1 ? arguments[1] : undefined);\n  }\n});\n", "require('../../../modules/es.array.reduce');\nvar entryVirtual = require('../../../internals/entry-virtual');\n\nmodule.exports = entryVirtual('Array').reduce;\n", "var isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar method = require('../array/virtual/reduce');\n\nvar ArrayPrototype = Array.prototype;\n\nmodule.exports = function (it) {\n  var own = it.reduce;\n  return it === ArrayPrototype || (isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.reduce) ? method : own;\n};\n", "var parent = require('../../es/instance/reduce');\n\nmodule.exports = parent;\n", "module.exports = require(\"core-js-pure/stable/instance/reduce\");", "'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n", "require('../../../modules/es.array.map');\nvar entryVirtual = require('../../../internals/entry-virtual');\n\nmodule.exports = entryVirtual('Array').map;\n", "var isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar method = require('../array/virtual/map');\n\nvar ArrayPrototype = Array.prototype;\n\nmodule.exports = function (it) {\n  var own = it.map;\n  return it === ArrayPrototype || (isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.map) ? method : own;\n};\n", "var parent = require('../../es/instance/map');\n\nmodule.exports = parent;\n", "module.exports = require(\"core-js-pure/stable/instance/map\");", "\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports[\"default\"] = void 0;\n\nvar _reduce = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/reduce\"));\n\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/map\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _concat = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"));\n\n/*!\n * XRegExp.build 5.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2012-present MIT License\n */\nvar _default = function _default(XRegExp) {\n  var REGEX_DATA = 'xregexp';\n  var subParts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/g;\n  var parts = XRegExp.union([/\\({{([\\w$]+)}}\\)|{{([\\w$]+)}}/, subParts], 'g', {\n    conjunction: 'or'\n  });\n  /**\n   * Strips a leading `^` and trailing unescaped `$`, if both are present.\n   *\n   * @private\n   * @param {String} pattern Pattern to process.\n   * @returns {String} Pattern with edge anchors removed.\n   */\n\n  function deanchor(pattern) {\n    // Allow any number of empty noncapturing groups before/after anchors, because regexes\n    // built/generated by XRegExp sometimes include them\n    var leadingAnchor = /^(?:\\(\\?:\\))*\\^/;\n    var trailingAnchor = /\\$(?:\\(\\?:\\))*$/;\n\n    if (leadingAnchor.test(pattern) && trailingAnchor.test(pattern) && // Ensure that the trailing `$` isn't escaped\n    trailingAnchor.test(pattern.replace(/\\\\[\\s\\S]/g, ''))) {\n      return pattern.replace(leadingAnchor, '').replace(trailingAnchor, '');\n    }\n\n    return pattern;\n  }\n  /**\n   * Converts the provided value to an XRegExp. Native RegExp flags are not preserved.\n   *\n   * @private\n   * @param {String|RegExp} value Value to convert.\n   * @param {Boolean} [addFlagX] Whether to apply the `x` flag in cases when `value` is not\n   *   already a regex generated by XRegExp\n   * @returns {RegExp} XRegExp object with XRegExp syntax applied.\n   */\n\n\n  function asXRegExp(value, addFlagX) {\n    var flags = addFlagX ? 'x' : '';\n    return XRegExp.isRegExp(value) ? value[REGEX_DATA] && value[REGEX_DATA].captureNames ? // Don't recompile, to preserve capture names\n    value : // Recompile as XRegExp\n    XRegExp(value.source, flags) : // Compile string as XRegExp\n    XRegExp(value, flags);\n  }\n\n  function interpolate(substitution) {\n    return substitution instanceof RegExp ? substitution : XRegExp.escape(substitution);\n  }\n\n  function reduceToSubpatternsObject(subpatterns, interpolated, subpatternIndex) {\n    subpatterns[\"subpattern\".concat(subpatternIndex)] = interpolated;\n    return subpatterns;\n  }\n\n  function embedSubpatternAfter(raw, subpatternIndex, rawLiterals) {\n    var hasSubpattern = subpatternIndex < rawLiterals.length - 1;\n    return raw + (hasSubpattern ? \"{{subpattern\".concat(subpatternIndex, \"}}\") : '');\n  }\n  /**\n   * Provides tagged template literals that create regexes with XRegExp syntax and flags. The\n   * provided pattern is handled as a raw string, so backslashes don't need to be escaped.\n   *\n   * Interpolation of strings and regexes shares the features of `XRegExp.build`. Interpolated\n   * patterns are treated as atomic units when quantified, interpolated strings have their special\n   * characters escaped, a leading `^` and trailing unescaped `$` are stripped from interpolated\n   * regexes if both are present, and any backreferences within an interpolated regex are\n   * rewritten to work within the overall pattern.\n   *\n   * @memberOf XRegExp\n   * @param {String} [flags] Any combination of XRegExp flags.\n   * @returns {Function} Handler for template literals that construct regexes with XRegExp syntax.\n   * @example\n   *\n   * XRegExp.tag()`\\b\\w+\\b`.test('word'); // -> true\n   *\n   * const hours = /1[0-2]|0?[1-9]/;\n   * const minutes = /(?<minutes>[0-5][0-9])/;\n   * const time = XRegExp.tag('x')`\\b ${hours} : ${minutes} \\b`;\n   * time.test('10:59'); // -> true\n   * XRegExp.exec('10:59', time).groups.minutes; // -> '59'\n   *\n   * const backref1 = /(a)\\1/;\n   * const backref2 = /(b)\\1/;\n   * XRegExp.tag()`${backref1}${backref2}`.test('aabb'); // -> true\n   */\n\n\n  XRegExp.tag = function (flags) {\n    return function (literals) {\n      var _context, _context2;\n\n      for (var _len = arguments.length, substitutions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        substitutions[_key - 1] = arguments[_key];\n      }\n\n      var subpatterns = (0, _reduce[\"default\"])(_context = (0, _map[\"default\"])(substitutions).call(substitutions, interpolate)).call(_context, reduceToSubpatternsObject, {});\n      var pattern = (0, _map[\"default\"])(_context2 = literals.raw).call(_context2, embedSubpatternAfter).join('');\n      return XRegExp.build(pattern, subpatterns, flags);\n    };\n  };\n  /**\n   * Builds regexes using named subpatterns, for readability and pattern reuse. Backreferences in\n   * the outer pattern and provided subpatterns are automatically renumbered to work correctly.\n   * Native flags used by provided subpatterns are ignored in favor of the `flags` argument.\n   *\n   * @memberOf XRegExp\n   * @param {String} pattern XRegExp pattern using `{{name}}` for embedded subpatterns. Allows\n   *   `({{name}})` as shorthand for `(?<name>{{name}})`. Patterns cannot be embedded within\n   *   character classes.\n   * @param {Object} subs Lookup object for named subpatterns. Values can be strings or regexes. A\n   *   leading `^` and trailing unescaped `$` are stripped from subpatterns, if both are present.\n   * @param {String} [flags] Any combination of XRegExp flags.\n   * @returns {RegExp} Regex with interpolated subpatterns.\n   * @example\n   *\n   * const time = XRegExp.build('(?x)^ {{hours}} ({{minutes}}) $', {\n   *   hours: XRegExp.build('{{h12}} : | {{h24}}', {\n   *     h12: /1[0-2]|0?[1-9]/,\n   *     h24: /2[0-3]|[01][0-9]/\n   *   }, 'x'),\n   *   minutes: /^[0-5][0-9]$/\n   * });\n   * time.test('10:59'); // -> true\n   * XRegExp.exec('10:59', time).groups.minutes; // -> '59'\n   */\n\n\n  XRegExp.build = function (pattern, subs, flags) {\n    flags = flags || ''; // Used with `asXRegExp` calls for `pattern` and subpatterns in `subs`, to work around how\n    // some browsers convert `RegExp('\\n')` to a regex that contains the literal characters `\\`\n    // and `n`. See more details at <https://github.com/slevithan/xregexp/pull/163>.\n\n    var addFlagX = (0, _indexOf[\"default\"])(flags).call(flags, 'x') !== -1;\n    var inlineFlags = /^\\(\\?([\\w$]+)\\)/.exec(pattern); // Add flags within a leading mode modifier to the overall pattern's flags\n\n    if (inlineFlags) {\n      flags = XRegExp._clipDuplicates(flags + inlineFlags[1]);\n    }\n\n    var data = {};\n\n    for (var p in subs) {\n      if (subs.hasOwnProperty(p)) {\n        // Passing to XRegExp enables extended syntax and ensures independent validity,\n        // lest an unescaped `(`, `)`, `[`, or trailing `\\` breaks the `(?:)` wrapper. For\n        // subpatterns provided as native regexes, it dies on octals and adds the property\n        // used to hold extended regex instance data, for simplicity.\n        var sub = asXRegExp(subs[p], addFlagX);\n        data[p] = {\n          // Deanchoring allows embedding independently useful anchored regexes. If you\n          // really need to keep your anchors, double them (i.e., `^^...$$`).\n          pattern: deanchor(sub.source),\n          names: sub[REGEX_DATA].captureNames || []\n        };\n      }\n    } // Passing to XRegExp dies on octals and ensures the outer pattern is independently valid;\n    // helps keep this simple. Named captures will be put back.\n\n\n    var patternAsRegex = asXRegExp(pattern, addFlagX); // 'Caps' is short for 'captures'\n\n    var numCaps = 0;\n    var numPriorCaps;\n    var numOuterCaps = 0;\n    var outerCapsMap = [0];\n    var outerCapNames = patternAsRegex[REGEX_DATA].captureNames || [];\n    var output = patternAsRegex.source.replace(parts, function ($0, $1, $2, $3, $4) {\n      var subName = $1 || $2;\n      var capName;\n      var intro;\n      var localCapIndex; // Named subpattern\n\n      if (subName) {\n        var _context3;\n\n        if (!data.hasOwnProperty(subName)) {\n          throw new ReferenceError(\"Undefined property \".concat($0));\n        } // Named subpattern was wrapped in a capturing group\n\n\n        if ($1) {\n          capName = outerCapNames[numOuterCaps];\n          outerCapsMap[++numOuterCaps] = ++numCaps; // If it's a named group, preserve the name. Otherwise, use the subpattern name\n          // as the capture name\n\n          intro = \"(?<\".concat(capName || subName, \">\");\n        } else {\n          intro = '(?:';\n        }\n\n        numPriorCaps = numCaps;\n        var rewrittenSubpattern = data[subName].pattern.replace(subParts, function (match, paren, backref) {\n          // Capturing group\n          if (paren) {\n            capName = data[subName].names[numCaps - numPriorCaps];\n            ++numCaps; // If the current capture has a name, preserve the name\n\n            if (capName) {\n              return \"(?<\".concat(capName, \">\");\n            } // Backreference\n\n          } else if (backref) {\n            localCapIndex = +backref - 1; // Rewrite the backreference\n\n            return data[subName].names[localCapIndex] ? // Need to preserve the backreference name in case using flag `n`\n            \"\\\\k<\".concat(data[subName].names[localCapIndex], \">\") : \"\\\\\".concat(+backref + numPriorCaps);\n          }\n\n          return match;\n        });\n        return (0, _concat[\"default\"])(_context3 = \"\".concat(intro)).call(_context3, rewrittenSubpattern, \")\");\n      } // Capturing group\n\n\n      if ($3) {\n        capName = outerCapNames[numOuterCaps];\n        outerCapsMap[++numOuterCaps] = ++numCaps; // If the current capture has a name, preserve the name\n\n        if (capName) {\n          return \"(?<\".concat(capName, \">\");\n        } // Backreference\n\n      } else if ($4) {\n        localCapIndex = +$4 - 1; // Rewrite the backreference\n\n        return outerCapNames[localCapIndex] ? // Need to preserve the backreference name in case using flag `n`\n        \"\\\\k<\".concat(outerCapNames[localCapIndex], \">\") : \"\\\\\".concat(outerCapsMap[+$4]);\n      }\n\n      return $0;\n    });\n    return XRegExp(output, flags);\n  };\n};\n\nexports[\"default\"] = _default;\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports[\"default\"] = void 0;\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _concat = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"));\n\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\n\n/*!\n * XRegExp.matchRecursive 5.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2009-present MIT License\n */\nvar _default = function _default(XRegExp) {\n  /**\n   * Returns a match detail object composed of the provided values.\n   *\n   * @private\n   */\n  function row(name, value, start, end) {\n    return {\n      name: name,\n      value: value,\n      start: start,\n      end: end\n    };\n  }\n  /**\n   * Returns an array of match strings between outermost left and right delimiters, or an array of\n   * objects with detailed match parts and position data. By default, an error is thrown if\n   * delimiters are unbalanced within the subject string.\n   *\n   * @memberOf XRegExp\n   * @param {String} str String to search.\n   * @param {String} left Left delimiter as an XRegExp pattern.\n   * @param {String} right Right delimiter as an XRegExp pattern.\n   * @param {String} [flags] Any combination of XRegExp flags, used for the left and right delimiters.\n   * @param {Object} [options] Options object with optional properties:\n   *   - `valueNames` {Array} Providing `valueNames` changes the return value from an array of\n   *     matched strings to an array of objects that provide the value and start/end positions\n   *     for the matched strings as well as the matched delimiters and unmatched string segments.\n   *     To use this extended information mode, provide an array of 4 strings that name the parts\n   *     to be returned:\n   *     1. String segments outside of (before, between, and after) matches.\n   *     2. Matched outermost left delimiters.\n   *     3. Matched text between the outermost left and right delimiters.\n   *     4. Matched outermost right delimiters.\n   *     Taken together, these parts include the entire subject string if used with flag g.\n   *     Use `null` for any of these values to omit unneeded parts from the returned results.\n   *   - `escapeChar` {String} Single char used to escape delimiters within the subject string.\n   *   - `unbalanced` {String} Handling mode for unbalanced delimiters. Options are:\n   *     - 'error' - throw (default)\n   *     - 'skip' - unbalanced delimiters are treated as part of the text between delimiters, and\n   *       searches continue at the end of the unbalanced delimiter.\n   *     - 'skip-lazy' - unbalanced delimiters are treated as part of the text between delimiters,\n   *       and searches continue one character after the start of the unbalanced delimiter.\n   * @returns {Array} Array of matches, or an empty array.\n   * @example\n   *\n   * // Basic usage\n   * const str1 = '(t((e))s)t()(ing)';\n   * XRegExp.matchRecursive(str1, '\\\\(', '\\\\)', 'g');\n   * // -> ['t((e))s', '', 'ing']\n   *\n   * // Extended information mode with valueNames\n   * const str2 = 'Here is <div> <div>an</div></div> example';\n   * XRegExp.matchRecursive(str2, '<div\\\\s*>', '</div>', 'gi', {\n   *   valueNames: ['between', 'left', 'match', 'right']\n   * });\n   * // -> [\n   * // {name: 'between', value: 'Here is ',       start: 0,  end: 8},\n   * // {name: 'left',    value: '<div>',          start: 8,  end: 13},\n   * // {name: 'match',   value: ' <div>an</div>', start: 13, end: 27},\n   * // {name: 'right',   value: '</div>',         start: 27, end: 33},\n   * // {name: 'between', value: ' example',       start: 33, end: 41}\n   * // ]\n   *\n   * // Omitting unneeded parts with null valueNames, and using escapeChar\n   * const str3 = '...{1}.\\\\{{function(x,y){return {y:x}}}';\n   * XRegExp.matchRecursive(str3, '{', '}', 'g', {\n   *   valueNames: ['literal', null, 'value', null],\n   *   escapeChar: '\\\\'\n   * });\n   * // -> [\n   * // {name: 'literal', value: '...',  start: 0, end: 3},\n   * // {name: 'value',   value: '1',    start: 4, end: 5},\n   * // {name: 'literal', value: '.\\\\{', start: 6, end: 9},\n   * // {name: 'value',   value: 'function(x,y){return {y:x}}', start: 10, end: 37}\n   * // ]\n   *\n   * // Sticky mode via flag y\n   * const str4 = '<1><<<2>>><3>4<5>';\n   * XRegExp.matchRecursive(str4, '<', '>', 'gy');\n   * // -> ['1', '<<2>>', '3']\n   *\n   * // Skipping unbalanced delimiters instead of erroring\n   * const str5 = 'Here is <div> <div>an</div> unbalanced example';\n   * XRegExp.matchRecursive(str5, '<div\\\\s*>', '</div>', 'gi', {\n   *     unbalanced: 'skip'\n   * });\n   * // -> ['an']\n   */\n\n\n  XRegExp.matchRecursive = function (str, left, right, flags, options) {\n    flags = flags || '';\n    options = options || {};\n    var global = (0, _indexOf[\"default\"])(flags).call(flags, 'g') !== -1;\n    var sticky = (0, _indexOf[\"default\"])(flags).call(flags, 'y') !== -1; // Flag `y` is handled manually\n\n    var basicFlags = flags.replace(/y/g, '');\n    left = XRegExp(left, basicFlags);\n    right = XRegExp(right, basicFlags);\n    var esc;\n    var _options = options,\n        escapeChar = _options.escapeChar;\n\n    if (escapeChar) {\n      var _context, _context2;\n\n      if (escapeChar.length > 1) {\n        throw new Error('Cannot use more than one escape character');\n      }\n\n      escapeChar = XRegExp.escape(escapeChar); // Example of concatenated `esc` regex:\n      // `escapeChar`: '%'\n      // `left`: '<'\n      // `right`: '>'\n      // Regex is: /(?:%[\\S\\s]|(?:(?!<|>)[^%])+)+/\n\n      esc = new RegExp((0, _concat[\"default\"])(_context = (0, _concat[\"default\"])(_context2 = \"(?:\".concat(escapeChar, \"[\\\\S\\\\s]|(?:(?!\")).call(_context2, // Using `XRegExp.union` safely rewrites backreferences in `left` and `right`.\n      // Intentionally not passing `basicFlags` to `XRegExp.union` since any syntax\n      // transformation resulting from those flags was already applied to `left` and\n      // `right` when they were passed through the XRegExp constructor above.\n      XRegExp.union([left, right], '', {\n        conjunction: 'or'\n      }).source, \")[^\")).call(_context, escapeChar, \"])+)+\"), // Flags `dgy` not needed here\n      flags.replace(XRegExp._hasNativeFlag('s') ? /[^imsu]/g : /[^imu]/g, ''));\n    }\n\n    var openTokens = 0;\n    var delimStart = 0;\n    var delimEnd = 0;\n    var lastOuterEnd = 0;\n    var outerStart;\n    var innerStart;\n    var leftMatch;\n    var rightMatch;\n    var vN = options.valueNames;\n    var output = [];\n\n    while (true) {\n      // If using an escape character, advance to the delimiter's next starting position,\n      // skipping any escaped characters in between\n      if (escapeChar) {\n        delimEnd += (XRegExp.exec(str, esc, delimEnd, 'sticky') || [''])[0].length;\n      }\n\n      leftMatch = XRegExp.exec(str, left, delimEnd);\n      rightMatch = XRegExp.exec(str, right, delimEnd); // Keep the leftmost match only\n\n      if (leftMatch && rightMatch) {\n        if (leftMatch.index <= rightMatch.index) {\n          rightMatch = null;\n        } else {\n          leftMatch = null;\n        }\n      } // Paths (LM: leftMatch, RM: rightMatch, OT: openTokens):\n      // LM | RM | OT | Result\n      // 1  | 0  | 1  | loop\n      // 1  | 0  | 0  | loop\n      // 0  | 1  | 1  | loop\n      // 0  | 1  | 0  | throw\n      // 0  | 0  | 1  | throw\n      // 0  | 0  | 0  | break\n      // The paths above don't include the sticky mode special case. The loop ends after the\n      // first completed match if not `global`.\n\n\n      if (leftMatch || rightMatch) {\n        delimStart = (leftMatch || rightMatch).index;\n        delimEnd = delimStart + (leftMatch || rightMatch)[0].length;\n      } else if (!openTokens) {\n        break;\n      }\n\n      if (sticky && !openTokens && delimStart > lastOuterEnd) {\n        break;\n      }\n\n      if (leftMatch) {\n        if (!openTokens) {\n          outerStart = delimStart;\n          innerStart = delimEnd;\n        }\n\n        openTokens += 1;\n      } else if (rightMatch && openTokens) {\n        openTokens -= 1;\n\n        if (!openTokens) {\n          if (vN) {\n            if (vN[0] && outerStart > lastOuterEnd) {\n              output.push(row(vN[0], (0, _slice[\"default\"])(str).call(str, lastOuterEnd, outerStart), lastOuterEnd, outerStart));\n            }\n\n            if (vN[1]) {\n              output.push(row(vN[1], (0, _slice[\"default\"])(str).call(str, outerStart, innerStart), outerStart, innerStart));\n            }\n\n            if (vN[2]) {\n              output.push(row(vN[2], (0, _slice[\"default\"])(str).call(str, innerStart, delimStart), innerStart, delimStart));\n            }\n\n            if (vN[3]) {\n              output.push(row(vN[3], (0, _slice[\"default\"])(str).call(str, delimStart, delimEnd), delimStart, delimEnd));\n            }\n          } else {\n            output.push((0, _slice[\"default\"])(str).call(str, innerStart, delimStart));\n          }\n\n          lastOuterEnd = delimEnd;\n\n          if (!global) {\n            break;\n          }\n        } // Found unbalanced delimiter\n\n      } else {\n        var unbalanced = options.unbalanced || 'error';\n\n        if (unbalanced === 'skip' || unbalanced === 'skip-lazy') {\n          if (rightMatch) {\n            rightMatch = null; // No `leftMatch` for unbalanced left delimiter because we've reached the string end\n          } else {\n            if (unbalanced === 'skip') {\n              var outerStartDelimLength = XRegExp.exec(str, left, outerStart, 'sticky')[0].length;\n              delimEnd = outerStart + (outerStartDelimLength || 1);\n            } else {\n              delimEnd = outerStart + 1;\n            }\n\n            openTokens = 0;\n          }\n        } else if (unbalanced === 'error') {\n          var _context3;\n\n          var delimSide = rightMatch ? 'right' : 'left';\n          var errorPos = rightMatch ? delimStart : outerStart;\n          throw new Error((0, _concat[\"default\"])(_context3 = \"Unbalanced \".concat(delimSide, \" delimiter found in string at position \")).call(_context3, errorPos));\n        } else {\n          throw new Error(\"Unsupported value for unbalanced: \".concat(unbalanced));\n        }\n      } // If the delimiter matched an empty string, avoid an infinite loop\n\n\n      if (delimStart === delimEnd) {\n        delimEnd += 1;\n      }\n    }\n\n    if (global && output.length > 0 && !sticky && vN && vN[0] && str.length > lastOuterEnd) {\n      output.push(row(vN[0], (0, _slice[\"default\"])(str).call(str, lastOuterEnd), lastOuterEnd, str.length));\n    }\n\n    return output;\n  };\n};\n\nexports[\"default\"] = _default;\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _sliceInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\n\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js-stable/array/from\");\n\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\n\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\n\nvar _Array$isArray = require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/slicedToArray\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _concat = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"]; if (!it) { if (_Array$isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { var _context4; if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = _sliceInstanceProperty(_context4 = Object.prototype.toString.call(o)).call(_context4, 8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return _Array$from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*!\n * XRegExp Unicode Base 5.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2008-present MIT License\n */\nvar _default = function _default(XRegExp) {\n  /**\n   * Adds base support for Unicode matching:\n   * - Adds syntax `\\p{..}` for matching Unicode tokens. Tokens can be inverted using `\\P{..}` or\n   *   `\\p{^..}`. Token names ignore case, spaces, hyphens, and underscores. You can omit the\n   *   braces for token names that are a single letter (e.g. `\\pL` or `PL`).\n   * - Adds flag A (astral), which enables 21-bit Unicode support.\n   * - Adds the `XRegExp.addUnicodeData` method used by other addons to provide character data.\n   *\n   * Unicode Base relies on externally provided Unicode character data. Official addons are\n   * available to provide data for Unicode categories, scripts, and properties.\n   *\n   * @requires XRegExp\n   */\n  // ==--------------------------==\n  // Private stuff\n  // ==--------------------------==\n  // Storage for Unicode data\n  var unicode = {};\n  var unicodeTypes = {}; // Reuse utils\n\n  var dec = XRegExp._dec;\n  var hex = XRegExp._hex;\n  var pad4 = XRegExp._pad4; // Generates a token lookup name: lowercase, with hyphens, spaces, and underscores removed\n\n  function normalize(name) {\n    return name.replace(/[- _]+/g, '').toLowerCase();\n  } // Gets the decimal code of a literal code unit, \\xHH, \\uHHHH, or a backslash-escaped literal\n\n\n  function charCode(chr) {\n    var esc = /^\\\\[xu](.+)/.exec(chr);\n    return esc ? dec(esc[1]) : chr.charCodeAt(chr[0] === '\\\\' ? 1 : 0);\n  } // Inverts a list of ordered BMP characters and ranges\n\n\n  function invertBmp(range) {\n    var output = '';\n    var lastEnd = -1;\n    (0, _forEach[\"default\"])(XRegExp).call(XRegExp, range, /(\\\\x..|\\\\u....|\\\\?[\\s\\S])(?:-(\\\\x..|\\\\u....|\\\\?[\\s\\S]))?/, function (m) {\n      var start = charCode(m[1]);\n\n      if (start > lastEnd + 1) {\n        output += \"\\\\u\".concat(pad4(hex(lastEnd + 1)));\n\n        if (start > lastEnd + 2) {\n          output += \"-\\\\u\".concat(pad4(hex(start - 1)));\n        }\n      }\n\n      lastEnd = charCode(m[2] || m[1]);\n    });\n\n    if (lastEnd < 0xFFFF) {\n      output += \"\\\\u\".concat(pad4(hex(lastEnd + 1)));\n\n      if (lastEnd < 0xFFFE) {\n        output += '-\\\\uFFFF';\n      }\n    }\n\n    return output;\n  } // Generates an inverted BMP range on first use\n\n\n  function cacheInvertedBmp(slug) {\n    var prop = 'b!';\n    return unicode[slug][prop] || (unicode[slug][prop] = invertBmp(unicode[slug].bmp));\n  } // Combines and optionally negates BMP and astral data\n\n\n  function buildAstral(slug, isNegated) {\n    var item = unicode[slug];\n    var combined = '';\n\n    if (item.bmp && !item.isBmpLast) {\n      var _context;\n\n      combined = (0, _concat[\"default\"])(_context = \"[\".concat(item.bmp, \"]\")).call(_context, item.astral ? '|' : '');\n    }\n\n    if (item.astral) {\n      combined += item.astral;\n    }\n\n    if (item.isBmpLast && item.bmp) {\n      var _context2;\n\n      combined += (0, _concat[\"default\"])(_context2 = \"\".concat(item.astral ? '|' : '', \"[\")).call(_context2, item.bmp, \"]\");\n    } // Astral Unicode tokens always match a code point, never a code unit\n\n\n    return isNegated ? \"(?:(?!\".concat(combined, \")(?:[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\0-\\uFFFF]))\") : \"(?:\".concat(combined, \")\");\n  } // Builds a complete astral pattern on first use\n\n\n  function cacheAstral(slug, isNegated) {\n    var prop = isNegated ? 'a!' : 'a=';\n    return unicode[slug][prop] || (unicode[slug][prop] = buildAstral(slug, isNegated));\n  } // ==--------------------------==\n  // Core functionality\n  // ==--------------------------==\n\n  /*\n   * Add astral mode (flag A) and Unicode token syntax: `\\p{..}`, `\\P{..}`, `\\p{^..}`, `\\pC`.\n   */\n\n\n  XRegExp.addToken( // Use `*` instead of `+` to avoid capturing `^` as the token name in `\\p{^}`\n  /\\\\([pP])(?:{(\\^?)(?:(\\w+)=)?([^}]*)}|([A-Za-z]))/, function (match, scope, flags) {\n    var ERR_DOUBLE_NEG = 'Invalid double negation ';\n    var ERR_UNKNOWN_NAME = 'Unknown Unicode token ';\n    var ERR_UNKNOWN_REF = 'Unicode token missing data ';\n    var ERR_ASTRAL_ONLY = 'Astral mode required for Unicode token ';\n    var ERR_ASTRAL_IN_CLASS = 'Astral mode does not support Unicode tokens within character classes';\n\n    var _match = (0, _slicedToArray2[\"default\"])(match, 6),\n        fullToken = _match[0],\n        pPrefix = _match[1],\n        caretNegation = _match[2],\n        typePrefix = _match[3],\n        tokenName = _match[4],\n        tokenSingleCharName = _match[5]; // Negated via \\P{..} or \\p{^..}\n\n\n    var isNegated = pPrefix === 'P' || !!caretNegation; // Switch from BMP (0-FFFF) to astral (0-10FFFF) mode via flag A\n\n    var isAstralMode = (0, _indexOf[\"default\"])(flags).call(flags, 'A') !== -1; // Token lookup name. Check `tokenSingleCharName` first to avoid passing `undefined`\n    // via `\\p{}`\n\n    var slug = normalize(tokenSingleCharName || tokenName); // Token data object\n\n    var item = unicode[slug];\n\n    if (pPrefix === 'P' && caretNegation) {\n      throw new SyntaxError(ERR_DOUBLE_NEG + fullToken);\n    }\n\n    if (!unicode.hasOwnProperty(slug)) {\n      throw new SyntaxError(ERR_UNKNOWN_NAME + fullToken);\n    }\n\n    if (typePrefix) {\n      if (!(unicodeTypes[typePrefix] && unicodeTypes[typePrefix][slug])) {\n        throw new SyntaxError(ERR_UNKNOWN_NAME + fullToken);\n      }\n    } // Switch to the negated form of the referenced Unicode token\n\n\n    if (item.inverseOf) {\n      slug = normalize(item.inverseOf);\n\n      if (!unicode.hasOwnProperty(slug)) {\n        var _context3;\n\n        throw new ReferenceError((0, _concat[\"default\"])(_context3 = \"\".concat(ERR_UNKNOWN_REF + fullToken, \" -> \")).call(_context3, item.inverseOf));\n      }\n\n      item = unicode[slug];\n      isNegated = !isNegated;\n    }\n\n    if (!(item.bmp || isAstralMode)) {\n      throw new SyntaxError(ERR_ASTRAL_ONLY + fullToken);\n    }\n\n    if (isAstralMode) {\n      if (scope === 'class') {\n        throw new SyntaxError(ERR_ASTRAL_IN_CLASS);\n      }\n\n      return cacheAstral(slug, isNegated);\n    }\n\n    return scope === 'class' ? isNegated ? cacheInvertedBmp(slug) : item.bmp : \"\".concat((isNegated ? '[^' : '[') + item.bmp, \"]\");\n  }, {\n    scope: 'all',\n    optionalFlags: 'A',\n    leadChar: '\\\\'\n  });\n  /**\n   * Adds to the list of Unicode tokens that XRegExp regexes can match via `\\p` or `\\P`.\n   *\n   * @memberOf XRegExp\n   * @param {Array} data Objects with named character ranges. Each object may have properties\n   *   `name`, `alias`, `isBmpLast`, `inverseOf`, `bmp`, and `astral`. All but `name` are\n   *   optional, although one of `bmp` or `astral` is required (unless `inverseOf` is set). If\n   *   `astral` is absent, the `bmp` data is used for BMP and astral modes. If `bmp` is absent,\n   *   the name errors in BMP mode but works in astral mode. If both `bmp` and `astral` are\n   *   provided, the `bmp` data only is used in BMP mode, and the combination of `bmp` and\n   *   `astral` data is used in astral mode. `isBmpLast` is needed when a token matches orphan\n   *   high surrogates *and* uses surrogate pairs to match astral code points. The `bmp` and\n   *   `astral` data should be a combination of literal characters and `\\xHH` or `\\uHHHH` escape\n   *   sequences, with hyphens to create ranges. Any regex metacharacters in the data should be\n   *   escaped, apart from range-creating hyphens. The `astral` data can additionally use\n   *   character classes and alternation, and should use surrogate pairs to represent astral code\n   *   points. `inverseOf` can be used to avoid duplicating character data if a Unicode token is\n   *   defined as the exact inverse of another token.\n   * @param {String} [typePrefix] Enables optionally using this type as a prefix for all of the\n   *   provided Unicode tokens, e.g. if given `'Type'`, then `\\p{TokenName}` can also be written\n   *   as `\\p{Type=TokenName}`.\n   * @example\n   *\n   * // Basic use\n   * XRegExp.addUnicodeData([{\n   *   name: 'XDigit',\n   *   alias: 'Hexadecimal',\n   *   bmp: '0-9A-Fa-f'\n   * }]);\n   * XRegExp('\\\\p{XDigit}:\\\\p{Hexadecimal}+').test('0:3D'); // -> true\n   */\n\n  XRegExp.addUnicodeData = function (data, typePrefix) {\n    var ERR_NO_NAME = 'Unicode token requires name';\n    var ERR_NO_DATA = 'Unicode token has no character data ';\n\n    if (typePrefix) {\n      // Case sensitive to match ES2018\n      unicodeTypes[typePrefix] = {};\n    }\n\n    var _iterator = _createForOfIteratorHelper(data),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n\n        if (!item.name) {\n          throw new Error(ERR_NO_NAME);\n        }\n\n        if (!(item.inverseOf || item.bmp || item.astral)) {\n          throw new Error(ERR_NO_DATA + item.name);\n        }\n\n        var normalizedName = normalize(item.name);\n        unicode[normalizedName] = item;\n\n        if (typePrefix) {\n          unicodeTypes[typePrefix][normalizedName] = true;\n        }\n\n        if (item.alias) {\n          var normalizedAlias = normalize(item.alias);\n          unicode[normalizedAlias] = item;\n\n          if (typePrefix) {\n            unicodeTypes[typePrefix][normalizedAlias] = true;\n          }\n        }\n      } // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and\n      // flags might now produce different results\n\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    XRegExp.cache.flush('patterns');\n  };\n  /**\n   * @ignore\n   *\n   * Return a reference to the internal Unicode definition structure for the given Unicode\n   * Property if the given name is a legal Unicode Property for use in XRegExp `\\p` or `\\P` regex\n   * constructs.\n   *\n   * @memberOf XRegExp\n   * @param {String} name Name by which the Unicode Property may be recognized (case-insensitive),\n   *   e.g. `'N'` or `'Number'`. The given name is matched against all registered Unicode\n   *   Properties and Property Aliases.\n   * @returns {Object} Reference to definition structure when the name matches a Unicode Property.\n   *\n   * @note\n   * For more info on Unicode Properties, see also http://unicode.org/reports/tr18/#Categories.\n   *\n   * @note\n   * This method is *not* part of the officially documented API and may change or be removed in\n   * the future. It is meant for userland code that wishes to reuse the (large) internal Unicode\n   * structures set up by XRegExp.\n   */\n\n\n  XRegExp._getUnicodeProperty = function (name) {\n    var slug = normalize(name);\n    return unicode[slug];\n  };\n};\n\nexports[\"default\"] = _default;\nmodule.exports = exports.default;", "module.exports = [\n    {\n        'name': 'C',\n        'alias': 'Other',\n        'isBmpLast': true,\n        'bmp': '\\0-\\x1F\\x7F-\\x9F\\xAD\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F5-\\u0605\\u061C\\u06DD\\u070E\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07FB\\u07FC\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F\\u086B-\\u086F\\u088F-\\u0897\\u08E2\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A77-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A\\u0C3B\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B\\u0C5C\\u0C5E\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C76\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDC\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D50-\\u0D53\\u0D64\\u0D65\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F6\\u13F7\\u13FE\\u13FF\\u169D-\\u169F\\u16F9-\\u16FF\\u1716-\\u171E\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u180E\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE\\u1AAF\\u1ACF-\\u1AFF\\u1B4D-\\u1B4F\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC8-\\u1CCF\\u1CFB-\\u1CFF\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20C1-\\u20CF\\u20F1-\\u20FF\\u218C-\\u218F\\u2427-\\u243F\\u244B-\\u245F\\u2B74\\u2B75\\u2B96\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E5E-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u3130\\u318F\\u31E4-\\u31EF\\u321F\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA6F8-\\uA6FF\\uA7CB-\\uA7CF\\uA7D2\\uA7D4\\uA7DA-\\uA7F1\\uA82D-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C6-\\uA8CD\\uA8DA-\\uA8DF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB6C-\\uAB6F\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC3-\\uFBD2\\uFD90\\uFD91\\uFDC8-\\uFDCE\\uFDD0-\\uFDEF\\uFE1A-\\uFE1F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD-\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFFB\\uFFFE\\uFFFF',\n        'astral': '\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDCFF\\uDD03-\\uDD06\\uDD34-\\uDD36\\uDD8F\\uDD9D-\\uDD9F\\uDDA1-\\uDDCF\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEFC-\\uDEFF\\uDF24-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDFC4-\\uDFC7\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDD6E\\uDD7B\\uDD8B\\uDD93\\uDD96\\uDDA2\\uDDB2\\uDDBA\\uDDBD-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDF7F\\uDF86\\uDFB1\\uDFBB-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56\\uDC9F-\\uDCA6\\uDCB0-\\uDCDF\\uDCF3\\uDCF6-\\uDCFA\\uDD1C-\\uDD1E\\uDD3A-\\uDD3E\\uDD40-\\uDD7F\\uDDB8-\\uDDBB\\uDDD0\\uDDD1\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE49-\\uDE4F\\uDE59-\\uDE5F\\uDEA0-\\uDEBF\\uDEE7-\\uDEEA\\uDEF7-\\uDEFF\\uDF36-\\uDF38\\uDF56\\uDF57\\uDF73-\\uDF77\\uDF92-\\uDF98\\uDF9D-\\uDFA8\\uDFB0-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCF9\\uDD28-\\uDD2F\\uDD3A-\\uDE5F\\uDE7F\\uDEAA\\uDEAE\\uDEAF\\uDEB2-\\uDEFF\\uDF28-\\uDF2F\\uDF5A-\\uDF6F\\uDF8A-\\uDFAF\\uDFCC-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC4E-\\uDC51\\uDC76-\\uDC7E\\uDCBD\\uDCC3-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD48-\\uDD4F\\uDD77-\\uDD7F\\uDDE0\\uDDF5-\\uDDFF\\uDE12\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEAA-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC5C\\uDC62-\\uDC7F\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDDE-\\uDDFF\\uDE45-\\uDE4F\\uDE5A-\\uDE5F\\uDE6D-\\uDE7F\\uDEBA-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF47-\\uDFFF]|\\uD806[\\uDC3C-\\uDC9F\\uDCF3-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD47-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE5-\\uDDFF\\uDE48-\\uDE4F\\uDEA3-\\uDEAF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC46-\\uDC4F\\uDC6D-\\uDC6F\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF9-\\uDFAF\\uDFB1-\\uDFBF\\uDFF2-\\uDFFE]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F\\uDC75-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82A\\uD82D\\uD82E\\uD830-\\uD832\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80B[\\uDC00-\\uDF8F\\uDFF3-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDE6D\\uDEBF\\uDECA-\\uDECF\\uDEEE\\uDEEF\\uDEF6-\\uDEFF\\uDF46-\\uDF4F\\uDF5A\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE9B-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82B[\\uDC00-\\uDFEF\\uDFF4\\uDFFC\\uDFFF]|\\uD82C[\\uDD23-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A\\uDC9B\\uDCA0-\\uDFFF]|\\uD833[\\uDC00-\\uDEFF\\uDF2E\\uDF2F\\uDF47-\\uDF4F\\uDFC4-\\uDFFF]|\\uD834[\\uDCF6-\\uDCFF\\uDD27\\uDD28\\uDD73-\\uDD7A\\uDDEB-\\uDDFF\\uDE46-\\uDEDF\\uDEF4-\\uDEFF\\uDF57-\\uDF5F\\uDF79-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]|\\uD836[\\uDE8C-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD837[\\uDC00-\\uDEFF\\uDF1F-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD50-\\uDE8F\\uDEAF-\\uDEBF\\uDEFA-\\uDEFE\\uDF00-\\uDFFF]|\\uD839[\\uDC00-\\uDFDF\\uDFE7\\uDFEC\\uDFEF\\uDFFF]|\\uD83A[\\uDCC5\\uDCC6\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDD5D\\uDD60-\\uDFFF]|\\uD83B[\\uDC00-\\uDC70\\uDCB5-\\uDD00\\uDD3E-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDEEF\\uDEF2-\\uDFFF]|\\uD83C[\\uDC2C-\\uDC2F\\uDC94-\\uDC9F\\uDCAF\\uDCB0\\uDCC0\\uDCD0\\uDCF6-\\uDCFF\\uDDAE-\\uDDE5\\uDE03-\\uDE0F\\uDE3C-\\uDE3F\\uDE49-\\uDE4F\\uDE52-\\uDE5F\\uDE66-\\uDEFF]|\\uD83D[\\uDED8-\\uDEDC\\uDEED-\\uDEEF\\uDEFD-\\uDEFF\\uDF74-\\uDF7F\\uDFD9-\\uDFDF\\uDFEC-\\uDFEF\\uDFF1-\\uDFFF]|\\uD83E[\\uDC0C-\\uDC0F\\uDC48-\\uDC4F\\uDC5A-\\uDC5F\\uDC88-\\uDC8F\\uDCAE\\uDCAF\\uDCB2-\\uDCFF\\uDE54-\\uDE5F\\uDE6E\\uDE6F\\uDE75-\\uDE77\\uDE7D-\\uDE7F\\uDE87-\\uDE8F\\uDEAD-\\uDEAF\\uDEBB-\\uDEBF\\uDEC6-\\uDECF\\uDEDA-\\uDEDF\\uDEE8-\\uDEEF\\uDEF7-\\uDEFF\\uDF93\\uDFCB-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEE0-\\uDEFF]|\\uD86D[\\uDF39-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]'\n    },\n    {\n        'name': 'Cc',\n        'alias': 'Control',\n        'bmp': '\\0-\\x1F\\x7F-\\x9F'\n    },\n    {\n        'name': 'Cf',\n        'alias': 'Format',\n        'bmp': '\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u0890\\u0891\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB',\n        'astral': '\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC38]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]'\n    },\n    {\n        'name': 'Cn',\n        'alias': 'Unassigned',\n        'bmp': '\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F5-\\u05FF\\u070E\\u074B\\u074C\\u07B2-\\u07BF\\u07FB\\u07FC\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F\\u086B-\\u086F\\u088F\\u0892-\\u0897\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A77-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A\\u0C3B\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B\\u0C5C\\u0C5E\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C76\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDC\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D50-\\u0D53\\u0D64\\u0D65\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F6\\u13F7\\u13FE\\u13FF\\u169D-\\u169F\\u16F9-\\u16FF\\u1716-\\u171E\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE\\u1AAF\\u1ACF-\\u1AFF\\u1B4D-\\u1B4F\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC8-\\u1CCF\\u1CFB-\\u1CFF\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u2065\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20C1-\\u20CF\\u20F1-\\u20FF\\u218C-\\u218F\\u2427-\\u243F\\u244B-\\u245F\\u2B74\\u2B75\\u2B96\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E5E-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u3130\\u318F\\u31E4-\\u31EF\\u321F\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA6F8-\\uA6FF\\uA7CB-\\uA7CF\\uA7D2\\uA7D4\\uA7DA-\\uA7F1\\uA82D-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C6-\\uA8CD\\uA8DA-\\uA8DF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB6C-\\uAB6F\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC3-\\uFBD2\\uFD90\\uFD91\\uFDC8-\\uFDCE\\uFDD0-\\uFDEF\\uFE1A-\\uFE1F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD\\uFEFE\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFF8\\uFFFE\\uFFFF',\n        'astral': '\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDCFF\\uDD03-\\uDD06\\uDD34-\\uDD36\\uDD8F\\uDD9D-\\uDD9F\\uDDA1-\\uDDCF\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEFC-\\uDEFF\\uDF24-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDFC4-\\uDFC7\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDD6E\\uDD7B\\uDD8B\\uDD93\\uDD96\\uDDA2\\uDDB2\\uDDBA\\uDDBD-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDF7F\\uDF86\\uDFB1\\uDFBB-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56\\uDC9F-\\uDCA6\\uDCB0-\\uDCDF\\uDCF3\\uDCF6-\\uDCFA\\uDD1C-\\uDD1E\\uDD3A-\\uDD3E\\uDD40-\\uDD7F\\uDDB8-\\uDDBB\\uDDD0\\uDDD1\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE49-\\uDE4F\\uDE59-\\uDE5F\\uDEA0-\\uDEBF\\uDEE7-\\uDEEA\\uDEF7-\\uDEFF\\uDF36-\\uDF38\\uDF56\\uDF57\\uDF73-\\uDF77\\uDF92-\\uDF98\\uDF9D-\\uDFA8\\uDFB0-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCF9\\uDD28-\\uDD2F\\uDD3A-\\uDE5F\\uDE7F\\uDEAA\\uDEAE\\uDEAF\\uDEB2-\\uDEFF\\uDF28-\\uDF2F\\uDF5A-\\uDF6F\\uDF8A-\\uDFAF\\uDFCC-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC4E-\\uDC51\\uDC76-\\uDC7E\\uDCC3-\\uDCCC\\uDCCE\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD48-\\uDD4F\\uDD77-\\uDD7F\\uDDE0\\uDDF5-\\uDDFF\\uDE12\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEAA-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC5C\\uDC62-\\uDC7F\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDDE-\\uDDFF\\uDE45-\\uDE4F\\uDE5A-\\uDE5F\\uDE6D-\\uDE7F\\uDEBA-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF47-\\uDFFF]|\\uD806[\\uDC3C-\\uDC9F\\uDCF3-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD47-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE5-\\uDDFF\\uDE48-\\uDE4F\\uDEA3-\\uDEAF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC46-\\uDC4F\\uDC6D-\\uDC6F\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF9-\\uDFAF\\uDFB1-\\uDFBF\\uDFF2-\\uDFFE]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F\\uDC75-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82A\\uD82D\\uD82E\\uD830-\\uD832\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDB7F][\\uDC00-\\uDFFF]|\\uD80B[\\uDC00-\\uDF8F\\uDFF3-\\uDFFF]|\\uD80D[\\uDC2F\\uDC39-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDE6D\\uDEBF\\uDECA-\\uDECF\\uDEEE\\uDEEF\\uDEF6-\\uDEFF\\uDF46-\\uDF4F\\uDF5A\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE9B-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82B[\\uDC00-\\uDFEF\\uDFF4\\uDFFC\\uDFFF]|\\uD82C[\\uDD23-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A\\uDC9B\\uDCA4-\\uDFFF]|\\uD833[\\uDC00-\\uDEFF\\uDF2E\\uDF2F\\uDF47-\\uDF4F\\uDFC4-\\uDFFF]|\\uD834[\\uDCF6-\\uDCFF\\uDD27\\uDD28\\uDDEB-\\uDDFF\\uDE46-\\uDEDF\\uDEF4-\\uDEFF\\uDF57-\\uDF5F\\uDF79-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]|\\uD836[\\uDE8C-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD837[\\uDC00-\\uDEFF\\uDF1F-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD50-\\uDE8F\\uDEAF-\\uDEBF\\uDEFA-\\uDEFE\\uDF00-\\uDFFF]|\\uD839[\\uDC00-\\uDFDF\\uDFE7\\uDFEC\\uDFEF\\uDFFF]|\\uD83A[\\uDCC5\\uDCC6\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDD5D\\uDD60-\\uDFFF]|\\uD83B[\\uDC00-\\uDC70\\uDCB5-\\uDD00\\uDD3E-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDEEF\\uDEF2-\\uDFFF]|\\uD83C[\\uDC2C-\\uDC2F\\uDC94-\\uDC9F\\uDCAF\\uDCB0\\uDCC0\\uDCD0\\uDCF6-\\uDCFF\\uDDAE-\\uDDE5\\uDE03-\\uDE0F\\uDE3C-\\uDE3F\\uDE49-\\uDE4F\\uDE52-\\uDE5F\\uDE66-\\uDEFF]|\\uD83D[\\uDED8-\\uDEDC\\uDEED-\\uDEEF\\uDEFD-\\uDEFF\\uDF74-\\uDF7F\\uDFD9-\\uDFDF\\uDFEC-\\uDFEF\\uDFF1-\\uDFFF]|\\uD83E[\\uDC0C-\\uDC0F\\uDC48-\\uDC4F\\uDC5A-\\uDC5F\\uDC88-\\uDC8F\\uDCAE\\uDCAF\\uDCB2-\\uDCFF\\uDE54-\\uDE5F\\uDE6E\\uDE6F\\uDE75-\\uDE77\\uDE7D-\\uDE7F\\uDE87-\\uDE8F\\uDEAD-\\uDEAF\\uDEBB-\\uDEBF\\uDEC6-\\uDECF\\uDEDA-\\uDEDF\\uDEE8-\\uDEEF\\uDEF7-\\uDEFF\\uDF93\\uDFCB-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEE0-\\uDEFF]|\\uD86D[\\uDF39-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00\\uDC02-\\uDC1F\\uDC80-\\uDCFF\\uDDF0-\\uDFFF]|[\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]'\n    },\n    {\n        'name': 'Co',\n        'alias': 'Private_Use',\n        'bmp': '\\uE000-\\uF8FF',\n        'astral': '[\\uDB80-\\uDBBE\\uDBC0-\\uDBFE][\\uDC00-\\uDFFF]|[\\uDBBF\\uDBFF][\\uDC00-\\uDFFD]'\n    },\n    {\n        'name': 'Cs',\n        'alias': 'Surrogate',\n        'bmp': '\\uD800-\\uDFFF'\n    },\n    {\n        'name': 'L',\n        'alias': 'Letter',\n        'bmp': 'A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n        'astral': '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDF70-\\uDF81\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE70-\\uDEBE\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A]'\n    },\n    {\n        'name': 'LC',\n        'alias': 'Cased_Letter',\n        'bmp': 'A-Za-z\\xB5\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u01BA\\u01BC-\\u01BF\\u01C4-\\u0293\\u0295-\\u02AF\\u0370-\\u0373\\u0376\\u0377\\u037B-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0560-\\u0588\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FD-\\u10FF\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2134\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C7B\\u2C7E-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA640-\\uA66D\\uA680-\\uA69B\\uA722-\\uA76F\\uA771-\\uA787\\uA78B-\\uA78E\\uA790-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F5\\uA7F6\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB68\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF21-\\uFF3A\\uFF41-\\uFF5A',\n        'astral': '\\uD801[\\uDC00-\\uDC4F\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC]|\\uD803[\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD806[\\uDCA0-\\uDCDF]|\\uD81B[\\uDE40-\\uDE7F]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD837[\\uDF00-\\uDF09\\uDF0B-\\uDF1E]|\\uD83A[\\uDD00-\\uDD43]'\n    },\n    {\n        'name': 'Ll',\n        'alias': 'Lowercase_Letter',\n        'bmp': 'a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0560-\\u0588\\u10D0-\\u10FA\\u10FD-\\u10FF\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5F\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7AF\\uA7B5\\uA7B7\\uA7B9\\uA7BB\\uA7BD\\uA7BF\\uA7C1\\uA7C3\\uA7C8\\uA7CA\\uA7D1\\uA7D3\\uA7D5\\uA7D7\\uA7D9\\uA7F6\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB68\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A',\n        'astral': '\\uD801[\\uDC28-\\uDC4F\\uDCD8-\\uDCFB\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC]|\\uD803[\\uDCC0-\\uDCF2]|\\uD806[\\uDCC0-\\uDCDF]|\\uD81B[\\uDE60-\\uDE7F]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD837[\\uDF00-\\uDF09\\uDF0B-\\uDF1E]|\\uD83A[\\uDD22-\\uDD43]'\n    },\n    {\n        'name': 'Lm',\n        'alias': 'Modifier_Letter',\n        'bmp': '\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u08C9\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F2-\\uA7F4\\uA7F8\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3\\uAAF4\\uAB5C-\\uAB5F\\uAB69\\uFF70\\uFF9E\\uFF9F',\n        'astral': '\\uD801[\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD81A[\\uDF40-\\uDF43]|\\uD81B[\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD838[\\uDD37-\\uDD3D]|\\uD83A\\uDD4B'\n    },\n    {\n        'name': 'Lo',\n        'alias': 'Other_Letter',\n        'bmp': '\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C8\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E45\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1100-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n        'astral': '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC50-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDD00-\\uDD23\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDF70-\\uDF81\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE70-\\uDEBE\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF4A\\uDF50]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD837\\uDF0A|\\uD838[\\uDD00-\\uDD2C\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A]'\n    },\n    {\n        'name': 'Lt',\n        'alias': 'Titlecase_Letter',\n        'bmp': '\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC'\n    },\n    {\n        'name': 'Lu',\n        'alias': 'Uppercase_Letter',\n        'bmp': 'A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2F\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AE\\uA7B0-\\uA7B4\\uA7B6\\uA7B8\\uA7BA\\uA7BC\\uA7BE\\uA7C0\\uA7C2\\uA7C4-\\uA7C7\\uA7C9\\uA7D0\\uA7D6\\uA7D8\\uA7F5\\uFF21-\\uFF3A',\n        'astral': '\\uD801[\\uDC00-\\uDC27\\uDCB0-\\uDCD3\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95]|\\uD803[\\uDC80-\\uDCB2]|\\uD806[\\uDCA0-\\uDCBF]|\\uD81B[\\uDE40-\\uDE5F]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]|\\uD83A[\\uDD00-\\uDD21]'\n    },\n    {\n        'name': 'M',\n        'alias': 'Mark',\n        'bmp': '\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C04\\u0C3C\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F',\n        'astral': '\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD803[\\uDD24-\\uDD27\\uDEAB\\uDEAC\\uDF46-\\uDF50\\uDF82-\\uDF85]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC70\\uDC73\\uDC74\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDCC2\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD45\\uDD46\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDDC9-\\uDDCC\\uDDCE\\uDDCF\\uDE2C-\\uDE37\\uDE3E\\uDEDF-\\uDEEA\\uDF00-\\uDF03\\uDF3B\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC35-\\uDC46\\uDC5E\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDDDC\\uDDDD\\uDE30-\\uDE40\\uDEAB-\\uDEB7\\uDF1D-\\uDF2B]|\\uD806[\\uDC2C-\\uDC3A\\uDD30-\\uDD35\\uDD37\\uDD38\\uDD3B-\\uDD3E\\uDD40\\uDD42\\uDD43\\uDDD1-\\uDDD7\\uDDDA-\\uDDE0\\uDDE4\\uDE01-\\uDE0A\\uDE33-\\uDE39\\uDE3B-\\uDE3E\\uDE47\\uDE51-\\uDE5B\\uDE8A-\\uDE99]|\\uD807[\\uDC2F-\\uDC36\\uDC38-\\uDC3F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD31-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD45\\uDD47\\uDD8A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD97\\uDEF3-\\uDEF6]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF4F\\uDF51-\\uDF87\\uDF8F-\\uDF92\\uDFE4\\uDFF0\\uDFF1]|\\uD82F[\\uDC9D\\uDC9E]|\\uD833[\\uDF00-\\uDF2D\\uDF30-\\uDF46]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD30-\\uDD36\\uDEAE\\uDEEC-\\uDEEF]|\\uD83A[\\uDCD0-\\uDCD6\\uDD44-\\uDD4A]|\\uDB40[\\uDD00-\\uDDEF]'\n    },\n    {\n        'name': 'Mc',\n        'alias': 'Spacing_Mark',\n        'bmp': '\\u0903\\u093B\\u093E-\\u0940\\u0949-\\u094C\\u094E\\u094F\\u0982\\u0983\\u09BE-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0B02\\u0B03\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0D02\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0F3E\\u0F3F\\u0F7F\\u102B\\u102C\\u1031\\u1038\\u103B\\u103C\\u1056\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u1715\\u1734\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1A19\\u1A1A\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43\\u1B44\\u1B82\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1C24-\\u1C2B\\u1C34\\u1C35\\u1CE1\\u1CF7\\u302E\\u302F\\uA823\\uA824\\uA827\\uA880\\uA881\\uA8B4-\\uA8C3\\uA952\\uA953\\uA983\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9C0\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA4D\\uAA7B\\uAA7D\\uAAEB\\uAAEE\\uAAEF\\uAAF5\\uABE3\\uABE4\\uABE6\\uABE7\\uABE9\\uABEA\\uABEC',\n        'astral': '\\uD804[\\uDC00\\uDC02\\uDC82\\uDCB0-\\uDCB2\\uDCB7\\uDCB8\\uDD2C\\uDD45\\uDD46\\uDD82\\uDDB3-\\uDDB5\\uDDBF\\uDDC0\\uDDCE\\uDE2C-\\uDE2E\\uDE32\\uDE33\\uDE35\\uDEE0-\\uDEE2\\uDF02\\uDF03\\uDF3E\\uDF3F\\uDF41-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63]|\\uD805[\\uDC35-\\uDC37\\uDC40\\uDC41\\uDC45\\uDCB0-\\uDCB2\\uDCB9\\uDCBB-\\uDCBE\\uDCC1\\uDDAF-\\uDDB1\\uDDB8-\\uDDBB\\uDDBE\\uDE30-\\uDE32\\uDE3B\\uDE3C\\uDE3E\\uDEAC\\uDEAE\\uDEAF\\uDEB6\\uDF20\\uDF21\\uDF26]|\\uD806[\\uDC2C-\\uDC2E\\uDC38\\uDD30-\\uDD35\\uDD37\\uDD38\\uDD3D\\uDD40\\uDD42\\uDDD1-\\uDDD3\\uDDDC-\\uDDDF\\uDDE4\\uDE39\\uDE57\\uDE58\\uDE97]|\\uD807[\\uDC2F\\uDC3E\\uDCA9\\uDCB1\\uDCB4\\uDD8A-\\uDD8E\\uDD93\\uDD94\\uDD96\\uDEF5\\uDEF6]|\\uD81B[\\uDF51-\\uDF87\\uDFF0\\uDFF1]|\\uD834[\\uDD65\\uDD66\\uDD6D-\\uDD72]'\n    },\n    {\n        'name': 'Me',\n        'alias': 'Enclosing_Mark',\n        'bmp': '\\u0488\\u0489\\u1ABE\\u20DD-\\u20E0\\u20E2-\\u20E4\\uA670-\\uA672'\n    },\n    {\n        'name': 'Mn',\n        'alias': 'Nonspacing_Mark',\n        'bmp': '\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABD\\u1ABF-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F',\n        'astral': '\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD803[\\uDD24-\\uDD27\\uDEAB\\uDEAC\\uDF46-\\uDF50\\uDF82-\\uDF85]|\\uD804[\\uDC01\\uDC38-\\uDC46\\uDC70\\uDC73\\uDC74\\uDC7F-\\uDC81\\uDCB3-\\uDCB6\\uDCB9\\uDCBA\\uDCC2\\uDD00-\\uDD02\\uDD27-\\uDD2B\\uDD2D-\\uDD34\\uDD73\\uDD80\\uDD81\\uDDB6-\\uDDBE\\uDDC9-\\uDDCC\\uDDCF\\uDE2F-\\uDE31\\uDE34\\uDE36\\uDE37\\uDE3E\\uDEDF\\uDEE3-\\uDEEA\\uDF00\\uDF01\\uDF3B\\uDF3C\\uDF40\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC38-\\uDC3F\\uDC42-\\uDC44\\uDC46\\uDC5E\\uDCB3-\\uDCB8\\uDCBA\\uDCBF\\uDCC0\\uDCC2\\uDCC3\\uDDB2-\\uDDB5\\uDDBC\\uDDBD\\uDDBF\\uDDC0\\uDDDC\\uDDDD\\uDE33-\\uDE3A\\uDE3D\\uDE3F\\uDE40\\uDEAB\\uDEAD\\uDEB0-\\uDEB5\\uDEB7\\uDF1D-\\uDF1F\\uDF22-\\uDF25\\uDF27-\\uDF2B]|\\uD806[\\uDC2F-\\uDC37\\uDC39\\uDC3A\\uDD3B\\uDD3C\\uDD3E\\uDD43\\uDDD4-\\uDDD7\\uDDDA\\uDDDB\\uDDE0\\uDE01-\\uDE0A\\uDE33-\\uDE38\\uDE3B-\\uDE3E\\uDE47\\uDE51-\\uDE56\\uDE59-\\uDE5B\\uDE8A-\\uDE96\\uDE98\\uDE99]|\\uD807[\\uDC30-\\uDC36\\uDC38-\\uDC3D\\uDC3F\\uDC92-\\uDCA7\\uDCAA-\\uDCB0\\uDCB2\\uDCB3\\uDCB5\\uDCB6\\uDD31-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD45\\uDD47\\uDD90\\uDD91\\uDD95\\uDD97\\uDEF3\\uDEF4]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF4F\\uDF8F-\\uDF92\\uDFE4]|\\uD82F[\\uDC9D\\uDC9E]|\\uD833[\\uDF00-\\uDF2D\\uDF30-\\uDF46]|\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD30-\\uDD36\\uDEAE\\uDEEC-\\uDEEF]|\\uD83A[\\uDCD0-\\uDCD6\\uDD44-\\uDD4A]|\\uDB40[\\uDD00-\\uDDEF]'\n    },\n    {\n        'name': 'N',\n        'alias': 'Number',\n        'bmp': '0-9\\xB2\\xB3\\xB9\\xBC-\\xBE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D58-\\u0D5E\\u0D66-\\u0D78\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19',\n        'astral': '\\uD800[\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD801[\\uDCA0-\\uDCA9]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE48\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD803[\\uDCFA-\\uDCFF\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDF1D-\\uDF26\\uDF51-\\uDF54\\uDFC5-\\uDFCB]|\\uD804[\\uDC52-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDDE1-\\uDDF4\\uDEF0-\\uDEF9]|\\uD805[\\uDC50-\\uDC59\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF3B]|\\uD806[\\uDCE0-\\uDCF2\\uDD50-\\uDD59]|\\uD807[\\uDC50-\\uDC6C\\uDD50-\\uDD59\\uDDA0-\\uDDA9\\uDFC0-\\uDFD4]|\\uD809[\\uDC00-\\uDC6E]|\\uD81A[\\uDE60-\\uDE69\\uDEC0-\\uDEC9\\uDF50-\\uDF59\\uDF5B-\\uDF61]|\\uD81B[\\uDE80-\\uDE96]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDFCE-\\uDFFF]|\\uD838[\\uDD40-\\uDD49\\uDEF0-\\uDEF9]|\\uD83A[\\uDCC7-\\uDCCF\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]'\n    },\n    {\n        'name': 'Nd',\n        'alias': 'Decimal_Number',\n        'bmp': '0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19',\n        'astral': '\\uD801[\\uDCA0-\\uDCA9]|\\uD803[\\uDD30-\\uDD39]|\\uD804[\\uDC66-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDEF0-\\uDEF9]|\\uD805[\\uDC50-\\uDC59\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF39]|\\uD806[\\uDCE0-\\uDCE9\\uDD50-\\uDD59]|\\uD807[\\uDC50-\\uDC59\\uDD50-\\uDD59\\uDDA0-\\uDDA9]|\\uD81A[\\uDE60-\\uDE69\\uDEC0-\\uDEC9\\uDF50-\\uDF59]|\\uD835[\\uDFCE-\\uDFFF]|\\uD838[\\uDD40-\\uDD49\\uDEF0-\\uDEF9]|\\uD83A[\\uDD50-\\uDD59]|\\uD83E[\\uDFF0-\\uDFF9]'\n    },\n    {\n        'name': 'Nl',\n        'alias': 'Letter_Number',\n        'bmp': '\\u16EE-\\u16F0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303A\\uA6E6-\\uA6EF',\n        'astral': '\\uD800[\\uDD40-\\uDD74\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD809[\\uDC00-\\uDC6E]'\n    },\n    {\n        'name': 'No',\n        'alias': 'Other_Number',\n        'bmp': '\\xB2\\xB3\\xB9\\xBC-\\xBE\\u09F4-\\u09F9\\u0B72-\\u0B77\\u0BF0-\\u0BF2\\u0C78-\\u0C7E\\u0D58-\\u0D5E\\u0D70-\\u0D78\\u0F2A-\\u0F33\\u1369-\\u137C\\u17F0-\\u17F9\\u19DA\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u215F\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA830-\\uA835',\n        'astral': '\\uD800[\\uDD07-\\uDD33\\uDD75-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE48\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD803[\\uDCFA-\\uDCFF\\uDE60-\\uDE7E\\uDF1D-\\uDF26\\uDF51-\\uDF54\\uDFC5-\\uDFCB]|\\uD804[\\uDC52-\\uDC65\\uDDE1-\\uDDF4]|\\uD805[\\uDF3A\\uDF3B]|\\uD806[\\uDCEA-\\uDCF2]|\\uD807[\\uDC5A-\\uDC6C\\uDFC0-\\uDFD4]|\\uD81A[\\uDF5B-\\uDF61]|\\uD81B[\\uDE80-\\uDE96]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD83A[\\uDCC7-\\uDCCF]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D]|\\uD83C[\\uDD00-\\uDD0C]'\n    },\n    {\n        'name': 'P',\n        'alias': 'Punctuation',\n        'bmp': '!-#%-\\\\*,-\\\\/:;\\\\?@\\\\[-\\\\]_\\\\{\\\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65',\n        'astral': '\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]'\n    },\n    {\n        'name': 'Pc',\n        'alias': 'Connector_Punctuation',\n        'bmp': '_\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F'\n    },\n    {\n        'name': 'Pd',\n        'alias': 'Dash_Punctuation',\n        'bmp': '\\\\-\\u058A\\u05BE\\u1400\\u1806\\u2010-\\u2015\\u2E17\\u2E1A\\u2E3A\\u2E3B\\u2E40\\u2E5D\\u301C\\u3030\\u30A0\\uFE31\\uFE32\\uFE58\\uFE63\\uFF0D',\n        'astral': '\\uD803\\uDEAD'\n    },\n    {\n        'name': 'Pe',\n        'alias': 'Close_Punctuation',\n        'bmp': '\\\\)\\\\]\\\\}\\u0F3B\\u0F3D\\u169C\\u2046\\u207E\\u208E\\u2309\\u230B\\u232A\\u2769\\u276B\\u276D\\u276F\\u2771\\u2773\\u2775\\u27C6\\u27E7\\u27E9\\u27EB\\u27ED\\u27EF\\u2984\\u2986\\u2988\\u298A\\u298C\\u298E\\u2990\\u2992\\u2994\\u2996\\u2998\\u29D9\\u29DB\\u29FD\\u2E23\\u2E25\\u2E27\\u2E29\\u2E56\\u2E58\\u2E5A\\u2E5C\\u3009\\u300B\\u300D\\u300F\\u3011\\u3015\\u3017\\u3019\\u301B\\u301E\\u301F\\uFD3E\\uFE18\\uFE36\\uFE38\\uFE3A\\uFE3C\\uFE3E\\uFE40\\uFE42\\uFE44\\uFE48\\uFE5A\\uFE5C\\uFE5E\\uFF09\\uFF3D\\uFF5D\\uFF60\\uFF63'\n    },\n    {\n        'name': 'Pf',\n        'alias': 'Final_Punctuation',\n        'bmp': '\\xBB\\u2019\\u201D\\u203A\\u2E03\\u2E05\\u2E0A\\u2E0D\\u2E1D\\u2E21'\n    },\n    {\n        'name': 'Pi',\n        'alias': 'Initial_Punctuation',\n        'bmp': '\\xAB\\u2018\\u201B\\u201C\\u201F\\u2039\\u2E02\\u2E04\\u2E09\\u2E0C\\u2E1C\\u2E20'\n    },\n    {\n        'name': 'Po',\n        'alias': 'Other_Punctuation',\n        'bmp': '!-#%-\\'\\\\*,\\\\.\\\\/:;\\\\?@\\\\\\xA1\\xA7\\xB6\\xB7\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u166E\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u1805\\u1807-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2016\\u2017\\u2020-\\u2027\\u2030-\\u2038\\u203B-\\u203E\\u2041-\\u2043\\u2047-\\u2051\\u2053\\u2055-\\u205E\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00\\u2E01\\u2E06-\\u2E08\\u2E0B\\u2E0E-\\u2E16\\u2E18\\u2E19\\u2E1B\\u2E1E\\u2E1F\\u2E2A-\\u2E2E\\u2E30-\\u2E39\\u2E3C-\\u2E3F\\u2E41\\u2E43-\\u2E4F\\u2E52-\\u2E54\\u3001-\\u3003\\u303D\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFE10-\\uFE16\\uFE19\\uFE30\\uFE45\\uFE46\\uFE49-\\uFE4C\\uFE50-\\uFE52\\uFE54-\\uFE57\\uFE5F-\\uFE61\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF07\\uFF0A\\uFF0C\\uFF0E\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3C\\uFF61\\uFF64\\uFF65',\n        'astral': '\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]'\n    },\n    {\n        'name': 'Ps',\n        'alias': 'Open_Punctuation',\n        'bmp': '\\\\(\\\\[\\\\{\\u0F3A\\u0F3C\\u169B\\u201A\\u201E\\u2045\\u207D\\u208D\\u2308\\u230A\\u2329\\u2768\\u276A\\u276C\\u276E\\u2770\\u2772\\u2774\\u27C5\\u27E6\\u27E8\\u27EA\\u27EC\\u27EE\\u2983\\u2985\\u2987\\u2989\\u298B\\u298D\\u298F\\u2991\\u2993\\u2995\\u2997\\u29D8\\u29DA\\u29FC\\u2E22\\u2E24\\u2E26\\u2E28\\u2E42\\u2E55\\u2E57\\u2E59\\u2E5B\\u3008\\u300A\\u300C\\u300E\\u3010\\u3014\\u3016\\u3018\\u301A\\u301D\\uFD3F\\uFE17\\uFE35\\uFE37\\uFE39\\uFE3B\\uFE3D\\uFE3F\\uFE41\\uFE43\\uFE47\\uFE59\\uFE5B\\uFE5D\\uFF08\\uFF3B\\uFF5B\\uFF5F\\uFF62'\n    },\n    {\n        'name': 'S',\n        'alias': 'Symbol',\n        'bmp': '\\\\$\\\\+<->\\\\^`\\\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u0888\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20C0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC2\\uFD40-\\uFD4F\\uFDCF\\uFDFC-\\uFDFF\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD',\n        'astral': '\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDD-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF73\\uDF80-\\uDFD8\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE74\\uDE78-\\uDE7C\\uDE80-\\uDE86\\uDE90-\\uDEAC\\uDEB0-\\uDEBA\\uDEC0-\\uDEC5\\uDED0-\\uDED9\\uDEE0-\\uDEE7\\uDEF0-\\uDEF6\\uDF00-\\uDF92\\uDF94-\\uDFCA]'\n    },\n    {\n        'name': 'Sc',\n        'alias': 'Currency_Symbol',\n        'bmp': '\\\\$\\xA2-\\xA5\\u058F\\u060B\\u07FE\\u07FF\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20C0\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6',\n        'astral': '\\uD807[\\uDFDD-\\uDFE0]|\\uD838\\uDEFF|\\uD83B\\uDCB0'\n    },\n    {\n        'name': 'Sk',\n        'alias': 'Modifier_Symbol',\n        'bmp': '\\\\^`\\xA8\\xAF\\xB4\\xB8\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u0888\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u309B\\u309C\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uAB5B\\uAB6A\\uAB6B\\uFBB2-\\uFBC2\\uFF3E\\uFF40\\uFFE3',\n        'astral': '\\uD83C[\\uDFFB-\\uDFFF]'\n    },\n    {\n        'name': 'Sm',\n        'alias': 'Math_Symbol',\n        'bmp': '\\\\+<->\\\\|~\\xAC\\xB1\\xD7\\xF7\\u03F6\\u0606-\\u0608\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u2118\\u2140-\\u2144\\u214B\\u2190-\\u2194\\u219A\\u219B\\u21A0\\u21A3\\u21A6\\u21AE\\u21CE\\u21CF\\u21D2\\u21D4\\u21F4-\\u22FF\\u2320\\u2321\\u237C\\u239B-\\u23B3\\u23DC-\\u23E1\\u25B7\\u25C1\\u25F8-\\u25FF\\u266F\\u27C0-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u27FF\\u2900-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2AFF\\u2B30-\\u2B44\\u2B47-\\u2B4C\\uFB29\\uFE62\\uFE64-\\uFE66\\uFF0B\\uFF1C-\\uFF1E\\uFF5C\\uFF5E\\uFFE2\\uFFE9-\\uFFEC',\n        'astral': '\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD83B[\\uDEF0\\uDEF1]'\n    },\n    {\n        'name': 'So',\n        'alias': 'Other_Symbol',\n        'bmp': '\\xA6\\xA9\\xAE\\xB0\\u0482\\u058D\\u058E\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u09FA\\u0B70\\u0BF3-\\u0BF8\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116\\u2117\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u214A\\u214C\\u214D\\u214F\\u218A\\u218B\\u2195-\\u2199\\u219C-\\u219F\\u21A1\\u21A2\\u21A4\\u21A5\\u21A7-\\u21AD\\u21AF-\\u21CD\\u21D0\\u21D1\\u21D3\\u21D5-\\u21F3\\u2300-\\u2307\\u230C-\\u231F\\u2322-\\u2328\\u232B-\\u237B\\u237D-\\u239A\\u23B4-\\u23DB\\u23E2-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u25B6\\u25B8-\\u25C0\\u25C2-\\u25F7\\u2600-\\u266E\\u2670-\\u2767\\u2794-\\u27BF\\u2800-\\u28FF\\u2B00-\\u2B2F\\u2B45\\u2B46\\u2B4D-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA828-\\uA82B\\uA836\\uA837\\uA839\\uAA77-\\uAA79\\uFD40-\\uFD4F\\uFDCF\\uFDFD-\\uFDFF\\uFFE4\\uFFE8\\uFFED\\uFFEE\\uFFFC\\uFFFD',\n        'astral': '\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFDC\\uDFE1-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838\\uDD4F|\\uD83B[\\uDCAC\\uDD2E]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFA]|\\uD83D[\\uDC00-\\uDED7\\uDEDD-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF73\\uDF80-\\uDFD8\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE74\\uDE78-\\uDE7C\\uDE80-\\uDE86\\uDE90-\\uDEAC\\uDEB0-\\uDEBA\\uDEC0-\\uDEC5\\uDED0-\\uDED9\\uDEE0-\\uDEE7\\uDEF0-\\uDEF6\\uDF00-\\uDF92\\uDF94-\\uDFCA]'\n    },\n    {\n        'name': 'Z',\n        'alias': 'Separator',\n        'bmp': ' \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000'\n    },\n    {\n        'name': 'Zl',\n        'alias': 'Line_Separator',\n        'bmp': '\\u2028'\n    },\n    {\n        'name': 'Zp',\n        'alias': 'Paragraph_Separator',\n        'bmp': '\\u2029'\n    },\n    {\n        'name': 'Zs',\n        'alias': 'Space_Separator',\n        'bmp': ' \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000'\n    }\n];\n", "\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports[\"default\"] = void 0;\n\nvar _categories = _interopRequireDefault(require(\"../../tools/output/categories\"));\n\n/*!\n * XRegExp Unicode Categories 5.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2010-present MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\nvar _default = function _default(XRegExp) {\n  /**\n   * Adds support for Unicode's general categories. E.g., `\\p{Lu}` or `\\p{Uppercase Letter}`. See\n   * category descriptions in UAX #44 <http://unicode.org/reports/tr44/#GC_Values_Table>. Token\n   * names are case insensitive, and any spaces, hyphens, and underscores are ignored.\n   *\n   * Uses Unicode 14.0.0.\n   *\n   * @requires XRegExp, Unicode Base\n   */\n  if (!XRegExp.addUnicodeData) {\n    throw new ReferenceError('Unicode Base must be loaded before Unicode Categories');\n  }\n\n  XRegExp.addUnicodeData(_categories[\"default\"]);\n};\n\nexports[\"default\"] = _default;\nmodule.exports = exports.default;", "module.exports = [\n    {\n        'name': 'ASCII',\n        'bmp': '\\0-\\x7F'\n    },\n    {\n        'name': 'Alphabetic',\n        'bmp': 'A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0345\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05B0-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0657\\u0659-\\u065F\\u066E-\\u06D3\\u06D5-\\u06DC\\u06E1-\\u06E8\\u06ED-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710-\\u073F\\u074D-\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0817\\u081A-\\u082C\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u08D4-\\u08DF\\u08E3-\\u08E9\\u08F0-\\u093B\\u093D-\\u094C\\u094E-\\u0950\\u0955-\\u0963\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C4\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09F0\\u09F1\\u09FC\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B\\u0A4C\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A70-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0-\\u0AE3\\u0AF9-\\u0AFC\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D-\\u0B44\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4C\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C5D\\u0C60-\\u0C63\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCC\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0-\\u0CE3\\u0CF1\\u0CF2\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D7A-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E46\\u0E4D\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ECD\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F81\\u0F88-\\u0F97\\u0F99-\\u0FBC\\u1000-\\u1036\\u1038\\u103B-\\u103F\\u1050-\\u108F\\u109A-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1713\\u171F-\\u1733\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17B3\\u17B6-\\u17C8\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u1938\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A61-\\u1A74\\u1AA7\\u1ABF\\u1AC0\\u1ACC-\\u1ACE\\u1B00-\\u1B33\\u1B35-\\u1B43\\u1B45-\\u1B4C\\u1B80-\\u1BA9\\u1BAC-\\u1BAF\\u1BBA-\\u1BE5\\u1BE7-\\u1BF1\\u1C00-\\u1C36\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1DE7-\\u1DF4\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u24B6-\\u24E9\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA674-\\uA67B\\uA67F-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA805\\uA807-\\uA827\\uA840-\\uA873\\uA880-\\uA8C3\\uA8C5\\uA8F2-\\uA8F7\\uA8FB\\uA8FD-\\uA8FF\\uA90A-\\uA92A\\uA930-\\uA952\\uA960-\\uA97C\\uA980-\\uA9B2\\uA9B4-\\uA9BF\\uA9CF\\uA9E0-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA60-\\uAA76\\uAA7A-\\uAABE\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABEA\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n        'astral': '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD27\\uDE80-\\uDEA9\\uDEAB\\uDEAC\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDF70-\\uDF81\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC45\\uDC71-\\uDC75\\uDC82-\\uDCB8\\uDCC2\\uDCD0-\\uDCE8\\uDD00-\\uDD32\\uDD44-\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD80-\\uDDBF\\uDDC1-\\uDDC4\\uDDCE\\uDDCF\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE34\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEE8\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D-\\uDF44\\uDF47\\uDF48\\uDF4B\\uDF4C\\uDF50\\uDF57\\uDF5D-\\uDF63]|\\uD805[\\uDC00-\\uDC41\\uDC43-\\uDC45\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCC1\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDB5\\uDDB8-\\uDDBE\\uDDD8-\\uDDDD\\uDE00-\\uDE3E\\uDE40\\uDE44\\uDE80-\\uDEB5\\uDEB8\\uDF00-\\uDF1A\\uDF1D-\\uDF2A\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC38\\uDCA0-\\uDCDF\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD35\\uDD37\\uDD38\\uDD3B\\uDD3C\\uDD3F-\\uDD42\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDDF\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE32\\uDE35-\\uDE3E\\uDE50-\\uDE97\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC3E\\uDC40\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD41\\uDD43\\uDD46\\uDD47\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD96\\uDD98\\uDEE0-\\uDEF6\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE70-\\uDEBE\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3\\uDFF0\\uDFF1]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9E]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD47\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD30-\\uDD49\\uDD50-\\uDD69\\uDD70-\\uDD89]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A]'\n    },\n    {\n        'name': 'Any',\n        'isBmpLast': true,\n        'bmp': '\\0-\\uFFFF',\n        'astral': '[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]'\n    },\n    {\n        'name': 'Default_Ignorable_Code_Point',\n        'bmp': '\\xAD\\u034F\\u061C\\u115F\\u1160\\u17B4\\u17B5\\u180B-\\u180F\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u3164\\uFE00-\\uFE0F\\uFEFF\\uFFA0\\uFFF0-\\uFFF8',\n        'astral': '\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|[\\uDB40-\\uDB43][\\uDC00-\\uDFFF]'\n    },\n    {\n        'name': 'Lowercase',\n        'bmp': 'a-z\\xAA\\xB5\\xBA\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02B8\\u02C0\\u02C1\\u02E0-\\u02E4\\u0345\\u0371\\u0373\\u0377\\u037A-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0560-\\u0588\\u10D0-\\u10FA\\u10FD-\\u10FF\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1DBF\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u2071\\u207F\\u2090-\\u209C\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2170-\\u217F\\u2184\\u24D0-\\u24E9\\u2C30-\\u2C5F\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7D\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B-\\uA69D\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7AF\\uA7B5\\uA7B7\\uA7B9\\uA7BB\\uA7BD\\uA7BF\\uA7C1\\uA7C3\\uA7C8\\uA7CA\\uA7D1\\uA7D3\\uA7D5\\uA7D7\\uA7D9\\uA7F6\\uA7F8-\\uA7FA\\uAB30-\\uAB5A\\uAB5C-\\uAB68\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A',\n        'astral': '\\uD801[\\uDC28-\\uDC4F\\uDCD8-\\uDCFB\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDF80\\uDF83-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD803[\\uDCC0-\\uDCF2]|\\uD806[\\uDCC0-\\uDCDF]|\\uD81B[\\uDE60-\\uDE7F]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD837[\\uDF00-\\uDF09\\uDF0B-\\uDF1E]|\\uD83A[\\uDD22-\\uDD43]'\n    },\n    {\n        'name': 'Noncharacter_Code_Point',\n        'bmp': '\\uFDD0-\\uFDEF\\uFFFE\\uFFFF',\n        'astral': '[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]'\n    },\n    {\n        'name': 'Uppercase',\n        'bmp': 'A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2160-\\u216F\\u2183\\u24B6-\\u24CF\\u2C00-\\u2C2F\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AE\\uA7B0-\\uA7B4\\uA7B6\\uA7B8\\uA7BA\\uA7BC\\uA7BE\\uA7C0\\uA7C2\\uA7C4-\\uA7C7\\uA7C9\\uA7D0\\uA7D6\\uA7D8\\uA7F5\\uFF21-\\uFF3A',\n        'astral': '\\uD801[\\uDC00-\\uDC27\\uDCB0-\\uDCD3\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95]|\\uD803[\\uDC80-\\uDCB2]|\\uD806[\\uDCA0-\\uDCBF]|\\uD81B[\\uDE40-\\uDE5F]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]|\\uD83A[\\uDD00-\\uDD21]|\\uD83C[\\uDD30-\\uDD49\\uDD50-\\uDD69\\uDD70-\\uDD89]'\n    },\n    {\n        'name': 'White_Space',\n        'bmp': '\\t-\\r \\x85\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000'\n    }\n];\n", "\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports[\"default\"] = void 0;\n\nvar _properties = _interopRequireDefault(require(\"../../tools/output/properties\"));\n\n/*!\n * XRegExp Unicode Properties 5.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2012-present MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\nvar _default = function _default(XRegExp) {\n  /**\n   * Adds properties to meet the UTS #18 Level 1 RL1.2 requirements for Unicode regex support. See\n   * <http://unicode.org/reports/tr18/#RL1.2>. Following are definitions of these properties from\n   * UAX #44 <http://unicode.org/reports/tr44/>:\n   *\n   * - Alphabetic\n   *   Characters with the Alphabetic property. Generated from: Lowercase + Uppercase + Lt + Lm +\n   *   Lo + Nl + Other_Alphabetic.\n   *\n   * - Default_Ignorable_Code_Point\n   *   For programmatic determination of default ignorable code points. New characters that should\n   *   be ignored in rendering (unless explicitly supported) will be assigned in these ranges,\n   *   permitting programs to correctly handle the default rendering of such characters when not\n   *   otherwise supported.\n   *\n   * - Lowercase\n   *   Characters with the Lowercase property. Generated from: Ll + Other_Lowercase.\n   *\n   * - Noncharacter_Code_Point\n   *   Code points permanently reserved for internal use.\n   *\n   * - Uppercase\n   *   Characters with the Uppercase property. Generated from: Lu + Other_Uppercase.\n   *\n   * - White_Space\n   *   Spaces, separator characters and other control characters which should be treated by\n   *   programming languages as \"white space\" for the purpose of parsing elements.\n   *\n   * The properties ASCII, Any, and Assigned are also included but are not defined in UAX #44. UTS\n   * #18 RL1.2 additionally requires support for Unicode scripts and general categories. These are\n   * included in XRegExp's Unicode Categories and Unicode Scripts addons.\n   *\n   * Token names are case insensitive, and any spaces, hyphens, and underscores are ignored.\n   *\n   * Uses Unicode 14.0.0.\n   *\n   * @requires XRegExp, Unicode Base\n   */\n  if (!XRegExp.addUnicodeData) {\n    throw new ReferenceError('Unicode Base must be loaded before Unicode Properties');\n  }\n\n  var unicodeData = _properties[\"default\"]; // Add non-generated data\n\n  unicodeData.push({\n    name: 'Assigned',\n    // Since this is defined as the inverse of Unicode category Cn (Unassigned), the Unicode\n    // Categories addon is required to use this property\n    inverseOf: 'Cn'\n  });\n  XRegExp.addUnicodeData(unicodeData);\n};\n\nexports[\"default\"] = _default;\nmodule.exports = exports.default;", "module.exports = [\n    {\n        'name': 'Adlam',\n        'astral': '\\uD83A[\\uDD00-\\uDD4B\\uDD50-\\uDD59\\uDD5E\\uDD5F]'\n    },\n    {\n        'name': 'Ahom',\n        'astral': '\\uD805[\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF46]'\n    },\n    {\n        'name': 'Anatolian_Hieroglyphs',\n        'astral': '\\uD811[\\uDC00-\\uDE46]'\n    },\n    {\n        'name': 'Arabic',\n        'bmp': '\\u0600-\\u0604\\u0606-\\u060B\\u060D-\\u061A\\u061C-\\u061E\\u0620-\\u063F\\u0641-\\u064A\\u0656-\\u066F\\u0671-\\u06DC\\u06DE-\\u06FF\\u0750-\\u077F\\u0870-\\u088E\\u0890\\u0891\\u0898-\\u08E1\\u08E3-\\u08FF\\uFB50-\\uFBC2\\uFBD3-\\uFD3D\\uFD40-\\uFD8F\\uFD92-\\uFDC7\\uFDCF\\uFDF0-\\uFDFF\\uFE70-\\uFE74\\uFE76-\\uFEFC',\n        'astral': '\\uD803[\\uDE60-\\uDE7E]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB\\uDEF0\\uDEF1]'\n    },\n    {\n        'name': 'Armenian',\n        'bmp': '\\u0531-\\u0556\\u0559-\\u058A\\u058D-\\u058F\\uFB13-\\uFB17'\n    },\n    {\n        'name': 'Avestan',\n        'astral': '\\uD802[\\uDF00-\\uDF35\\uDF39-\\uDF3F]'\n    },\n    {\n        'name': 'Balinese',\n        'bmp': '\\u1B00-\\u1B4C\\u1B50-\\u1B7E'\n    },\n    {\n        'name': 'Bamum',\n        'bmp': '\\uA6A0-\\uA6F7',\n        'astral': '\\uD81A[\\uDC00-\\uDE38]'\n    },\n    {\n        'name': 'Bassa_Vah',\n        'astral': '\\uD81A[\\uDED0-\\uDEED\\uDEF0-\\uDEF5]'\n    },\n    {\n        'name': 'Batak',\n        'bmp': '\\u1BC0-\\u1BF3\\u1BFC-\\u1BFF'\n    },\n    {\n        'name': 'Bengali',\n        'bmp': '\\u0980-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09FE'\n    },\n    {\n        'name': 'Bhaiksuki',\n        'astral': '\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC45\\uDC50-\\uDC6C]'\n    },\n    {\n        'name': 'Bopomofo',\n        'bmp': '\\u02EA\\u02EB\\u3105-\\u312F\\u31A0-\\u31BF'\n    },\n    {\n        'name': 'Brahmi',\n        'astral': '\\uD804[\\uDC00-\\uDC4D\\uDC52-\\uDC75\\uDC7F]'\n    },\n    {\n        'name': 'Braille',\n        'bmp': '\\u2800-\\u28FF'\n    },\n    {\n        'name': 'Buginese',\n        'bmp': '\\u1A00-\\u1A1B\\u1A1E\\u1A1F'\n    },\n    {\n        'name': 'Buhid',\n        'bmp': '\\u1740-\\u1753'\n    },\n    {\n        'name': 'Canadian_Aboriginal',\n        'bmp': '\\u1400-\\u167F\\u18B0-\\u18F5',\n        'astral': '\\uD806[\\uDEB0-\\uDEBF]'\n    },\n    {\n        'name': 'Carian',\n        'astral': '\\uD800[\\uDEA0-\\uDED0]'\n    },\n    {\n        'name': 'Caucasian_Albanian',\n        'astral': '\\uD801[\\uDD30-\\uDD63\\uDD6F]'\n    },\n    {\n        'name': 'Chakma',\n        'astral': '\\uD804[\\uDD00-\\uDD34\\uDD36-\\uDD47]'\n    },\n    {\n        'name': 'Cham',\n        'bmp': '\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA5F'\n    },\n    {\n        'name': 'Cherokee',\n        'bmp': '\\u13A0-\\u13F5\\u13F8-\\u13FD\\uAB70-\\uABBF'\n    },\n    {\n        'name': 'Chorasmian',\n        'astral': '\\uD803[\\uDFB0-\\uDFCB]'\n    },\n    {\n        'name': 'Common',\n        'bmp': '\\0-@\\\\[-`\\\\{-\\xA9\\xAB-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02B9-\\u02DF\\u02E5-\\u02E9\\u02EC-\\u02FF\\u0374\\u037E\\u0385\\u0387\\u0605\\u060C\\u061B\\u061F\\u0640\\u06DD\\u08E2\\u0964\\u0965\\u0E3F\\u0FD5-\\u0FD8\\u10FB\\u16EB-\\u16ED\\u1735\\u1736\\u1802\\u1803\\u1805\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u2000-\\u200B\\u200E-\\u2064\\u2066-\\u2070\\u2074-\\u207E\\u2080-\\u208E\\u20A0-\\u20C0\\u2100-\\u2125\\u2127-\\u2129\\u212C-\\u2131\\u2133-\\u214D\\u214F-\\u215F\\u2189-\\u218B\\u2190-\\u2426\\u2440-\\u244A\\u2460-\\u27FF\\u2900-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2E00-\\u2E5D\\u2FF0-\\u2FFB\\u3000-\\u3004\\u3006\\u3008-\\u3020\\u3030-\\u3037\\u303C-\\u303F\\u309B\\u309C\\u30A0\\u30FB\\u30FC\\u3190-\\u319F\\u31C0-\\u31E3\\u3220-\\u325F\\u327F-\\u32CF\\u32FF\\u3358-\\u33FF\\u4DC0-\\u4DFF\\uA700-\\uA721\\uA788-\\uA78A\\uA830-\\uA839\\uA92E\\uA9CF\\uAB5B\\uAB6A\\uAB6B\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFEFF\\uFF01-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFF70\\uFF9E\\uFF9F\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD',\n        'astral': '\\uD800[\\uDD00-\\uDD02\\uDD07-\\uDD33\\uDD37-\\uDD3F\\uDD90-\\uDD9C\\uDDD0-\\uDDFC\\uDEE1-\\uDEFB]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD66\\uDD6A-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDEE0-\\uDEF3\\uDF00-\\uDF56\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDFCB\\uDFCE-\\uDFFF]|\\uD83B[\\uDC71-\\uDCB4\\uDD01-\\uDD3D]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD00-\\uDDAD\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDD-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF73\\uDF80-\\uDFD8\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE74\\uDE78-\\uDE7C\\uDE80-\\uDE86\\uDE90-\\uDEAC\\uDEB0-\\uDEBA\\uDEC0-\\uDEC5\\uDED0-\\uDED9\\uDEE0-\\uDEE7\\uDEF0-\\uDEF6\\uDF00-\\uDF92\\uDF94-\\uDFCA\\uDFF0-\\uDFF9]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]'\n    },\n    {\n        'name': 'Coptic',\n        'bmp': '\\u03E2-\\u03EF\\u2C80-\\u2CF3\\u2CF9-\\u2CFF'\n    },\n    {\n        'name': 'Cuneiform',\n        'astral': '\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC70-\\uDC74\\uDC80-\\uDD43]'\n    },\n    {\n        'name': 'Cypriot',\n        'astral': '\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F]'\n    },\n    {\n        'name': 'Cypro_Minoan',\n        'astral': '\\uD80B[\\uDF90-\\uDFF2]'\n    },\n    {\n        'name': 'Cyrillic',\n        'bmp': '\\u0400-\\u0484\\u0487-\\u052F\\u1C80-\\u1C88\\u1D2B\\u1D78\\u2DE0-\\u2DFF\\uA640-\\uA69F\\uFE2E\\uFE2F'\n    },\n    {\n        'name': 'Deseret',\n        'astral': '\\uD801[\\uDC00-\\uDC4F]'\n    },\n    {\n        'name': 'Devanagari',\n        'bmp': '\\u0900-\\u0950\\u0955-\\u0963\\u0966-\\u097F\\uA8E0-\\uA8FF'\n    },\n    {\n        'name': 'Dives_Akuru',\n        'astral': '\\uD806[\\uDD00-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD35\\uDD37\\uDD38\\uDD3B-\\uDD46\\uDD50-\\uDD59]'\n    },\n    {\n        'name': 'Dogra',\n        'astral': '\\uD806[\\uDC00-\\uDC3B]'\n    },\n    {\n        'name': 'Duployan',\n        'astral': '\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9C-\\uDC9F]'\n    },\n    {\n        'name': 'Egyptian_Hieroglyphs',\n        'astral': '\\uD80C[\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E\\uDC30-\\uDC38]'\n    },\n    {\n        'name': 'Elbasan',\n        'astral': '\\uD801[\\uDD00-\\uDD27]'\n    },\n    {\n        'name': 'Elymaic',\n        'astral': '\\uD803[\\uDFE0-\\uDFF6]'\n    },\n    {\n        'name': 'Ethiopic',\n        'bmp': '\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u137C\\u1380-\\u1399\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E',\n        'astral': '\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]'\n    },\n    {\n        'name': 'Georgian',\n        'bmp': '\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u10FF\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u2D00-\\u2D25\\u2D27\\u2D2D'\n    },\n    {\n        'name': 'Glagolitic',\n        'bmp': '\\u2C00-\\u2C5F',\n        'astral': '\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]'\n    },\n    {\n        'name': 'Gothic',\n        'astral': '\\uD800[\\uDF30-\\uDF4A]'\n    },\n    {\n        'name': 'Grantha',\n        'astral': '\\uD804[\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]'\n    },\n    {\n        'name': 'Greek',\n        'bmp': '\\u0370-\\u0373\\u0375-\\u0377\\u037A-\\u037D\\u037F\\u0384\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03E1\\u03F0-\\u03FF\\u1D26-\\u1D2A\\u1D5D-\\u1D61\\u1D66-\\u1D6A\\u1DBF\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u2126\\uAB65',\n        'astral': '\\uD800[\\uDD40-\\uDD8E\\uDDA0]|\\uD834[\\uDE00-\\uDE45]'\n    },\n    {\n        'name': 'Gujarati',\n        'bmp': '\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AF1\\u0AF9-\\u0AFF'\n    },\n    {\n        'name': 'Gunjala_Gondi',\n        'astral': '\\uD807[\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9]'\n    },\n    {\n        'name': 'Gurmukhi',\n        'bmp': '\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A76'\n    },\n    {\n        'name': 'Han',\n        'bmp': '\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u3005\\u3007\\u3021-\\u3029\\u3038-\\u303B\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uF900-\\uFA6D\\uFA70-\\uFAD9',\n        'astral': '\\uD81B[\\uDFE2\\uDFE3\\uDFF0\\uDFF1]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A]'\n    },\n    {\n        'name': 'Hangul',\n        'bmp': '\\u1100-\\u11FF\\u302E\\u302F\\u3131-\\u318E\\u3200-\\u321E\\u3260-\\u327E\\uA960-\\uA97C\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC'\n    },\n    {\n        'name': 'Hanifi_Rohingya',\n        'astral': '\\uD803[\\uDD00-\\uDD27\\uDD30-\\uDD39]'\n    },\n    {\n        'name': 'Hanunoo',\n        'bmp': '\\u1720-\\u1734'\n    },\n    {\n        'name': 'Hatran',\n        'astral': '\\uD802[\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDCFF]'\n    },\n    {\n        'name': 'Hebrew',\n        'bmp': '\\u0591-\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F4\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFB4F'\n    },\n    {\n        'name': 'Hiragana',\n        'bmp': '\\u3041-\\u3096\\u309D-\\u309F',\n        'astral': '\\uD82C[\\uDC01-\\uDD1F\\uDD50-\\uDD52]|\\uD83C\\uDE00'\n    },\n    {\n        'name': 'Imperial_Aramaic',\n        'astral': '\\uD802[\\uDC40-\\uDC55\\uDC57-\\uDC5F]'\n    },\n    {\n        'name': 'Inherited',\n        'bmp': '\\u0300-\\u036F\\u0485\\u0486\\u064B-\\u0655\\u0670\\u0951-\\u0954\\u1AB0-\\u1ACE\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u200C\\u200D\\u20D0-\\u20F0\\u302A-\\u302D\\u3099\\u309A\\uFE00-\\uFE0F\\uFE20-\\uFE2D',\n        'astral': '\\uD800[\\uDDFD\\uDEE0]|\\uD804\\uDF3B|\\uD833[\\uDF00-\\uDF2D\\uDF30-\\uDF46]|\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD]|\\uDB40[\\uDD00-\\uDDEF]'\n    },\n    {\n        'name': 'Inscriptional_Pahlavi',\n        'astral': '\\uD802[\\uDF60-\\uDF72\\uDF78-\\uDF7F]'\n    },\n    {\n        'name': 'Inscriptional_Parthian',\n        'astral': '\\uD802[\\uDF40-\\uDF55\\uDF58-\\uDF5F]'\n    },\n    {\n        'name': 'Javanese',\n        'bmp': '\\uA980-\\uA9CD\\uA9D0-\\uA9D9\\uA9DE\\uA9DF'\n    },\n    {\n        'name': 'Kaithi',\n        'astral': '\\uD804[\\uDC80-\\uDCC2\\uDCCD]'\n    },\n    {\n        'name': 'Kannada',\n        'bmp': '\\u0C80-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2'\n    },\n    {\n        'name': 'Katakana',\n        'bmp': '\\u30A1-\\u30FA\\u30FD-\\u30FF\\u31F0-\\u31FF\\u32D0-\\u32FE\\u3300-\\u3357\\uFF66-\\uFF6F\\uFF71-\\uFF9D',\n        'astral': '\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00\\uDD20-\\uDD22\\uDD64-\\uDD67]'\n    },\n    {\n        'name': 'Kayah_Li',\n        'bmp': '\\uA900-\\uA92D\\uA92F'\n    },\n    {\n        'name': 'Kharoshthi',\n        'astral': '\\uD802[\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F-\\uDE48\\uDE50-\\uDE58]'\n    },\n    {\n        'name': 'Khitan_Small_Script',\n        'astral': '\\uD81B\\uDFE4|\\uD822[\\uDF00-\\uDFFF]|\\uD823[\\uDC00-\\uDCD5]'\n    },\n    {\n        'name': 'Khmer',\n        'bmp': '\\u1780-\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u19E0-\\u19FF'\n    },\n    {\n        'name': 'Khojki',\n        'astral': '\\uD804[\\uDE00-\\uDE11\\uDE13-\\uDE3E]'\n    },\n    {\n        'name': 'Khudawadi',\n        'astral': '\\uD804[\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9]'\n    },\n    {\n        'name': 'Lao',\n        'bmp': '\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF'\n    },\n    {\n        'name': 'Latin',\n        'bmp': 'A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02E0-\\u02E4\\u1D00-\\u1D25\\u1D2C-\\u1D5C\\u1D62-\\u1D65\\u1D6B-\\u1D77\\u1D79-\\u1DBE\\u1E00-\\u1EFF\\u2071\\u207F\\u2090-\\u209C\\u212A\\u212B\\u2132\\u214E\\u2160-\\u2188\\u2C60-\\u2C7F\\uA722-\\uA787\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA7FF\\uAB30-\\uAB5A\\uAB5C-\\uAB64\\uAB66-\\uAB69\\uFB00-\\uFB06\\uFF21-\\uFF3A\\uFF41-\\uFF5A',\n        'astral': '\\uD801[\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD837[\\uDF00-\\uDF1E]'\n    },\n    {\n        'name': 'Lepcha',\n        'bmp': '\\u1C00-\\u1C37\\u1C3B-\\u1C49\\u1C4D-\\u1C4F'\n    },\n    {\n        'name': 'Limbu',\n        'bmp': '\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1940\\u1944-\\u194F'\n    },\n    {\n        'name': 'Linear_A',\n        'astral': '\\uD801[\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]'\n    },\n    {\n        'name': 'Linear_B',\n        'astral': '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA]'\n    },\n    {\n        'name': 'Lisu',\n        'bmp': '\\uA4D0-\\uA4FF',\n        'astral': '\\uD807\\uDFB0'\n    },\n    {\n        'name': 'Lycian',\n        'astral': '\\uD800[\\uDE80-\\uDE9C]'\n    },\n    {\n        'name': 'Lydian',\n        'astral': '\\uD802[\\uDD20-\\uDD39\\uDD3F]'\n    },\n    {\n        'name': 'Mahajani',\n        'astral': '\\uD804[\\uDD50-\\uDD76]'\n    },\n    {\n        'name': 'Makasar',\n        'astral': '\\uD807[\\uDEE0-\\uDEF8]'\n    },\n    {\n        'name': 'Malayalam',\n        'bmp': '\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4F\\u0D54-\\u0D63\\u0D66-\\u0D7F'\n    },\n    {\n        'name': 'Mandaic',\n        'bmp': '\\u0840-\\u085B\\u085E'\n    },\n    {\n        'name': 'Manichaean',\n        'astral': '\\uD802[\\uDEC0-\\uDEE6\\uDEEB-\\uDEF6]'\n    },\n    {\n        'name': 'Marchen',\n        'astral': '\\uD807[\\uDC70-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]'\n    },\n    {\n        'name': 'Masaram_Gondi',\n        'astral': '\\uD807[\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59]'\n    },\n    {\n        'name': 'Medefaidrin',\n        'astral': '\\uD81B[\\uDE40-\\uDE9A]'\n    },\n    {\n        'name': 'Meetei_Mayek',\n        'bmp': '\\uAAE0-\\uAAF6\\uABC0-\\uABED\\uABF0-\\uABF9'\n    },\n    {\n        'name': 'Mende_Kikakui',\n        'astral': '\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCD6]'\n    },\n    {\n        'name': 'Meroitic_Cursive',\n        'astral': '\\uD802[\\uDDA0-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDDFF]'\n    },\n    {\n        'name': 'Meroitic_Hieroglyphs',\n        'astral': '\\uD802[\\uDD80-\\uDD9F]'\n    },\n    {\n        'name': 'Miao',\n        'astral': '\\uD81B[\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F]'\n    },\n    {\n        'name': 'Modi',\n        'astral': '\\uD805[\\uDE00-\\uDE44\\uDE50-\\uDE59]'\n    },\n    {\n        'name': 'Mongolian',\n        'bmp': '\\u1800\\u1801\\u1804\\u1806-\\u1819\\u1820-\\u1878\\u1880-\\u18AA',\n        'astral': '\\uD805[\\uDE60-\\uDE6C]'\n    },\n    {\n        'name': 'Mro',\n        'astral': '\\uD81A[\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE6E\\uDE6F]'\n    },\n    {\n        'name': 'Multani',\n        'astral': '\\uD804[\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA9]'\n    },\n    {\n        'name': 'Myanmar',\n        'bmp': '\\u1000-\\u109F\\uA9E0-\\uA9FE\\uAA60-\\uAA7F'\n    },\n    {\n        'name': 'Nabataean',\n        'astral': '\\uD802[\\uDC80-\\uDC9E\\uDCA7-\\uDCAF]'\n    },\n    {\n        'name': 'Nandinagari',\n        'astral': '\\uD806[\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE4]'\n    },\n    {\n        'name': 'New_Tai_Lue',\n        'bmp': '\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u19DE\\u19DF'\n    },\n    {\n        'name': 'Newa',\n        'astral': '\\uD805[\\uDC00-\\uDC5B\\uDC5D-\\uDC61]'\n    },\n    {\n        'name': 'Nko',\n        'bmp': '\\u07C0-\\u07FA\\u07FD-\\u07FF'\n    },\n    {\n        'name': 'Nushu',\n        'astral': '\\uD81B\\uDFE1|\\uD82C[\\uDD70-\\uDEFB]'\n    },\n    {\n        'name': 'Nyiakeng_Puachue_Hmong',\n        'astral': '\\uD838[\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDD4F]'\n    },\n    {\n        'name': 'Ogham',\n        'bmp': '\\u1680-\\u169C'\n    },\n    {\n        'name': 'Ol_Chiki',\n        'bmp': '\\u1C50-\\u1C7F'\n    },\n    {\n        'name': 'Old_Hungarian',\n        'astral': '\\uD803[\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDCFF]'\n    },\n    {\n        'name': 'Old_Italic',\n        'astral': '\\uD800[\\uDF00-\\uDF23\\uDF2D-\\uDF2F]'\n    },\n    {\n        'name': 'Old_North_Arabian',\n        'astral': '\\uD802[\\uDE80-\\uDE9F]'\n    },\n    {\n        'name': 'Old_Permic',\n        'astral': '\\uD800[\\uDF50-\\uDF7A]'\n    },\n    {\n        'name': 'Old_Persian',\n        'astral': '\\uD800[\\uDFA0-\\uDFC3\\uDFC8-\\uDFD5]'\n    },\n    {\n        'name': 'Old_Sogdian',\n        'astral': '\\uD803[\\uDF00-\\uDF27]'\n    },\n    {\n        'name': 'Old_South_Arabian',\n        'astral': '\\uD802[\\uDE60-\\uDE7F]'\n    },\n    {\n        'name': 'Old_Turkic',\n        'astral': '\\uD803[\\uDC00-\\uDC48]'\n    },\n    {\n        'name': 'Old_Uyghur',\n        'astral': '\\uD803[\\uDF70-\\uDF89]'\n    },\n    {\n        'name': 'Oriya',\n        'bmp': '\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B77'\n    },\n    {\n        'name': 'Osage',\n        'astral': '\\uD801[\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB]'\n    },\n    {\n        'name': 'Osmanya',\n        'astral': '\\uD801[\\uDC80-\\uDC9D\\uDCA0-\\uDCA9]'\n    },\n    {\n        'name': 'Pahawh_Hmong',\n        'astral': '\\uD81A[\\uDF00-\\uDF45\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]'\n    },\n    {\n        'name': 'Palmyrene',\n        'astral': '\\uD802[\\uDC60-\\uDC7F]'\n    },\n    {\n        'name': 'Pau_Cin_Hau',\n        'astral': '\\uD806[\\uDEC0-\\uDEF8]'\n    },\n    {\n        'name': 'Phags_Pa',\n        'bmp': '\\uA840-\\uA877'\n    },\n    {\n        'name': 'Phoenician',\n        'astral': '\\uD802[\\uDD00-\\uDD1B\\uDD1F]'\n    },\n    {\n        'name': 'Psalter_Pahlavi',\n        'astral': '\\uD802[\\uDF80-\\uDF91\\uDF99-\\uDF9C\\uDFA9-\\uDFAF]'\n    },\n    {\n        'name': 'Rejang',\n        'bmp': '\\uA930-\\uA953\\uA95F'\n    },\n    {\n        'name': 'Runic',\n        'bmp': '\\u16A0-\\u16EA\\u16EE-\\u16F8'\n    },\n    {\n        'name': 'Samaritan',\n        'bmp': '\\u0800-\\u082D\\u0830-\\u083E'\n    },\n    {\n        'name': 'Saurashtra',\n        'bmp': '\\uA880-\\uA8C5\\uA8CE-\\uA8D9'\n    },\n    {\n        'name': 'Sharada',\n        'astral': '\\uD804[\\uDD80-\\uDDDF]'\n    },\n    {\n        'name': 'Shavian',\n        'astral': '\\uD801[\\uDC50-\\uDC7F]'\n    },\n    {\n        'name': 'Siddham',\n        'astral': '\\uD805[\\uDD80-\\uDDB5\\uDDB8-\\uDDDD]'\n    },\n    {\n        'name': 'SignWriting',\n        'astral': '\\uD836[\\uDC00-\\uDE8B\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]'\n    },\n    {\n        'name': 'Sinhala',\n        'bmp': '\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4',\n        'astral': '\\uD804[\\uDDE1-\\uDDF4]'\n    },\n    {\n        'name': 'Sogdian',\n        'astral': '\\uD803[\\uDF30-\\uDF59]'\n    },\n    {\n        'name': 'Sora_Sompeng',\n        'astral': '\\uD804[\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9]'\n    },\n    {\n        'name': 'Soyombo',\n        'astral': '\\uD806[\\uDE50-\\uDEA2]'\n    },\n    {\n        'name': 'Sundanese',\n        'bmp': '\\u1B80-\\u1BBF\\u1CC0-\\u1CC7'\n    },\n    {\n        'name': 'Syloti_Nagri',\n        'bmp': '\\uA800-\\uA82C'\n    },\n    {\n        'name': 'Syriac',\n        'bmp': '\\u0700-\\u070D\\u070F-\\u074A\\u074D-\\u074F\\u0860-\\u086A'\n    },\n    {\n        'name': 'Tagalog',\n        'bmp': '\\u1700-\\u1715\\u171F'\n    },\n    {\n        'name': 'Tagbanwa',\n        'bmp': '\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773'\n    },\n    {\n        'name': 'Tai_Le',\n        'bmp': '\\u1950-\\u196D\\u1970-\\u1974'\n    },\n    {\n        'name': 'Tai_Tham',\n        'bmp': '\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD'\n    },\n    {\n        'name': 'Tai_Viet',\n        'bmp': '\\uAA80-\\uAAC2\\uAADB-\\uAADF'\n    },\n    {\n        'name': 'Takri',\n        'astral': '\\uD805[\\uDE80-\\uDEB9\\uDEC0-\\uDEC9]'\n    },\n    {\n        'name': 'Tamil',\n        'bmp': '\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BFA',\n        'astral': '\\uD807[\\uDFC0-\\uDFF1\\uDFFF]'\n    },\n    {\n        'name': 'Tangsa',\n        'astral': '\\uD81A[\\uDE70-\\uDEBE\\uDEC0-\\uDEC9]'\n    },\n    {\n        'name': 'Tangut',\n        'astral': '\\uD81B\\uDFE0|[\\uD81C-\\uD820][\\uDC00-\\uDFFF]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEFF]|\\uD823[\\uDD00-\\uDD08]'\n    },\n    {\n        'name': 'Telugu',\n        'bmp': '\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3C-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C5D\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C77-\\u0C7F'\n    },\n    {\n        'name': 'Thaana',\n        'bmp': '\\u0780-\\u07B1'\n    },\n    {\n        'name': 'Thai',\n        'bmp': '\\u0E01-\\u0E3A\\u0E40-\\u0E5B'\n    },\n    {\n        'name': 'Tibetan',\n        'bmp': '\\u0F00-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F97\\u0F99-\\u0FBC\\u0FBE-\\u0FCC\\u0FCE-\\u0FD4\\u0FD9\\u0FDA'\n    },\n    {\n        'name': 'Tifinagh',\n        'bmp': '\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D7F'\n    },\n    {\n        'name': 'Tirhuta',\n        'astral': '\\uD805[\\uDC80-\\uDCC7\\uDCD0-\\uDCD9]'\n    },\n    {\n        'name': 'Toto',\n        'astral': '\\uD838[\\uDE90-\\uDEAE]'\n    },\n    {\n        'name': 'Ugaritic',\n        'astral': '\\uD800[\\uDF80-\\uDF9D\\uDF9F]'\n    },\n    {\n        'name': 'Vai',\n        'bmp': '\\uA500-\\uA62B'\n    },\n    {\n        'name': 'Vithkuqi',\n        'astral': '\\uD801[\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC]'\n    },\n    {\n        'name': 'Wancho',\n        'astral': '\\uD838[\\uDEC0-\\uDEF9\\uDEFF]'\n    },\n    {\n        'name': 'Warang_Citi',\n        'astral': '\\uD806[\\uDCA0-\\uDCF2\\uDCFF]'\n    },\n    {\n        'name': 'Yezidi',\n        'astral': '\\uD803[\\uDE80-\\uDEA9\\uDEAB-\\uDEAD\\uDEB0\\uDEB1]'\n    },\n    {\n        'name': 'Yi',\n        'bmp': '\\uA000-\\uA48C\\uA490-\\uA4C6'\n    },\n    {\n        'name': 'Zanabazar_Square',\n        'astral': '\\uD806[\\uDE00-\\uDE47]'\n    }\n];\n", "\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports[\"default\"] = void 0;\n\nvar _scripts = _interopRequireDefault(require(\"../../tools/output/scripts\"));\n\n/*!\n * XRegExp Unicode Scripts 5.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2010-present MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\nvar _default = function _default(XRegExp) {\n  /**\n   * Adds support for all Unicode scripts. E.g., `\\p{Latin}`. Token names are case insensitive,\n   * and any spaces, hyphens, and underscores are ignored.\n   *\n   * Uses Unicode 14.0.0.\n   *\n   * @requires XRegExp, Unicode Base\n   */\n  if (!XRegExp.addUnicodeData) {\n    throw new ReferenceError('Unicode Base must be loaded before Unicode Scripts');\n  }\n\n  XRegExp.addUnicodeData(_scripts[\"default\"], 'Script');\n};\n\nexports[\"default\"] = _default;\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports[\"default\"] = void 0;\n\nvar _xregexp = _interopRequireDefault(require(\"./xregexp\"));\n\nvar _build = _interopRequireDefault(require(\"./addons/build\"));\n\nvar _matchrecursive = _interopRequireDefault(require(\"./addons/matchrecursive\"));\n\nvar _unicodeBase = _interopRequireDefault(require(\"./addons/unicode-base\"));\n\nvar _unicodeCategories = _interopRequireDefault(require(\"./addons/unicode-categories\"));\n\nvar _unicodeProperties = _interopRequireDefault(require(\"./addons/unicode-properties\"));\n\nvar _unicodeScripts = _interopRequireDefault(require(\"./addons/unicode-scripts\"));\n\n(0, _build[\"default\"])(_xregexp[\"default\"]);\n(0, _matchrecursive[\"default\"])(_xregexp[\"default\"]);\n(0, _unicodeBase[\"default\"])(_xregexp[\"default\"]);\n(0, _unicodeCategories[\"default\"])(_xregexp[\"default\"]);\n(0, _unicodeProperties[\"default\"])(_xregexp[\"default\"]);\n(0, _unicodeScripts[\"default\"])(_xregexp[\"default\"]);\nvar _default = _xregexp[\"default\"];\nexports[\"default\"] = _default;\nmodule.exports = exports.default;", "/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __esDecorate;\r\nvar __runInitializers;\r\nvar __propKey;\r\nvar __setFunctionName;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __spreadArray;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __classPrivateFieldIn;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n        function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n        var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n        var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n        var _, done = false;\r\n        for (var i = decorators.length - 1; i >= 0; i--) {\r\n            var context = {};\r\n            for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n            for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n            context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n            var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n            if (kind === \"accessor\") {\r\n                if (result === void 0) continue;\r\n                if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n                if (_ = accept(result.get)) descriptor.get = _;\r\n                if (_ = accept(result.set)) descriptor.set = _;\r\n                if (_ = accept(result.init)) initializers.push(_);\r\n            }\r\n            else if (_ = accept(result)) {\r\n                if (kind === \"field\") initializers.push(_);\r\n                else descriptor[key] = _;\r\n            }\r\n        }\r\n        if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n        done = true;\r\n    };\r\n\r\n    __runInitializers = function (thisArg, initializers, value) {\r\n        var useValue = arguments.length > 2;\r\n        for (var i = 0; i < initializers.length; i++) {\r\n            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n        }\r\n        return useValue ? value : void 0;\r\n    };\r\n\r\n    __propKey = function (x) {\r\n        return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n    };\r\n\r\n    __setFunctionName = function (f, name, prefix) {\r\n        if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n        return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function(m, o) {\r\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n    };\r\n\r\n    __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        var desc = Object.getOwnPropertyDescriptor(m, k);\r\n        if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n            desc = { enumerable: true, get: function() { return m[k]; } };\r\n        }\r\n        Object.defineProperty(o, k2, desc);\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __spreadArray = function (to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, state, kind, f) {\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n        return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, state, value, kind, f) {\r\n        if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n        return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n    };\r\n\r\n    __classPrivateFieldIn = function (state, receiver) {\r\n        if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n        return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__esDecorate\", __esDecorate);\r\n    exporter(\"__runInitializers\", __runInitializers);\r\n    exporter(\"__propKey\", __propKey);\r\n    exporter(\"__setFunctionName\", __setFunctionName);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__spreadArray\", __spreadArray);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n    exporter(\"__classPrivateFieldIn\", __classPrivateFieldIn);\r\n});\r\n", "// Note: This file is autogenerated using \"resources/gen-version.js\" script and\n// automatically updated by \"npm version\" command.\n\n/**\n * A string containing the version of the GraphQL.js library\n */\nexport const version = '16.6.0';\n/**\n * An object containing the components of the GraphQL.js version string\n */\n\nexport const versionInfo = Object.freeze({\n  major: 16,\n  minor: 6,\n  patch: 0,\n  preReleaseTag: null,\n});\n", "export function devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n", "/**\n * Returns true if the value acts like a Promise, i.e. has a \"then\" function,\n * otherwise returns false.\n */\nexport function isPromise(value) {\n  return (\n    typeof (value === null || value === void 0 ? void 0 : value.then) ===\n    'function'\n  );\n}\n", "/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport function isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n", "export function invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(\n      message != null ? message : 'Unexpected invariant triggered.',\n    );\n  }\n}\n", "import { invariant } from '../jsutils/invariant.mjs';\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || invariant(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n", "import { getLocation } from './location.mjs';\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nexport function printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    getLocation(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n", "import { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { getLocation } from '../language/location.mjs';\nimport {\n  printLocation,\n  printSourceLocation,\n} from '../language/printLocation.mjs';\n\nfunction toNormalizedOptions(args) {\n  const firstArg = args[0];\n\n  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5],\n    };\n  }\n\n  return firstArg;\n}\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport class GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n  /**\n   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n\n    const { nodes, source, positions, path, originalError, extensions } =\n      toNormalizedOptions(rawArgs);\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError =\n      originalError !== null && originalError !== void 0\n        ? originalError\n        : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0\n        ? void 0\n        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),\n    ); // Compute locations in the source for the given nodes/positions.\n\n    this.source =\n      source !== null && source !== void 0\n        ? source\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : (_nodeLocations$ = nodeLocations[0]) === null ||\n          _nodeLocations$ === void 0\n        ? void 0\n        : _nodeLocations$.source;\n    this.positions =\n      positions !== null && positions !== void 0\n        ? positions\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => loc.start);\n    this.locations =\n      positions && source\n        ? positions.map((pos) => getLocation(source, pos))\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => getLocation(loc.source, loc.start));\n    const originalExtensions = isObjectLike(\n      originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions,\n    )\n      ? originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions\n      : undefined;\n    this.extensions =\n      (_ref =\n        extensions !== null && extensions !== void 0\n          ? extensions\n          : originalExtensions) !== null && _ref !== void 0\n        ? _ref\n        : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true,\n      },\n      name: {\n        enumerable: false,\n      },\n      nodes: {\n        enumerable: false,\n      },\n      source: {\n        enumerable: false,\n      },\n      positions: {\n        enumerable: false,\n      },\n      originalError: {\n        enumerable: false,\n      },\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (\n      originalError !== null &&\n      originalError !== void 0 &&\n      originalError.stack\n    ) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true,\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true,\n      });\n    }\n    /* c8 ignore stop */\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n\n  toString() {\n    let output = this.message;\n\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + printLocation(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output += '\\n\\n' + printSourceLocation(this.source, location);\n      }\n    }\n\n    return output;\n  }\n\n  toJSON() {\n    const formattedError = {\n      message: this.message,\n    };\n\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n\n    return formattedError;\n  }\n}\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nexport function printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toJSON` instead. Will be removed in v17\n */\n\nexport function formatError(error) {\n  return error.toJSON();\n}\n", "import { GraphQLError } from './GraphQLError.mjs';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(`Syntax Error: ${description}`, {\n    source,\n    positions: [position],\n  });\n}\n", "/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport class Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport class Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\n/**\n * @internal\n */\nexport const QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nvar OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (OperationTypeNode = {}));\n\nexport { OperationTypeNode };\n", "/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation;\n\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (DirectiveLocation = {}));\n\nexport { DirectiveLocation };\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n", "/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n\nexport { Kind };\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n", "/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nexport function isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nexport function isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nexport function isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n", "import { isWhiteSpace } from './characterClasses.mjs';\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\n\nexport function dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (i < str.length && isWhiteSpace(str.charCodeAt(i))) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nexport function isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0))); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n", "/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind;\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (TokenKind = {}));\n\nexport { TokenKind };\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n", "import { syntaxError } from '../error/syntaxError.mjs';\nimport { Token } from './ast.mjs';\nimport { dedentBlockStringLines } from './blockString.mjs';\nimport { isDigit, isNameContinue, isNameStart } from './characterClasses.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport class Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = (this.token = this.lookahead());\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return (\n    kind === TokenKind.BANG ||\n    kind === TokenKind.DOLLAR ||\n    kind === TokenKind.AMP ||\n    kind === TokenKind.PAREN_L ||\n    kind === TokenKind.PAREN_R ||\n    kind === TokenKind.SPREAD ||\n    kind === TokenKind.COLON ||\n    kind === TokenKind.EQUALS ||\n    kind === TokenKind.AT ||\n    kind === TokenKind.BRACKET_L ||\n    kind === TokenKind.BRACKET_R ||\n    kind === TokenKind.BRACE_L ||\n    kind === TokenKind.PIPE ||\n    kind === TokenKind.BRACE_R\n  );\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return (\n    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)\n  );\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return (\n    isLeadingSurrogate(body.charCodeAt(location)) &&\n    isTrailingSurrogate(body.charCodeAt(location + 1))\n  );\n}\n\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n\n  if (code === undefined) {\n    return TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(lexer, TokenKind.BANG, position, position + 1);\n\n      case 0x0024:\n        // $\n        return createToken(lexer, TokenKind.DOLLAR, position, position + 1);\n\n      case 0x0026:\n        // &\n        return createToken(lexer, TokenKind.AMP, position, position + 1);\n\n      case 0x0028:\n        // (\n        return createToken(lexer, TokenKind.PAREN_L, position, position + 1);\n\n      case 0x0029:\n        // )\n        return createToken(lexer, TokenKind.PAREN_R, position, position + 1);\n\n      case 0x002e:\n        // .\n        if (\n          body.charCodeAt(position + 1) === 0x002e &&\n          body.charCodeAt(position + 2) === 0x002e\n        ) {\n          return createToken(lexer, TokenKind.SPREAD, position, position + 3);\n        }\n\n        break;\n\n      case 0x003a:\n        // :\n        return createToken(lexer, TokenKind.COLON, position, position + 1);\n\n      case 0x003d:\n        // =\n        return createToken(lexer, TokenKind.EQUALS, position, position + 1);\n\n      case 0x0040:\n        // @\n        return createToken(lexer, TokenKind.AT, position, position + 1);\n\n      case 0x005b:\n        // [\n        return createToken(lexer, TokenKind.BRACKET_L, position, position + 1);\n\n      case 0x005d:\n        // ]\n        return createToken(lexer, TokenKind.BRACKET_R, position, position + 1);\n\n      case 0x007b:\n        // {\n        return createToken(lexer, TokenKind.BRACE_L, position, position + 1);\n\n      case 0x007c:\n        // |\n        return createToken(lexer, TokenKind.PIPE, position, position + 1);\n\n      case 0x007d:\n        // }\n        return createToken(lexer, TokenKind.BRACE_R, position, position + 1);\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (\n          body.charCodeAt(position + 1) === 0x0022 &&\n          body.charCodeAt(position + 2) === 0x0022\n        ) {\n          return readBlockString(lexer, position);\n        }\n\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if (isDigit(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if (isNameStart(code)) {\n      return readName(lexer, position);\n    }\n\n    throw syntaxError(\n      lexer.source,\n      position,\n      code === 0x0027\n        ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?'\n        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)\n        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`\n        : `Invalid character: ${printCodePointAt(lexer, position)}.`,\n    );\n  }\n\n  return createToken(lexer, TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.COMMENT,\n    start,\n    position,\n    body.slice(start + 1, position),\n  );\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n\n    if (isDigit(code)) {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid number, unexpected digit after 0: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || isNameStart(code)) {\n    throw syntaxError(\n      lexer.source,\n      position,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        position,\n      )}.`,\n    );\n  }\n\n  return createToken(\n    lexer,\n    isFloat ? TokenKind.FLOAT : TokenKind.INT,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!isDigit(firstCode)) {\n    throw syntaxError(\n      lexer.source,\n      start,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        start,\n      )}.`,\n    );\n  }\n\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while (isDigit(body.charCodeAt(position))) {\n    ++position;\n  }\n\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(lexer, TokenKind.STRING, start, position + 1, value);\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape =\n        body.charCodeAt(position + 1) === 0x0075 // u\n          ? body.charCodeAt(position + 2) === 0x007b // {\n            ? readEscapedUnicodeVariableWidth(lexer, position)\n            : readEscapedUnicodeFixedWidth(lexer, position)\n          : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n\n      return {\n        value: String.fromCodePoint(point),\n        size,\n      };\n    } // Append this hex digit to the code point.\n\n    point = (point << 4) | readHexDigit(code);\n\n    if (point < 0) {\n      break;\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(\n      position,\n      position + size,\n    )}\".`,\n  );\n}\n\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6,\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (\n      body.charCodeAt(position + 6) === 0x005c &&\n      body.charCodeAt(position + 7) === 0x0075\n    ) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12,\n        };\n      }\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`,\n  );\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return (\n    (readHexDigit(body.charCodeAt(position)) << 12) |\n    (readHexDigit(body.charCodeAt(position + 1)) << 8) |\n    (readHexDigit(body.charCodeAt(position + 2)) << 4) |\n    readHexDigit(body.charCodeAt(position + 3))\n  );\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n    ? code - 0x0030\n    : code >= 0x0041 && code <= 0x0046 // A-F\n    ? code - 0x0037\n    : code >= 0x0061 && code <= 0x0066 // a-f\n    ? code - 0x0057\n    : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2,\n      };\n\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2,\n      };\n\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2,\n      };\n\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2,\n      };\n\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2,\n      };\n\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2,\n      };\n\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2,\n      };\n\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2,\n      };\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid character escape sequence: \"${body.slice(\n      position,\n      position + 2,\n    )}\".`,\n  );\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (\n      code === 0x0022 &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(\n        lexer,\n        TokenKind.BLOCK_STRING,\n        start,\n        position + 3, // Return a string of the lines joined with U+000A.\n        dedentBlockStringLines(blockLines).join('\\n'),\n      );\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (\n      code === 0x005c &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022 &&\n      body.charCodeAt(position + 3) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n\n    if (isNameContinue(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.NAME,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n", "const MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n", "import { inspect } from './inspect.mjs';\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n * See: https://webpack.js.org/guides/production/\n */\n\nexport const instanceOf =\n  /* c8 ignore next 6 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  // eslint-disable-next-line no-undef\n  process.env.NODE_ENV === 'production'\n    ? function instanceOf(value, constructor) {\n        return value instanceof constructor;\n      }\n    : function instanceOf(value, constructor) {\n        if (value instanceof constructor) {\n          return true;\n        }\n\n        if (typeof value === 'object' && value !== null) {\n          var _value$constructor;\n\n          // Prefer Symbol.toStringTag since it is immune to minification.\n          const className = constructor.prototype[Symbol.toStringTag];\n          const valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n            Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009\n              ? value[Symbol.toStringTag]\n              : (_value$constructor = value.constructor) === null ||\n                _value$constructor === void 0\n              ? void 0\n              : _value$constructor.name;\n\n          if (className === valueClassName) {\n            const stringifiedValue = inspect(value);\n            throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n          }\n        }\n\n        return false;\n      };\n", "import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport class Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      devAssert(false, `Body must be a string. Received: ${inspect(body)}.`);\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      devAssert(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      devAssert(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n", "import { syntaxError } from '../error/syntaxError.mjs';\nimport { Location, OperationTypeNode } from './ast.mjs';\nimport { DirectiveLocation } from './directiveLocation.mjs';\nimport { Kind } from './kinds.mjs';\nimport { isPunctuatorTokenKind, Lexer } from './lexer.mjs';\nimport { isSource, Source } from './source.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nexport function parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport class Parser {\n  constructor(source, options = {}) {\n    const sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n    this._tokenCounter = 0;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(TokenKind.NAME);\n    return this.node(token, {\n      kind: Kind.NAME,\n      value: token.value,\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(\n        TokenKind.SOF,\n        this.parseDefinition,\n        TokenKind.EOF,\n      ),\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription\n      ? this._lexer.lookahead()\n      : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n\n      if (hasDescription) {\n        throw syntaxError(\n          this._lexer.source,\n          this._lexer.token.start,\n          'Unexpected description, descriptions are supported only on type definitions.',\n        );\n      }\n\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    const operation = this.parseOperationType();\n    let name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return this.node(start, {\n      kind: Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return OperationTypeNode.QUERY;\n\n      case 'mutation':\n        return OperationTypeNode.MUTATION;\n\n      case 'subscription':\n        return OperationTypeNode.SUBSCRIPTION;\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseVariableDefinition,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS)\n        ? this.parseConstValueLiteral()\n        : undefined,\n      directives: this.parseConstDirectives(),\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(\n        TokenKind.BRACE_L,\n        this.parseSelection,\n        TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(TokenKind.SPREAD)\n      ? this.parseFragment()\n      : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return this.node(start, {\n      kind: Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L)\n        ? this.parseSelectionSet()\n        : undefined,\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  }\n\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.allowLegacyFragmentVariables === true) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.INT,\n          value: token.value,\n        });\n\n      case TokenKind.FLOAT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.FLOAT,\n          value: token.value,\n        });\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this.advanceLexer();\n\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: true,\n            });\n\n          case 'false':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: false,\n            });\n\n          case 'null':\n            return this.node(token, {\n              kind: Kind.NULL,\n            });\n\n          default:\n            return this.node(token, {\n              kind: Kind.ENUM,\n              value: token.value,\n            });\n        }\n\n      case TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(TokenKind.DOLLAR);\n\n          if (this._lexer.token.kind === TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw syntaxError(\n              this._lexer.source,\n              token.start,\n              `Unexpected variable \"$${varName}\" in constant value.`,\n            );\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n\n        return this.parseVariable();\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n\n  parseStringLiteral() {\n    const token = this._lexer.token;\n    this.advanceLexer();\n    return this.node(token, {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return this.node(start, {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: Kind.LIST_TYPE,\n        type: innerType,\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return this.node(start, {\n        kind: Kind.NON_NULL_TYPE,\n        type,\n      });\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n    return this.node(start, {\n      kind: Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type,\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements')\n      ? this.delimitedMany(TokenKind.AMP, this.parseNamedType)\n      : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseFieldDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives,\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseInputValueDef,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives,\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS)\n      ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType)\n      : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseEnumValueDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (\n      this._lexer.token.value === 'true' ||\n      this._lexer.token.value === 'false' ||\n      this._lexer.token.value === 'null'\n    ) {\n      throw syntaxError(\n        this._lexer.source,\n        this._lexer.token.start,\n        `${getTokenDesc(\n          this._lexer.token,\n        )} is reserved and cannot be used for an enum value.`,\n      );\n    }\n\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseInputValueDef,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations,\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n\n    if (Object.prototype.hasOwnProperty.call(DirectiveLocation, name.value)) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    if (this._options.noLocation !== true) {\n      node.loc = new Location(\n        startToken,\n        this._lexer.lastToken,\n        this._lexer.source,\n      );\n    }\n\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return token;\n    }\n\n    throw syntaxError(\n      this._lexer.source,\n      token.start,\n      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n    } else {\n      throw syntaxError(\n        this._lexer.source,\n        token.start,\n        `Expected \"${value}\", found ${getTokenDesc(token)}.`,\n      );\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token =\n      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(\n      this._lexer.source,\n      token.start,\n      `Unexpected ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  }\n\n  advanceLexer() {\n    const { maxTokens } = this._options;\n\n    const token = this._lexer.advance();\n\n    if (maxTokens !== undefined && token.kind !== TokenKind.EOF) {\n      ++this._tokenCounter;\n\n      if (this._tokenCounter > maxTokens) {\n        throw syntaxError(\n          this._lexer.source,\n          token.start,\n          `Document contains more that ${maxTokens} tokens. Parsing aborted.`,\n        );\n      }\n    }\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? `\"${kind}\"` : kind;\n}\n", "const MAX_SUGGESTIONS = 5;\n/**\n * Given [ A, B, C ] return ' Did you mean A, B, or C?'.\n */\n\nexport function didYouMean(firstArg, secondArg) {\n  const [subMessage, suggestionsArg] = secondArg\n    ? [firstArg, secondArg]\n    : [undefined, firstArg];\n  let message = ' Did you mean ';\n\n  if (subMessage) {\n    message += subMessage + ' ';\n  }\n\n  const suggestions = suggestionsArg.map((x) => `\"${x}\"`);\n\n  switch (suggestions.length) {\n    case 0:\n      return '';\n\n    case 1:\n      return message + suggestions[0] + '?';\n\n    case 2:\n      return message + suggestions[0] + ' or ' + suggestions[1] + '?';\n  }\n\n  const selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  const lastItem = selected.pop();\n  return message + selected.join(', ') + ', or ' + lastItem + '?';\n}\n", "/**\n * Returns the first argument it receives.\n */\nexport function identityFunc(x) {\n  return x;\n}\n", "/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * for each value in the array.\n *\n * This provides a convenient lookup for the array items if the key function\n * produces unique results.\n * ```ts\n * const phoneBook = [\n *   { name: 'Jon', num: '555-1234' },\n *   { name: 'Jenny', num: '867-5309' }\n * ]\n *\n * const entriesByName = keyMap(\n *   phoneBook,\n *   entry => entry.name\n * )\n *\n * // {\n * //   Jon: { name: 'Jon', num: '555-1234' },\n * //   Jenny: { name: 'Jenny', num: '867-5309' }\n * // }\n *\n * const jennyEntry = entriesByName['Jenny']\n *\n * // { name: 'Jenny', num: '857-6309' }\n * ```\n */\nexport function keyMap(list, keyFn) {\n  const result = Object.create(null);\n\n  for (const item of list) {\n    result[keyFn(item)] = item;\n  }\n\n  return result;\n}\n", "/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n * ```ts\n * const phoneBook = [\n *   { name: 'Jon', num: '555-1234' },\n *   { name: 'Jenny', num: '867-5309' }\n * ]\n *\n * // { Jon: '555-1234', Jenny: '867-5309' }\n * const phonesByName = keyValMap(\n *   phoneBook,\n *   entry => entry.name,\n *   entry => entry.num\n * )\n * ```\n */\nexport function keyValMap(list, keyFn, valFn) {\n  const result = Object.create(null);\n\n  for (const item of list) {\n    result[keyFn(item)] = valFn(item);\n  }\n\n  return result;\n}\n", "/**\n * Creates an object map with the same keys as `map` and values generated by\n * running each value of `map` thru `fn`.\n */\nexport function mapValue(map, fn) {\n  const result = Object.create(null);\n\n  for (const key of Object.keys(map)) {\n    result[key] = fn(map[key], key);\n  }\n\n  return result;\n}\n", "/**\n * Returns a number indicating whether a reference string comes before, or after,\n * or is the same as the given string in natural sort order.\n *\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\n *\n */\nexport function naturalCompare(aStr, bStr) {\n  let aIndex = 0;\n  let bIndex = 0;\n\n  while (aIndex < aStr.length && bIndex < bStr.length) {\n    let aChar = aStr.charCodeAt(aIndex);\n    let bChar = bStr.charCodeAt(bIndex);\n\n    if (isDigit(aChar) && isDigit(bChar)) {\n      let aNum = 0;\n\n      do {\n        ++aIndex;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIndex);\n      } while (isDigit(aChar) && aNum > 0);\n\n      let bNum = 0;\n\n      do {\n        ++bIndex;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIndex);\n      } while (isDigit(bChar) && bNum > 0);\n\n      if (aNum < bNum) {\n        return -1;\n      }\n\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n\n      if (aChar > bChar) {\n        return 1;\n      }\n\n      ++aIndex;\n      ++bIndex;\n    }\n  }\n\n  return aStr.length - bStr.length;\n}\nconst DIGIT_0 = 48;\nconst DIGIT_9 = 57;\n\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}\n", "import { naturalCompare } from './naturalCompare.mjs';\n/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\n\nexport function suggestionList(input, options) {\n  const optionsByDistance = Object.create(null);\n  const lexicalDistance = new LexicalDistance(input);\n  const threshold = Math.floor(input.length * 0.4) + 1;\n\n  for (const option of options) {\n    const distance = lexicalDistance.measure(option, threshold);\n\n    if (distance !== undefined) {\n      optionsByDistance[option] = distance;\n    }\n  }\n\n  return Object.keys(optionsByDistance).sort((a, b) => {\n    const distanceDiff = optionsByDistance[a] - optionsByDistance[b];\n    return distanceDiff !== 0 ? distanceDiff : naturalCompare(a, b);\n  });\n}\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * Includes a custom alteration from Damerau-Levenshtein to treat case changes\n * as a single edit which helps identify mis-cased values with an edit distance\n * of 1.\n *\n * This distance can be useful for detecting typos in input or sorting\n */\n\nclass LexicalDistance {\n  constructor(input) {\n    this._input = input;\n    this._inputLowerCase = input.toLowerCase();\n    this._inputArray = stringToArray(this._inputLowerCase);\n    this._rows = [\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0),\n    ];\n  }\n\n  measure(option, threshold) {\n    if (this._input === option) {\n      return 0;\n    }\n\n    const optionLowerCase = option.toLowerCase(); // Any case change counts as a single edit\n\n    if (this._inputLowerCase === optionLowerCase) {\n      return 1;\n    }\n\n    let a = stringToArray(optionLowerCase);\n    let b = this._inputArray;\n\n    if (a.length < b.length) {\n      const tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    const aLength = a.length;\n    const bLength = b.length;\n\n    if (aLength - bLength > threshold) {\n      return undefined;\n    }\n\n    const rows = this._rows;\n\n    for (let j = 0; j <= bLength; j++) {\n      rows[0][j] = j;\n    }\n\n    for (let i = 1; i <= aLength; i++) {\n      const upRow = rows[(i - 1) % 3];\n      const currentRow = rows[i % 3];\n      let smallestCell = (currentRow[0] = i);\n\n      for (let j = 1; j <= bLength; j++) {\n        const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n        let currentCell = Math.min(\n          upRow[j] + 1, // delete\n          currentRow[j - 1] + 1, // insert\n          upRow[j - 1] + cost, // substitute\n        );\n\n        if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n          // transposition\n          const doubleDiagonalCell = rows[(i - 2) % 3][j - 2];\n          currentCell = Math.min(currentCell, doubleDiagonalCell + 1);\n        }\n\n        if (currentCell < smallestCell) {\n          smallestCell = currentCell;\n        }\n\n        currentRow[j] = currentCell;\n      } // Early exit, since distance can't go smaller than smallest element of the previous row.\n\n      if (smallestCell > threshold) {\n        return undefined;\n      }\n    }\n\n    const distance = rows[aLength % 3][bLength];\n    return distance <= threshold ? distance : undefined;\n  }\n}\n\nfunction stringToArray(str) {\n  const strLength = str.length;\n  const array = new Array(strLength);\n\n  for (let i = 0; i < strLength; ++i) {\n    array[i] = str.charCodeAt(i);\n  }\n\n  return array;\n}\n", "export function toObjMap(obj) {\n  if (obj == null) {\n    return Object.create(null);\n  }\n\n  if (Object.getPrototypeOf(obj) === null) {\n    return obj;\n  }\n\n  const map = Object.create(null);\n\n  for (const [key, value] of Object.entries(obj)) {\n    map[key] = value;\n  }\n\n  return map;\n}\n", "/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nexport function printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n", "import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isNode, QueryDocumentKeys } from './ast.mjs';\nimport { Kind } from './kinds.mjs';\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport const BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexport function visit(root, visitor, visitorKeys = QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      path.push(key);\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      isNode(node) || devAssert(false, `Invalid AST Node: ${inspect(node)}.`);\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if (isNode(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nexport function getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n", "import { printBlockString } from './blockString.mjs';\nimport { printString } from './printString.mjs';\nimport { visit } from './visitor.mjs';\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, printDocASTReducer);\n}\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString ? printBlockString(value) : printString(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n", "import { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { Kind } from '../language/kinds.mjs';\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\n\nexport function valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case Kind.NULL:\n      return null;\n\n    case Kind.INT:\n      return parseInt(valueNode.value, 10);\n\n    case Kind.FLOAT:\n      return parseFloat(valueNode.value);\n\n    case Kind.STRING:\n    case Kind.ENUM:\n    case Kind.BOOLEAN:\n      return valueNode.value;\n\n    case Kind.LIST:\n      return valueNode.values.map((node) =>\n        valueFromASTUntyped(node, variables),\n      );\n\n    case Kind.OBJECT:\n      return keyValMap(\n        valueNode.fields,\n        (field) => field.name.value,\n        (field) => valueFromASTUntyped(field.value, variables),\n      );\n\n    case Kind.VARIABLE:\n      return variables === null || variables === void 0\n        ? void 0\n        : variables[valueNode.name.value];\n  }\n}\n", "import { devAssert } from '../jsutils/devAssert.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { isNameContinue, isNameStart } from '../language/characterClasses.mjs';\n/**\n * Upholds the spec rules about naming.\n */\n\nexport function assertName(name) {\n  name != null || devAssert(false, 'Must provide name.');\n  typeof name === 'string' || devAssert(false, 'Expected name to be a string.');\n\n  if (name.length === 0) {\n    throw new GraphQLError('Expected name to be a non-empty string.');\n  }\n\n  for (let i = 1; i < name.length; ++i) {\n    if (!isNameContinue(name.charCodeAt(i))) {\n      throw new GraphQLError(\n        `Names must only contain [_a-zA-Z0-9] but \"${name}\" does not.`,\n      );\n    }\n  }\n\n  if (!isNameStart(name.charCodeAt(0))) {\n    throw new GraphQLError(\n      `Names must start with [_a-zA-Z] but \"${name}\" does not.`,\n    );\n  }\n\n  return name;\n}\n/**\n * Upholds the spec rules about naming enum values.\n *\n * @internal\n */\n\nexport function assertEnumValueName(name) {\n  if (name === 'true' || name === 'false' || name === 'null') {\n    throw new GraphQLError(`Enum values cannot be named: ${name}`);\n  }\n\n  return assertName(name);\n}\n", "import { devAssert } from '../jsutils/devAssert.mjs';\nimport { didYouMean } from '../jsutils/didYouMean.mjs';\nimport { identityFunc } from '../jsutils/identityFunc.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { mapValue } from '../jsutils/mapValue.mjs';\nimport { suggestionList } from '../jsutils/suggestionList.mjs';\nimport { toObjMap } from '../jsutils/toObjMap.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport { valueFromASTUntyped } from '../utilities/valueFromASTUntyped.mjs';\nimport { assertEnumValueName, assertName } from './assertName.mjs';\nexport function isType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type) ||\n    isListType(type) ||\n    isNonNullType(type)\n  );\n}\nexport function assertType(type) {\n  if (!isType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL type.`);\n  }\n\n  return type;\n}\n/**\n * There are predicates for each kind of GraphQL type.\n */\n\nexport function isScalarType(type) {\n  return instanceOf(type, GraphQLScalarType);\n}\nexport function assertScalarType(type) {\n  if (!isScalarType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Scalar type.`);\n  }\n\n  return type;\n}\nexport function isObjectType(type) {\n  return instanceOf(type, GraphQLObjectType);\n}\nexport function assertObjectType(type) {\n  if (!isObjectType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Object type.`);\n  }\n\n  return type;\n}\nexport function isInterfaceType(type) {\n  return instanceOf(type, GraphQLInterfaceType);\n}\nexport function assertInterfaceType(type) {\n  if (!isInterfaceType(type)) {\n    throw new Error(\n      `Expected ${inspect(type)} to be a GraphQL Interface type.`,\n    );\n  }\n\n  return type;\n}\nexport function isUnionType(type) {\n  return instanceOf(type, GraphQLUnionType);\n}\nexport function assertUnionType(type) {\n  if (!isUnionType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Union type.`);\n  }\n\n  return type;\n}\nexport function isEnumType(type) {\n  return instanceOf(type, GraphQLEnumType);\n}\nexport function assertEnumType(type) {\n  if (!isEnumType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Enum type.`);\n  }\n\n  return type;\n}\nexport function isInputObjectType(type) {\n  return instanceOf(type, GraphQLInputObjectType);\n}\nexport function assertInputObjectType(type) {\n  if (!isInputObjectType(type)) {\n    throw new Error(\n      `Expected ${inspect(type)} to be a GraphQL Input Object type.`,\n    );\n  }\n\n  return type;\n}\nexport function isListType(type) {\n  return instanceOf(type, GraphQLList);\n}\nexport function assertListType(type) {\n  if (!isListType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL List type.`);\n  }\n\n  return type;\n}\nexport function isNonNullType(type) {\n  return instanceOf(type, GraphQLNonNull);\n}\nexport function assertNonNullType(type) {\n  if (!isNonNullType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Non-Null type.`);\n  }\n\n  return type;\n}\n/**\n * These types may be used as input types for arguments and directives.\n */\n\nexport function isInputType(type) {\n  return (\n    isScalarType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type) ||\n    (isWrappingType(type) && isInputType(type.ofType))\n  );\n}\nexport function assertInputType(type) {\n  if (!isInputType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL input type.`);\n  }\n\n  return type;\n}\n/**\n * These types may be used as output types as the result of fields.\n */\n\nexport function isOutputType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    (isWrappingType(type) && isOutputType(type.ofType))\n  );\n}\nexport function assertOutputType(type) {\n  if (!isOutputType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL output type.`);\n  }\n\n  return type;\n}\n/**\n * These types may describe types which may be leaf values.\n */\n\nexport function isLeafType(type) {\n  return isScalarType(type) || isEnumType(type);\n}\nexport function assertLeafType(type) {\n  if (!isLeafType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL leaf type.`);\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isCompositeType(type) {\n  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);\n}\nexport function assertCompositeType(type) {\n  if (!isCompositeType(type)) {\n    throw new Error(\n      `Expected ${inspect(type)} to be a GraphQL composite type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isAbstractType(type) {\n  return isInterfaceType(type) || isUnionType(type);\n}\nexport function assertAbstractType(type) {\n  if (!isAbstractType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL abstract type.`);\n  }\n\n  return type;\n}\n/**\n * List Type Wrapper\n *\n * A list is a wrapping type which points to another type.\n * Lists are often created within the context of defining the fields of\n * an object type.\n *\n * Example:\n *\n * ```ts\n * const PersonType = new GraphQLObjectType({\n *   name: 'Person',\n *   fields: () => ({\n *     parents: { type: new GraphQLList(PersonType) },\n *     children: { type: new GraphQLList(PersonType) },\n *   })\n * })\n * ```\n */\n\nexport class GraphQLList {\n  constructor(ofType) {\n    isType(ofType) ||\n      devAssert(false, `Expected ${inspect(ofType)} to be a GraphQL type.`);\n    this.ofType = ofType;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLList';\n  }\n\n  toString() {\n    return '[' + String(this.ofType) + ']';\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n/**\n * Non-Null Type Wrapper\n *\n * A non-null is a wrapping type which points to another type.\n * Non-null types enforce that their values are never null and can ensure\n * an error is raised if this ever occurs during a request. It is useful for\n * fields which you can make a strong guarantee on non-nullability, for example\n * usually the id field of a database row will never be null.\n *\n * Example:\n *\n * ```ts\n * const RowType = new GraphQLObjectType({\n *   name: 'Row',\n *   fields: () => ({\n *     id: { type: new GraphQLNonNull(GraphQLString) },\n *   })\n * })\n * ```\n * Note: the enforcement of non-nullability occurs within the executor.\n */\n\nexport class GraphQLNonNull {\n  constructor(ofType) {\n    isNullableType(ofType) ||\n      devAssert(\n        false,\n        `Expected ${inspect(ofType)} to be a GraphQL nullable type.`,\n      );\n    this.ofType = ofType;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLNonNull';\n  }\n\n  toString() {\n    return String(this.ofType) + '!';\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n/**\n * These types wrap and modify other types\n */\n\nexport function isWrappingType(type) {\n  return isListType(type) || isNonNullType(type);\n}\nexport function assertWrappingType(type) {\n  if (!isWrappingType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL wrapping type.`);\n  }\n\n  return type;\n}\n/**\n * These types can all accept null as a value.\n */\n\nexport function isNullableType(type) {\n  return isType(type) && !isNonNullType(type);\n}\nexport function assertNullableType(type) {\n  if (!isNullableType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL nullable type.`);\n  }\n\n  return type;\n}\nexport function getNullableType(type) {\n  if (type) {\n    return isNonNullType(type) ? type.ofType : type;\n  }\n}\n/**\n * These named types do not include modifiers like List or NonNull.\n */\n\nexport function isNamedType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type)\n  );\n}\nexport function assertNamedType(type) {\n  if (!isNamedType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL named type.`);\n  }\n\n  return type;\n}\nexport function getNamedType(type) {\n  if (type) {\n    let unwrappedType = type;\n\n    while (isWrappingType(unwrappedType)) {\n      unwrappedType = unwrappedType.ofType;\n    }\n\n    return unwrappedType;\n  }\n}\n/**\n * Used while defining GraphQL types to allow for circular references in\n * otherwise immutable type definitions.\n */\n\nexport function resolveReadonlyArrayThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\nexport function resolveObjMapThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Scalar Type Definition\n *\n * The leaf values of any request and input values to arguments are\n * Scalars (or Enums) and are defined with a name and a series of functions\n * used to parse input from ast or variables and to ensure validity.\n *\n * If a type's serialize function returns `null` or does not return a value\n * (i.e. it returns `undefined`) then an error will be raised and a `null`\n * value will be returned in the response. It is always better to validate\n *\n * Example:\n *\n * ```ts\n * const OddType = new GraphQLScalarType({\n *   name: 'Odd',\n *   serialize(value) {\n *     if (!Number.isFinite(value)) {\n *       throw new Error(\n *         `Scalar \"Odd\" cannot represent \"${value}\" since it is not a finite number.`,\n *       );\n *     }\n *\n *     if (value % 2 === 0) {\n *       throw new Error(`Scalar \"Odd\" cannot represent \"${value}\" since it is even.`);\n *     }\n *     return value;\n *   }\n * });\n * ```\n */\nexport class GraphQLScalarType {\n  constructor(config) {\n    var _config$parseValue,\n      _config$serialize,\n      _config$parseLiteral,\n      _config$extensionASTN;\n\n    const parseValue =\n      (_config$parseValue = config.parseValue) !== null &&\n      _config$parseValue !== void 0\n        ? _config$parseValue\n        : identityFunc;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.specifiedByURL = config.specifiedByURL;\n    this.serialize =\n      (_config$serialize = config.serialize) !== null &&\n      _config$serialize !== void 0\n        ? _config$serialize\n        : identityFunc;\n    this.parseValue = parseValue;\n    this.parseLiteral =\n      (_config$parseLiteral = config.parseLiteral) !== null &&\n      _config$parseLiteral !== void 0\n        ? _config$parseLiteral\n        : (node, variables) => parseValue(valueFromASTUntyped(node, variables));\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN = config.extensionASTNodes) !== null &&\n      _config$extensionASTN !== void 0\n        ? _config$extensionASTN\n        : [];\n    config.specifiedByURL == null ||\n      typeof config.specifiedByURL === 'string' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"specifiedByURL\" as a string, ` +\n          `but got: ${inspect(config.specifiedByURL)}.`,\n      );\n    config.serialize == null ||\n      typeof config.serialize === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"serialize\" function. If this custom Scalar is also used as an input type, ensure \"parseValue\" and \"parseLiteral\" functions are also provided.`,\n      );\n\n    if (config.parseLiteral) {\n      (typeof config.parseValue === 'function' &&\n        typeof config.parseLiteral === 'function') ||\n        devAssert(\n          false,\n          `${this.name} must provide both \"parseValue\" and \"parseLiteral\" functions.`,\n        );\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLScalarType';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      specifiedByURL: this.specifiedByURL,\n      serialize: this.serialize,\n      parseValue: this.parseValue,\n      parseLiteral: this.parseLiteral,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\n/**\n * Object Type Definition\n *\n * Almost all of the GraphQL types you define will be object types. Object types\n * have a name, but most importantly describe their fields.\n *\n * Example:\n *\n * ```ts\n * const AddressType = new GraphQLObjectType({\n *   name: 'Address',\n *   fields: {\n *     street: { type: GraphQLString },\n *     number: { type: GraphQLInt },\n *     formatted: {\n *       type: GraphQLString,\n *       resolve(obj) {\n *         return obj.number + ' ' + obj.street\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * When two types need to refer to each other, or a type needs to refer to\n * itself in a field, you can use a function expression (aka a closure or a\n * thunk) to supply the fields lazily.\n *\n * Example:\n *\n * ```ts\n * const PersonType = new GraphQLObjectType({\n *   name: 'Person',\n *   fields: () => ({\n *     name: { type: GraphQLString },\n *     bestFriend: { type: PersonType },\n *   })\n * });\n * ```\n */\nexport class GraphQLObjectType {\n  constructor(config) {\n    var _config$extensionASTN2;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.isTypeOf = config.isTypeOf;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN2 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN2 !== void 0\n        ? _config$extensionASTN2\n        : [];\n\n    this._fields = () => defineFieldMap(config);\n\n    this._interfaces = () => defineInterfaces(config);\n\n    config.isTypeOf == null ||\n      typeof config.isTypeOf === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"isTypeOf\" as a function, ` +\n          `but got: ${inspect(config.isTypeOf)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLObjectType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      isTypeOf: this.isTypeOf,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction defineInterfaces(config) {\n  var _config$interfaces;\n\n  const interfaces = resolveReadonlyArrayThunk(\n    (_config$interfaces = config.interfaces) !== null &&\n      _config$interfaces !== void 0\n      ? _config$interfaces\n      : [],\n  );\n  Array.isArray(interfaces) ||\n    devAssert(\n      false,\n      `${config.name} interfaces must be an Array or a function which returns an Array.`,\n    );\n  return interfaces;\n}\n\nfunction defineFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) ||\n    devAssert(\n      false,\n      `${config.name} fields must be an object with field names as keys or a function which returns such an object.`,\n    );\n  return mapValue(fieldMap, (fieldConfig, fieldName) => {\n    var _fieldConfig$args;\n\n    isPlainObj(fieldConfig) ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} field config must be an object.`,\n      );\n    fieldConfig.resolve == null ||\n      typeof fieldConfig.resolve === 'function' ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} field resolver must be a function if ` +\n          `provided, but got: ${inspect(fieldConfig.resolve)}.`,\n      );\n    const argsConfig =\n      (_fieldConfig$args = fieldConfig.args) !== null &&\n      _fieldConfig$args !== void 0\n        ? _fieldConfig$args\n        : {};\n    isPlainObj(argsConfig) ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} args must be an object with argument names as keys.`,\n      );\n    return {\n      name: assertName(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      args: defineArguments(argsConfig),\n      resolve: fieldConfig.resolve,\n      subscribe: fieldConfig.subscribe,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode,\n    };\n  });\n}\n\nexport function defineArguments(config) {\n  return Object.entries(config).map(([argName, argConfig]) => ({\n    name: assertName(argName),\n    description: argConfig.description,\n    type: argConfig.type,\n    defaultValue: argConfig.defaultValue,\n    deprecationReason: argConfig.deprecationReason,\n    extensions: toObjMap(argConfig.extensions),\n    astNode: argConfig.astNode,\n  }));\n}\n\nfunction isPlainObj(obj) {\n  return isObjectLike(obj) && !Array.isArray(obj);\n}\n\nfunction fieldsToFieldsConfig(fields) {\n  return mapValue(fields, (field) => ({\n    description: field.description,\n    type: field.type,\n    args: argsToArgsConfig(field.args),\n    resolve: field.resolve,\n    subscribe: field.subscribe,\n    deprecationReason: field.deprecationReason,\n    extensions: field.extensions,\n    astNode: field.astNode,\n  }));\n}\n/**\n * @internal\n */\n\nexport function argsToArgsConfig(args) {\n  return keyValMap(\n    args,\n    (arg) => arg.name,\n    (arg) => ({\n      description: arg.description,\n      type: arg.type,\n      defaultValue: arg.defaultValue,\n      deprecationReason: arg.deprecationReason,\n      extensions: arg.extensions,\n      astNode: arg.astNode,\n    }),\n  );\n}\nexport function isRequiredArgument(arg) {\n  return isNonNullType(arg.type) && arg.defaultValue === undefined;\n}\n\n/**\n * Interface Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Interface type\n * is used to describe what types are possible, what fields are in common across\n * all types, as well as a function to determine which type is actually used\n * when the field is resolved.\n *\n * Example:\n *\n * ```ts\n * const EntityType = new GraphQLInterfaceType({\n *   name: 'Entity',\n *   fields: {\n *     name: { type: GraphQLString }\n *   }\n * });\n * ```\n */\nexport class GraphQLInterfaceType {\n  constructor(config) {\n    var _config$extensionASTN3;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN3 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN3 !== void 0\n        ? _config$extensionASTN3\n        : [];\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    config.resolveType == null ||\n      typeof config.resolveType === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"resolveType\" as a function, ` +\n          `but got: ${inspect(config.resolveType)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLInterfaceType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\n/**\n * Union Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Union type\n * is used to describe what types are possible as well as providing a function\n * to determine which type is actually used when the field is resolved.\n *\n * Example:\n *\n * ```ts\n * const PetType = new GraphQLUnionType({\n *   name: 'Pet',\n *   types: [ DogType, CatType ],\n *   resolveType(value) {\n *     if (value instanceof Dog) {\n *       return DogType;\n *     }\n *     if (value instanceof Cat) {\n *       return CatType;\n *     }\n *   }\n * });\n * ```\n */\nexport class GraphQLUnionType {\n  constructor(config) {\n    var _config$extensionASTN4;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN4 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN4 !== void 0\n        ? _config$extensionASTN4\n        : [];\n    this._types = defineTypes.bind(undefined, config);\n    config.resolveType == null ||\n      typeof config.resolveType === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"resolveType\" as a function, ` +\n          `but got: ${inspect(config.resolveType)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLUnionType';\n  }\n\n  getTypes() {\n    if (typeof this._types === 'function') {\n      this._types = this._types();\n    }\n\n    return this._types;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      types: this.getTypes(),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction defineTypes(config) {\n  const types = resolveReadonlyArrayThunk(config.types);\n  Array.isArray(types) ||\n    devAssert(\n      false,\n      `Must provide Array of types or a function which returns such an array for Union ${config.name}.`,\n    );\n  return types;\n}\n\n/**\n * Enum Type Definition\n *\n * Some leaf values of requests and input values are Enums. GraphQL serializes\n * Enum values as strings, however internally Enums can be represented by any\n * kind of type, often integers.\n *\n * Example:\n *\n * ```ts\n * const RGBType = new GraphQLEnumType({\n *   name: 'RGB',\n *   values: {\n *     RED: { value: 0 },\n *     GREEN: { value: 1 },\n *     BLUE: { value: 2 }\n *   }\n * });\n * ```\n *\n * Note: If a value is not provided in a definition, the name of the enum value\n * will be used as its internal value.\n */\nexport class GraphQLEnumType {\n  /* <T> */\n  constructor(config) {\n    var _config$extensionASTN5;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN5 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN5 !== void 0\n        ? _config$extensionASTN5\n        : [];\n    this._values = defineEnumValues(this.name, config.values);\n    this._valueLookup = new Map(\n      this._values.map((enumValue) => [enumValue.value, enumValue]),\n    );\n    this._nameLookup = keyMap(this._values, (value) => value.name);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLEnumType';\n  }\n\n  getValues() {\n    return this._values;\n  }\n\n  getValue(name) {\n    return this._nameLookup[name];\n  }\n\n  serialize(outputValue) {\n    const enumValue = this._valueLookup.get(outputValue);\n\n    if (enumValue === undefined) {\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent value: ${inspect(outputValue)}`,\n      );\n    }\n\n    return enumValue.name;\n  }\n\n  parseValue(inputValue) /* T */\n  {\n    if (typeof inputValue !== 'string') {\n      const valueStr = inspect(inputValue);\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-string value: ${valueStr}.` +\n          didYouMeanEnumValue(this, valueStr),\n      );\n    }\n\n    const enumValue = this.getValue(inputValue);\n\n    if (enumValue == null) {\n      throw new GraphQLError(\n        `Value \"${inputValue}\" does not exist in \"${this.name}\" enum.` +\n          didYouMeanEnumValue(this, inputValue),\n      );\n    }\n\n    return enumValue.value;\n  }\n\n  parseLiteral(valueNode, _variables) /* T */\n  {\n    // Note: variables will be resolved to a value before calling this function.\n    if (valueNode.kind !== Kind.ENUM) {\n      const valueStr = print(valueNode);\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-enum value: ${valueStr}.` +\n          didYouMeanEnumValue(this, valueStr),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const enumValue = this.getValue(valueNode.value);\n\n    if (enumValue == null) {\n      const valueStr = print(valueNode);\n      throw new GraphQLError(\n        `Value \"${valueStr}\" does not exist in \"${this.name}\" enum.` +\n          didYouMeanEnumValue(this, valueStr),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return enumValue.value;\n  }\n\n  toConfig() {\n    const values = keyValMap(\n      this.getValues(),\n      (value) => value.name,\n      (value) => ({\n        description: value.description,\n        value: value.value,\n        deprecationReason: value.deprecationReason,\n        extensions: value.extensions,\n        astNode: value.astNode,\n      }),\n    );\n    return {\n      name: this.name,\n      description: this.description,\n      values,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction didYouMeanEnumValue(enumType, unknownValueStr) {\n  const allNames = enumType.getValues().map((value) => value.name);\n  const suggestedValues = suggestionList(unknownValueStr, allNames);\n  return didYouMean('the enum value', suggestedValues);\n}\n\nfunction defineEnumValues(typeName, valueMap) {\n  isPlainObj(valueMap) ||\n    devAssert(\n      false,\n      `${typeName} values must be an object with value names as keys.`,\n    );\n  return Object.entries(valueMap).map(([valueName, valueConfig]) => {\n    isPlainObj(valueConfig) ||\n      devAssert(\n        false,\n        `${typeName}.${valueName} must refer to an object with a \"value\" key ` +\n          `representing an internal value but got: ${inspect(valueConfig)}.`,\n      );\n    return {\n      name: assertEnumValueName(valueName),\n      description: valueConfig.description,\n      value: valueConfig.value !== undefined ? valueConfig.value : valueName,\n      deprecationReason: valueConfig.deprecationReason,\n      extensions: toObjMap(valueConfig.extensions),\n      astNode: valueConfig.astNode,\n    };\n  });\n}\n\n/**\n * Input Object Type Definition\n *\n * An input object defines a structured collection of fields which may be\n * supplied to a field argument.\n *\n * Using `NonNull` will ensure that a value must be provided by the query\n *\n * Example:\n *\n * ```ts\n * const GeoPoint = new GraphQLInputObjectType({\n *   name: 'GeoPoint',\n *   fields: {\n *     lat: { type: new GraphQLNonNull(GraphQLFloat) },\n *     lon: { type: new GraphQLNonNull(GraphQLFloat) },\n *     alt: { type: GraphQLFloat, defaultValue: 0 },\n *   }\n * });\n * ```\n */\nexport class GraphQLInputObjectType {\n  constructor(config) {\n    var _config$extensionASTN6;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN6 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN6 !== void 0\n        ? _config$extensionASTN6\n        : [];\n    this._fields = defineInputFieldMap.bind(undefined, config);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLInputObjectType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  toConfig() {\n    const fields = mapValue(this.getFields(), (field) => ({\n      description: field.description,\n      type: field.type,\n      defaultValue: field.defaultValue,\n      deprecationReason: field.deprecationReason,\n      extensions: field.extensions,\n      astNode: field.astNode,\n    }));\n    return {\n      name: this.name,\n      description: this.description,\n      fields,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction defineInputFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) ||\n    devAssert(\n      false,\n      `${config.name} fields must be an object with field names as keys or a function which returns such an object.`,\n    );\n  return mapValue(fieldMap, (fieldConfig, fieldName) => {\n    !('resolve' in fieldConfig) ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} field has a resolve property, but Input Types cannot define resolvers.`,\n      );\n    return {\n      name: assertName(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      defaultValue: fieldConfig.defaultValue,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode,\n    };\n  });\n}\n\nexport function isRequiredInputField(field) {\n  return isNonNullType(field.type) && field.defaultValue === undefined;\n}\n", "import {\n  isAbstractType,\n  isInterfaceType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n} from '../type/definition.mjs';\n\n/**\n * Provided two types, return true if the types are equal (invariant).\n */\nexport function isEqualType(typeA, typeB) {\n  // Equivalent types are equal.\n  if (typeA === typeB) {\n    return true;\n  } // If either type is non-null, the other must also be non-null.\n\n  if (isNonNullType(typeA) && isNonNullType(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // If either type is a list, the other must also be a list.\n\n  if (isListType(typeA) && isListType(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // Otherwise the types are not equal.\n\n  return false;\n}\n/**\n * Provided a type and a super type, return true if the first type is either\n * equal or a subset of the second super type (covariant).\n */\n\nexport function isTypeSubTypeOf(schema, maybeSubType, superType) {\n  // Equivalent type is a valid subtype\n  if (maybeSubType === superType) {\n    return true;\n  } // If superType is non-null, maybeSubType must also be non-null.\n\n  if (isNonNullType(superType)) {\n    if (isNonNullType(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if (isNonNullType(maybeSubType)) {\n    // If superType is nullable, maybeSubType may be non-null or nullable.\n    return isTypeSubTypeOf(schema, maybeSubType.ofType, superType);\n  } // If superType type is a list, maybeSubType type must also be a list.\n\n  if (isListType(superType)) {\n    if (isListType(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if (isListType(maybeSubType)) {\n    // If superType is not a list, maybeSubType must also be not a list.\n    return false;\n  } // If superType type is an abstract type, check if it is super type of maybeSubType.\n  // Otherwise, the child type is not a valid subtype of the parent type.\n\n  return (\n    isAbstractType(superType) &&\n    (isInterfaceType(maybeSubType) || isObjectType(maybeSubType)) &&\n    schema.isSubType(superType, maybeSubType)\n  );\n}\n/**\n * Provided two composite types, determine if they \"overlap\". Two composite\n * types overlap when the Sets of possible concrete types for each intersect.\n *\n * This is often used to determine if a fragment of a given type could possibly\n * be visited in a context of another type.\n *\n * This function is commutative.\n */\n\nexport function doTypesOverlap(schema, typeA, typeB) {\n  // Equivalent types overlap\n  if (typeA === typeB) {\n    return true;\n  }\n\n  if (isAbstractType(typeA)) {\n    if (isAbstractType(typeB)) {\n      // If both types are abstract, then determine if there is any intersection\n      // between possible concrete types of each.\n      return schema\n        .getPossibleTypes(typeA)\n        .some((type) => schema.isSubType(typeB, type));\n    } // Determine if the latter type is a possible concrete type of the former.\n\n    return schema.isSubType(typeA, typeB);\n  }\n\n  if (isAbstractType(typeB)) {\n    // Determine if the former type is a possible concrete type of the latter.\n    return schema.isSubType(typeB, typeA);\n  } // Otherwise the types do not overlap.\n\n  return false;\n}\n", "import { inspect } from '../jsutils/inspect.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport { GraphQLScalarType } from './definition.mjs';\n/**\n * Maximum possible Int value as per GraphQL Spec (32-bit signed integer).\n * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe up-to 2^53 - 1\n * */\n\nexport const GRAPHQL_MAX_INT = 2147483647;\n/**\n * Minimum possible Int value as per GraphQL Spec (32-bit signed integer).\n * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe starting at -(2^53 - 1)\n * */\n\nexport const GRAPHQL_MIN_INT = -2147483648;\nexport const GraphQLInt = new GraphQLScalarType({\n  name: 'Int',\n  description:\n    'The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 1 : 0;\n    }\n\n    let num = coercedValue;\n\n    if (typeof coercedValue === 'string' && coercedValue !== '') {\n      num = Number(coercedValue);\n    }\n\n    if (typeof num !== 'number' || !Number.isInteger(num)) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${inspect(coercedValue)}`,\n      );\n    }\n\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        'Int cannot represent non 32-bit signed integer value: ' +\n          inspect(coercedValue),\n      );\n    }\n\n    return num;\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'number' || !Number.isInteger(inputValue)) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${inspect(inputValue)}`,\n      );\n    }\n\n    if (inputValue > GRAPHQL_MAX_INT || inputValue < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${inputValue}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${print(valueNode)}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const num = parseInt(valueNode.value, 10);\n\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${valueNode.value}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return num;\n  },\n});\nexport const GraphQLFloat = new GraphQLScalarType({\n  name: 'Float',\n  description:\n    'The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 1 : 0;\n    }\n\n    let num = coercedValue;\n\n    if (typeof coercedValue === 'string' && coercedValue !== '') {\n      num = Number(coercedValue);\n    }\n\n    if (typeof num !== 'number' || !Number.isFinite(num)) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${inspect(coercedValue)}`,\n      );\n    }\n\n    return num;\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'number' || !Number.isFinite(inputValue)) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${inspect(inputValue)}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.FLOAT && valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${print(valueNode)}`,\n        valueNode,\n      );\n    }\n\n    return parseFloat(valueNode.value);\n  },\n});\nexport const GraphQLString = new GraphQLScalarType({\n  name: 'String',\n  description:\n    'The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue); // Serialize string, boolean and number values to a string, but do not\n    // attempt to coerce object, function, symbol, or other types as strings.\n\n    if (typeof coercedValue === 'string') {\n      return coercedValue;\n    }\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 'true' : 'false';\n    }\n\n    if (typeof coercedValue === 'number' && Number.isFinite(coercedValue)) {\n      return coercedValue.toString();\n    }\n\n    throw new GraphQLError(\n      `String cannot represent value: ${inspect(outputValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'string') {\n      throw new GraphQLError(\n        `String cannot represent a non string value: ${inspect(inputValue)}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.STRING) {\n      throw new GraphQLError(\n        `String cannot represent a non string value: ${print(valueNode)}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexport const GraphQLBoolean = new GraphQLScalarType({\n  name: 'Boolean',\n  description: 'The `Boolean` scalar type represents `true` or `false`.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue;\n    }\n\n    if (Number.isFinite(coercedValue)) {\n      return coercedValue !== 0;\n    }\n\n    throw new GraphQLError(\n      `Boolean cannot represent a non boolean value: ${inspect(coercedValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'boolean') {\n      throw new GraphQLError(\n        `Boolean cannot represent a non boolean value: ${inspect(inputValue)}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.BOOLEAN) {\n      throw new GraphQLError(\n        `Boolean cannot represent a non boolean value: ${print(valueNode)}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexport const GraphQLID = new GraphQLScalarType({\n  name: 'ID',\n  description:\n    'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'string') {\n      return coercedValue;\n    }\n\n    if (Number.isInteger(coercedValue)) {\n      return String(coercedValue);\n    }\n\n    throw new GraphQLError(\n      `ID cannot represent value: ${inspect(outputValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue === 'string') {\n      return inputValue;\n    }\n\n    if (typeof inputValue === 'number' && Number.isInteger(inputValue)) {\n      return inputValue.toString();\n    }\n\n    throw new GraphQLError(`ID cannot represent value: ${inspect(inputValue)}`);\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.STRING && valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        'ID cannot represent a non-string and non-integer value: ' +\n          print(valueNode),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexport const specifiedScalarTypes = Object.freeze([\n  GraphQLString,\n  GraphQLInt,\n  GraphQLFloat,\n  GraphQLBoolean,\n  GraphQLID,\n]);\nexport function isSpecifiedScalarType(type) {\n  return specifiedScalarTypes.some(({ name }) => type.name === name);\n} // Support serializing objects with custom valueOf() or toJSON() functions -\n// a common way to represent a complex value which can be represented as\n// a string (ex: MongoDB id objects).\n\nfunction serializeObject(outputValue) {\n  if (isObjectLike(outputValue)) {\n    if (typeof outputValue.valueOf === 'function') {\n      const valueOfResult = outputValue.valueOf();\n\n      if (!isObjectLike(valueOfResult)) {\n        return valueOfResult;\n      }\n    }\n\n    if (typeof outputValue.toJSON === 'function') {\n      return outputValue.toJSON();\n    }\n  }\n\n  return outputValue;\n}\n", "import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { toObjMap } from '../jsutils/toObjMap.mjs';\nimport { DirectiveLocation } from '../language/directiveLocation.mjs';\nimport { assertName } from './assertName.mjs';\nimport {\n  argsToArgsConfig,\n  defineArguments,\n  GraphQLNonNull,\n} from './definition.mjs';\nimport { GraphQLBoolean, GraphQLString } from './scalars.mjs';\n/**\n * Test if the given value is a GraphQL directive.\n */\n\nexport function isDirective(directive) {\n  return instanceOf(directive, GraphQLDirective);\n}\nexport function assertDirective(directive) {\n  if (!isDirective(directive)) {\n    throw new Error(\n      `Expected ${inspect(directive)} to be a GraphQL directive.`,\n    );\n  }\n\n  return directive;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\nexport class GraphQLDirective {\n  constructor(config) {\n    var _config$isRepeatable, _config$args;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable =\n      (_config$isRepeatable = config.isRepeatable) !== null &&\n      _config$isRepeatable !== void 0\n        ? _config$isRepeatable\n        : false;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    Array.isArray(config.locations) ||\n      devAssert(false, `@${config.name} locations must be an Array.`);\n    const args =\n      (_config$args = config.args) !== null && _config$args !== void 0\n        ? _config$args\n        : {};\n    (isObjectLike(args) && !Array.isArray(args)) ||\n      devAssert(\n        false,\n        `@${config.name} args must be an object with argument names as keys.`,\n      );\n    this.args = defineArguments(args);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLDirective';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: argsToArgsConfig(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode,\n    };\n  }\n\n  toString() {\n    return '@' + this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\n/**\n * Used to conditionally include fields or fragments.\n */\nexport const GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description:\n    'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [\n    DirectiveLocation.FIELD,\n    DirectiveLocation.FRAGMENT_SPREAD,\n    DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      description: 'Included when true.',\n    },\n  },\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexport const GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description:\n    'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [\n    DirectiveLocation.FIELD,\n    DirectiveLocation.FRAGMENT_SPREAD,\n    DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      description: 'Skipped when true.',\n    },\n  },\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexport const DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexport const GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [\n    DirectiveLocation.FIELD_DEFINITION,\n    DirectiveLocation.ARGUMENT_DEFINITION,\n    DirectiveLocation.INPUT_FIELD_DEFINITION,\n    DirectiveLocation.ENUM_VALUE,\n  ],\n  args: {\n    reason: {\n      type: GraphQLString,\n      description:\n        'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON,\n    },\n  },\n});\n/**\n * Used to provide a URL for specifying the behavior of custom scalar definitions.\n */\n\nexport const GraphQLSpecifiedByDirective = new GraphQLDirective({\n  name: 'specifiedBy',\n  description: 'Exposes a URL that specifies the behavior of this scalar.',\n  locations: [DirectiveLocation.SCALAR],\n  args: {\n    url: {\n      type: new GraphQLNonNull(GraphQLString),\n      description: 'The URL that specifies the behavior of this scalar.',\n    },\n  },\n});\n/**\n * The full list of specified directives.\n */\n\nexport const specifiedDirectives = Object.freeze([\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n  GraphQLDeprecatedDirective,\n  GraphQLSpecifiedByDirective,\n]);\nexport function isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(({ name }) => name === directive.name);\n}\n", "/**\n * Returns true if the provided object is an Object (i.e. not a string literal)\n * and implements the Iterator protocol.\n *\n * This may be used in place of [Array.isArray()][isArray] to determine if\n * an object should be iterated-over e.g. Array, Map, Set, Int8Array,\n * TypedArray, etc. but excludes string literals.\n *\n * @example\n * ```ts\n * isIterableObject([ 1, 2, 3 ]) // true\n * isIterableObject(new Map()) // true\n * isIterableObject('ABC') // false\n * isIterableObject({ key: 'value' }) // false\n * isIterableObject({ length: 1, 0: 'Alpha' }) // false\n * ```\n */\nexport function isIterableObject(maybeIterable) {\n  return (\n    typeof maybeIterable === 'object' &&\n    typeof (maybeIterable === null || maybeIterable === void 0\n      ? void 0\n      : maybeIterable[Symbol.iterator]) === 'function'\n  );\n}\n", "import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { isIterableObject } from '../jsutils/isIterableObject.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport {\n  isEnumType,\n  isInputObjectType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n} from '../type/definition.mjs';\nimport { GraphQLID } from '../type/scalars.mjs';\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using suggested GraphQLInputType. For example:\n *\n *     astFromValue(\"value\", GraphQLString)\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | Unknown       | Enum Value           |\n * | null          | NullValue            |\n *\n */\n\nexport function astFromValue(value, type) {\n  if (isNonNullType(type)) {\n    const astValue = astFromValue(value, type.ofType);\n\n    if (\n      (astValue === null || astValue === void 0 ? void 0 : astValue.kind) ===\n      Kind.NULL\n    ) {\n      return null;\n    }\n\n    return astValue;\n  } // only explicit null, not undefined, NaN\n\n  if (value === null) {\n    return {\n      kind: Kind.NULL,\n    };\n  } // undefined\n\n  if (value === undefined) {\n    return null;\n  } // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n  // the value is not an array, convert the value using the list's item type.\n\n  if (isListType(type)) {\n    const itemType = type.ofType;\n\n    if (isIterableObject(value)) {\n      const valuesNodes = [];\n\n      for (const item of value) {\n        const itemNode = astFromValue(item, itemType);\n\n        if (itemNode != null) {\n          valuesNodes.push(itemNode);\n        }\n      }\n\n      return {\n        kind: Kind.LIST,\n        values: valuesNodes,\n      };\n    }\n\n    return astFromValue(value, itemType);\n  } // Populate the fields of the input object by creating ASTs from each value\n  // in the JavaScript object according to the fields in the input type.\n\n  if (isInputObjectType(type)) {\n    if (!isObjectLike(value)) {\n      return null;\n    }\n\n    const fieldNodes = [];\n\n    for (const field of Object.values(type.getFields())) {\n      const fieldValue = astFromValue(value[field.name], field.type);\n\n      if (fieldValue) {\n        fieldNodes.push({\n          kind: Kind.OBJECT_FIELD,\n          name: {\n            kind: Kind.NAME,\n            value: field.name,\n          },\n          value: fieldValue,\n        });\n      }\n    }\n\n    return {\n      kind: Kind.OBJECT,\n      fields: fieldNodes,\n    };\n  }\n\n  if (isLeafType(type)) {\n    // Since value is an internally represented value, it must be serialized\n    // to an externally represented value before converting into an AST.\n    const serialized = type.serialize(value);\n\n    if (serialized == null) {\n      return null;\n    } // Others serialize based on their corresponding JavaScript scalar types.\n\n    if (typeof serialized === 'boolean') {\n      return {\n        kind: Kind.BOOLEAN,\n        value: serialized,\n      };\n    } // JavaScript numbers can be Int or Float values.\n\n    if (typeof serialized === 'number' && Number.isFinite(serialized)) {\n      const stringNum = String(serialized);\n      return integerStringRegExp.test(stringNum)\n        ? {\n            kind: Kind.INT,\n            value: stringNum,\n          }\n        : {\n            kind: Kind.FLOAT,\n            value: stringNum,\n          };\n    }\n\n    if (typeof serialized === 'string') {\n      // Enum types use Enum literals.\n      if (isEnumType(type)) {\n        return {\n          kind: Kind.ENUM,\n          value: serialized,\n        };\n      } // ID types can use Int literals.\n\n      if (type === GraphQLID && integerStringRegExp.test(serialized)) {\n        return {\n          kind: Kind.INT,\n          value: serialized,\n        };\n      }\n\n      return {\n        kind: Kind.STRING,\n        value: serialized,\n      };\n    }\n\n    throw new TypeError(`Cannot convert value to AST: ${inspect(serialized)}.`);\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false || invariant(false, 'Unexpected input type: ' + inspect(type));\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\n\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n", "import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { DirectiveLocation } from '../language/directiveLocation.mjs';\nimport { print } from '../language/printer.mjs';\nimport { astFromValue } from '../utilities/astFromValue.mjs';\nimport {\n  GraphQLEnumType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  isAbstractType,\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n  isScalarType,\n  isUnionType,\n} from './definition.mjs';\nimport { GraphQLBoolean, GraphQLString } from './scalars.mjs';\nexport const __Schema = new GraphQLObjectType({\n  name: '__Schema',\n  description:\n    'A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.',\n  fields: () => ({\n    description: {\n      type: GraphQLString,\n      resolve: (schema) => schema.description,\n    },\n    types: {\n      description: 'A list of all types supported by this server.',\n      type: new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(__Type))),\n\n      resolve(schema) {\n        return Object.values(schema.getTypeMap());\n      },\n    },\n    queryType: {\n      description: 'The type that query operations will be rooted at.',\n      type: new GraphQLNonNull(__Type),\n      resolve: (schema) => schema.getQueryType(),\n    },\n    mutationType: {\n      description:\n        'If this server supports mutation, the type that mutation operations will be rooted at.',\n      type: __Type,\n      resolve: (schema) => schema.getMutationType(),\n    },\n    subscriptionType: {\n      description:\n        'If this server support subscription, the type that subscription operations will be rooted at.',\n      type: __Type,\n      resolve: (schema) => schema.getSubscriptionType(),\n    },\n    directives: {\n      description: 'A list of all directives supported by this server.',\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__Directive)),\n      ),\n      resolve: (schema) => schema.getDirectives(),\n    },\n  }),\n});\nexport const __Directive = new GraphQLObjectType({\n  name: '__Directive',\n  description:\n    \"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\\n\\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.\",\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (directive) => directive.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (directive) => directive.description,\n    },\n    isRepeatable: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (directive) => directive.isRepeatable,\n    },\n    locations: {\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__DirectiveLocation)),\n      ),\n      resolve: (directive) => directive.locations,\n    },\n    args: {\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__InputValue)),\n      ),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(field, { includeDeprecated }) {\n        return includeDeprecated\n          ? field.args\n          : field.args.filter((arg) => arg.deprecationReason == null);\n      },\n    },\n  }),\n});\nexport const __DirectiveLocation = new GraphQLEnumType({\n  name: '__DirectiveLocation',\n  description:\n    'A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.',\n  values: {\n    QUERY: {\n      value: DirectiveLocation.QUERY,\n      description: 'Location adjacent to a query operation.',\n    },\n    MUTATION: {\n      value: DirectiveLocation.MUTATION,\n      description: 'Location adjacent to a mutation operation.',\n    },\n    SUBSCRIPTION: {\n      value: DirectiveLocation.SUBSCRIPTION,\n      description: 'Location adjacent to a subscription operation.',\n    },\n    FIELD: {\n      value: DirectiveLocation.FIELD,\n      description: 'Location adjacent to a field.',\n    },\n    FRAGMENT_DEFINITION: {\n      value: DirectiveLocation.FRAGMENT_DEFINITION,\n      description: 'Location adjacent to a fragment definition.',\n    },\n    FRAGMENT_SPREAD: {\n      value: DirectiveLocation.FRAGMENT_SPREAD,\n      description: 'Location adjacent to a fragment spread.',\n    },\n    INLINE_FRAGMENT: {\n      value: DirectiveLocation.INLINE_FRAGMENT,\n      description: 'Location adjacent to an inline fragment.',\n    },\n    VARIABLE_DEFINITION: {\n      value: DirectiveLocation.VARIABLE_DEFINITION,\n      description: 'Location adjacent to a variable definition.',\n    },\n    SCHEMA: {\n      value: DirectiveLocation.SCHEMA,\n      description: 'Location adjacent to a schema definition.',\n    },\n    SCALAR: {\n      value: DirectiveLocation.SCALAR,\n      description: 'Location adjacent to a scalar definition.',\n    },\n    OBJECT: {\n      value: DirectiveLocation.OBJECT,\n      description: 'Location adjacent to an object type definition.',\n    },\n    FIELD_DEFINITION: {\n      value: DirectiveLocation.FIELD_DEFINITION,\n      description: 'Location adjacent to a field definition.',\n    },\n    ARGUMENT_DEFINITION: {\n      value: DirectiveLocation.ARGUMENT_DEFINITION,\n      description: 'Location adjacent to an argument definition.',\n    },\n    INTERFACE: {\n      value: DirectiveLocation.INTERFACE,\n      description: 'Location adjacent to an interface definition.',\n    },\n    UNION: {\n      value: DirectiveLocation.UNION,\n      description: 'Location adjacent to a union definition.',\n    },\n    ENUM: {\n      value: DirectiveLocation.ENUM,\n      description: 'Location adjacent to an enum definition.',\n    },\n    ENUM_VALUE: {\n      value: DirectiveLocation.ENUM_VALUE,\n      description: 'Location adjacent to an enum value definition.',\n    },\n    INPUT_OBJECT: {\n      value: DirectiveLocation.INPUT_OBJECT,\n      description: 'Location adjacent to an input object type definition.',\n    },\n    INPUT_FIELD_DEFINITION: {\n      value: DirectiveLocation.INPUT_FIELD_DEFINITION,\n      description: 'Location adjacent to an input object field definition.',\n    },\n  },\n});\nexport const __Type = new GraphQLObjectType({\n  name: '__Type',\n  description:\n    'The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\\n\\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.',\n  fields: () => ({\n    kind: {\n      type: new GraphQLNonNull(__TypeKind),\n\n      resolve(type) {\n        if (isScalarType(type)) {\n          return TypeKind.SCALAR;\n        }\n\n        if (isObjectType(type)) {\n          return TypeKind.OBJECT;\n        }\n\n        if (isInterfaceType(type)) {\n          return TypeKind.INTERFACE;\n        }\n\n        if (isUnionType(type)) {\n          return TypeKind.UNION;\n        }\n\n        if (isEnumType(type)) {\n          return TypeKind.ENUM;\n        }\n\n        if (isInputObjectType(type)) {\n          return TypeKind.INPUT_OBJECT;\n        }\n\n        if (isListType(type)) {\n          return TypeKind.LIST;\n        }\n\n        if (isNonNullType(type)) {\n          return TypeKind.NON_NULL;\n        }\n        /* c8 ignore next 3 */\n        // Not reachable, all possible types have been considered)\n\n        false || invariant(false, `Unexpected type: \"${inspect(type)}\".`);\n      },\n    },\n    name: {\n      type: GraphQLString,\n      resolve: (type) => ('name' in type ? type.name : undefined),\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (\n        type, // FIXME: add test case\n      ) =>\n        /* c8 ignore next */\n        'description' in type ? type.description : undefined,\n    },\n    specifiedByURL: {\n      type: GraphQLString,\n      resolve: (obj) =>\n        'specifiedByURL' in obj ? obj.specifiedByURL : undefined,\n    },\n    fields: {\n      type: new GraphQLList(new GraphQLNonNull(__Field)),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if (isObjectType(type) || isInterfaceType(type)) {\n          const fields = Object.values(type.getFields());\n          return includeDeprecated\n            ? fields\n            : fields.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    interfaces: {\n      type: new GraphQLList(new GraphQLNonNull(__Type)),\n\n      resolve(type) {\n        if (isObjectType(type) || isInterfaceType(type)) {\n          return type.getInterfaces();\n        }\n      },\n    },\n    possibleTypes: {\n      type: new GraphQLList(new GraphQLNonNull(__Type)),\n\n      resolve(type, _args, _context, { schema }) {\n        if (isAbstractType(type)) {\n          return schema.getPossibleTypes(type);\n        }\n      },\n    },\n    enumValues: {\n      type: new GraphQLList(new GraphQLNonNull(__EnumValue)),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if (isEnumType(type)) {\n          const values = type.getValues();\n          return includeDeprecated\n            ? values\n            : values.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    inputFields: {\n      type: new GraphQLList(new GraphQLNonNull(__InputValue)),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if (isInputObjectType(type)) {\n          const values = Object.values(type.getFields());\n          return includeDeprecated\n            ? values\n            : values.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    ofType: {\n      type: __Type,\n      resolve: (type) => ('ofType' in type ? type.ofType : undefined),\n    },\n  }),\n});\nexport const __Field = new GraphQLObjectType({\n  name: '__Field',\n  description:\n    'Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.',\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (field) => field.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (field) => field.description,\n    },\n    args: {\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__InputValue)),\n      ),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(field, { includeDeprecated }) {\n        return includeDeprecated\n          ? field.args\n          : field.args.filter((arg) => arg.deprecationReason == null);\n      },\n    },\n    type: {\n      type: new GraphQLNonNull(__Type),\n      resolve: (field) => field.type,\n    },\n    isDeprecated: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (field) => field.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: GraphQLString,\n      resolve: (field) => field.deprecationReason,\n    },\n  }),\n});\nexport const __InputValue = new GraphQLObjectType({\n  name: '__InputValue',\n  description:\n    'Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.',\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (inputValue) => inputValue.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (inputValue) => inputValue.description,\n    },\n    type: {\n      type: new GraphQLNonNull(__Type),\n      resolve: (inputValue) => inputValue.type,\n    },\n    defaultValue: {\n      type: GraphQLString,\n      description:\n        'A GraphQL-formatted string representing the default value for this input value.',\n\n      resolve(inputValue) {\n        const { type, defaultValue } = inputValue;\n        const valueAST = astFromValue(defaultValue, type);\n        return valueAST ? print(valueAST) : null;\n      },\n    },\n    isDeprecated: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (field) => field.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: GraphQLString,\n      resolve: (obj) => obj.deprecationReason,\n    },\n  }),\n});\nexport const __EnumValue = new GraphQLObjectType({\n  name: '__EnumValue',\n  description:\n    'One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.',\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (enumValue) => enumValue.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (enumValue) => enumValue.description,\n    },\n    isDeprecated: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (enumValue) => enumValue.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: GraphQLString,\n      resolve: (enumValue) => enumValue.deprecationReason,\n    },\n  }),\n});\nvar TypeKind;\n\n(function (TypeKind) {\n  TypeKind['SCALAR'] = 'SCALAR';\n  TypeKind['OBJECT'] = 'OBJECT';\n  TypeKind['INTERFACE'] = 'INTERFACE';\n  TypeKind['UNION'] = 'UNION';\n  TypeKind['ENUM'] = 'ENUM';\n  TypeKind['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  TypeKind['LIST'] = 'LIST';\n  TypeKind['NON_NULL'] = 'NON_NULL';\n})(TypeKind || (TypeKind = {}));\n\nexport { TypeKind };\nexport const __TypeKind = new GraphQLEnumType({\n  name: '__TypeKind',\n  description: 'An enum describing what kind of type a given `__Type` is.',\n  values: {\n    SCALAR: {\n      value: TypeKind.SCALAR,\n      description: 'Indicates this type is a scalar.',\n    },\n    OBJECT: {\n      value: TypeKind.OBJECT,\n      description:\n        'Indicates this type is an object. `fields` and `interfaces` are valid fields.',\n    },\n    INTERFACE: {\n      value: TypeKind.INTERFACE,\n      description:\n        'Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.',\n    },\n    UNION: {\n      value: TypeKind.UNION,\n      description:\n        'Indicates this type is a union. `possibleTypes` is a valid field.',\n    },\n    ENUM: {\n      value: TypeKind.ENUM,\n      description:\n        'Indicates this type is an enum. `enumValues` is a valid field.',\n    },\n    INPUT_OBJECT: {\n      value: TypeKind.INPUT_OBJECT,\n      description:\n        'Indicates this type is an input object. `inputFields` is a valid field.',\n    },\n    LIST: {\n      value: TypeKind.LIST,\n      description: 'Indicates this type is a list. `ofType` is a valid field.',\n    },\n    NON_NULL: {\n      value: TypeKind.NON_NULL,\n      description:\n        'Indicates this type is a non-null. `ofType` is a valid field.',\n    },\n  },\n});\n/**\n * Note that these are GraphQLField and not GraphQLFieldConfig,\n * so the format for args is different.\n */\n\nexport const SchemaMetaFieldDef = {\n  name: '__schema',\n  type: new GraphQLNonNull(__Schema),\n  description: 'Access the current type schema of this server.',\n  args: [],\n  resolve: (_source, _args, _context, { schema }) => schema,\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexport const TypeMetaFieldDef = {\n  name: '__type',\n  type: __Type,\n  description: 'Request the type information of a single type.',\n  args: [\n    {\n      name: 'name',\n      description: undefined,\n      type: new GraphQLNonNull(GraphQLString),\n      defaultValue: undefined,\n      deprecationReason: undefined,\n      extensions: Object.create(null),\n      astNode: undefined,\n    },\n  ],\n  resolve: (_source, { name }, _context, { schema }) => schema.getType(name),\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexport const TypeNameMetaFieldDef = {\n  name: '__typename',\n  type: new GraphQLNonNull(GraphQLString),\n  description: 'The name of the current Object type at runtime.',\n  args: [],\n  resolve: (_source, _args, _context, { parentType }) => parentType.name,\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexport const introspectionTypes = Object.freeze([\n  __Schema,\n  __Directive,\n  __DirectiveLocation,\n  __Type,\n  __Field,\n  __InputValue,\n  __EnumValue,\n  __TypeKind,\n]);\nexport function isIntrospectionType(type) {\n  return introspectionTypes.some(({ name }) => type.name === name);\n}\n", "import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { toObjMap } from '../jsutils/toObjMap.mjs';\nimport { OperationTypeNode } from '../language/ast.mjs';\nimport {\n  getNamedType,\n  isInputObjectType,\n  isInterfaceType,\n  isObjectType,\n  isUnionType,\n} from './definition.mjs';\nimport { isDirective, specifiedDirectives } from './directives.mjs';\nimport { __Schema } from './introspection.mjs';\n/**\n * Test if the given value is a GraphQL schema.\n */\n\nexport function isSchema(schema) {\n  return instanceOf(schema, GraphQLSchema);\n}\nexport function assertSchema(schema) {\n  if (!isSchema(schema)) {\n    throw new Error(`Expected ${inspect(schema)} to be a GraphQL schema.`);\n  }\n\n  return schema;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Schema Definition\n *\n * A Schema is created by supplying the root types of each type of operation,\n * query and mutation (optional). A schema definition is then supplied to the\n * validator and executor.\n *\n * Example:\n *\n * ```ts\n * const MyAppSchema = new GraphQLSchema({\n *   query: MyAppQueryRootType,\n *   mutation: MyAppMutationRootType,\n * })\n * ```\n *\n * Note: When the schema is constructed, by default only the types that are\n * reachable by traversing the root types are included, other types must be\n * explicitly referenced.\n *\n * Example:\n *\n * ```ts\n * const characterInterface = new GraphQLInterfaceType({\n *   name: 'Character',\n *   ...\n * });\n *\n * const humanType = new GraphQLObjectType({\n *   name: 'Human',\n *   interfaces: [characterInterface],\n *   ...\n * });\n *\n * const droidType = new GraphQLObjectType({\n *   name: 'Droid',\n *   interfaces: [characterInterface],\n *   ...\n * });\n *\n * const schema = new GraphQLSchema({\n *   query: new GraphQLObjectType({\n *     name: 'Query',\n *     fields: {\n *       hero: { type: characterInterface, ... },\n *     }\n *   }),\n *   ...\n *   // Since this schema references only the `Character` interface it's\n *   // necessary to explicitly list the types that implement it if\n *   // you want them to be included in the final schema.\n *   types: [humanType, droidType],\n * })\n * ```\n *\n * Note: If an array of `directives` are provided to GraphQLSchema, that will be\n * the exact list of directives represented and allowed. If `directives` is not\n * provided then a default set of the specified directives (e.g. `@include` and\n * `@skip`) will be used. If you wish to provide *additional* directives to these\n * specified directives, you must explicitly declare them. Example:\n *\n * ```ts\n * const MyAppSchema = new GraphQLSchema({\n *   ...\n *   directives: specifiedDirectives.concat([ myCustomDirective ]),\n * })\n * ```\n */\nexport class GraphQLSchema {\n  // Used as a cache for validateSchema().\n  constructor(config) {\n    var _config$extensionASTN, _config$directives;\n\n    // If this schema was built from a source known to be valid, then it may be\n    // marked with assumeValid to avoid an additional type system validation.\n    this.__validationErrors = config.assumeValid === true ? [] : undefined; // Check for common mistakes during construction to produce early errors.\n\n    isObjectLike(config) ||\n      devAssert(false, 'Must provide configuration object.');\n    !config.types ||\n      Array.isArray(config.types) ||\n      devAssert(\n        false,\n        `\"types\" must be Array if provided but got: ${inspect(config.types)}.`,\n      );\n    !config.directives ||\n      Array.isArray(config.directives) ||\n      devAssert(\n        false,\n        '\"directives\" must be Array if provided but got: ' +\n          `${inspect(config.directives)}.`,\n      );\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN = config.extensionASTNodes) !== null &&\n      _config$extensionASTN !== void 0\n        ? _config$extensionASTN\n        : [];\n    this._queryType = config.query;\n    this._mutationType = config.mutation;\n    this._subscriptionType = config.subscription; // Provide specified directives (e.g. @include and @skip) by default.\n\n    this._directives =\n      (_config$directives = config.directives) !== null &&\n      _config$directives !== void 0\n        ? _config$directives\n        : specifiedDirectives; // To preserve order of user-provided types, we add first to add them to\n    // the set of \"collected\" types, so `collectReferencedTypes` ignore them.\n\n    const allReferencedTypes = new Set(config.types);\n\n    if (config.types != null) {\n      for (const type of config.types) {\n        // When we ready to process this type, we remove it from \"collected\" types\n        // and then add it together with all dependent types in the correct position.\n        allReferencedTypes.delete(type);\n        collectReferencedTypes(type, allReferencedTypes);\n      }\n    }\n\n    if (this._queryType != null) {\n      collectReferencedTypes(this._queryType, allReferencedTypes);\n    }\n\n    if (this._mutationType != null) {\n      collectReferencedTypes(this._mutationType, allReferencedTypes);\n    }\n\n    if (this._subscriptionType != null) {\n      collectReferencedTypes(this._subscriptionType, allReferencedTypes);\n    }\n\n    for (const directive of this._directives) {\n      // Directives are not validated until validateSchema() is called.\n      if (isDirective(directive)) {\n        for (const arg of directive.args) {\n          collectReferencedTypes(arg.type, allReferencedTypes);\n        }\n      }\n    }\n\n    collectReferencedTypes(__Schema, allReferencedTypes); // Storing the resulting map for reference by the schema.\n\n    this._typeMap = Object.create(null);\n    this._subTypeMap = Object.create(null); // Keep track of all implementations by interface name.\n\n    this._implementationsMap = Object.create(null);\n\n    for (const namedType of allReferencedTypes) {\n      if (namedType == null) {\n        continue;\n      }\n\n      const typeName = namedType.name;\n      typeName ||\n        devAssert(\n          false,\n          'One of the provided types for building the Schema is missing a name.',\n        );\n\n      if (this._typeMap[typeName] !== undefined) {\n        throw new Error(\n          `Schema must contain uniquely named types but contains multiple types named \"${typeName}\".`,\n        );\n      }\n\n      this._typeMap[typeName] = namedType;\n\n      if (isInterfaceType(namedType)) {\n        // Store implementations by interface.\n        for (const iface of namedType.getInterfaces()) {\n          if (isInterfaceType(iface)) {\n            let implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: [],\n              };\n            }\n\n            implementations.interfaces.push(namedType);\n          }\n        }\n      } else if (isObjectType(namedType)) {\n        // Store implementations by objects.\n        for (const iface of namedType.getInterfaces()) {\n          if (isInterfaceType(iface)) {\n            let implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: [],\n              };\n            }\n\n            implementations.objects.push(namedType);\n          }\n        }\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLSchema';\n  }\n\n  getQueryType() {\n    return this._queryType;\n  }\n\n  getMutationType() {\n    return this._mutationType;\n  }\n\n  getSubscriptionType() {\n    return this._subscriptionType;\n  }\n\n  getRootType(operation) {\n    switch (operation) {\n      case OperationTypeNode.QUERY:\n        return this.getQueryType();\n\n      case OperationTypeNode.MUTATION:\n        return this.getMutationType();\n\n      case OperationTypeNode.SUBSCRIPTION:\n        return this.getSubscriptionType();\n    }\n  }\n\n  getTypeMap() {\n    return this._typeMap;\n  }\n\n  getType(name) {\n    return this.getTypeMap()[name];\n  }\n\n  getPossibleTypes(abstractType) {\n    return isUnionType(abstractType)\n      ? abstractType.getTypes()\n      : this.getImplementations(abstractType).objects;\n  }\n\n  getImplementations(interfaceType) {\n    const implementations = this._implementationsMap[interfaceType.name];\n    return implementations !== null && implementations !== void 0\n      ? implementations\n      : {\n          objects: [],\n          interfaces: [],\n        };\n  }\n\n  isSubType(abstractType, maybeSubType) {\n    let map = this._subTypeMap[abstractType.name];\n\n    if (map === undefined) {\n      map = Object.create(null);\n\n      if (isUnionType(abstractType)) {\n        for (const type of abstractType.getTypes()) {\n          map[type.name] = true;\n        }\n      } else {\n        const implementations = this.getImplementations(abstractType);\n\n        for (const type of implementations.objects) {\n          map[type.name] = true;\n        }\n\n        for (const type of implementations.interfaces) {\n          map[type.name] = true;\n        }\n      }\n\n      this._subTypeMap[abstractType.name] = map;\n    }\n\n    return map[maybeSubType.name] !== undefined;\n  }\n\n  getDirectives() {\n    return this._directives;\n  }\n\n  getDirective(name) {\n    return this.getDirectives().find((directive) => directive.name === name);\n  }\n\n  toConfig() {\n    return {\n      description: this.description,\n      query: this.getQueryType(),\n      mutation: this.getMutationType(),\n      subscription: this.getSubscriptionType(),\n      types: Object.values(this.getTypeMap()),\n      directives: this.getDirectives(),\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n      assumeValid: this.__validationErrors !== undefined,\n    };\n  }\n}\n\nfunction collectReferencedTypes(type, typeSet) {\n  const namedType = getNamedType(type);\n\n  if (!typeSet.has(namedType)) {\n    typeSet.add(namedType);\n\n    if (isUnionType(namedType)) {\n      for (const memberType of namedType.getTypes()) {\n        collectReferencedTypes(memberType, typeSet);\n      }\n    } else if (isObjectType(namedType) || isInterfaceType(namedType)) {\n      for (const interfaceType of namedType.getInterfaces()) {\n        collectReferencedTypes(interfaceType, typeSet);\n      }\n\n      for (const field of Object.values(namedType.getFields())) {\n        collectReferencedTypes(field.type, typeSet);\n\n        for (const arg of field.args) {\n          collectReferencedTypes(arg.type, typeSet);\n        }\n      }\n    } else if (isInputObjectType(namedType)) {\n      for (const field of Object.values(namedType.getFields())) {\n        collectReferencedTypes(field.type, typeSet);\n      }\n    }\n  }\n\n  return typeSet;\n}\n", "import { inspect } from '../jsutils/inspect.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { OperationTypeNode } from '../language/ast.mjs';\nimport { isEqualType, isTypeSubTypeOf } from '../utilities/typeComparators.mjs';\nimport {\n  isEnumType,\n  isInputObjectType,\n  isInputType,\n  isInterfaceType,\n  isNamedType,\n  isNonNullType,\n  isObjectType,\n  isOutputType,\n  isRequiredArgument,\n  isRequiredInputField,\n  isUnionType,\n} from './definition.mjs';\nimport { GraphQLDeprecatedDirective, isDirective } from './directives.mjs';\nimport { isIntrospectionType } from './introspection.mjs';\nimport { assertSchema } from './schema.mjs';\n/**\n * Implements the \"Type Validation\" sub-sections of the specification's\n * \"Type System\" section.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the Schema is valid.\n */\n\nexport function validateSchema(schema) {\n  // First check to ensure the provided value is in fact a GraphQLSchema.\n  assertSchema(schema); // If this Schema has already been validated, return the previous results.\n\n  if (schema.__validationErrors) {\n    return schema.__validationErrors;\n  } // Validate the schema, producing a list of errors.\n\n  const context = new SchemaValidationContext(schema);\n  validateRootTypes(context);\n  validateDirectives(context);\n  validateTypes(context); // Persist the results of validation before returning to ensure validation\n  // does not run multiple times for this schema.\n\n  const errors = context.getErrors();\n  schema.__validationErrors = errors;\n  return errors;\n}\n/**\n * Utility function which asserts a schema is valid by throwing an error if\n * it is invalid.\n */\n\nexport function assertValidSchema(schema) {\n  const errors = validateSchema(schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n\nclass SchemaValidationContext {\n  constructor(schema) {\n    this._errors = [];\n    this.schema = schema;\n  }\n\n  reportError(message, nodes) {\n    const _nodes = Array.isArray(nodes) ? nodes.filter(Boolean) : nodes;\n\n    this._errors.push(\n      new GraphQLError(message, {\n        nodes: _nodes,\n      }),\n    );\n  }\n\n  getErrors() {\n    return this._errors;\n  }\n}\n\nfunction validateRootTypes(context) {\n  const schema = context.schema;\n  const queryType = schema.getQueryType();\n\n  if (!queryType) {\n    context.reportError('Query root type must be provided.', schema.astNode);\n  } else if (!isObjectType(queryType)) {\n    var _getOperationTypeNode;\n\n    context.reportError(\n      `Query root type must be Object type, it cannot be ${inspect(\n        queryType,\n      )}.`,\n      (_getOperationTypeNode = getOperationTypeNode(\n        schema,\n        OperationTypeNode.QUERY,\n      )) !== null && _getOperationTypeNode !== void 0\n        ? _getOperationTypeNode\n        : queryType.astNode,\n    );\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && !isObjectType(mutationType)) {\n    var _getOperationTypeNode2;\n\n    context.reportError(\n      'Mutation root type must be Object type if provided, it cannot be ' +\n        `${inspect(mutationType)}.`,\n      (_getOperationTypeNode2 = getOperationTypeNode(\n        schema,\n        OperationTypeNode.MUTATION,\n      )) !== null && _getOperationTypeNode2 !== void 0\n        ? _getOperationTypeNode2\n        : mutationType.astNode,\n    );\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && !isObjectType(subscriptionType)) {\n    var _getOperationTypeNode3;\n\n    context.reportError(\n      'Subscription root type must be Object type if provided, it cannot be ' +\n        `${inspect(subscriptionType)}.`,\n      (_getOperationTypeNode3 = getOperationTypeNode(\n        schema,\n        OperationTypeNode.SUBSCRIPTION,\n      )) !== null && _getOperationTypeNode3 !== void 0\n        ? _getOperationTypeNode3\n        : subscriptionType.astNode,\n    );\n  }\n}\n\nfunction getOperationTypeNode(schema, operation) {\n  var _flatMap$find;\n\n  return (_flatMap$find = [schema.astNode, ...schema.extensionASTNodes]\n    .flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (schemaNode) => {\n        var _schemaNode$operation;\n\n        return (\n          /* c8 ignore next */\n          (_schemaNode$operation =\n            schemaNode === null || schemaNode === void 0\n              ? void 0\n              : schemaNode.operationTypes) !== null &&\n            _schemaNode$operation !== void 0\n            ? _schemaNode$operation\n            : []\n        );\n      },\n    )\n    .find((operationNode) => operationNode.operation === operation)) === null ||\n    _flatMap$find === void 0\n    ? void 0\n    : _flatMap$find.type;\n}\n\nfunction validateDirectives(context) {\n  for (const directive of context.schema.getDirectives()) {\n    // Ensure all directives are in fact GraphQL directives.\n    if (!isDirective(directive)) {\n      context.reportError(\n        `Expected directive but got: ${inspect(directive)}.`,\n        directive === null || directive === void 0 ? void 0 : directive.astNode,\n      );\n      continue;\n    } // Ensure they are named correctly.\n\n    validateName(context, directive); // TODO: Ensure proper locations.\n    // Ensure the arguments are valid.\n\n    for (const arg of directive.args) {\n      // Ensure they are named correctly.\n      validateName(context, arg); // Ensure the type is an input type.\n\n      if (!isInputType(arg.type)) {\n        context.reportError(\n          `The type of @${directive.name}(${arg.name}:) must be Input Type ` +\n            `but got: ${inspect(arg.type)}.`,\n          arg.astNode,\n        );\n      }\n\n      if (isRequiredArgument(arg) && arg.deprecationReason != null) {\n        var _arg$astNode;\n\n        context.reportError(\n          `Required argument @${directive.name}(${arg.name}:) cannot be deprecated.`,\n          [\n            getDeprecatedDirectiveNode(arg.astNode),\n            (_arg$astNode = arg.astNode) === null || _arg$astNode === void 0\n              ? void 0\n              : _arg$astNode.type,\n          ],\n        );\n      }\n    }\n  }\n}\n\nfunction validateName(context, node) {\n  // Ensure names are valid, however introspection types opt out.\n  if (node.name.startsWith('__')) {\n    context.reportError(\n      `Name \"${node.name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`,\n      node.astNode,\n    );\n  }\n}\n\nfunction validateTypes(context) {\n  const validateInputObjectCircularRefs =\n    createInputObjectCircularRefsValidator(context);\n  const typeMap = context.schema.getTypeMap();\n\n  for (const type of Object.values(typeMap)) {\n    // Ensure all provided types are in fact GraphQL type.\n    if (!isNamedType(type)) {\n      context.reportError(\n        `Expected GraphQL named type but got: ${inspect(type)}.`,\n        type.astNode,\n      );\n      continue;\n    } // Ensure it is named correctly (excluding introspection types).\n\n    if (!isIntrospectionType(type)) {\n      validateName(context, type);\n    }\n\n    if (isObjectType(type)) {\n      // Ensure fields are valid\n      validateFields(context, type); // Ensure objects implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if (isInterfaceType(type)) {\n      // Ensure fields are valid.\n      validateFields(context, type); // Ensure interfaces implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if (isUnionType(type)) {\n      // Ensure Unions include valid member types.\n      validateUnionMembers(context, type);\n    } else if (isEnumType(type)) {\n      // Ensure Enums have valid values.\n      validateEnumValues(context, type);\n    } else if (isInputObjectType(type)) {\n      // Ensure Input Object fields are valid.\n      validateInputFields(context, type); // Ensure Input Objects do not contain non-nullable circular references\n\n      validateInputObjectCircularRefs(type);\n    }\n  }\n}\n\nfunction validateFields(context, type) {\n  const fields = Object.values(type.getFields()); // Objects and Interfaces both must define one or more fields.\n\n  if (fields.length === 0) {\n    context.reportError(`Type ${type.name} must define one or more fields.`, [\n      type.astNode,\n      ...type.extensionASTNodes,\n    ]);\n  }\n\n  for (const field of fields) {\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an output type\n\n    if (!isOutputType(field.type)) {\n      var _field$astNode;\n\n      context.reportError(\n        `The type of ${type.name}.${field.name} must be Output Type ` +\n          `but got: ${inspect(field.type)}.`,\n        (_field$astNode = field.astNode) === null || _field$astNode === void 0\n          ? void 0\n          : _field$astNode.type,\n      );\n    } // Ensure the arguments are valid\n\n    for (const arg of field.args) {\n      const argName = arg.name; // Ensure they are named correctly.\n\n      validateName(context, arg); // Ensure the type is an input type\n\n      if (!isInputType(arg.type)) {\n        var _arg$astNode2;\n\n        context.reportError(\n          `The type of ${type.name}.${field.name}(${argName}:) must be Input ` +\n            `Type but got: ${inspect(arg.type)}.`,\n          (_arg$astNode2 = arg.astNode) === null || _arg$astNode2 === void 0\n            ? void 0\n            : _arg$astNode2.type,\n        );\n      }\n\n      if (isRequiredArgument(arg) && arg.deprecationReason != null) {\n        var _arg$astNode3;\n\n        context.reportError(\n          `Required argument ${type.name}.${field.name}(${argName}:) cannot be deprecated.`,\n          [\n            getDeprecatedDirectiveNode(arg.astNode),\n            (_arg$astNode3 = arg.astNode) === null || _arg$astNode3 === void 0\n              ? void 0\n              : _arg$astNode3.type,\n          ],\n        );\n      }\n    }\n  }\n}\n\nfunction validateInterfaces(context, type) {\n  const ifaceTypeNames = Object.create(null);\n\n  for (const iface of type.getInterfaces()) {\n    if (!isInterfaceType(iface)) {\n      context.reportError(\n        `Type ${inspect(type)} must only implement Interface types, ` +\n          `it cannot implement ${inspect(iface)}.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    if (type === iface) {\n      context.reportError(\n        `Type ${type.name} cannot implement itself because it would create a circular reference.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    if (ifaceTypeNames[iface.name]) {\n      context.reportError(\n        `Type ${type.name} can only implement ${iface.name} once.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    ifaceTypeNames[iface.name] = true;\n    validateTypeImplementsAncestors(context, type, iface);\n    validateTypeImplementsInterface(context, type, iface);\n  }\n}\n\nfunction validateTypeImplementsInterface(context, type, iface) {\n  const typeFieldMap = type.getFields(); // Assert each interface field is implemented.\n\n  for (const ifaceField of Object.values(iface.getFields())) {\n    const fieldName = ifaceField.name;\n    const typeField = typeFieldMap[fieldName]; // Assert interface field exists on type.\n\n    if (!typeField) {\n      context.reportError(\n        `Interface field ${iface.name}.${fieldName} expected but ${type.name} does not provide it.`,\n        [ifaceField.astNode, type.astNode, ...type.extensionASTNodes],\n      );\n      continue;\n    } // Assert interface field type is satisfied by type field type, by being\n    // a valid subtype. (covariant)\n\n    if (!isTypeSubTypeOf(context.schema, typeField.type, ifaceField.type)) {\n      var _ifaceField$astNode, _typeField$astNode;\n\n      context.reportError(\n        `Interface field ${iface.name}.${fieldName} expects type ` +\n          `${inspect(ifaceField.type)} but ${type.name}.${fieldName} ` +\n          `is type ${inspect(typeField.type)}.`,\n        [\n          (_ifaceField$astNode = ifaceField.astNode) === null ||\n          _ifaceField$astNode === void 0\n            ? void 0\n            : _ifaceField$astNode.type,\n          (_typeField$astNode = typeField.astNode) === null ||\n          _typeField$astNode === void 0\n            ? void 0\n            : _typeField$astNode.type,\n        ],\n      );\n    } // Assert each interface field arg is implemented.\n\n    for (const ifaceArg of ifaceField.args) {\n      const argName = ifaceArg.name;\n      const typeArg = typeField.args.find((arg) => arg.name === argName); // Assert interface field arg exists on object field.\n\n      if (!typeArg) {\n        context.reportError(\n          `Interface field argument ${iface.name}.${fieldName}(${argName}:) expected but ${type.name}.${fieldName} does not provide it.`,\n          [ifaceArg.astNode, typeField.astNode],\n        );\n        continue;\n      } // Assert interface field arg type matches object field arg type.\n      // (invariant)\n      // TODO: change to contravariant?\n\n      if (!isEqualType(ifaceArg.type, typeArg.type)) {\n        var _ifaceArg$astNode, _typeArg$astNode;\n\n        context.reportError(\n          `Interface field argument ${iface.name}.${fieldName}(${argName}:) ` +\n            `expects type ${inspect(ifaceArg.type)} but ` +\n            `${type.name}.${fieldName}(${argName}:) is type ` +\n            `${inspect(typeArg.type)}.`,\n          [\n            (_ifaceArg$astNode = ifaceArg.astNode) === null ||\n            _ifaceArg$astNode === void 0\n              ? void 0\n              : _ifaceArg$astNode.type,\n            (_typeArg$astNode = typeArg.astNode) === null ||\n            _typeArg$astNode === void 0\n              ? void 0\n              : _typeArg$astNode.type,\n          ],\n        );\n      } // TODO: validate default values?\n    } // Assert additional arguments must not be required.\n\n    for (const typeArg of typeField.args) {\n      const argName = typeArg.name;\n      const ifaceArg = ifaceField.args.find((arg) => arg.name === argName);\n\n      if (!ifaceArg && isRequiredArgument(typeArg)) {\n        context.reportError(\n          `Object field ${type.name}.${fieldName} includes required argument ${argName} that is missing from the Interface field ${iface.name}.${fieldName}.`,\n          [typeArg.astNode, ifaceField.astNode],\n        );\n      }\n    }\n  }\n}\n\nfunction validateTypeImplementsAncestors(context, type, iface) {\n  const ifaceInterfaces = type.getInterfaces();\n\n  for (const transitive of iface.getInterfaces()) {\n    if (!ifaceInterfaces.includes(transitive)) {\n      context.reportError(\n        transitive === type\n          ? `Type ${type.name} cannot implement ${iface.name} because it would create a circular reference.`\n          : `Type ${type.name} must implement ${transitive.name} because it is implemented by ${iface.name}.`,\n        [\n          ...getAllImplementsInterfaceNodes(iface, transitive),\n          ...getAllImplementsInterfaceNodes(type, iface),\n        ],\n      );\n    }\n  }\n}\n\nfunction validateUnionMembers(context, union) {\n  const memberTypes = union.getTypes();\n\n  if (memberTypes.length === 0) {\n    context.reportError(\n      `Union type ${union.name} must define one or more member types.`,\n      [union.astNode, ...union.extensionASTNodes],\n    );\n  }\n\n  const includedTypeNames = Object.create(null);\n\n  for (const memberType of memberTypes) {\n    if (includedTypeNames[memberType.name]) {\n      context.reportError(\n        `Union type ${union.name} can only include type ${memberType.name} once.`,\n        getUnionMemberTypeNodes(union, memberType.name),\n      );\n      continue;\n    }\n\n    includedTypeNames[memberType.name] = true;\n\n    if (!isObjectType(memberType)) {\n      context.reportError(\n        `Union type ${union.name} can only include Object types, ` +\n          `it cannot include ${inspect(memberType)}.`,\n        getUnionMemberTypeNodes(union, String(memberType)),\n      );\n    }\n  }\n}\n\nfunction validateEnumValues(context, enumType) {\n  const enumValues = enumType.getValues();\n\n  if (enumValues.length === 0) {\n    context.reportError(\n      `Enum type ${enumType.name} must define one or more values.`,\n      [enumType.astNode, ...enumType.extensionASTNodes],\n    );\n  }\n\n  for (const enumValue of enumValues) {\n    // Ensure valid name.\n    validateName(context, enumValue);\n  }\n}\n\nfunction validateInputFields(context, inputObj) {\n  const fields = Object.values(inputObj.getFields());\n\n  if (fields.length === 0) {\n    context.reportError(\n      `Input Object type ${inputObj.name} must define one or more fields.`,\n      [inputObj.astNode, ...inputObj.extensionASTNodes],\n    );\n  } // Ensure the arguments are valid\n\n  for (const field of fields) {\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an input type\n\n    if (!isInputType(field.type)) {\n      var _field$astNode2;\n\n      context.reportError(\n        `The type of ${inputObj.name}.${field.name} must be Input Type ` +\n          `but got: ${inspect(field.type)}.`,\n        (_field$astNode2 = field.astNode) === null || _field$astNode2 === void 0\n          ? void 0\n          : _field$astNode2.type,\n      );\n    }\n\n    if (isRequiredInputField(field) && field.deprecationReason != null) {\n      var _field$astNode3;\n\n      context.reportError(\n        `Required input field ${inputObj.name}.${field.name} cannot be deprecated.`,\n        [\n          getDeprecatedDirectiveNode(field.astNode),\n          (_field$astNode3 = field.astNode) === null ||\n          _field$astNode3 === void 0\n            ? void 0\n            : _field$astNode3.type,\n        ],\n      );\n    }\n  }\n}\n\nfunction createInputObjectCircularRefsValidator(context) {\n  // Modified copy of algorithm from 'src/validation/rules/NoFragmentCycles.js'.\n  // Tracks already visited types to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedTypes = Object.create(null); // Array of types nodes used to produce meaningful errors\n\n  const fieldPath = []; // Position in the type path\n\n  const fieldPathIndexByTypeName = Object.create(null);\n  return detectCycleRecursive; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(inputObj) {\n    if (visitedTypes[inputObj.name]) {\n      return;\n    }\n\n    visitedTypes[inputObj.name] = true;\n    fieldPathIndexByTypeName[inputObj.name] = fieldPath.length;\n    const fields = Object.values(inputObj.getFields());\n\n    for (const field of fields) {\n      if (isNonNullType(field.type) && isInputObjectType(field.type.ofType)) {\n        const fieldType = field.type.ofType;\n        const cycleIndex = fieldPathIndexByTypeName[fieldType.name];\n        fieldPath.push(field);\n\n        if (cycleIndex === undefined) {\n          detectCycleRecursive(fieldType);\n        } else {\n          const cyclePath = fieldPath.slice(cycleIndex);\n          const pathStr = cyclePath.map((fieldObj) => fieldObj.name).join('.');\n          context.reportError(\n            `Cannot reference Input Object \"${fieldType.name}\" within itself through a series of non-null fields: \"${pathStr}\".`,\n            cyclePath.map((fieldObj) => fieldObj.astNode),\n          );\n        }\n\n        fieldPath.pop();\n      }\n    }\n\n    fieldPathIndexByTypeName[inputObj.name] = undefined;\n  }\n}\n\nfunction getAllImplementsInterfaceNodes(type, iface) {\n  const { astNode, extensionASTNodes } = type;\n  const nodes =\n    astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  return nodes\n    .flatMap((typeNode) => {\n      var _typeNode$interfaces;\n\n      return (\n        /* c8 ignore next */\n        (_typeNode$interfaces = typeNode.interfaces) !== null &&\n          _typeNode$interfaces !== void 0\n          ? _typeNode$interfaces\n          : []\n      );\n    })\n    .filter((ifaceNode) => ifaceNode.name.value === iface.name);\n}\n\nfunction getUnionMemberTypeNodes(union, typeName) {\n  const { astNode, extensionASTNodes } = union;\n  const nodes =\n    astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  return nodes\n    .flatMap((unionNode) => {\n      var _unionNode$types;\n\n      return (\n        /* c8 ignore next */\n        (_unionNode$types = unionNode.types) !== null &&\n          _unionNode$types !== void 0\n          ? _unionNode$types\n          : []\n      );\n    })\n    .filter((typeNode) => typeNode.name.value === typeName);\n}\n\nfunction getDeprecatedDirectiveNode(definitionNode) {\n  var _definitionNode$direc;\n\n  return definitionNode === null || definitionNode === void 0\n    ? void 0\n    : (_definitionNode$direc = definitionNode.directives) === null ||\n      _definitionNode$direc === void 0\n    ? void 0\n    : _definitionNode$direc.find(\n        (node) => node.name.value === GraphQLDeprecatedDirective.name,\n      );\n}\n", "import { Kind } from '../language/kinds.mjs';\nimport { GraphQLList, GraphQLNonNull } from '../type/definition.mjs';\nexport function typeFromAST(schema, typeNode) {\n  switch (typeNode.kind) {\n    case Kind.LIST_TYPE: {\n      const innerType = typeFromAST(schema, typeNode.type);\n      return innerType && new GraphQLList(innerType);\n    }\n\n    case Kind.NON_NULL_TYPE: {\n      const innerType = typeFromAST(schema, typeNode.type);\n      return innerType && new GraphQLNonNull(innerType);\n    }\n\n    case Kind.NAMED_TYPE:\n      return schema.getType(typeNode.name.value);\n  }\n}\n", "import { isNode } from '../language/ast.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { getEnterLeaveForKind } from '../language/visitor.mjs';\nimport {\n  getNamedType,\n  getNullableType,\n  isCompositeType,\n  isEnumType,\n  isInputObjectType,\n  isInputType,\n  isInterfaceType,\n  isListType,\n  isObjectType,\n  isOutputType,\n} from '../type/definition.mjs';\nimport {\n  SchemaMetaFieldDef,\n  TypeMetaFieldDef,\n  TypeNameMetaFieldDef,\n} from '../type/introspection.mjs';\nimport { typeFromAST } from './typeFromAST.mjs';\n/**\n * TypeInfo is a utility class which, given a GraphQL schema, can keep track\n * of the current field and type definitions at any point in a GraphQL document\n * AST during a recursive descent by calling `enter(node)` and `leave(node)`.\n */\n\nexport class TypeInfo {\n  constructor(\n    schema,\n    /**\n     * Initial type may be provided in rare cases to facilitate traversals\n     *  beginning somewhere other than documents.\n     */\n    initialType,\n    /** @deprecated will be removed in 17.0.0 */\n    getFieldDefFn,\n  ) {\n    this._schema = schema;\n    this._typeStack = [];\n    this._parentTypeStack = [];\n    this._inputTypeStack = [];\n    this._fieldDefStack = [];\n    this._defaultValueStack = [];\n    this._directive = null;\n    this._argument = null;\n    this._enumValue = null;\n    this._getFieldDef =\n      getFieldDefFn !== null && getFieldDefFn !== void 0\n        ? getFieldDefFn\n        : getFieldDef;\n\n    if (initialType) {\n      if (isInputType(initialType)) {\n        this._inputTypeStack.push(initialType);\n      }\n\n      if (isCompositeType(initialType)) {\n        this._parentTypeStack.push(initialType);\n      }\n\n      if (isOutputType(initialType)) {\n        this._typeStack.push(initialType);\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'TypeInfo';\n  }\n\n  getType() {\n    if (this._typeStack.length > 0) {\n      return this._typeStack[this._typeStack.length - 1];\n    }\n  }\n\n  getParentType() {\n    if (this._parentTypeStack.length > 0) {\n      return this._parentTypeStack[this._parentTypeStack.length - 1];\n    }\n  }\n\n  getInputType() {\n    if (this._inputTypeStack.length > 0) {\n      return this._inputTypeStack[this._inputTypeStack.length - 1];\n    }\n  }\n\n  getParentInputType() {\n    if (this._inputTypeStack.length > 1) {\n      return this._inputTypeStack[this._inputTypeStack.length - 2];\n    }\n  }\n\n  getFieldDef() {\n    if (this._fieldDefStack.length > 0) {\n      return this._fieldDefStack[this._fieldDefStack.length - 1];\n    }\n  }\n\n  getDefaultValue() {\n    if (this._defaultValueStack.length > 0) {\n      return this._defaultValueStack[this._defaultValueStack.length - 1];\n    }\n  }\n\n  getDirective() {\n    return this._directive;\n  }\n\n  getArgument() {\n    return this._argument;\n  }\n\n  getEnumValue() {\n    return this._enumValue;\n  }\n\n  enter(node) {\n    const schema = this._schema; // Note: many of the types below are explicitly typed as \"unknown\" to drop\n    // any assumptions of a valid schema to ensure runtime types are properly\n    // checked before continuing since TypeInfo is used as part of validation\n    // which occurs before guarantees of schema and document validity.\n\n    switch (node.kind) {\n      case Kind.SELECTION_SET: {\n        const namedType = getNamedType(this.getType());\n\n        this._parentTypeStack.push(\n          isCompositeType(namedType) ? namedType : undefined,\n        );\n\n        break;\n      }\n\n      case Kind.FIELD: {\n        const parentType = this.getParentType();\n        let fieldDef;\n        let fieldType;\n\n        if (parentType) {\n          fieldDef = this._getFieldDef(schema, parentType, node);\n\n          if (fieldDef) {\n            fieldType = fieldDef.type;\n          }\n        }\n\n        this._fieldDefStack.push(fieldDef);\n\n        this._typeStack.push(isOutputType(fieldType) ? fieldType : undefined);\n\n        break;\n      }\n\n      case Kind.DIRECTIVE:\n        this._directive = schema.getDirective(node.name.value);\n        break;\n\n      case Kind.OPERATION_DEFINITION: {\n        const rootType = schema.getRootType(node.operation);\n\n        this._typeStack.push(isObjectType(rootType) ? rootType : undefined);\n\n        break;\n      }\n\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION: {\n        const typeConditionAST = node.typeCondition;\n        const outputType = typeConditionAST\n          ? typeFromAST(schema, typeConditionAST)\n          : getNamedType(this.getType());\n\n        this._typeStack.push(isOutputType(outputType) ? outputType : undefined);\n\n        break;\n      }\n\n      case Kind.VARIABLE_DEFINITION: {\n        const inputType = typeFromAST(schema, node.type);\n\n        this._inputTypeStack.push(\n          isInputType(inputType) ? inputType : undefined,\n        );\n\n        break;\n      }\n\n      case Kind.ARGUMENT: {\n        var _this$getDirective;\n\n        let argDef;\n        let argType;\n        const fieldOrDirective =\n          (_this$getDirective = this.getDirective()) !== null &&\n          _this$getDirective !== void 0\n            ? _this$getDirective\n            : this.getFieldDef();\n\n        if (fieldOrDirective) {\n          argDef = fieldOrDirective.args.find(\n            (arg) => arg.name === node.name.value,\n          );\n\n          if (argDef) {\n            argType = argDef.type;\n          }\n        }\n\n        this._argument = argDef;\n\n        this._defaultValueStack.push(argDef ? argDef.defaultValue : undefined);\n\n        this._inputTypeStack.push(isInputType(argType) ? argType : undefined);\n\n        break;\n      }\n\n      case Kind.LIST: {\n        const listType = getNullableType(this.getInputType());\n        const itemType = isListType(listType) ? listType.ofType : listType; // List positions never have a default value.\n\n        this._defaultValueStack.push(undefined);\n\n        this._inputTypeStack.push(isInputType(itemType) ? itemType : undefined);\n\n        break;\n      }\n\n      case Kind.OBJECT_FIELD: {\n        const objectType = getNamedType(this.getInputType());\n        let inputFieldType;\n        let inputField;\n\n        if (isInputObjectType(objectType)) {\n          inputField = objectType.getFields()[node.name.value];\n\n          if (inputField) {\n            inputFieldType = inputField.type;\n          }\n        }\n\n        this._defaultValueStack.push(\n          inputField ? inputField.defaultValue : undefined,\n        );\n\n        this._inputTypeStack.push(\n          isInputType(inputFieldType) ? inputFieldType : undefined,\n        );\n\n        break;\n      }\n\n      case Kind.ENUM: {\n        const enumType = getNamedType(this.getInputType());\n        let enumValue;\n\n        if (isEnumType(enumType)) {\n          enumValue = enumType.getValue(node.value);\n        }\n\n        this._enumValue = enumValue;\n        break;\n      }\n\n      default: // Ignore other nodes\n    }\n  }\n\n  leave(node) {\n    switch (node.kind) {\n      case Kind.SELECTION_SET:\n        this._parentTypeStack.pop();\n\n        break;\n\n      case Kind.FIELD:\n        this._fieldDefStack.pop();\n\n        this._typeStack.pop();\n\n        break;\n\n      case Kind.DIRECTIVE:\n        this._directive = null;\n        break;\n\n      case Kind.OPERATION_DEFINITION:\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION:\n        this._typeStack.pop();\n\n        break;\n\n      case Kind.VARIABLE_DEFINITION:\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.ARGUMENT:\n        this._argument = null;\n\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.LIST:\n      case Kind.OBJECT_FIELD:\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.ENUM:\n        this._enumValue = null;\n        break;\n\n      default: // Ignore other nodes\n    }\n  }\n}\n\n/**\n * Not exactly the same as the executor's definition of getFieldDef, in this\n * statically evaluated environment we do not always have an Object type,\n * and need to handle Interface and Union types.\n */\nfunction getFieldDef(schema, parentType, fieldNode) {\n  const name = fieldNode.name.value;\n\n  if (\n    name === SchemaMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return SchemaMetaFieldDef;\n  }\n\n  if (name === TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return TypeMetaFieldDef;\n  }\n\n  if (name === TypeNameMetaFieldDef.name && isCompositeType(parentType)) {\n    return TypeNameMetaFieldDef;\n  }\n\n  if (isObjectType(parentType) || isInterfaceType(parentType)) {\n    return parentType.getFields()[name];\n  }\n}\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\n\nexport function visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter(...args) {\n      const node = args[0];\n      typeInfo.enter(node);\n      const fn = getEnterLeaveForKind(visitor, node.kind).enter;\n\n      if (fn) {\n        const result = fn.apply(visitor, args);\n\n        if (result !== undefined) {\n          typeInfo.leave(node);\n\n          if (isNode(result)) {\n            typeInfo.enter(result);\n          }\n        }\n\n        return result;\n      }\n    },\n\n    leave(...args) {\n      const node = args[0];\n      const fn = getEnterLeaveForKind(visitor, node.kind).leave;\n      let result;\n\n      if (fn) {\n        result = fn.apply(visitor, args);\n      }\n\n      typeInfo.leave(node);\n      return result;\n    },\n  };\n}\n", "import { Kind } from './kinds.mjs';\nexport function isDefinitionNode(node) {\n  return (\n    isExecutableDefinitionNode(node) ||\n    isTypeSystemDefinitionNode(node) ||\n    isTypeSystemExtensionNode(node)\n  );\n}\nexport function isExecutableDefinitionNode(node) {\n  return (\n    node.kind === Kind.OPERATION_DEFINITION ||\n    node.kind === Kind.FRAGMENT_DEFINITION\n  );\n}\nexport function isSelectionNode(node) {\n  return (\n    node.kind === Kind.FIELD ||\n    node.kind === Kind.FRAGMENT_SPREAD ||\n    node.kind === Kind.INLINE_FRAGMENT\n  );\n}\nexport function isValueNode(node) {\n  return (\n    node.kind === Kind.VARIABLE ||\n    node.kind === Kind.INT ||\n    node.kind === Kind.FLOAT ||\n    node.kind === Kind.STRING ||\n    node.kind === Kind.BOOLEAN ||\n    node.kind === Kind.NULL ||\n    node.kind === Kind.ENUM ||\n    node.kind === Kind.LIST ||\n    node.kind === Kind.OBJECT\n  );\n}\nexport function isConstValueNode(node) {\n  return (\n    isValueNode(node) &&\n    (node.kind === Kind.LIST\n      ? node.values.some(isConstValueNode)\n      : node.kind === Kind.OBJECT\n      ? node.fields.some((field) => isConstValueNode(field.value))\n      : node.kind !== Kind.VARIABLE)\n  );\n}\nexport function isTypeNode(node) {\n  return (\n    node.kind === Kind.NAMED_TYPE ||\n    node.kind === Kind.LIST_TYPE ||\n    node.kind === Kind.NON_NULL_TYPE\n  );\n}\nexport function isTypeSystemDefinitionNode(node) {\n  return (\n    node.kind === Kind.SCHEMA_DEFINITION ||\n    isTypeDefinitionNode(node) ||\n    node.kind === Kind.DIRECTIVE_DEFINITION\n  );\n}\nexport function isTypeDefinitionNode(node) {\n  return (\n    node.kind === Kind.SCALAR_TYPE_DEFINITION ||\n    node.kind === Kind.OBJECT_TYPE_DEFINITION ||\n    node.kind === Kind.INTERFACE_TYPE_DEFINITION ||\n    node.kind === Kind.UNION_TYPE_DEFINITION ||\n    node.kind === Kind.ENUM_TYPE_DEFINITION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION\n  );\n}\nexport function isTypeSystemExtensionNode(node) {\n  return node.kind === Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node);\n}\nexport function isTypeExtensionNode(node) {\n  return (\n    node.kind === Kind.SCALAR_TYPE_EXTENSION ||\n    node.kind === Kind.OBJECT_TYPE_EXTENSION ||\n    node.kind === Kind.INTERFACE_TYPE_EXTENSION ||\n    node.kind === Kind.UNION_TYPE_EXTENSION ||\n    node.kind === Kind.ENUM_TYPE_EXTENSION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_EXTENSION\n  );\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { isExecutableDefinitionNode } from '../../language/predicates.mjs';\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n *\n * See https://spec.graphql.org/draft/#sec-Executable-Definitions\n */\nexport function ExecutableDefinitionsRule(context) {\n  return {\n    Document(node) {\n      for (const definition of node.definitions) {\n        if (!isExecutableDefinitionNode(definition)) {\n          const defName =\n            definition.kind === Kind.SCHEMA_DEFINITION ||\n            definition.kind === Kind.SCHEMA_EXTENSION\n              ? 'schema'\n              : '\"' + definition.name.value + '\"';\n          context.reportError(\n            new GraphQLError(`The ${defName} definition is not executable.`, {\n              nodes: definition,\n            }),\n          );\n        }\n      }\n\n      return false;\n    },\n  };\n}\n", "import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { naturalCompare } from '../../jsutils/naturalCompare.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport {\n  isAbstractType,\n  isInterfaceType,\n  isObjectType,\n} from '../../type/definition.mjs';\n\n/**\n * Fields on correct type\n *\n * A GraphQL document is only valid if all fields selected are defined by the\n * parent type, or are an allowed meta field such as __typename.\n *\n * See https://spec.graphql.org/draft/#sec-Field-Selections\n */\nexport function FieldsOnCorrectTypeRule(context) {\n  return {\n    Field(node) {\n      const type = context.getParentType();\n\n      if (type) {\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          // This field doesn't exist, lets look for suggestions.\n          const schema = context.getSchema();\n          const fieldName = node.name.value; // First determine if there are any suggested types to condition on.\n\n          let suggestion = didYouMean(\n            'to use an inline fragment on',\n            getSuggestedTypeNames(schema, type, fieldName),\n          ); // If there are no suggested types, then perhaps this was a typo?\n\n          if (suggestion === '') {\n            suggestion = didYouMean(getSuggestedFieldNames(type, fieldName));\n          } // Report an error, including helpful suggestions.\n\n          context.reportError(\n            new GraphQLError(\n              `Cannot query field \"${fieldName}\" on type \"${type.name}\".` +\n                suggestion,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n/**\n * Go through all of the implementations of type, as well as the interfaces that\n * they implement. If any of those types include the provided field, suggest them,\n * sorted by how often the type is referenced.\n */\n\nfunction getSuggestedTypeNames(schema, type, fieldName) {\n  if (!isAbstractType(type)) {\n    // Must be an Object type, which does not have possible fields.\n    return [];\n  }\n\n  const suggestedTypes = new Set();\n  const usageCount = Object.create(null);\n\n  for (const possibleType of schema.getPossibleTypes(type)) {\n    if (!possibleType.getFields()[fieldName]) {\n      continue;\n    } // This object type defines this field.\n\n    suggestedTypes.add(possibleType);\n    usageCount[possibleType.name] = 1;\n\n    for (const possibleInterface of possibleType.getInterfaces()) {\n      var _usageCount$possibleI;\n\n      if (!possibleInterface.getFields()[fieldName]) {\n        continue;\n      } // This interface type defines this field.\n\n      suggestedTypes.add(possibleInterface);\n      usageCount[possibleInterface.name] =\n        ((_usageCount$possibleI = usageCount[possibleInterface.name]) !==\n          null && _usageCount$possibleI !== void 0\n          ? _usageCount$possibleI\n          : 0) + 1;\n    }\n  }\n\n  return [...suggestedTypes]\n    .sort((typeA, typeB) => {\n      // Suggest both interface and object types based on how common they are.\n      const usageCountDiff = usageCount[typeB.name] - usageCount[typeA.name];\n\n      if (usageCountDiff !== 0) {\n        return usageCountDiff;\n      } // Suggest super types first followed by subtypes\n\n      if (isInterfaceType(typeA) && schema.isSubType(typeA, typeB)) {\n        return -1;\n      }\n\n      if (isInterfaceType(typeB) && schema.isSubType(typeB, typeA)) {\n        return 1;\n      }\n\n      return naturalCompare(typeA.name, typeB.name);\n    })\n    .map((x) => x.name);\n}\n/**\n * For the field name provided, determine if there are any similar field names\n * that may be the result of a typo.\n */\n\nfunction getSuggestedFieldNames(type, fieldName) {\n  if (isObjectType(type) || isInterfaceType(type)) {\n    const possibleFieldNames = Object.keys(type.getFields());\n    return suggestionList(fieldName, possibleFieldNames);\n  } // Otherwise, must be a Union type, which does not define fields.\n\n  return [];\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { print } from '../../language/printer.mjs';\nimport { isCompositeType } from '../../type/definition.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Fragments on composite type\n *\n * Fragments use a type condition to determine if they apply, since fragments\n * can only be spread into a composite type (object, interface, or union), the\n * type condition must also be a composite type.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-On-Composite-Types\n */\nexport function FragmentsOnCompositeTypesRule(context) {\n  return {\n    InlineFragment(node) {\n      const typeCondition = node.typeCondition;\n\n      if (typeCondition) {\n        const type = typeFromAST(context.getSchema(), typeCondition);\n\n        if (type && !isCompositeType(type)) {\n          const typeStr = print(typeCondition);\n          context.reportError(\n            new GraphQLError(\n              `Fragment cannot condition on non composite type \"${typeStr}\".`,\n              {\n                nodes: typeCondition,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    FragmentDefinition(node) {\n      const type = typeFromAST(context.getSchema(), node.typeCondition);\n\n      if (type && !isCompositeType(type)) {\n        const typeStr = print(node.typeCondition);\n        context.reportError(\n          new GraphQLError(\n            `Fragment \"${node.name.value}\" cannot condition on non composite type \"${typeStr}\".`,\n            {\n              nodes: node.typeCondition,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n * See https://spec.graphql.org/draft/#sec-Directives-Are-In-Valid-Locations\n */\nexport function KnownArgumentNamesRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...KnownArgumentNamesOnDirectivesRule(context),\n\n    Argument(argNode) {\n      const argDef = context.getArgument();\n      const fieldDef = context.getFieldDef();\n      const parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        const argName = argNode.name.value;\n        const knownArgsNames = fieldDef.args.map((arg) => arg.name);\n        const suggestions = suggestionList(argName, knownArgsNames);\n        context.reportError(\n          new GraphQLError(\n            `Unknown argument \"${argName}\" on field \"${parentType.name}.${fieldDef.name}\".` +\n              didYouMean(suggestions),\n            {\n              nodes: argNode,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n/**\n * @internal\n */\n\nexport function KnownArgumentNamesOnDirectivesRule(context) {\n  const directiveArgs = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    directiveArgs[directive.name] = directive.args.map((arg) => arg.name);\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argsNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      directiveArgs[def.name.value] = argsNodes.map((arg) => arg.name.value);\n    }\n  }\n\n  return {\n    Directive(directiveNode) {\n      const directiveName = directiveNode.name.value;\n      const knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (const argNode of directiveNode.arguments) {\n          const argName = argNode.name.value;\n\n          if (!knownArgs.includes(argName)) {\n            const suggestions = suggestionList(argName, knownArgs);\n            context.reportError(\n              new GraphQLError(\n                `Unknown argument \"${argName}\" on directive \"@${directiveName}\".` +\n                  didYouMean(suggestions),\n                {\n                  nodes: argNode,\n                },\n              ),\n            );\n          }\n        }\n      }\n\n      return false;\n    },\n  };\n}\n", "import { inspect } from '../../jsutils/inspect.mjs';\nimport { invariant } from '../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { OperationTypeNode } from '../../language/ast.mjs';\nimport { DirectiveLocation } from '../../language/directiveLocation.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Defined\n */\nexport function KnownDirectivesRule(context) {\n  const locationsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map((name) => name.value);\n    }\n  }\n\n  return {\n    Directive(node, _key, _parent, _path, ancestors) {\n      const name = node.name.value;\n      const locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(\n          new GraphQLError(`Unknown directive \"@${name}\".`, {\n            nodes: node,\n          }),\n        );\n        return;\n      }\n\n      const candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && !locations.includes(candidateLocation)) {\n        context.reportError(\n          new GraphQLError(\n            `Directive \"@${name}\" may not be used on ${candidateLocation}.`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  const appliedTo = ancestors[ancestors.length - 1];\n  'kind' in appliedTo || invariant(false);\n\n  switch (appliedTo.kind) {\n    case Kind.OPERATION_DEFINITION:\n      return getDirectiveLocationForOperation(appliedTo.operation);\n\n    case Kind.FIELD:\n      return DirectiveLocation.FIELD;\n\n    case Kind.FRAGMENT_SPREAD:\n      return DirectiveLocation.FRAGMENT_SPREAD;\n\n    case Kind.INLINE_FRAGMENT:\n      return DirectiveLocation.INLINE_FRAGMENT;\n\n    case Kind.FRAGMENT_DEFINITION:\n      return DirectiveLocation.FRAGMENT_DEFINITION;\n\n    case Kind.VARIABLE_DEFINITION:\n      return DirectiveLocation.VARIABLE_DEFINITION;\n\n    case Kind.SCHEMA_DEFINITION:\n    case Kind.SCHEMA_EXTENSION:\n      return DirectiveLocation.SCHEMA;\n\n    case Kind.SCALAR_TYPE_DEFINITION:\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return DirectiveLocation.SCALAR;\n\n    case Kind.OBJECT_TYPE_DEFINITION:\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.OBJECT;\n\n    case Kind.FIELD_DEFINITION:\n      return DirectiveLocation.FIELD_DEFINITION;\n\n    case Kind.INTERFACE_TYPE_DEFINITION:\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return DirectiveLocation.INTERFACE;\n\n    case Kind.UNION_TYPE_DEFINITION:\n    case Kind.UNION_TYPE_EXTENSION:\n      return DirectiveLocation.UNION;\n\n    case Kind.ENUM_TYPE_DEFINITION:\n    case Kind.ENUM_TYPE_EXTENSION:\n      return DirectiveLocation.ENUM;\n\n    case Kind.ENUM_VALUE_DEFINITION:\n      return DirectiveLocation.ENUM_VALUE;\n\n    case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.INPUT_OBJECT;\n\n    case Kind.INPUT_VALUE_DEFINITION: {\n      const parentNode = ancestors[ancestors.length - 3];\n      'kind' in parentNode || invariant(false);\n      return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION\n        ? DirectiveLocation.INPUT_FIELD_DEFINITION\n        : DirectiveLocation.ARGUMENT_DEFINITION;\n    }\n    // Not reachable, all possible types have been considered.\n\n    /* c8 ignore next */\n\n    default:\n      false || invariant(false, 'Unexpected kind: ' + inspect(appliedTo.kind));\n  }\n}\n\nfunction getDirectiveLocationForOperation(operation) {\n  switch (operation) {\n    case OperationTypeNode.QUERY:\n      return DirectiveLocation.QUERY;\n\n    case OperationTypeNode.MUTATION:\n      return DirectiveLocation.MUTATION;\n\n    case OperationTypeNode.SUBSCRIPTION:\n      return DirectiveLocation.SUBSCRIPTION;\n  }\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spread-target-defined\n */\nexport function KnownFragmentNamesRule(context) {\n  return {\n    FragmentSpread(node) {\n      const fragmentName = node.name.value;\n      const fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(\n          new GraphQLError(`Unknown fragment \"${fragmentName}\".`, {\n            nodes: node.name,\n          }),\n        );\n      }\n    },\n  };\n}\n", "import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport {\n  isTypeDefinitionNode,\n  isTypeSystemDefinitionNode,\n  isTypeSystemExtensionNode,\n} from '../../language/predicates.mjs';\nimport { introspectionTypes } from '../../type/introspection.mjs';\nimport { specifiedScalarTypes } from '../../type/scalars.mjs';\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Spread-Type-Existence\n */\nexport function KnownTypeNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypesMap = schema ? schema.getTypeMap() : Object.create(null);\n  const definedTypes = Object.create(null);\n\n  for (const def of context.getDocument().definitions) {\n    if (isTypeDefinitionNode(def)) {\n      definedTypes[def.name.value] = true;\n    }\n  }\n\n  const typeNames = [\n    ...Object.keys(existingTypesMap),\n    ...Object.keys(definedTypes),\n  ];\n  return {\n    NamedType(node, _1, parent, _2, ancestors) {\n      const typeName = node.name.value;\n\n      if (!existingTypesMap[typeName] && !definedTypes[typeName]) {\n        var _ancestors$;\n\n        const definitionNode =\n          (_ancestors$ = ancestors[2]) !== null && _ancestors$ !== void 0\n            ? _ancestors$\n            : parent;\n        const isSDL = definitionNode != null && isSDLNode(definitionNode);\n\n        if (isSDL && standardTypeNames.includes(typeName)) {\n          return;\n        }\n\n        const suggestedTypes = suggestionList(\n          typeName,\n          isSDL ? standardTypeNames.concat(typeNames) : typeNames,\n        );\n        context.reportError(\n          new GraphQLError(\n            `Unknown type \"${typeName}\".` + didYouMean(suggestedTypes),\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\nconst standardTypeNames = [...specifiedScalarTypes, ...introspectionTypes].map(\n  (type) => type.name,\n);\n\nfunction isSDLNode(value) {\n  return (\n    'kind' in value &&\n    (isTypeSystemDefinitionNode(value) || isTypeSystemExtensionNode(value))\n  );\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n *\n * See https://spec.graphql.org/draft/#sec-Lone-Anonymous-Operation\n */\nexport function LoneAnonymousOperationRule(context) {\n  let operationCount = 0;\n  return {\n    Document(node) {\n      operationCount = node.definitions.filter(\n        (definition) => definition.kind === Kind.OPERATION_DEFINITION,\n      ).length;\n    },\n\n    OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(\n          new GraphQLError(\n            'This anonymous operation must be the only defined operation.',\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Lone Schema definition\n *\n * A GraphQL document is only valid if it contains only one schema definition.\n */\nexport function LoneSchemaDefinitionRule(context) {\n  var _ref, _ref2, _oldSchema$astNode;\n\n  const oldSchema = context.getSchema();\n  const alreadyDefined =\n    (_ref =\n      (_ref2 =\n        (_oldSchema$astNode =\n          oldSchema === null || oldSchema === void 0\n            ? void 0\n            : oldSchema.astNode) !== null && _oldSchema$astNode !== void 0\n          ? _oldSchema$astNode\n          : oldSchema === null || oldSchema === void 0\n          ? void 0\n          : oldSchema.getQueryType()) !== null && _ref2 !== void 0\n        ? _ref2\n        : oldSchema === null || oldSchema === void 0\n        ? void 0\n        : oldSchema.getMutationType()) !== null && _ref !== void 0\n      ? _ref\n      : oldSchema === null || oldSchema === void 0\n      ? void 0\n      : oldSchema.getSubscriptionType();\n  let schemaDefinitionsCount = 0;\n  return {\n    SchemaDefinition(node) {\n      if (alreadyDefined) {\n        context.reportError(\n          new GraphQLError(\n            'Cannot define a new schema within a schema extension.',\n            {\n              nodes: node,\n            },\n          ),\n        );\n        return;\n      }\n\n      if (schemaDefinitionsCount > 0) {\n        context.reportError(\n          new GraphQLError('Must provide only one schema definition.', {\n            nodes: node,\n          }),\n        );\n      }\n\n      ++schemaDefinitionsCount;\n    },\n  };\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No fragment cycles\n *\n * The graph of fragment spreads must not form any cycles including spreading itself.\n * Otherwise an operation could infinitely spread or infinitely execute on cycles in the underlying data.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spreads-must-not-form-cycles\n */\nexport function NoFragmentCyclesRule(context) {\n  // Tracks already visited fragments to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedFrags = Object.create(null); // Array of AST nodes used to produce meaningful errors\n\n  const spreadPath = []; // Position in the spread path\n\n  const spreadPathIndexByName = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      detectCycleRecursive(node);\n      return false;\n    },\n  }; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(fragment) {\n    if (visitedFrags[fragment.name.value]) {\n      return;\n    }\n\n    const fragmentName = fragment.name.value;\n    visitedFrags[fragmentName] = true;\n    const spreadNodes = context.getFragmentSpreads(fragment.selectionSet);\n\n    if (spreadNodes.length === 0) {\n      return;\n    }\n\n    spreadPathIndexByName[fragmentName] = spreadPath.length;\n\n    for (const spreadNode of spreadNodes) {\n      const spreadName = spreadNode.name.value;\n      const cycleIndex = spreadPathIndexByName[spreadName];\n      spreadPath.push(spreadNode);\n\n      if (cycleIndex === undefined) {\n        const spreadFragment = context.getFragment(spreadName);\n\n        if (spreadFragment) {\n          detectCycleRecursive(spreadFragment);\n        }\n      } else {\n        const cyclePath = spreadPath.slice(cycleIndex);\n        const viaPath = cyclePath\n          .slice(0, -1)\n          .map((s) => '\"' + s.name.value + '\"')\n          .join(', ');\n        context.reportError(\n          new GraphQLError(\n            `Cannot spread fragment \"${spreadName}\" within itself` +\n              (viaPath !== '' ? ` via ${viaPath}.` : '.'),\n            {\n              nodes: cyclePath,\n            },\n          ),\n        );\n      }\n\n      spreadPath.pop();\n    }\n\n    spreadPathIndexByName[fragmentName] = undefined;\n  }\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Uses-Defined\n */\nexport function NoUndefinedVariablesRule(context) {\n  let variableNameDefined = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        variableNameDefined = Object.create(null);\n      },\n\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node } of usages) {\n          const varName = node.name.value;\n\n          if (variableNameDefined[varName] !== true) {\n            context.reportError(\n              new GraphQLError(\n                operation.name\n                  ? `Variable \"$${varName}\" is not defined by operation \"${operation.name.value}\".`\n                  : `Variable \"$${varName}\" is not defined.`,\n                {\n                  nodes: [node, operation],\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n\n    VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    },\n  };\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-Must-Be-Used\n */\nexport function NoUnusedFragmentsRule(context) {\n  const operationDefs = [];\n  const fragmentDefs = [];\n  return {\n    OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n\n    FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n\n    Document: {\n      leave() {\n        const fragmentNameUsed = Object.create(null);\n\n        for (const operation of operationDefs) {\n          for (const fragment of context.getRecursivelyReferencedFragments(\n            operation,\n          )) {\n            fragmentNameUsed[fragment.name.value] = true;\n          }\n        }\n\n        for (const fragmentDef of fragmentDefs) {\n          const fragName = fragmentDef.name.value;\n\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(\n              new GraphQLError(`Fragment \"${fragName}\" is never used.`, {\n                nodes: fragmentDef,\n              }),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No unused variables\n *\n * A GraphQL operation is only valid if all variables defined by an operation\n * are used, either directly or within a spread fragment.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variables-Used\n */\nexport function NoUnusedVariablesRule(context) {\n  let variableDefs = [];\n  return {\n    OperationDefinition: {\n      enter() {\n        variableDefs = [];\n      },\n\n      leave(operation) {\n        const variableNameUsed = Object.create(null);\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node } of usages) {\n          variableNameUsed[node.name.value] = true;\n        }\n\n        for (const variableDef of variableDefs) {\n          const variableName = variableDef.variable.name.value;\n\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(\n              new GraphQLError(\n                operation.name\n                  ? `Variable \"$${variableName}\" is never used in operation \"${operation.name.value}\".`\n                  : `Variable \"$${variableName}\" is never used.`,\n                {\n                  nodes: variableDef,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n\n    VariableDefinition(def) {\n      variableDefs.push(def);\n    },\n  };\n}\n", "import { naturalCompare } from '../jsutils/naturalCompare.mjs';\nimport { Kind } from '../language/kinds.mjs';\n/**\n * Sort ValueNode.\n *\n * This function returns a sorted copy of the given ValueNode.\n *\n * @internal\n */\n\nexport function sortValueNode(valueNode) {\n  switch (valueNode.kind) {\n    case Kind.OBJECT:\n      return { ...valueNode, fields: sortFields(valueNode.fields) };\n\n    case Kind.LIST:\n      return { ...valueNode, values: valueNode.values.map(sortValueNode) };\n\n    case Kind.INT:\n    case Kind.FLOAT:\n    case Kind.STRING:\n    case Kind.BOOLEAN:\n    case Kind.NULL:\n    case Kind.ENUM:\n    case Kind.VARIABLE:\n      return valueNode;\n  }\n}\n\nfunction sortFields(fields) {\n  return fields\n    .map((fieldNode) => ({\n      ...fieldNode,\n      value: sortValueNode(fieldNode.value),\n    }))\n    .sort((fieldA, fieldB) =>\n      naturalCompare(fieldA.name.value, fieldB.name.value),\n    );\n}\n", "import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { print } from '../../language/printer.mjs';\nimport {\n  getNamedType,\n  isInterfaceType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n} from '../../type/definition.mjs';\nimport { sortValueNode } from '../../utilities/sortValueNode.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\nfunction reasonMessage(reason) {\n  if (Array.isArray(reason)) {\n    return reason\n      .map(\n        ([responseName, subReason]) =>\n          `subfields \"${responseName}\" conflict because ` +\n          reasonMessage(subReason),\n      )\n      .join(' and ');\n  }\n\n  return reason;\n}\n/**\n * Overlapping fields can be merged\n *\n * A selection set is only valid if all fields (including spreading any\n * fragments) either correspond to distinct response names or can be merged\n * without ambiguity.\n *\n * See https://spec.graphql.org/draft/#sec-Field-Selection-Merging\n */\n\nexport function OverlappingFieldsCanBeMergedRule(context) {\n  // A memoization for when two fragments are compared \"between\" each other for\n  // conflicts. Two fragments may be compared many times, so memoizing this can\n  // dramatically improve the performance of this validator.\n  const comparedFragmentPairs = new PairSet(); // A cache for the \"field map\" and list of fragment names found in any given\n  // selection set. Selection sets may be asked for this information multiple\n  // times, so this improves the performance of this validator.\n\n  const cachedFieldsAndFragmentNames = new Map();\n  return {\n    SelectionSet(selectionSet) {\n      const conflicts = findConflictsWithinSelectionSet(\n        context,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        context.getParentType(),\n        selectionSet,\n      );\n\n      for (const [[responseName, reason], fields1, fields2] of conflicts) {\n        const reasonMsg = reasonMessage(reason);\n        context.reportError(\n          new GraphQLError(\n            `Fields \"${responseName}\" conflict because ${reasonMsg}. Use different aliases on the fields to fetch both if this was intentional.`,\n            {\n              nodes: fields1.concat(fields2),\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\n/**\n * Algorithm:\n *\n * Conflicts occur when two fields exist in a query which will produce the same\n * response name, but represent differing values, thus creating a conflict.\n * The algorithm below finds all conflicts via making a series of comparisons\n * between fields. In order to compare as few fields as possible, this makes\n * a series of comparisons \"within\" sets of fields and \"between\" sets of fields.\n *\n * Given any selection set, a collection produces both a set of fields by\n * also including all inline fragments, as well as a list of fragments\n * referenced by fragment spreads.\n *\n * A) Each selection set represented in the document first compares \"within\" its\n * collected set of fields, finding any conflicts between every pair of\n * overlapping fields.\n * Note: This is the *only time* that a the fields \"within\" a set are compared\n * to each other. After this only fields \"between\" sets are compared.\n *\n * B) Also, if any fragment is referenced in a selection set, then a\n * comparison is made \"between\" the original set of fields and the\n * referenced fragment.\n *\n * C) Also, if multiple fragments are referenced, then comparisons\n * are made \"between\" each referenced fragment.\n *\n * D) When comparing \"between\" a set of fields and a referenced fragment, first\n * a comparison is made between each field in the original set of fields and\n * each field in the the referenced set of fields.\n *\n * E) Also, if any fragment is referenced in the referenced selection set,\n * then a comparison is made \"between\" the original set of fields and the\n * referenced fragment (recursively referring to step D).\n *\n * F) When comparing \"between\" two fragments, first a comparison is made between\n * each field in the first referenced set of fields and each field in the the\n * second referenced set of fields.\n *\n * G) Also, any fragments referenced by the first must be compared to the\n * second, and any fragments referenced by the second must be compared to the\n * first (recursively referring to step F).\n *\n * H) When comparing two fields, if both have selection sets, then a comparison\n * is made \"between\" both selection sets, first comparing the set of fields in\n * the first selection set with the set of fields in the second.\n *\n * I) Also, if any fragment is referenced in either selection set, then a\n * comparison is made \"between\" the other set of fields and the\n * referenced fragment.\n *\n * J) Also, if two fragments are referenced in both selection sets, then a\n * comparison is made \"between\" the two fragments.\n *\n */\n// Find all conflicts found \"within\" a selection set, including those found\n// via spreading in fragments. Called when visiting each SelectionSet in the\n// GraphQL Document.\nfunction findConflictsWithinSelectionSet(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentType,\n  selectionSet,\n) {\n  const conflicts = [];\n  const [fieldMap, fragmentNames] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType,\n    selectionSet,\n  ); // (A) Find find all conflicts \"within\" the fields of this selection set.\n  // Note: this is the *only place* `collectConflictsWithin` is called.\n\n  collectConflictsWithin(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    fieldMap,\n  );\n\n  if (fragmentNames.length !== 0) {\n    // (B) Then collect conflicts between these fields and those represented by\n    // each spread fragment name found.\n    for (let i = 0; i < fragmentNames.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(\n        context,\n        conflicts,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        false,\n        fieldMap,\n        fragmentNames[i],\n      ); // (C) Then compare this fragment with all other fragments found in this\n      // selection set to collect conflicts between fragments spread together.\n      // This compares each item in the list of fragment names to every other\n      // item in that same list (except for itself).\n\n      for (let j = i + 1; j < fragmentNames.length; j++) {\n        collectConflictsBetweenFragments(\n          context,\n          conflicts,\n          cachedFieldsAndFragmentNames,\n          comparedFragmentPairs,\n          false,\n          fragmentNames[i],\n          fragmentNames[j],\n        );\n      }\n    }\n  }\n\n  return conflicts;\n} // Collect all conflicts found between a set of fields and a fragment reference\n// including via spreading in any nested fragments.\n\nfunction collectConflictsBetweenFieldsAndFragment(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  fieldMap,\n  fragmentName,\n) {\n  const fragment = context.getFragment(fragmentName);\n\n  if (!fragment) {\n    return;\n  }\n\n  const [fieldMap2, referencedFragmentNames] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment,\n    ); // Do not compare a fragment's fieldMap to itself.\n\n  if (fieldMap === fieldMap2) {\n    return;\n  } // (D) First collect any conflicts between the provided collection of fields\n  // and the collection of fields represented by the given fragment.\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap,\n    fieldMap2,\n  ); // (E) Then collect any conflicts between the provided collection of fields\n  // and any fragment names found in the given fragment.\n\n  for (const referencedFragmentName of referencedFragmentNames) {\n    // Memoize so two fragments are not compared for conflicts more than once.\n    if (\n      comparedFragmentPairs.has(\n        referencedFragmentName,\n        fragmentName,\n        areMutuallyExclusive,\n      )\n    ) {\n      continue;\n    }\n\n    comparedFragmentPairs.add(\n      referencedFragmentName,\n      fragmentName,\n      areMutuallyExclusive,\n    );\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap,\n      referencedFragmentName,\n    );\n  }\n} // Collect all conflicts found between two fragments, including via spreading in\n// any nested fragments.\n\nfunction collectConflictsBetweenFragments(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  fragmentName1,\n  fragmentName2,\n) {\n  // No need to compare a fragment to itself.\n  if (fragmentName1 === fragmentName2) {\n    return;\n  } // Memoize so two fragments are not compared for conflicts more than once.\n\n  if (\n    comparedFragmentPairs.has(\n      fragmentName1,\n      fragmentName2,\n      areMutuallyExclusive,\n    )\n  ) {\n    return;\n  }\n\n  comparedFragmentPairs.add(fragmentName1, fragmentName2, areMutuallyExclusive);\n  const fragment1 = context.getFragment(fragmentName1);\n  const fragment2 = context.getFragment(fragmentName2);\n\n  if (!fragment1 || !fragment2) {\n    return;\n  }\n\n  const [fieldMap1, referencedFragmentNames1] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment1,\n    );\n  const [fieldMap2, referencedFragmentNames2] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment2,\n    ); // (F) First, collect all conflicts between these two collections of fields\n  // (not including any nested fragments).\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap1,\n    fieldMap2,\n  ); // (G) Then collect conflicts between the first fragment and any nested\n  // fragments spread in the second fragment.\n\n  for (const referencedFragmentName2 of referencedFragmentNames2) {\n    collectConflictsBetweenFragments(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fragmentName1,\n      referencedFragmentName2,\n    );\n  } // (G) Then collect conflicts between the second fragment and any nested\n  // fragments spread in the first fragment.\n\n  for (const referencedFragmentName1 of referencedFragmentNames1) {\n    collectConflictsBetweenFragments(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      referencedFragmentName1,\n      fragmentName2,\n    );\n  }\n} // Find all conflicts found between two selection sets, including those found\n// via spreading in fragments. Called when determining if conflicts exist\n// between the sub-fields of two overlapping fields.\n\nfunction findConflictsBetweenSubSelectionSets(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  parentType1,\n  selectionSet1,\n  parentType2,\n  selectionSet2,\n) {\n  const conflicts = [];\n  const [fieldMap1, fragmentNames1] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType1,\n    selectionSet1,\n  );\n  const [fieldMap2, fragmentNames2] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType2,\n    selectionSet2,\n  ); // (H) First, collect all conflicts between these two collections of field.\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap1,\n    fieldMap2,\n  ); // (I) Then collect conflicts between the first collection of fields and\n  // those referenced by each fragment name associated with the second.\n\n  for (const fragmentName2 of fragmentNames2) {\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap1,\n      fragmentName2,\n    );\n  } // (I) Then collect conflicts between the second collection of fields and\n  // those referenced by each fragment name associated with the first.\n\n  for (const fragmentName1 of fragmentNames1) {\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap2,\n      fragmentName1,\n    );\n  } // (J) Also collect conflicts between any fragment names by the first and\n  // fragment names by the second. This compares each item in the first set of\n  // names to each item in the second set of names.\n\n  for (const fragmentName1 of fragmentNames1) {\n    for (const fragmentName2 of fragmentNames2) {\n      collectConflictsBetweenFragments(\n        context,\n        conflicts,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        areMutuallyExclusive,\n        fragmentName1,\n        fragmentName2,\n      );\n    }\n  }\n\n  return conflicts;\n} // Collect all Conflicts \"within\" one collection of fields.\n\nfunction collectConflictsWithin(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  fieldMap,\n) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For every response name, if there are multiple fields, they\n  // must be compared to find a potential conflict.\n  for (const [responseName, fields] of Object.entries(fieldMap)) {\n    // This compares every field in the list to every other field in this list\n    // (except to itself). If the list only has one item, nothing needs to\n    // be compared.\n    if (fields.length > 1) {\n      for (let i = 0; i < fields.length; i++) {\n        for (let j = i + 1; j < fields.length; j++) {\n          const conflict = findConflict(\n            context,\n            cachedFieldsAndFragmentNames,\n            comparedFragmentPairs,\n            false, // within one collection is never mutually exclusive\n            responseName,\n            fields[i],\n            fields[j],\n          );\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Collect all Conflicts between two collections of fields. This is similar to,\n// but different from the `collectConflictsWithin` function above. This check\n// assumes that `collectConflictsWithin` has already been called on each\n// provided collection of fields. This is true because this validator traverses\n// each individual selection set.\n\nfunction collectConflictsBetween(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentFieldsAreMutuallyExclusive,\n  fieldMap1,\n  fieldMap2,\n) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For any response name which appears in both provided field\n  // maps, each field from the first field map must be compared to every field\n  // in the second field map to find potential conflicts.\n  for (const [responseName, fields1] of Object.entries(fieldMap1)) {\n    const fields2 = fieldMap2[responseName];\n\n    if (fields2) {\n      for (const field1 of fields1) {\n        for (const field2 of fields2) {\n          const conflict = findConflict(\n            context,\n            cachedFieldsAndFragmentNames,\n            comparedFragmentPairs,\n            parentFieldsAreMutuallyExclusive,\n            responseName,\n            field1,\n            field2,\n          );\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Determines if there is a conflict between two particular fields, including\n// comparing their sub-fields.\n\nfunction findConflict(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentFieldsAreMutuallyExclusive,\n  responseName,\n  field1,\n  field2,\n) {\n  const [parentType1, node1, def1] = field1;\n  const [parentType2, node2, def2] = field2; // If it is known that two fields could not possibly apply at the same\n  // time, due to the parent types, then it is safe to permit them to diverge\n  // in aliased field or arguments used as they will not present any ambiguity\n  // by differing.\n  // It is known that two parent types could never overlap if they are\n  // different Object types. Interface or Union types might overlap - if not\n  // in the current state of the schema, then perhaps in some future version,\n  // thus may not safely diverge.\n\n  const areMutuallyExclusive =\n    parentFieldsAreMutuallyExclusive ||\n    (parentType1 !== parentType2 &&\n      isObjectType(parentType1) &&\n      isObjectType(parentType2));\n\n  if (!areMutuallyExclusive) {\n    // Two aliases must refer to the same field.\n    const name1 = node1.name.value;\n    const name2 = node2.name.value;\n\n    if (name1 !== name2) {\n      return [\n        [responseName, `\"${name1}\" and \"${name2}\" are different fields`],\n        [node1],\n        [node2],\n      ];\n    } // Two field calls must have the same arguments.\n\n    if (stringifyArguments(node1) !== stringifyArguments(node2)) {\n      return [\n        [responseName, 'they have differing arguments'],\n        [node1],\n        [node2],\n      ];\n    }\n  } // The return type for each field.\n\n  const type1 = def1 === null || def1 === void 0 ? void 0 : def1.type;\n  const type2 = def2 === null || def2 === void 0 ? void 0 : def2.type;\n\n  if (type1 && type2 && doTypesConflict(type1, type2)) {\n    return [\n      [\n        responseName,\n        `they return conflicting types \"${inspect(type1)}\" and \"${inspect(\n          type2,\n        )}\"`,\n      ],\n      [node1],\n      [node2],\n    ];\n  } // Collect and compare sub-fields. Use the same \"visited fragment names\" list\n  // for both collections so fields in a fragment reference are never\n  // compared to themselves.\n\n  const selectionSet1 = node1.selectionSet;\n  const selectionSet2 = node2.selectionSet;\n\n  if (selectionSet1 && selectionSet2) {\n    const conflicts = findConflictsBetweenSubSelectionSets(\n      context,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      getNamedType(type1),\n      selectionSet1,\n      getNamedType(type2),\n      selectionSet2,\n    );\n    return subfieldConflicts(conflicts, responseName, node1, node2);\n  }\n}\n\nfunction stringifyArguments(fieldNode) {\n  var _fieldNode$arguments;\n\n  // FIXME https://github.com/graphql/graphql-js/issues/2203\n  const args =\n    /* c8 ignore next */\n    (_fieldNode$arguments = fieldNode.arguments) !== null &&\n    _fieldNode$arguments !== void 0\n      ? _fieldNode$arguments\n      : [];\n  const inputObjectWithArgs = {\n    kind: Kind.OBJECT,\n    fields: args.map((argNode) => ({\n      kind: Kind.OBJECT_FIELD,\n      name: argNode.name,\n      value: argNode.value,\n    })),\n  };\n  return print(sortValueNode(inputObjectWithArgs));\n} // Two types conflict if both types could not apply to a value simultaneously.\n// Composite types are ignored as their individual field types will be compared\n// later recursively. However List and Non-Null types must match.\n\nfunction doTypesConflict(type1, type2) {\n  if (isListType(type1)) {\n    return isListType(type2)\n      ? doTypesConflict(type1.ofType, type2.ofType)\n      : true;\n  }\n\n  if (isListType(type2)) {\n    return true;\n  }\n\n  if (isNonNullType(type1)) {\n    return isNonNullType(type2)\n      ? doTypesConflict(type1.ofType, type2.ofType)\n      : true;\n  }\n\n  if (isNonNullType(type2)) {\n    return true;\n  }\n\n  if (isLeafType(type1) || isLeafType(type2)) {\n    return type1 !== type2;\n  }\n\n  return false;\n} // Given a selection set, return the collection of fields (a mapping of response\n// name to field nodes and definitions) as well as a list of fragment names\n// referenced via fragment spreads.\n\nfunction getFieldsAndFragmentNames(\n  context,\n  cachedFieldsAndFragmentNames,\n  parentType,\n  selectionSet,\n) {\n  const cached = cachedFieldsAndFragmentNames.get(selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  const nodeAndDefs = Object.create(null);\n  const fragmentNames = Object.create(null);\n\n  _collectFieldsAndFragmentNames(\n    context,\n    parentType,\n    selectionSet,\n    nodeAndDefs,\n    fragmentNames,\n  );\n\n  const result = [nodeAndDefs, Object.keys(fragmentNames)];\n  cachedFieldsAndFragmentNames.set(selectionSet, result);\n  return result;\n} // Given a reference to a fragment, return the represented collection of fields\n// as well as a list of nested fragment names referenced via fragment spreads.\n\nfunction getReferencedFieldsAndFragmentNames(\n  context,\n  cachedFieldsAndFragmentNames,\n  fragment,\n) {\n  // Short-circuit building a type from the node if possible.\n  const cached = cachedFieldsAndFragmentNames.get(fragment.selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  const fragmentType = typeFromAST(context.getSchema(), fragment.typeCondition);\n  return getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    fragmentType,\n    fragment.selectionSet,\n  );\n}\n\nfunction _collectFieldsAndFragmentNames(\n  context,\n  parentType,\n  selectionSet,\n  nodeAndDefs,\n  fragmentNames,\n) {\n  for (const selection of selectionSet.selections) {\n    switch (selection.kind) {\n      case Kind.FIELD: {\n        const fieldName = selection.name.value;\n        let fieldDef;\n\n        if (isObjectType(parentType) || isInterfaceType(parentType)) {\n          fieldDef = parentType.getFields()[fieldName];\n        }\n\n        const responseName = selection.alias\n          ? selection.alias.value\n          : fieldName;\n\n        if (!nodeAndDefs[responseName]) {\n          nodeAndDefs[responseName] = [];\n        }\n\n        nodeAndDefs[responseName].push([parentType, selection, fieldDef]);\n        break;\n      }\n\n      case Kind.FRAGMENT_SPREAD:\n        fragmentNames[selection.name.value] = true;\n        break;\n\n      case Kind.INLINE_FRAGMENT: {\n        const typeCondition = selection.typeCondition;\n        const inlineFragmentType = typeCondition\n          ? typeFromAST(context.getSchema(), typeCondition)\n          : parentType;\n\n        _collectFieldsAndFragmentNames(\n          context,\n          inlineFragmentType,\n          selection.selectionSet,\n          nodeAndDefs,\n          fragmentNames,\n        );\n\n        break;\n      }\n    }\n  }\n} // Given a series of Conflicts which occurred between two sub-fields, generate\n// a single Conflict.\n\nfunction subfieldConflicts(conflicts, responseName, node1, node2) {\n  if (conflicts.length > 0) {\n    return [\n      [responseName, conflicts.map(([reason]) => reason)],\n      [node1, ...conflicts.map(([, fields1]) => fields1).flat()],\n      [node2, ...conflicts.map(([, , fields2]) => fields2).flat()],\n    ];\n  }\n}\n/**\n * A way to keep track of pairs of things when the ordering of the pair does not matter.\n */\n\nclass PairSet {\n  constructor() {\n    this._data = new Map();\n  }\n\n  has(a, b, areMutuallyExclusive) {\n    var _this$_data$get;\n\n    const [key1, key2] = a < b ? [a, b] : [b, a];\n    const result =\n      (_this$_data$get = this._data.get(key1)) === null ||\n      _this$_data$get === void 0\n        ? void 0\n        : _this$_data$get.get(key2);\n\n    if (result === undefined) {\n      return false;\n    } // areMutuallyExclusive being false is a superset of being true, hence if\n    // we want to know if this PairSet \"has\" these two with no exclusivity,\n    // we have to ensure it was added as such.\n\n    return areMutuallyExclusive ? true : areMutuallyExclusive === result;\n  }\n\n  add(a, b, areMutuallyExclusive) {\n    const [key1, key2] = a < b ? [a, b] : [b, a];\n\n    const map = this._data.get(key1);\n\n    if (map === undefined) {\n      this._data.set(key1, new Map([[key2, areMutuallyExclusive]]));\n    } else {\n      map.set(key2, areMutuallyExclusive);\n    }\n  }\n}\n", "import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { isCompositeType } from '../../type/definition.mjs';\nimport { doTypesOverlap } from '../../utilities/typeComparators.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Possible fragment spread\n *\n * A fragment spread is only valid if the type condition could ever possibly\n * be true: if there is a non-empty intersection of the possible parent types,\n * and possible types which pass the type condition.\n */\nexport function PossibleFragmentSpreadsRule(context) {\n  return {\n    InlineFragment(node) {\n      const fragType = context.getType();\n      const parentType = context.getParentType();\n\n      if (\n        isCompositeType(fragType) &&\n        isCompositeType(parentType) &&\n        !doTypesOverlap(context.getSchema(), fragType, parentType)\n      ) {\n        const parentTypeStr = inspect(parentType);\n        const fragTypeStr = inspect(fragType);\n        context.reportError(\n          new GraphQLError(\n            `Fragment cannot be spread here as objects of type \"${parentTypeStr}\" can never be of type \"${fragTypeStr}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    FragmentSpread(node) {\n      const fragName = node.name.value;\n      const fragType = getFragmentType(context, fragName);\n      const parentType = context.getParentType();\n\n      if (\n        fragType &&\n        parentType &&\n        !doTypesOverlap(context.getSchema(), fragType, parentType)\n      ) {\n        const parentTypeStr = inspect(parentType);\n        const fragTypeStr = inspect(fragType);\n        context.reportError(\n          new GraphQLError(\n            `Fragment \"${fragName}\" cannot be spread here as objects of type \"${parentTypeStr}\" can never be of type \"${fragTypeStr}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\nfunction getFragmentType(context, name) {\n  const frag = context.getFragment(name);\n\n  if (frag) {\n    const type = typeFromAST(context.getSchema(), frag.typeCondition);\n\n    if (isCompositeType(type)) {\n      return type;\n    }\n  }\n}\n", "import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { inspect } from '../../jsutils/inspect.mjs';\nimport { invariant } from '../../jsutils/invariant.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { isTypeDefinitionNode } from '../../language/predicates.mjs';\nimport {\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isObjectType,\n  isScalarType,\n  isUnionType,\n} from '../../type/definition.mjs';\n\n/**\n * Possible type extension\n *\n * A type extension is only valid if the type is defined and has the same kind.\n */\nexport function PossibleTypeExtensionsRule(context) {\n  const schema = context.getSchema();\n  const definedTypes = Object.create(null);\n\n  for (const def of context.getDocument().definitions) {\n    if (isTypeDefinitionNode(def)) {\n      definedTypes[def.name.value] = def;\n    }\n  }\n\n  return {\n    ScalarTypeExtension: checkExtension,\n    ObjectTypeExtension: checkExtension,\n    InterfaceTypeExtension: checkExtension,\n    UnionTypeExtension: checkExtension,\n    EnumTypeExtension: checkExtension,\n    InputObjectTypeExtension: checkExtension,\n  };\n\n  function checkExtension(node) {\n    const typeName = node.name.value;\n    const defNode = definedTypes[typeName];\n    const existingType =\n      schema === null || schema === void 0 ? void 0 : schema.getType(typeName);\n    let expectedKind;\n\n    if (defNode) {\n      expectedKind = defKindToExtKind[defNode.kind];\n    } else if (existingType) {\n      expectedKind = typeToExtKind(existingType);\n    }\n\n    if (expectedKind) {\n      if (expectedKind !== node.kind) {\n        const kindStr = extensionKindToTypeName(node.kind);\n        context.reportError(\n          new GraphQLError(`Cannot extend non-${kindStr} type \"${typeName}\".`, {\n            nodes: defNode ? [defNode, node] : node,\n          }),\n        );\n      }\n    } else {\n      const allTypeNames = Object.keys({\n        ...definedTypes,\n        ...(schema === null || schema === void 0\n          ? void 0\n          : schema.getTypeMap()),\n      });\n      const suggestedTypes = suggestionList(typeName, allTypeNames);\n      context.reportError(\n        new GraphQLError(\n          `Cannot extend type \"${typeName}\" because it is not defined.` +\n            didYouMean(suggestedTypes),\n          {\n            nodes: node.name,\n          },\n        ),\n      );\n    }\n  }\n}\nconst defKindToExtKind = {\n  [Kind.SCALAR_TYPE_DEFINITION]: Kind.SCALAR_TYPE_EXTENSION,\n  [Kind.OBJECT_TYPE_DEFINITION]: Kind.OBJECT_TYPE_EXTENSION,\n  [Kind.INTERFACE_TYPE_DEFINITION]: Kind.INTERFACE_TYPE_EXTENSION,\n  [Kind.UNION_TYPE_DEFINITION]: Kind.UNION_TYPE_EXTENSION,\n  [Kind.ENUM_TYPE_DEFINITION]: Kind.ENUM_TYPE_EXTENSION,\n  [Kind.INPUT_OBJECT_TYPE_DEFINITION]: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n};\n\nfunction typeToExtKind(type) {\n  if (isScalarType(type)) {\n    return Kind.SCALAR_TYPE_EXTENSION;\n  }\n\n  if (isObjectType(type)) {\n    return Kind.OBJECT_TYPE_EXTENSION;\n  }\n\n  if (isInterfaceType(type)) {\n    return Kind.INTERFACE_TYPE_EXTENSION;\n  }\n\n  if (isUnionType(type)) {\n    return Kind.UNION_TYPE_EXTENSION;\n  }\n\n  if (isEnumType(type)) {\n    return Kind.ENUM_TYPE_EXTENSION;\n  }\n\n  if (isInputObjectType(type)) {\n    return Kind.INPUT_OBJECT_TYPE_EXTENSION;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable. All possible types have been considered\n\n  false || invariant(false, 'Unexpected type: ' + inspect(type));\n}\n\nfunction extensionKindToTypeName(kind) {\n  switch (kind) {\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return 'scalar';\n\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return 'object';\n\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return 'interface';\n\n    case Kind.UNION_TYPE_EXTENSION:\n      return 'union';\n\n    case Kind.ENUM_TYPE_EXTENSION:\n      return 'enum';\n\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return 'input object';\n    // Not reachable. All possible types have been considered\n\n    /* c8 ignore next */\n\n    default:\n      false || invariant(false, 'Unexpected kind: ' + inspect(kind));\n  }\n}\n", "import { inspect } from '../../jsutils/inspect.mjs';\nimport { keyMap } from '../../jsutils/keyMap.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { print } from '../../language/printer.mjs';\nimport { isRequiredArgument, isType } from '../../type/definition.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\nexport function ProvidedRequiredArgumentsRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...ProvidedRequiredArgumentsOnDirectivesRule(context),\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(fieldNode) {\n        var _fieldNode$arguments;\n\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          return false;\n        }\n\n        const providedArgs = new Set( // FIXME: https://github.com/graphql/graphql-js/issues/2203\n          /* c8 ignore next */\n          (_fieldNode$arguments = fieldNode.arguments) === null ||\n          _fieldNode$arguments === void 0\n            ? void 0\n            : _fieldNode$arguments.map((arg) => arg.name.value),\n        );\n\n        for (const argDef of fieldDef.args) {\n          if (!providedArgs.has(argDef.name) && isRequiredArgument(argDef)) {\n            const argTypeStr = inspect(argDef.type);\n            context.reportError(\n              new GraphQLError(\n                `Field \"${fieldDef.name}\" argument \"${argDef.name}\" of type \"${argTypeStr}\" is required, but it was not provided.`,\n                {\n                  nodes: fieldNode,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n/**\n * @internal\n */\n\nexport function ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var _schema$getDirectives;\n\n  const requiredArgsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives =\n    (_schema$getDirectives =\n      schema === null || schema === void 0\n        ? void 0\n        : schema.getDirectives()) !== null && _schema$getDirectives !== void 0\n      ? _schema$getDirectives\n      : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    requiredArgsMap[directive.name] = keyMap(\n      directive.args.filter(isRequiredArgument),\n      (arg) => arg.name,\n    );\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      requiredArgsMap[def.name.value] = keyMap(\n        argNodes.filter(isRequiredArgumentNode),\n        (arg) => arg.name.value,\n      );\n    }\n  }\n\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(directiveNode) {\n        const directiveName = directiveNode.name.value;\n        const requiredArgs = requiredArgsMap[directiveName];\n\n        if (requiredArgs) {\n          var _directiveNode$argume;\n\n          // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n          /* c8 ignore next */\n          const argNodes =\n            (_directiveNode$argume = directiveNode.arguments) !== null &&\n            _directiveNode$argume !== void 0\n              ? _directiveNode$argume\n              : [];\n          const argNodeMap = new Set(argNodes.map((arg) => arg.name.value));\n\n          for (const [argName, argDef] of Object.entries(requiredArgs)) {\n            if (!argNodeMap.has(argName)) {\n              const argType = isType(argDef.type)\n                ? inspect(argDef.type)\n                : print(argDef.type);\n              context.reportError(\n                new GraphQLError(\n                  `Directive \"@${directiveName}\" argument \"${argName}\" of type \"${argType}\" is required, but it was not provided.`,\n                  {\n                    nodes: directiveNode,\n                  },\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n  };\n}\n\nfunction isRequiredArgumentNode(arg) {\n  return arg.type.kind === Kind.NON_NULL_TYPE && arg.defaultValue == null;\n}\n", "import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { getNamedType, isLeafType } from '../../type/definition.mjs';\n\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\nexport function ScalarLeafsRule(context) {\n  return {\n    Field(node) {\n      const type = context.getType();\n      const selectionSet = node.selectionSet;\n\n      if (type) {\n        if (isLeafType(getNamedType(type))) {\n          if (selectionSet) {\n            const fieldName = node.name.value;\n            const typeStr = inspect(type);\n            context.reportError(\n              new GraphQLError(\n                `Field \"${fieldName}\" must not have a selection since type \"${typeStr}\" has no subfields.`,\n                {\n                  nodes: selectionSet,\n                },\n              ),\n            );\n          }\n        } else if (!selectionSet) {\n          const fieldName = node.name.value;\n          const typeStr = inspect(type);\n          context.reportError(\n            new GraphQLError(\n              `Field \"${fieldName}\" of type \"${typeStr}\" must have a selection of subfields. Did you mean \"${fieldName} { ... }\"?`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n", "/**\n * Build a string describing the path.\n */\nexport function printPathArray(path) {\n  return path\n    .map((key) =>\n      typeof key === 'number' ? '[' + key.toString() + ']' : '.' + key,\n    )\n    .join('');\n}\n", "/**\n * Given a Path and a key, return a new Path containing the new key.\n */\nexport function addPath(prev, key, typename) {\n  return {\n    prev,\n    key,\n    typename,\n  };\n}\n/**\n * Given a Path, return an Array of the path keys.\n */\n\nexport function pathToArray(path) {\n  const flattened = [];\n  let curr = path;\n\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n\n  return flattened.reverse();\n}\n", "import { didYouMean } from '../jsutils/didYouMean.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { isIterableObject } from '../jsutils/isIterableObject.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { addPath, pathToArray } from '../jsutils/Path.mjs';\nimport { printPathArray } from '../jsutils/printPathArray.mjs';\nimport { suggestionList } from '../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport {\n  isInputObjectType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n} from '../type/definition.mjs';\n\n/**\n * Coerces a JavaScript value given a GraphQL Input Type.\n */\nexport function coerceInputValue(inputValue, type, onError = defaultOnError) {\n  return coerceInputValueImpl(inputValue, type, onError, undefined);\n}\n\nfunction defaultOnError(path, invalidValue, error) {\n  let errorPrefix = 'Invalid value ' + inspect(invalidValue);\n\n  if (path.length > 0) {\n    errorPrefix += ` at \"value${printPathArray(path)}\"`;\n  }\n\n  error.message = errorPrefix + ': ' + error.message;\n  throw error;\n}\n\nfunction coerceInputValueImpl(inputValue, type, onError, path) {\n  if (isNonNullType(type)) {\n    if (inputValue != null) {\n      return coerceInputValueImpl(inputValue, type.ofType, onError, path);\n    }\n\n    onError(\n      pathToArray(path),\n      inputValue,\n      new GraphQLError(\n        `Expected non-nullable type \"${inspect(type)}\" not to be null.`,\n      ),\n    );\n    return;\n  }\n\n  if (inputValue == null) {\n    // Explicitly return the value null.\n    return null;\n  }\n\n  if (isListType(type)) {\n    const itemType = type.ofType;\n\n    if (isIterableObject(inputValue)) {\n      return Array.from(inputValue, (itemValue, index) => {\n        const itemPath = addPath(path, index, undefined);\n        return coerceInputValueImpl(itemValue, itemType, onError, itemPath);\n      });\n    } // Lists accept a non-list value as a list of one.\n\n    return [coerceInputValueImpl(inputValue, itemType, onError, path)];\n  }\n\n  if (isInputObjectType(type)) {\n    if (!isObjectLike(inputValue)) {\n      onError(\n        pathToArray(path),\n        inputValue,\n        new GraphQLError(`Expected type \"${type.name}\" to be an object.`),\n      );\n      return;\n    }\n\n    const coercedValue = {};\n    const fieldDefs = type.getFields();\n\n    for (const field of Object.values(fieldDefs)) {\n      const fieldValue = inputValue[field.name];\n\n      if (fieldValue === undefined) {\n        if (field.defaultValue !== undefined) {\n          coercedValue[field.name] = field.defaultValue;\n        } else if (isNonNullType(field.type)) {\n          const typeStr = inspect(field.type);\n          onError(\n            pathToArray(path),\n            inputValue,\n            new GraphQLError(\n              `Field \"${field.name}\" of required type \"${typeStr}\" was not provided.`,\n            ),\n          );\n        }\n\n        continue;\n      }\n\n      coercedValue[field.name] = coerceInputValueImpl(\n        fieldValue,\n        field.type,\n        onError,\n        addPath(path, field.name, type.name),\n      );\n    } // Ensure every provided field is defined.\n\n    for (const fieldName of Object.keys(inputValue)) {\n      if (!fieldDefs[fieldName]) {\n        const suggestions = suggestionList(\n          fieldName,\n          Object.keys(type.getFields()),\n        );\n        onError(\n          pathToArray(path),\n          inputValue,\n          new GraphQLError(\n            `Field \"${fieldName}\" is not defined by type \"${type.name}\".` +\n              didYouMean(suggestions),\n          ),\n        );\n      }\n    }\n\n    return coercedValue;\n  }\n\n  if (isLeafType(type)) {\n    let parseResult; // Scalars and Enums determine if a input value is valid via parseValue(),\n    // which can throw to indicate failure. If it throws, maintain a reference\n    // to the original error.\n\n    try {\n      parseResult = type.parseValue(inputValue);\n    } catch (error) {\n      if (error instanceof GraphQLError) {\n        onError(pathToArray(path), inputValue, error);\n      } else {\n        onError(\n          pathToArray(path),\n          inputValue,\n          new GraphQLError(`Expected type \"${type.name}\". ` + error.message, {\n            originalError: error,\n          }),\n        );\n      }\n\n      return;\n    }\n\n    if (parseResult === undefined) {\n      onError(\n        pathToArray(path),\n        inputValue,\n        new GraphQLError(`Expected type \"${type.name}\".`),\n      );\n    }\n\n    return parseResult;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false || invariant(false, 'Unexpected input type: ' + inspect(type));\n}\n", "import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport {\n  isInputObjectType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n} from '../type/definition.mjs';\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * GraphQL Value literals.\n *\n * Returns `undefined` when the value could not be validly coerced according to\n * the provided type.\n *\n * | GraphQL Value        | JSON Value    |\n * | -------------------- | ------------- |\n * | Input Object         | Object        |\n * | List                 | Array         |\n * | Boolean              | Boolean       |\n * | String               | String        |\n * | Int / Float          | Number        |\n * | Enum Value           | Unknown       |\n * | NullValue            | null          |\n *\n */\n\nexport function valueFromAST(valueNode, type, variables) {\n  if (!valueNode) {\n    // When there is no node, then there is also no value.\n    // Importantly, this is different from returning the value null.\n    return;\n  }\n\n  if (valueNode.kind === Kind.VARIABLE) {\n    const variableName = valueNode.name.value;\n\n    if (variables == null || variables[variableName] === undefined) {\n      // No valid return value.\n      return;\n    }\n\n    const variableValue = variables[variableName];\n\n    if (variableValue === null && isNonNullType(type)) {\n      return; // Invalid: intentionally return no value.\n    } // Note: This does no further checking that this variable is correct.\n    // This assumes that this query has been validated and the variable\n    // usage here is of the correct type.\n\n    return variableValue;\n  }\n\n  if (isNonNullType(type)) {\n    if (valueNode.kind === Kind.NULL) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return valueFromAST(valueNode, type.ofType, variables);\n  }\n\n  if (valueNode.kind === Kind.NULL) {\n    // This is explicitly returning the value null.\n    return null;\n  }\n\n  if (isListType(type)) {\n    const itemType = type.ofType;\n\n    if (valueNode.kind === Kind.LIST) {\n      const coercedValues = [];\n\n      for (const itemNode of valueNode.values) {\n        if (isMissingVariable(itemNode, variables)) {\n          // If an array contains a missing variable, it is either coerced to\n          // null or if the item type is non-null, it considered invalid.\n          if (isNonNullType(itemType)) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(null);\n        } else {\n          const itemValue = valueFromAST(itemNode, itemType, variables);\n\n          if (itemValue === undefined) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(itemValue);\n        }\n      }\n\n      return coercedValues;\n    }\n\n    const coercedValue = valueFromAST(valueNode, itemType, variables);\n\n    if (coercedValue === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return [coercedValue];\n  }\n\n  if (isInputObjectType(type)) {\n    if (valueNode.kind !== Kind.OBJECT) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    const coercedObj = Object.create(null);\n    const fieldNodes = keyMap(valueNode.fields, (field) => field.name.value);\n\n    for (const field of Object.values(type.getFields())) {\n      const fieldNode = fieldNodes[field.name];\n\n      if (!fieldNode || isMissingVariable(fieldNode.value, variables)) {\n        if (field.defaultValue !== undefined) {\n          coercedObj[field.name] = field.defaultValue;\n        } else if (isNonNullType(field.type)) {\n          return; // Invalid: intentionally return no value.\n        }\n\n        continue;\n      }\n\n      const fieldValue = valueFromAST(fieldNode.value, field.type, variables);\n\n      if (fieldValue === undefined) {\n        return; // Invalid: intentionally return no value.\n      }\n\n      coercedObj[field.name] = fieldValue;\n    }\n\n    return coercedObj;\n  }\n\n  if (isLeafType(type)) {\n    // Scalars and Enums fulfill parsing a literal value via parseLiteral().\n    // Invalid values represent a failure to parse correctly, in which case\n    // no value is returned.\n    let result;\n\n    try {\n      result = type.parseLiteral(valueNode, variables);\n    } catch (_error) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    if (result === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return result;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible input types have been considered.\n\n  false || invariant(false, 'Unexpected input type: ' + inspect(type));\n} // Returns true if the provided valueNode is a variable which is not defined\n// in the set of variables.\n\nfunction isMissingVariable(valueNode, variables) {\n  return (\n    valueNode.kind === Kind.VARIABLE &&\n    (variables == null || variables[valueNode.name.value] === undefined)\n  );\n}\n", "import { inspect } from '../jsutils/inspect.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { printPathArray } from '../jsutils/printPathArray.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport { isInputType, isNonNullType } from '../type/definition.mjs';\nimport { coerceInputValue } from '../utilities/coerceInputValue.mjs';\nimport { typeFromAST } from '../utilities/typeFromAST.mjs';\nimport { valueFromAST } from '../utilities/valueFromAST.mjs';\n\n/**\n * Prepares an object map of variableValues of the correct type based on the\n * provided variable definitions and arbitrary input. If the input cannot be\n * parsed to match the variable definitions, a GraphQLError will be thrown.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nexport function getVariableValues(schema, varDefNodes, inputs, options) {\n  const errors = [];\n  const maxErrors =\n    options === null || options === void 0 ? void 0 : options.maxErrors;\n\n  try {\n    const coerced = coerceVariableValues(\n      schema,\n      varDefNodes,\n      inputs,\n      (error) => {\n        if (maxErrors != null && errors.length >= maxErrors) {\n          throw new GraphQLError(\n            'Too many errors processing variables, error limit reached. Execution aborted.',\n          );\n        }\n\n        errors.push(error);\n      },\n    );\n\n    if (errors.length === 0) {\n      return {\n        coerced,\n      };\n    }\n  } catch (error) {\n    errors.push(error);\n  }\n\n  return {\n    errors,\n  };\n}\n\nfunction coerceVariableValues(schema, varDefNodes, inputs, onError) {\n  const coercedValues = {};\n\n  for (const varDefNode of varDefNodes) {\n    const varName = varDefNode.variable.name.value;\n    const varType = typeFromAST(schema, varDefNode.type);\n\n    if (!isInputType(varType)) {\n      // Must use input types for variables. This should be caught during\n      // validation, however is checked again here for safety.\n      const varTypeStr = print(varDefNode.type);\n      onError(\n        new GraphQLError(\n          `Variable \"$${varName}\" expected value of type \"${varTypeStr}\" which cannot be used as an input type.`,\n          {\n            nodes: varDefNode.type,\n          },\n        ),\n      );\n      continue;\n    }\n\n    if (!hasOwnProperty(inputs, varName)) {\n      if (varDefNode.defaultValue) {\n        coercedValues[varName] = valueFromAST(varDefNode.defaultValue, varType);\n      } else if (isNonNullType(varType)) {\n        const varTypeStr = inspect(varType);\n        onError(\n          new GraphQLError(\n            `Variable \"$${varName}\" of required type \"${varTypeStr}\" was not provided.`,\n            {\n              nodes: varDefNode,\n            },\n          ),\n        );\n      }\n\n      continue;\n    }\n\n    const value = inputs[varName];\n\n    if (value === null && isNonNullType(varType)) {\n      const varTypeStr = inspect(varType);\n      onError(\n        new GraphQLError(\n          `Variable \"$${varName}\" of non-null type \"${varTypeStr}\" must not be null.`,\n          {\n            nodes: varDefNode,\n          },\n        ),\n      );\n      continue;\n    }\n\n    coercedValues[varName] = coerceInputValue(\n      value,\n      varType,\n      (path, invalidValue, error) => {\n        let prefix =\n          `Variable \"$${varName}\" got invalid value ` + inspect(invalidValue);\n\n        if (path.length > 0) {\n          prefix += ` at \"${varName}${printPathArray(path)}\"`;\n        }\n\n        onError(\n          new GraphQLError(prefix + '; ' + error.message, {\n            nodes: varDefNode,\n            originalError: error.originalError,\n          }),\n        );\n      },\n    );\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nexport function getArgumentValues(def, node, variableValues) {\n  var _node$arguments;\n\n  const coercedValues = {}; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n\n  const argumentNodes =\n    (_node$arguments = node.arguments) !== null && _node$arguments !== void 0\n      ? _node$arguments\n      : [];\n  const argNodeMap = keyMap(argumentNodes, (arg) => arg.name.value);\n\n  for (const argDef of def.args) {\n    const name = argDef.name;\n    const argType = argDef.type;\n    const argumentNode = argNodeMap[name];\n\n    if (!argumentNode) {\n      if (argDef.defaultValue !== undefined) {\n        coercedValues[name] = argDef.defaultValue;\n      } else if (isNonNullType(argType)) {\n        throw new GraphQLError(\n          `Argument \"${name}\" of required type \"${inspect(argType)}\" ` +\n            'was not provided.',\n          {\n            nodes: node,\n          },\n        );\n      }\n\n      continue;\n    }\n\n    const valueNode = argumentNode.value;\n    let isNull = valueNode.kind === Kind.NULL;\n\n    if (valueNode.kind === Kind.VARIABLE) {\n      const variableName = valueNode.name.value;\n\n      if (\n        variableValues == null ||\n        !hasOwnProperty(variableValues, variableName)\n      ) {\n        if (argDef.defaultValue !== undefined) {\n          coercedValues[name] = argDef.defaultValue;\n        } else if (isNonNullType(argType)) {\n          throw new GraphQLError(\n            `Argument \"${name}\" of required type \"${inspect(argType)}\" ` +\n              `was provided the variable \"$${variableName}\" which was not provided a runtime value.`,\n            {\n              nodes: valueNode,\n            },\n          );\n        }\n\n        continue;\n      }\n\n      isNull = variableValues[variableName] == null;\n    }\n\n    if (isNull && isNonNullType(argType)) {\n      throw new GraphQLError(\n        `Argument \"${name}\" of non-null type \"${inspect(argType)}\" ` +\n          'must not be null.',\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const coercedValue = valueFromAST(valueNode, argType, variableValues);\n\n    if (coercedValue === undefined) {\n      // Note: ValuesOfCorrectTypeRule validation should catch this before\n      // execution. This is a runtime check to ensure execution does not\n      // continue with an invalid argument value.\n      throw new GraphQLError(\n        `Argument \"${name}\" has invalid value ${print(valueNode)}.`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    coercedValues[name] = coercedValue;\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a directive definition\n * and a AST node which may contain directives. Optionally also accepts a map\n * of variable values.\n *\n * If the directive does not exist on the node, returns undefined.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nexport function getDirectiveValues(directiveDef, node, variableValues) {\n  var _node$directives;\n\n  const directiveNode =\n    (_node$directives = node.directives) === null || _node$directives === void 0\n      ? void 0\n      : _node$directives.find(\n          (directive) => directive.name.value === directiveDef.name,\n        );\n\n  if (directiveNode) {\n    return getArgumentValues(directiveDef, directiveNode, variableValues);\n  }\n}\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n", "import { Kind } from '../language/kinds.mjs';\nimport { isAbstractType } from '../type/definition.mjs';\nimport {\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n} from '../type/directives.mjs';\nimport { typeFromAST } from '../utilities/typeFromAST.mjs';\nimport { getDirectiveValues } from './values.mjs';\n/**\n * Given a selectionSet, collects all of the fields and returns them.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field that\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * object type returned by that field.\n *\n * @internal\n */\n\nexport function collectFields(\n  schema,\n  fragments,\n  variableValues,\n  runtimeType,\n  selectionSet,\n) {\n  const fields = new Map();\n  collectFieldsImpl(\n    schema,\n    fragments,\n    variableValues,\n    runtimeType,\n    selectionSet,\n    fields,\n    new Set(),\n  );\n  return fields;\n}\n/**\n * Given an array of field nodes, collects all of the subfields of the passed\n * in fields, and returns them at the end.\n *\n * CollectSubFields requires the \"return type\" of an object. For a field that\n * returns an Interface or Union type, the \"return type\" will be the actual\n * object type returned by that field.\n *\n * @internal\n */\n\nexport function collectSubfields(\n  schema,\n  fragments,\n  variableValues,\n  returnType,\n  fieldNodes,\n) {\n  const subFieldNodes = new Map();\n  const visitedFragmentNames = new Set();\n\n  for (const node of fieldNodes) {\n    if (node.selectionSet) {\n      collectFieldsImpl(\n        schema,\n        fragments,\n        variableValues,\n        returnType,\n        node.selectionSet,\n        subFieldNodes,\n        visitedFragmentNames,\n      );\n    }\n  }\n\n  return subFieldNodes;\n}\n\nfunction collectFieldsImpl(\n  schema,\n  fragments,\n  variableValues,\n  runtimeType,\n  selectionSet,\n  fields,\n  visitedFragmentNames,\n) {\n  for (const selection of selectionSet.selections) {\n    switch (selection.kind) {\n      case Kind.FIELD: {\n        if (!shouldIncludeNode(variableValues, selection)) {\n          continue;\n        }\n\n        const name = getFieldEntryKey(selection);\n        const fieldList = fields.get(name);\n\n        if (fieldList !== undefined) {\n          fieldList.push(selection);\n        } else {\n          fields.set(name, [selection]);\n        }\n\n        break;\n      }\n\n      case Kind.INLINE_FRAGMENT: {\n        if (\n          !shouldIncludeNode(variableValues, selection) ||\n          !doesFragmentConditionMatch(schema, selection, runtimeType)\n        ) {\n          continue;\n        }\n\n        collectFieldsImpl(\n          schema,\n          fragments,\n          variableValues,\n          runtimeType,\n          selection.selectionSet,\n          fields,\n          visitedFragmentNames,\n        );\n        break;\n      }\n\n      case Kind.FRAGMENT_SPREAD: {\n        const fragName = selection.name.value;\n\n        if (\n          visitedFragmentNames.has(fragName) ||\n          !shouldIncludeNode(variableValues, selection)\n        ) {\n          continue;\n        }\n\n        visitedFragmentNames.add(fragName);\n        const fragment = fragments[fragName];\n\n        if (\n          !fragment ||\n          !doesFragmentConditionMatch(schema, fragment, runtimeType)\n        ) {\n          continue;\n        }\n\n        collectFieldsImpl(\n          schema,\n          fragments,\n          variableValues,\n          runtimeType,\n          fragment.selectionSet,\n          fields,\n          visitedFragmentNames,\n        );\n        break;\n      }\n    }\n  }\n}\n/**\n * Determines if a field should be included based on the `@include` and `@skip`\n * directives, where `@skip` has higher precedence than `@include`.\n */\n\nfunction shouldIncludeNode(variableValues, node) {\n  const skip = getDirectiveValues(GraphQLSkipDirective, node, variableValues);\n\n  if ((skip === null || skip === void 0 ? void 0 : skip.if) === true) {\n    return false;\n  }\n\n  const include = getDirectiveValues(\n    GraphQLIncludeDirective,\n    node,\n    variableValues,\n  );\n\n  if (\n    (include === null || include === void 0 ? void 0 : include.if) === false\n  ) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\n\nfunction doesFragmentConditionMatch(schema, fragment, type) {\n  const typeConditionNode = fragment.typeCondition;\n\n  if (!typeConditionNode) {\n    return true;\n  }\n\n  const conditionalType = typeFromAST(schema, typeConditionNode);\n\n  if (conditionalType === type) {\n    return true;\n  }\n\n  if (isAbstractType(conditionalType)) {\n    return schema.isSubType(conditionalType, type);\n  }\n\n  return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\n\nfunction getFieldEntryKey(node) {\n  return node.alias ? node.alias.value : node.name.value;\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { collectFields } from '../../execution/collectFields.mjs';\n\n/**\n * Subscriptions must only include a non-introspection field.\n *\n * A GraphQL subscription is valid only if it contains a single root field and\n * that root field is not an introspection field.\n *\n * See https://spec.graphql.org/draft/#sec-Single-root-field\n */\nexport function SingleFieldSubscriptionsRule(context) {\n  return {\n    OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        const schema = context.getSchema();\n        const subscriptionType = schema.getSubscriptionType();\n\n        if (subscriptionType) {\n          const operationName = node.name ? node.name.value : null;\n          const variableValues = Object.create(null);\n          const document = context.getDocument();\n          const fragments = Object.create(null);\n\n          for (const definition of document.definitions) {\n            if (definition.kind === Kind.FRAGMENT_DEFINITION) {\n              fragments[definition.name.value] = definition;\n            }\n          }\n\n          const fields = collectFields(\n            schema,\n            fragments,\n            variableValues,\n            subscriptionType,\n            node.selectionSet,\n          );\n\n          if (fields.size > 1) {\n            const fieldSelectionLists = [...fields.values()];\n            const extraFieldSelectionLists = fieldSelectionLists.slice(1);\n            const extraFieldSelections = extraFieldSelectionLists.flat();\n            context.reportError(\n              new GraphQLError(\n                operationName != null\n                  ? `Subscription \"${operationName}\" must select only one top level field.`\n                  : 'Anonymous Subscription must select only one top level field.',\n                {\n                  nodes: extraFieldSelections,\n                },\n              ),\n            );\n          }\n\n          for (const fieldNodes of fields.values()) {\n            const field = fieldNodes[0];\n            const fieldName = field.name.value;\n\n            if (fieldName.startsWith('__')) {\n              context.reportError(\n                new GraphQLError(\n                  operationName != null\n                    ? `Subscription \"${operationName}\" must not select an introspection top level field.`\n                    : 'Anonymous Subscription must not select an introspection top level field.',\n                  {\n                    nodes: fieldNodes,\n                  },\n                ),\n              );\n            }\n          }\n        }\n      }\n    },\n  };\n}\n", "/**\n * Groups array items into a Map, given a function to produce grouping key.\n */\nexport function groupBy(list, keyFn) {\n  const result = new Map();\n\n  for (const item of list) {\n    const key = keyFn(item);\n    const group = result.get(key);\n\n    if (group === undefined) {\n      result.set(key, [item]);\n    } else {\n      group.push(item);\n    }\n  }\n\n  return result;\n}\n", "import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique argument definition names\n *\n * A GraphQL Object or Interface type is only valid if all its fields have uniquely named arguments.\n * A GraphQL Directive is only valid if all its arguments are uniquely named.\n */\nexport function UniqueArgumentDefinitionNamesRule(context) {\n  return {\n    DirectiveDefinition(directiveNode) {\n      var _directiveNode$argume;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argumentNodes =\n        (_directiveNode$argume = directiveNode.arguments) !== null &&\n        _directiveNode$argume !== void 0\n          ? _directiveNode$argume\n          : [];\n      return checkArgUniqueness(`@${directiveNode.name.value}`, argumentNodes);\n    },\n\n    InterfaceTypeDefinition: checkArgUniquenessPerField,\n    InterfaceTypeExtension: checkArgUniquenessPerField,\n    ObjectTypeDefinition: checkArgUniquenessPerField,\n    ObjectTypeExtension: checkArgUniquenessPerField,\n  };\n\n  function checkArgUniquenessPerField(typeNode) {\n    var _typeNode$fields;\n\n    const typeName = typeNode.name.value; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const fieldNodes =\n      (_typeNode$fields = typeNode.fields) !== null &&\n      _typeNode$fields !== void 0\n        ? _typeNode$fields\n        : [];\n\n    for (const fieldDef of fieldNodes) {\n      var _fieldDef$arguments;\n\n      const fieldName = fieldDef.name.value; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n\n      const argumentNodes =\n        (_fieldDef$arguments = fieldDef.arguments) !== null &&\n        _fieldDef$arguments !== void 0\n          ? _fieldDef$arguments\n          : [];\n      checkArgUniqueness(`${typeName}.${fieldName}`, argumentNodes);\n    }\n\n    return false;\n  }\n\n  function checkArgUniqueness(parentName, argumentNodes) {\n    const seenArgs = groupBy(argumentNodes, (arg) => arg.name.value);\n\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(\n          new GraphQLError(\n            `Argument \"${parentName}(${argName}:)\" can only be defined once.`,\n            {\n              nodes: argNodes.map((node) => node.name),\n            },\n          ),\n        );\n      }\n    }\n\n    return false;\n  }\n}\n", "import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n */\nexport function UniqueArgumentNamesRule(context) {\n  return {\n    Field: checkArgUniqueness,\n    Directive: checkArgUniqueness,\n  };\n\n  function checkArgUniqueness(parentNode) {\n    var _parentNode$arguments;\n\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const argumentNodes =\n      (_parentNode$arguments = parentNode.arguments) !== null &&\n      _parentNode$arguments !== void 0\n        ? _parentNode$arguments\n        : [];\n    const seenArgs = groupBy(argumentNodes, (arg) => arg.name.value);\n\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one argument named \"${argName}\".`,\n            {\n              nodes: argNodes.map((node) => node.name),\n            },\n          ),\n        );\n      }\n    }\n  }\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\nexport function UniqueDirectiveNamesRule(context) {\n  const knownDirectiveNames = Object.create(null);\n  const schema = context.getSchema();\n  return {\n    DirectiveDefinition(node) {\n      const directiveName = node.name.value;\n\n      if (\n        schema !== null &&\n        schema !== void 0 &&\n        schema.getDirective(directiveName)\n      ) {\n        context.reportError(\n          new GraphQLError(\n            `Directive \"@${directiveName}\" already exists in the schema. It cannot be redefined.`,\n            {\n              nodes: node.name,\n            },\n          ),\n        );\n        return;\n      }\n\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one directive named \"@${directiveName}\".`,\n            {\n              nodes: [knownDirectiveNames[directiveName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n\n      return false;\n    },\n  };\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport {\n  isTypeDefinitionNode,\n  isTypeExtensionNode,\n} from '../../language/predicates.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all non-repeatable directives at\n * a given location are uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Unique-Per-Location\n */\nexport function UniqueDirectivesPerLocationRule(context) {\n  const uniqueDirectiveMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    uniqueDirectiveMap[directive.name] = !directive.isRepeatable;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      uniqueDirectiveMap[def.name.value] = !def.repeatable;\n    }\n  }\n\n  const schemaDirectives = Object.create(null);\n  const typeDirectivesMap = Object.create(null);\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter(node) {\n      if (!('directives' in node) || !node.directives) {\n        return;\n      }\n\n      let seenDirectives;\n\n      if (\n        node.kind === Kind.SCHEMA_DEFINITION ||\n        node.kind === Kind.SCHEMA_EXTENSION\n      ) {\n        seenDirectives = schemaDirectives;\n      } else if (isTypeDefinitionNode(node) || isTypeExtensionNode(node)) {\n        const typeName = node.name.value;\n        seenDirectives = typeDirectivesMap[typeName];\n\n        if (seenDirectives === undefined) {\n          typeDirectivesMap[typeName] = seenDirectives = Object.create(null);\n        }\n      } else {\n        seenDirectives = Object.create(null);\n      }\n\n      for (const directive of node.directives) {\n        const directiveName = directive.name.value;\n\n        if (uniqueDirectiveMap[directiveName]) {\n          if (seenDirectives[directiveName]) {\n            context.reportError(\n              new GraphQLError(\n                `The directive \"@${directiveName}\" can only be used once at this location.`,\n                {\n                  nodes: [seenDirectives[directiveName], directive],\n                },\n              ),\n            );\n          } else {\n            seenDirectives[directiveName] = directive;\n          }\n        }\n      }\n    },\n  };\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { isEnumType } from '../../type/definition.mjs';\n\n/**\n * Unique enum value names\n *\n * A GraphQL enum type is only valid if all its values are uniquely named.\n */\nexport function UniqueEnumValueNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownValueNames = Object.create(null);\n  return {\n    EnumTypeDefinition: checkValueUniqueness,\n    EnumTypeExtension: checkValueUniqueness,\n  };\n\n  function checkValueUniqueness(node) {\n    var _node$values;\n\n    const typeName = node.name.value;\n\n    if (!knownValueNames[typeName]) {\n      knownValueNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const valueNodes =\n      (_node$values = node.values) !== null && _node$values !== void 0\n        ? _node$values\n        : [];\n    const valueNames = knownValueNames[typeName];\n\n    for (const valueDef of valueNodes) {\n      const valueName = valueDef.name.value;\n      const existingType = existingTypeMap[typeName];\n\n      if (isEnumType(existingType) && existingType.getValue(valueName)) {\n        context.reportError(\n          new GraphQLError(\n            `Enum value \"${typeName}.${valueName}\" already exists in the schema. It cannot also be defined in this type extension.`,\n            {\n              nodes: valueDef.name,\n            },\n          ),\n        );\n      } else if (valueNames[valueName]) {\n        context.reportError(\n          new GraphQLError(\n            `Enum value \"${typeName}.${valueName}\" can only be defined once.`,\n            {\n              nodes: [valueNames[valueName], valueDef.name],\n            },\n          ),\n        );\n      } else {\n        valueNames[valueName] = valueDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport {\n  isInputObjectType,\n  isInterfaceType,\n  isObjectType,\n} from '../../type/definition.mjs';\n\n/**\n * Unique field definition names\n *\n * A GraphQL complex type is only valid if all its fields are uniquely named.\n */\nexport function UniqueFieldDefinitionNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownFieldNames = Object.create(null);\n  return {\n    InputObjectTypeDefinition: checkFieldUniqueness,\n    InputObjectTypeExtension: checkFieldUniqueness,\n    InterfaceTypeDefinition: checkFieldUniqueness,\n    InterfaceTypeExtension: checkFieldUniqueness,\n    ObjectTypeDefinition: checkFieldUniqueness,\n    ObjectTypeExtension: checkFieldUniqueness,\n  };\n\n  function checkFieldUniqueness(node) {\n    var _node$fields;\n\n    const typeName = node.name.value;\n\n    if (!knownFieldNames[typeName]) {\n      knownFieldNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const fieldNodes =\n      (_node$fields = node.fields) !== null && _node$fields !== void 0\n        ? _node$fields\n        : [];\n    const fieldNames = knownFieldNames[typeName];\n\n    for (const fieldDef of fieldNodes) {\n      const fieldName = fieldDef.name.value;\n\n      if (hasField(existingTypeMap[typeName], fieldName)) {\n        context.reportError(\n          new GraphQLError(\n            `Field \"${typeName}.${fieldName}\" already exists in the schema. It cannot also be defined in this type extension.`,\n            {\n              nodes: fieldDef.name,\n            },\n          ),\n        );\n      } else if (fieldNames[fieldName]) {\n        context.reportError(\n          new GraphQLError(\n            `Field \"${typeName}.${fieldName}\" can only be defined once.`,\n            {\n              nodes: [fieldNames[fieldName], fieldDef.name],\n            },\n          ),\n        );\n      } else {\n        fieldNames[fieldName] = fieldDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n\nfunction hasField(type, fieldName) {\n  if (isObjectType(type) || isInterfaceType(type) || isInputObjectType(type)) {\n    return type.getFields()[fieldName] != null;\n  }\n\n  return false;\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Name-Uniqueness\n */\nexport function UniqueFragmentNamesRule(context) {\n  const knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      const fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one fragment named \"${fragmentName}\".`,\n            {\n              nodes: [knownFragmentNames[fragmentName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    },\n  };\n}\n", "import { invariant } from '../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Input-Object-Field-Uniqueness\n */\nexport function UniqueInputFieldNamesRule(context) {\n  const knownNameStack = [];\n  let knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n\n      leave() {\n        const prevKnownNames = knownNameStack.pop();\n        prevKnownNames || invariant(false);\n        knownNames = prevKnownNames;\n      },\n    },\n\n    ObjectField(node) {\n      const fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one input field named \"${fieldName}\".`,\n            {\n              nodes: [knownNames[fieldName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    },\n  };\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Operation-Name-Uniqueness\n */\nexport function UniqueOperationNamesRule(context) {\n  const knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition(node) {\n      const operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(\n            new GraphQLError(\n              `There can be only one operation named \"${operationName.value}\".`,\n              {\n                nodes: [\n                  knownOperationNames[operationName.value],\n                  operationName,\n                ],\n              },\n            ),\n          );\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n\n    FragmentDefinition: () => false,\n  };\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique operation types\n *\n * A GraphQL document is only valid if it has only one type per operation.\n */\nexport function UniqueOperationTypesRule(context) {\n  const schema = context.getSchema();\n  const definedOperationTypes = Object.create(null);\n  const existingOperationTypes = schema\n    ? {\n        query: schema.getQueryType(),\n        mutation: schema.getMutationType(),\n        subscription: schema.getSubscriptionType(),\n      }\n    : {};\n  return {\n    SchemaDefinition: checkOperationTypes,\n    SchemaExtension: checkOperationTypes,\n  };\n\n  function checkOperationTypes(node) {\n    var _node$operationTypes;\n\n    // See: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const operationTypesNodes =\n      (_node$operationTypes = node.operationTypes) !== null &&\n      _node$operationTypes !== void 0\n        ? _node$operationTypes\n        : [];\n\n    for (const operationType of operationTypesNodes) {\n      const operation = operationType.operation;\n      const alreadyDefinedOperationType = definedOperationTypes[operation];\n\n      if (existingOperationTypes[operation]) {\n        context.reportError(\n          new GraphQLError(\n            `Type for ${operation} already defined in the schema. It cannot be redefined.`,\n            {\n              nodes: operationType,\n            },\n          ),\n        );\n      } else if (alreadyDefinedOperationType) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one ${operation} type in schema.`,\n            {\n              nodes: [alreadyDefinedOperationType, operationType],\n            },\n          ),\n        );\n      } else {\n        definedOperationTypes[operation] = operationType;\n      }\n    }\n\n    return false;\n  }\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique type names\n *\n * A GraphQL document is only valid if all defined types have unique names.\n */\nexport function UniqueTypeNamesRule(context) {\n  const knownTypeNames = Object.create(null);\n  const schema = context.getSchema();\n  return {\n    ScalarTypeDefinition: checkTypeName,\n    ObjectTypeDefinition: checkTypeName,\n    InterfaceTypeDefinition: checkTypeName,\n    UnionTypeDefinition: checkTypeName,\n    EnumTypeDefinition: checkTypeName,\n    InputObjectTypeDefinition: checkTypeName,\n  };\n\n  function checkTypeName(node) {\n    const typeName = node.name.value;\n\n    if (schema !== null && schema !== void 0 && schema.getType(typeName)) {\n      context.reportError(\n        new GraphQLError(\n          `Type \"${typeName}\" already exists in the schema. It cannot also be defined in this type definition.`,\n          {\n            nodes: node.name,\n          },\n        ),\n      );\n      return;\n    }\n\n    if (knownTypeNames[typeName]) {\n      context.reportError(\n        new GraphQLError(`There can be only one type named \"${typeName}\".`, {\n          nodes: [knownTypeNames[typeName], node.name],\n        }),\n      );\n    } else {\n      knownTypeNames[typeName] = node.name;\n    }\n\n    return false;\n  }\n}\n", "import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nexport function UniqueVariableNamesRule(context) {\n  return {\n    OperationDefinition(operationNode) {\n      var _operationNode$variab;\n\n      // See: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const variableDefinitions =\n        (_operationNode$variab = operationNode.variableDefinitions) !== null &&\n        _operationNode$variab !== void 0\n          ? _operationNode$variab\n          : [];\n      const seenVariableDefinitions = groupBy(\n        variableDefinitions,\n        (node) => node.variable.name.value,\n      );\n\n      for (const [variableName, variableNodes] of seenVariableDefinitions) {\n        if (variableNodes.length > 1) {\n          context.reportError(\n            new GraphQLError(\n              `There can be only one variable named \"$${variableName}\".`,\n              {\n                nodes: variableNodes.map((node) => node.variable.name),\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n", "import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { inspect } from '../../jsutils/inspect.mjs';\nimport { keyMap } from '../../jsutils/keyMap.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { print } from '../../language/printer.mjs';\nimport {\n  getNamedType,\n  getNullableType,\n  isInputObjectType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n  isRequiredInputField,\n} from '../../type/definition.mjs';\n\n/**\n * Value literals of correct type\n *\n * A GraphQL document is only valid if all value literals are of the type\n * expected at their position.\n *\n * See https://spec.graphql.org/draft/#sec-Values-of-Correct-Type\n */\nexport function ValuesOfCorrectTypeRule(context) {\n  return {\n    ListValue(node) {\n      // Note: TypeInfo will traverse into a list's item type, so look to the\n      // parent input type to check if it is a list.\n      const type = getNullableType(context.getParentInputType());\n\n      if (!isListType(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      }\n    },\n\n    ObjectValue(node) {\n      const type = getNamedType(context.getInputType());\n\n      if (!isInputObjectType(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      } // Ensure every required field exists.\n\n      const fieldNodeMap = keyMap(node.fields, (field) => field.name.value);\n\n      for (const fieldDef of Object.values(type.getFields())) {\n        const fieldNode = fieldNodeMap[fieldDef.name];\n\n        if (!fieldNode && isRequiredInputField(fieldDef)) {\n          const typeStr = inspect(fieldDef.type);\n          context.reportError(\n            new GraphQLError(\n              `Field \"${type.name}.${fieldDef.name}\" of required type \"${typeStr}\" was not provided.`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    ObjectField(node) {\n      const parentType = getNamedType(context.getParentInputType());\n      const fieldType = context.getInputType();\n\n      if (!fieldType && isInputObjectType(parentType)) {\n        const suggestions = suggestionList(\n          node.name.value,\n          Object.keys(parentType.getFields()),\n        );\n        context.reportError(\n          new GraphQLError(\n            `Field \"${node.name.value}\" is not defined by type \"${parentType.name}\".` +\n              didYouMean(suggestions),\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    NullValue(node) {\n      const type = context.getInputType();\n\n      if (isNonNullType(type)) {\n        context.reportError(\n          new GraphQLError(\n            `Expected value of type \"${inspect(type)}\", found ${print(node)}.`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    EnumValue: (node) => isValidValueNode(context, node),\n    IntValue: (node) => isValidValueNode(context, node),\n    FloatValue: (node) => isValidValueNode(context, node),\n    StringValue: (node) => isValidValueNode(context, node),\n    BooleanValue: (node) => isValidValueNode(context, node),\n  };\n}\n/**\n * Any value literal may be a valid representation of a Scalar, depending on\n * that scalar type.\n */\n\nfunction isValidValueNode(context, node) {\n  // Report any error at the full type expected by the location.\n  const locationType = context.getInputType();\n\n  if (!locationType) {\n    return;\n  }\n\n  const type = getNamedType(locationType);\n\n  if (!isLeafType(type)) {\n    const typeStr = inspect(locationType);\n    context.reportError(\n      new GraphQLError(\n        `Expected value of type \"${typeStr}\", found ${print(node)}.`,\n        {\n          nodes: node,\n        },\n      ),\n    );\n    return;\n  } // Scalars and Enums determine if a literal value is valid via parseLiteral(),\n  // which may throw or return an invalid value to indicate failure.\n\n  try {\n    const parseResult = type.parseLiteral(\n      node,\n      undefined,\n      /* variables */\n    );\n\n    if (parseResult === undefined) {\n      const typeStr = inspect(locationType);\n      context.reportError(\n        new GraphQLError(\n          `Expected value of type \"${typeStr}\", found ${print(node)}.`,\n          {\n            nodes: node,\n          },\n        ),\n      );\n    }\n  } catch (error) {\n    const typeStr = inspect(locationType);\n\n    if (error instanceof GraphQLError) {\n      context.reportError(error);\n    } else {\n      context.reportError(\n        new GraphQLError(\n          `Expected value of type \"${typeStr}\", found ${print(node)}; ` +\n            error.message,\n          {\n            nodes: node,\n            originalError: error,\n          },\n        ),\n      );\n    }\n  }\n}\n", "import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { print } from '../../language/printer.mjs';\nimport { isInputType } from '../../type/definition.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Variables are input types\n *\n * A GraphQL operation is only valid if all the variables it defines are of\n * input types (scalar, enum, or input object).\n *\n * See https://spec.graphql.org/draft/#sec-Variables-Are-Input-Types\n */\nexport function VariablesAreInputTypesRule(context) {\n  return {\n    VariableDefinition(node) {\n      const type = typeFromAST(context.getSchema(), node.type);\n\n      if (type !== undefined && !isInputType(type)) {\n        const variableName = node.variable.name.value;\n        const typeName = print(node.type);\n        context.reportError(\n          new GraphQLError(\n            `Variable \"$${variableName}\" cannot be non-input type \"${typeName}\".`,\n            {\n              nodes: node.type,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { isNonNullType } from '../../type/definition.mjs';\nimport { isTypeSubTypeOf } from '../../utilities/typeComparators.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Variables in allowed position\n *\n * Variable usages must be compatible with the arguments they are passed to.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Usages-are-Allowed\n */\nexport function VariablesInAllowedPositionRule(context) {\n  let varDefMap = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        varDefMap = Object.create(null);\n      },\n\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node, type, defaultValue } of usages) {\n          const varName = node.name.value;\n          const varDef = varDefMap[varName];\n\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            const schema = context.getSchema();\n            const varType = typeFromAST(schema, varDef.type);\n\n            if (\n              varType &&\n              !allowedVariableUsage(\n                schema,\n                varType,\n                varDef.defaultValue,\n                type,\n                defaultValue,\n              )\n            ) {\n              const varTypeStr = inspect(varType);\n              const typeStr = inspect(type);\n              context.reportError(\n                new GraphQLError(\n                  `Variable \"$${varName}\" of type \"${varTypeStr}\" used in position expecting type \"${typeStr}\".`,\n                  {\n                    nodes: [varDef, node],\n                  },\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n\n    VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    },\n  };\n}\n/**\n * Returns true if the variable is allowed in the location it was found,\n * which includes considering if default values exist for either the variable\n * or the location at which it is located.\n */\n\nfunction allowedVariableUsage(\n  schema,\n  varType,\n  varDefaultValue,\n  locationType,\n  locationDefaultValue,\n) {\n  if (isNonNullType(locationType) && !isNonNullType(varType)) {\n    const hasNonNullVariableDefaultValue =\n      varDefaultValue != null && varDefaultValue.kind !== Kind.NULL;\n    const hasLocationDefaultValue = locationDefaultValue !== undefined;\n\n    if (!hasNonNullVariableDefaultValue && !hasLocationDefaultValue) {\n      return false;\n    }\n\n    const nullableLocationType = locationType.ofType;\n    return isTypeSubTypeOf(schema, varType, nullableLocationType);\n  }\n\n  return isTypeSubTypeOf(schema, varType, locationType);\n}\n", "// Spec Section: \"Executable Definitions\"\nimport { ExecutableDefinitionsRule } from './rules/ExecutableDefinitionsRule.mjs'; // Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\nimport { FieldsOnCorrectTypeRule } from './rules/FieldsOnCorrectTypeRule.mjs'; // Spec Section: \"Fragments on Composite Types\"\n\nimport { FragmentsOnCompositeTypesRule } from './rules/FragmentsOnCompositeTypesRule.mjs'; // Spec Section: \"Argument Names\"\n\nimport {\n  KnownArgumentNamesOnDirectivesRule,\n  KnownArgumentNamesRule,\n} from './rules/KnownArgumentNamesRule.mjs'; // Spec Section: \"Directives Are Defined\"\n\nimport { KnownDirectivesRule } from './rules/KnownDirectivesRule.mjs'; // Spec Section: \"Fragment spread target defined\"\n\nimport { KnownFragmentNamesRule } from './rules/KnownFragmentNamesRule.mjs'; // Spec Section: \"Fragment Spread Type Existence\"\n\nimport { KnownTypeNamesRule } from './rules/KnownTypeNamesRule.mjs'; // Spec Section: \"Lone Anonymous Operation\"\n\nimport { LoneAnonymousOperationRule } from './rules/LoneAnonymousOperationRule.mjs'; // SDL-specific validation rules\n\nimport { LoneSchemaDefinitionRule } from './rules/LoneSchemaDefinitionRule.mjs'; // Spec Section: \"Fragments must not form cycles\"\n\nimport { NoFragmentCyclesRule } from './rules/NoFragmentCyclesRule.mjs'; // Spec Section: \"All Variable Used Defined\"\n\nimport { NoUndefinedVariablesRule } from './rules/NoUndefinedVariablesRule.mjs'; // Spec Section: \"Fragments must be used\"\n\nimport { NoUnusedFragmentsRule } from './rules/NoUnusedFragmentsRule.mjs'; // Spec Section: \"All Variables Used\"\n\nimport { NoUnusedVariablesRule } from './rules/NoUnusedVariablesRule.mjs'; // Spec Section: \"Field Selection Merging\"\n\nimport { OverlappingFieldsCanBeMergedRule } from './rules/OverlappingFieldsCanBeMergedRule.mjs'; // Spec Section: \"Fragment spread is possible\"\n\nimport { PossibleFragmentSpreadsRule } from './rules/PossibleFragmentSpreadsRule.mjs';\nimport { PossibleTypeExtensionsRule } from './rules/PossibleTypeExtensionsRule.mjs'; // Spec Section: \"Argument Optionality\"\n\nimport {\n  ProvidedRequiredArgumentsOnDirectivesRule,\n  ProvidedRequiredArgumentsRule,\n} from './rules/ProvidedRequiredArgumentsRule.mjs'; // Spec Section: \"Leaf Field Selections\"\n\nimport { ScalarLeafsRule } from './rules/ScalarLeafsRule.mjs'; // Spec Section: \"Subscriptions with Single Root Field\"\n\nimport { SingleFieldSubscriptionsRule } from './rules/SingleFieldSubscriptionsRule.mjs';\nimport { UniqueArgumentDefinitionNamesRule } from './rules/UniqueArgumentDefinitionNamesRule.mjs'; // Spec Section: \"Argument Uniqueness\"\n\nimport { UniqueArgumentNamesRule } from './rules/UniqueArgumentNamesRule.mjs';\nimport { UniqueDirectiveNamesRule } from './rules/UniqueDirectiveNamesRule.mjs'; // Spec Section: \"Directives Are Unique Per Location\"\n\nimport { UniqueDirectivesPerLocationRule } from './rules/UniqueDirectivesPerLocationRule.mjs';\nimport { UniqueEnumValueNamesRule } from './rules/UniqueEnumValueNamesRule.mjs';\nimport { UniqueFieldDefinitionNamesRule } from './rules/UniqueFieldDefinitionNamesRule.mjs'; // Spec Section: \"Fragment Name Uniqueness\"\n\nimport { UniqueFragmentNamesRule } from './rules/UniqueFragmentNamesRule.mjs'; // Spec Section: \"Input Object Field Uniqueness\"\n\nimport { UniqueInputFieldNamesRule } from './rules/UniqueInputFieldNamesRule.mjs'; // Spec Section: \"Operation Name Uniqueness\"\n\nimport { UniqueOperationNamesRule } from './rules/UniqueOperationNamesRule.mjs';\nimport { UniqueOperationTypesRule } from './rules/UniqueOperationTypesRule.mjs';\nimport { UniqueTypeNamesRule } from './rules/UniqueTypeNamesRule.mjs'; // Spec Section: \"Variable Uniqueness\"\n\nimport { UniqueVariableNamesRule } from './rules/UniqueVariableNamesRule.mjs'; // Spec Section: \"Value Type Correctness\"\n\nimport { ValuesOfCorrectTypeRule } from './rules/ValuesOfCorrectTypeRule.mjs'; // Spec Section: \"Variables are Input Types\"\n\nimport { VariablesAreInputTypesRule } from './rules/VariablesAreInputTypesRule.mjs'; // Spec Section: \"All Variable Usages Are Allowed\"\n\nimport { VariablesInAllowedPositionRule } from './rules/VariablesInAllowedPositionRule.mjs';\n\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\nexport const specifiedRules = Object.freeze([\n  ExecutableDefinitionsRule,\n  UniqueOperationNamesRule,\n  LoneAnonymousOperationRule,\n  SingleFieldSubscriptionsRule,\n  KnownTypeNamesRule,\n  FragmentsOnCompositeTypesRule,\n  VariablesAreInputTypesRule,\n  ScalarLeafsRule,\n  FieldsOnCorrectTypeRule,\n  UniqueFragmentNamesRule,\n  KnownFragmentNamesRule,\n  NoUnusedFragmentsRule,\n  PossibleFragmentSpreadsRule,\n  NoFragmentCyclesRule,\n  UniqueVariableNamesRule,\n  NoUndefinedVariablesRule,\n  NoUnusedVariablesRule,\n  KnownDirectivesRule,\n  UniqueDirectivesPerLocationRule,\n  KnownArgumentNamesRule,\n  UniqueArgumentNamesRule,\n  ValuesOfCorrectTypeRule,\n  ProvidedRequiredArgumentsRule,\n  VariablesInAllowedPositionRule,\n  OverlappingFieldsCanBeMergedRule,\n  UniqueInputFieldNamesRule,\n]);\n/**\n * @internal\n */\n\nexport const specifiedSDLRules = Object.freeze([\n  LoneSchemaDefinitionRule,\n  UniqueOperationTypesRule,\n  UniqueTypeNamesRule,\n  UniqueEnumValueNamesRule,\n  UniqueFieldDefinitionNamesRule,\n  UniqueArgumentDefinitionNamesRule,\n  UniqueDirectiveNamesRule,\n  KnownTypeNamesRule,\n  KnownDirectivesRule,\n  UniqueDirectivesPerLocationRule,\n  PossibleTypeExtensionsRule,\n  KnownArgumentNamesOnDirectivesRule,\n  UniqueArgumentNamesRule,\n  UniqueInputFieldNamesRule,\n  ProvidedRequiredArgumentsOnDirectivesRule,\n]);\n", "import { Kind } from '../language/kinds.mjs';\nimport { visit } from '../language/visitor.mjs';\nimport { TypeInfo, visitWithTypeInfo } from '../utilities/TypeInfo.mjs';\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nexport class ASTValidationContext {\n  constructor(ast, onError) {\n    this._ast = ast;\n    this._fragments = undefined;\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._onError = onError;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'ASTValidationContext';\n  }\n\n  reportError(error) {\n    this._onError(error);\n  }\n\n  getDocument() {\n    return this._ast;\n  }\n\n  getFragment(name) {\n    let fragments;\n\n    if (this._fragments) {\n      fragments = this._fragments;\n    } else {\n      fragments = Object.create(null);\n\n      for (const defNode of this.getDocument().definitions) {\n        if (defNode.kind === Kind.FRAGMENT_DEFINITION) {\n          fragments[defNode.name.value] = defNode;\n        }\n      }\n\n      this._fragments = fragments;\n    }\n\n    return fragments[name];\n  }\n\n  getFragmentSpreads(node) {\n    let spreads = this._fragmentSpreads.get(node);\n\n    if (!spreads) {\n      spreads = [];\n      const setsToVisit = [node];\n      let set;\n\n      while ((set = setsToVisit.pop())) {\n        for (const selection of set.selections) {\n          if (selection.kind === Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n\n      this._fragmentSpreads.set(node, spreads);\n    }\n\n    return spreads;\n  }\n\n  getRecursivelyReferencedFragments(operation) {\n    let fragments = this._recursivelyReferencedFragments.get(operation);\n\n    if (!fragments) {\n      fragments = [];\n      const collectedNames = Object.create(null);\n      const nodesToVisit = [operation.selectionSet];\n      let node;\n\n      while ((node = nodesToVisit.pop())) {\n        for (const spread of this.getFragmentSpreads(node)) {\n          const fragName = spread.name.value;\n\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            const fragment = this.getFragment(fragName);\n\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n\n    return fragments;\n  }\n}\nexport class SDLValidationContext extends ASTValidationContext {\n  constructor(ast, schema, onError) {\n    super(ast, onError);\n    this._schema = schema;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'SDLValidationContext';\n  }\n\n  getSchema() {\n    return this._schema;\n  }\n}\nexport class ValidationContext extends ASTValidationContext {\n  constructor(schema, ast, typeInfo, onError) {\n    super(ast, onError);\n    this._schema = schema;\n    this._typeInfo = typeInfo;\n    this._variableUsages = new Map();\n    this._recursiveVariableUsages = new Map();\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'ValidationContext';\n  }\n\n  getSchema() {\n    return this._schema;\n  }\n\n  getVariableUsages(node) {\n    let usages = this._variableUsages.get(node);\n\n    if (!usages) {\n      const newUsages = [];\n      const typeInfo = new TypeInfo(this._schema);\n      visit(\n        node,\n        visitWithTypeInfo(typeInfo, {\n          VariableDefinition: () => false,\n\n          Variable(variable) {\n            newUsages.push({\n              node: variable,\n              type: typeInfo.getInputType(),\n              defaultValue: typeInfo.getDefaultValue(),\n            });\n          },\n        }),\n      );\n      usages = newUsages;\n\n      this._variableUsages.set(node, usages);\n    }\n\n    return usages;\n  }\n\n  getRecursiveVariableUsages(operation) {\n    let usages = this._recursiveVariableUsages.get(operation);\n\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n\n      for (const frag of this.getRecursivelyReferencedFragments(operation)) {\n        usages = usages.concat(this.getVariableUsages(frag));\n      }\n\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n\n    return usages;\n  }\n\n  getType() {\n    return this._typeInfo.getType();\n  }\n\n  getParentType() {\n    return this._typeInfo.getParentType();\n  }\n\n  getInputType() {\n    return this._typeInfo.getInputType();\n  }\n\n  getParentInputType() {\n    return this._typeInfo.getParentInputType();\n  }\n\n  getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  }\n\n  getDirective() {\n    return this._typeInfo.getDirective();\n  }\n\n  getArgument() {\n    return this._typeInfo.getArgument();\n  }\n\n  getEnumValue() {\n    return this._typeInfo.getEnumValue();\n  }\n}\n", "import { devAssert } from '../jsutils/devAssert.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { visit, visitInParallel } from '../language/visitor.mjs';\nimport { assertValidSchema } from '../type/validate.mjs';\nimport { TypeInfo, visitWithTypeInfo } from '../utilities/TypeInfo.mjs';\nimport { specifiedRules, specifiedSDLRules } from './specifiedRules.mjs';\nimport {\n  SDLValidationContext,\n  ValidationContext,\n} from './ValidationContext.mjs';\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Validate will stop validation after a `maxErrors` limit has been reached.\n * Attackers can send pathologically invalid queries to induce a DoS attack,\n * so by default `maxErrors` set to 100 errors.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\n\nexport function validate(\n  schema,\n  documentAST,\n  rules = specifiedRules,\n  options,\n  /** @deprecated will be removed in 17.0.0 */\n  typeInfo = new TypeInfo(schema),\n) {\n  var _options$maxErrors;\n\n  const maxErrors =\n    (_options$maxErrors =\n      options === null || options === void 0 ? void 0 : options.maxErrors) !==\n      null && _options$maxErrors !== void 0\n      ? _options$maxErrors\n      : 100;\n  documentAST || devAssert(false, 'Must provide document.'); // If the schema used for validation is invalid, throw an error.\n\n  assertValidSchema(schema);\n  const abortObj = Object.freeze({});\n  const errors = [];\n  const context = new ValidationContext(\n    schema,\n    documentAST,\n    typeInfo,\n    (error) => {\n      if (errors.length >= maxErrors) {\n        errors.push(\n          new GraphQLError(\n            'Too many validation errors, error limit reached. Validation aborted.',\n          ),\n        ); // eslint-disable-next-line @typescript-eslint/no-throw-literal\n\n        throw abortObj;\n      }\n\n      errors.push(error);\n    },\n  ); // This uses a specialized visitor which runs multiple visitors in parallel,\n  // while maintaining the visitor skip and break API.\n\n  const visitor = visitInParallel(rules.map((rule) => rule(context))); // Visit the whole document with each instance of all provided rules.\n\n  try {\n    visit(documentAST, visitWithTypeInfo(typeInfo, visitor));\n  } catch (e) {\n    if (e !== abortObj) {\n      throw e;\n    }\n  }\n\n  return errors;\n}\n/**\n * @internal\n */\n\nexport function validateSDL(\n  documentAST,\n  schemaToExtend,\n  rules = specifiedSDLRules,\n) {\n  const errors = [];\n  const context = new SDLValidationContext(\n    documentAST,\n    schemaToExtend,\n    (error) => {\n      errors.push(error);\n    },\n  );\n  const visitors = rules.map((rule) => rule(context));\n  visit(documentAST, visitInParallel(visitors));\n  return errors;\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nexport function assertValidSDL(documentAST) {\n  const errors = validateSDL(documentAST);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nexport function assertValidSDLExtension(documentAST, schema) {\n  const errors = validateSDL(documentAST, schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n", "/**\n * Memoizes the provided three-argument function.\n */\nexport function memoize3(fn) {\n  let cache0;\n  return function memoized(a1, a2, a3) {\n    if (cache0 === undefined) {\n      cache0 = new WeakMap();\n    }\n\n    let cache1 = cache0.get(a1);\n\n    if (cache1 === undefined) {\n      cache1 = new WeakMap();\n      cache0.set(a1, cache1);\n    }\n\n    let cache2 = cache1.get(a2);\n\n    if (cache2 === undefined) {\n      cache2 = new WeakMap();\n      cache1.set(a2, cache2);\n    }\n\n    let fnResult = cache2.get(a3);\n\n    if (fnResult === undefined) {\n      fnResult = fn(a1, a2, a3);\n      cache2.set(a3, fnResult);\n    }\n\n    return fnResult;\n  };\n}\n", "/**\n * This function transforms a JS object `ObjMap<Promise<T>>` into\n * a `Promise<ObjMap<T>>`\n *\n * This is akin to bluebird's `Promise.props`, but implemented only using\n * `Promise.all` so it will work with any implementation of ES6 promises.\n */\nexport function promiseForObject(object) {\n  return Promise.all(Object.values(object)).then((resolvedValues) => {\n    const resolvedObject = Object.create(null);\n\n    for (const [i, key] of Object.keys(object).entries()) {\n      resolvedObject[key] = resolvedValues[i];\n    }\n\n    return resolvedObject;\n  });\n}\n", "import { isPromise } from './isPromise.mjs';\n\n/**\n * Similar to Array.prototype.reduce(), however the reducing callback may return\n * a Promise, in which case reduction will continue after each promise resolves.\n *\n * If the callback does not return a Promise, then this function will also not\n * return a Promise.\n */\nexport function promiseReduce(values, callbackFn, initialValue) {\n  let accumulator = initialValue;\n\n  for (const value of values) {\n    accumulator = isPromise(accumulator)\n      ? accumulator.then((resolved) => callbackFn(resolved, value))\n      : callbackFn(accumulator, value);\n  }\n\n  return accumulator;\n}\n", "import { inspect } from './inspect.mjs';\n/**\n * Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n */\n\nexport function toError(thrownValue) {\n  return thrownValue instanceof Error\n    ? thrownValue\n    : new NonErrorThrown(thrownValue);\n}\n\nclass NonErrorThrown extends Error {\n  constructor(thrownValue) {\n    super('Unexpected error value: ' + inspect(thrownValue));\n    this.name = 'NonErrorThrown';\n    this.thrownValue = thrownValue;\n  }\n}\n", "import { toError } from '../jsutils/toError.mjs';\nimport { GraphQLError } from './GraphQLError.mjs';\n/**\n * Given an arbitrary value, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\n\nexport function locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n\n  const originalError = toError(rawOriginalError); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (isLocatedGraphQLError(originalError)) {\n    return originalError;\n  }\n\n  return new GraphQLError(originalError.message, {\n    nodes:\n      (_nodes = originalError.nodes) !== null && _nodes !== void 0\n        ? _nodes\n        : nodes,\n    source: originalError.source,\n    positions: originalError.positions,\n    path,\n    originalError,\n  });\n}\n\nfunction isLocatedGraphQLError(error) {\n  return Array.isArray(error.path);\n}\n", "import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { isIterableObject } from '../jsutils/isIterableObject.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { isPromise } from '../jsutils/isPromise.mjs';\nimport { memoize3 } from '../jsutils/memoize3.mjs';\nimport { addPath, pathToArray } from '../jsutils/Path.mjs';\nimport { promiseForObject } from '../jsutils/promiseForObject.mjs';\nimport { promiseReduce } from '../jsutils/promiseReduce.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { locatedError } from '../error/locatedError.mjs';\nimport { OperationTypeNode } from '../language/ast.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport {\n  isAbstractType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n} from '../type/definition.mjs';\nimport {\n  SchemaMetaFieldDef,\n  TypeMetaFieldDef,\n  TypeNameMetaFieldDef,\n} from '../type/introspection.mjs';\nimport { assertValidSchema } from '../type/validate.mjs';\nimport {\n  collectFields,\n  collectSubfields as _collectSubfields,\n} from './collectFields.mjs';\nimport { getArgumentValues, getVariableValues } from './values.mjs';\n/**\n * A memoized collection of relevant subfields with regard to the return\n * type. Memoizing ensures the subfields are not repeatedly calculated, which\n * saves overhead when resolving lists of values.\n */\n\nconst collectSubfields = memoize3((exeContext, returnType, fieldNodes) =>\n  _collectSubfields(\n    exeContext.schema,\n    exeContext.fragments,\n    exeContext.variableValues,\n    returnType,\n    fieldNodes,\n  ),\n);\n/**\n * Terminology\n *\n * \"Definitions\" are the generic name for top-level statements in the document.\n * Examples of this include:\n * 1) Operations (such as a query)\n * 2) Fragments\n *\n * \"Operations\" are a generic name for requests in the document.\n * Examples of this include:\n * 1) query,\n * 2) mutation\n *\n * \"Selections\" are the definitions that can appear legally and at\n * single level of the query. These include:\n * 1) field references e.g `a`\n * 2) fragment \"spreads\" e.g. `...c`\n * 3) inline fragment \"spreads\" e.g. `...on Type { a }`\n */\n\n/**\n * Data that must be available at all points during query execution.\n *\n * Namely, schema of the type system that is currently executing,\n * and the fragments defined in the query document\n */\n\n/**\n * Implements the \"Executing requests\" section of the GraphQL specification.\n *\n * Returns either a synchronous ExecutionResult (if all encountered resolvers\n * are synchronous), or a Promise of an ExecutionResult that will eventually be\n * resolved and never rejected.\n *\n * If the arguments to this function do not result in a legal execution context,\n * a GraphQLError will be thrown immediately explaining the invalid input.\n */\nexport function execute(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 ||\n    devAssert(\n      false,\n      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',\n    );\n  const { schema, document, variableValues, rootValue } = args; // If arguments are missing or incorrect, throw an error.\n\n  assertValidExecutionArguments(schema, document, variableValues); // If a valid execution context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n\n  const exeContext = buildExecutionContext(args); // Return early errors if execution context failed.\n\n  if (!('schema' in exeContext)) {\n    return {\n      errors: exeContext,\n    };\n  } // Return a Promise that will eventually resolve to the data described by\n  // The \"Response\" section of the GraphQL specification.\n  //\n  // If errors are encountered while executing a GraphQL field, only that\n  // field and its descendants will be omitted, and sibling fields will still\n  // be executed. An execution which encounters errors will still result in a\n  // resolved Promise.\n  //\n  // Errors from sub-fields of a NonNull type may propagate to the top level,\n  // at which point we still log the error and null the parent field, which\n  // in this case is the entire response.\n\n  try {\n    const { operation } = exeContext;\n    const result = executeOperation(exeContext, operation, rootValue);\n\n    if (isPromise(result)) {\n      return result.then(\n        (data) => buildResponse(data, exeContext.errors),\n        (error) => {\n          exeContext.errors.push(error);\n          return buildResponse(null, exeContext.errors);\n        },\n      );\n    }\n\n    return buildResponse(result, exeContext.errors);\n  } catch (error) {\n    exeContext.errors.push(error);\n    return buildResponse(null, exeContext.errors);\n  }\n}\n/**\n * Also implements the \"Executing requests\" section of the GraphQL specification.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\nexport function executeSync(args) {\n  const result = execute(args); // Assert that the execution was synchronous.\n\n  if (isPromise(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n/**\n * Given a completed execution context and data, build the `{ errors, data }`\n * response defined by the \"Response\" section of the GraphQL specification.\n */\n\nfunction buildResponse(data, errors) {\n  return errors.length === 0\n    ? {\n        data,\n      }\n    : {\n        errors,\n        data,\n      };\n}\n/**\n * Essential assertions before executing to provide developer feedback for\n * improper use of the GraphQL library.\n *\n * @internal\n */\n\nexport function assertValidExecutionArguments(\n  schema,\n  document,\n  rawVariableValues,\n) {\n  document || devAssert(false, 'Must provide document.'); // If the schema used for execution is invalid, throw an error.\n\n  assertValidSchema(schema); // Variables, if provided, must be an object.\n\n  rawVariableValues == null ||\n    isObjectLike(rawVariableValues) ||\n    devAssert(\n      false,\n      'Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.',\n    );\n}\n/**\n * Constructs a ExecutionContext object from the arguments passed to\n * execute, which we will pass throughout the other execution methods.\n *\n * Throws a GraphQLError if a valid execution context cannot be created.\n *\n * @internal\n */\n\nexport function buildExecutionContext(args) {\n  var _definition$name, _operation$variableDe;\n\n  const {\n    schema,\n    document,\n    rootValue,\n    contextValue,\n    variableValues: rawVariableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n    subscribeFieldResolver,\n  } = args;\n  let operation;\n  const fragments = Object.create(null);\n\n  for (const definition of document.definitions) {\n    switch (definition.kind) {\n      case Kind.OPERATION_DEFINITION:\n        if (operationName == null) {\n          if (operation !== undefined) {\n            return [\n              new GraphQLError(\n                'Must provide operation name if query contains multiple operations.',\n              ),\n            ];\n          }\n\n          operation = definition;\n        } else if (\n          ((_definition$name = definition.name) === null ||\n          _definition$name === void 0\n            ? void 0\n            : _definition$name.value) === operationName\n        ) {\n          operation = definition;\n        }\n\n        break;\n\n      case Kind.FRAGMENT_DEFINITION:\n        fragments[definition.name.value] = definition;\n        break;\n\n      default: // ignore non-executable definitions\n    }\n  }\n\n  if (!operation) {\n    if (operationName != null) {\n      return [new GraphQLError(`Unknown operation named \"${operationName}\".`)];\n    }\n\n    return [new GraphQLError('Must provide an operation.')];\n  } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n\n  const variableDefinitions =\n    (_operation$variableDe = operation.variableDefinitions) !== null &&\n    _operation$variableDe !== void 0\n      ? _operation$variableDe\n      : [];\n  const coercedVariableValues = getVariableValues(\n    schema,\n    variableDefinitions,\n    rawVariableValues !== null && rawVariableValues !== void 0\n      ? rawVariableValues\n      : {},\n    {\n      maxErrors: 50,\n    },\n  );\n\n  if (coercedVariableValues.errors) {\n    return coercedVariableValues.errors;\n  }\n\n  return {\n    schema,\n    fragments,\n    rootValue,\n    contextValue,\n    operation,\n    variableValues: coercedVariableValues.coerced,\n    fieldResolver:\n      fieldResolver !== null && fieldResolver !== void 0\n        ? fieldResolver\n        : defaultFieldResolver,\n    typeResolver:\n      typeResolver !== null && typeResolver !== void 0\n        ? typeResolver\n        : defaultTypeResolver,\n    subscribeFieldResolver:\n      subscribeFieldResolver !== null && subscribeFieldResolver !== void 0\n        ? subscribeFieldResolver\n        : defaultFieldResolver,\n    errors: [],\n  };\n}\n/**\n * Implements the \"Executing operations\" section of the spec.\n */\n\nfunction executeOperation(exeContext, operation, rootValue) {\n  const rootType = exeContext.schema.getRootType(operation.operation);\n\n  if (rootType == null) {\n    throw new GraphQLError(\n      `Schema is not configured to execute ${operation.operation} operation.`,\n      {\n        nodes: operation,\n      },\n    );\n  }\n\n  const rootFields = collectFields(\n    exeContext.schema,\n    exeContext.fragments,\n    exeContext.variableValues,\n    rootType,\n    operation.selectionSet,\n  );\n  const path = undefined;\n\n  switch (operation.operation) {\n    case OperationTypeNode.QUERY:\n      return executeFields(exeContext, rootType, rootValue, path, rootFields);\n\n    case OperationTypeNode.MUTATION:\n      return executeFieldsSerially(\n        exeContext,\n        rootType,\n        rootValue,\n        path,\n        rootFields,\n      );\n\n    case OperationTypeNode.SUBSCRIPTION:\n      // TODO: deprecate `subscribe` and move all logic here\n      // Temporary solution until we finish merging execute and subscribe together\n      return executeFields(exeContext, rootType, rootValue, path, rootFields);\n  }\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that must be executed serially.\n */\n\nfunction executeFieldsSerially(\n  exeContext,\n  parentType,\n  sourceValue,\n  path,\n  fields,\n) {\n  return promiseReduce(\n    fields.entries(),\n    (results, [responseName, fieldNodes]) => {\n      const fieldPath = addPath(path, responseName, parentType.name);\n      const result = executeField(\n        exeContext,\n        parentType,\n        sourceValue,\n        fieldNodes,\n        fieldPath,\n      );\n\n      if (result === undefined) {\n        return results;\n      }\n\n      if (isPromise(result)) {\n        return result.then((resolvedResult) => {\n          results[responseName] = resolvedResult;\n          return results;\n        });\n      }\n\n      results[responseName] = result;\n      return results;\n    },\n    Object.create(null),\n  );\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that may be executed in parallel.\n */\n\nfunction executeFields(exeContext, parentType, sourceValue, path, fields) {\n  const results = Object.create(null);\n  let containsPromise = false;\n\n  for (const [responseName, fieldNodes] of fields.entries()) {\n    const fieldPath = addPath(path, responseName, parentType.name);\n    const result = executeField(\n      exeContext,\n      parentType,\n      sourceValue,\n      fieldNodes,\n      fieldPath,\n    );\n\n    if (result !== undefined) {\n      results[responseName] = result;\n\n      if (isPromise(result)) {\n        containsPromise = true;\n      }\n    }\n  } // If there are no promises, we can just return the object\n\n  if (!containsPromise) {\n    return results;\n  } // Otherwise, results is a map from field name to the result of resolving that\n  // field, which is possibly a promise. Return a promise that will return this\n  // same map, but with any promises replaced with the values they resolved to.\n\n  return promiseForObject(results);\n}\n/**\n * Implements the \"Executing fields\" section of the spec\n * In particular, this function figures out the value that the field returns by\n * calling its resolve function, then calls completeValue to complete promises,\n * serialize scalars, or execute the sub-selection-set for objects.\n */\n\nfunction executeField(exeContext, parentType, source, fieldNodes, path) {\n  var _fieldDef$resolve;\n\n  const fieldDef = getFieldDef(exeContext.schema, parentType, fieldNodes[0]);\n\n  if (!fieldDef) {\n    return;\n  }\n\n  const returnType = fieldDef.type;\n  const resolveFn =\n    (_fieldDef$resolve = fieldDef.resolve) !== null &&\n    _fieldDef$resolve !== void 0\n      ? _fieldDef$resolve\n      : exeContext.fieldResolver;\n  const info = buildResolveInfo(\n    exeContext,\n    fieldDef,\n    fieldNodes,\n    parentType,\n    path,\n  ); // Get the resolve function, regardless of if its result is normal or abrupt (error).\n\n  try {\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    // TODO: find a way to memoize, in case this field is within a List type.\n    const args = getArgumentValues(\n      fieldDef,\n      fieldNodes[0],\n      exeContext.variableValues,\n    ); // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n\n    const contextValue = exeContext.contextValue;\n    const result = resolveFn(source, args, contextValue, info);\n    let completed;\n\n    if (isPromise(result)) {\n      completed = result.then((resolved) =>\n        completeValue(exeContext, returnType, fieldNodes, info, path, resolved),\n      );\n    } else {\n      completed = completeValue(\n        exeContext,\n        returnType,\n        fieldNodes,\n        info,\n        path,\n        result,\n      );\n    }\n\n    if (isPromise(completed)) {\n      // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n      // to take a second callback for the error case.\n      return completed.then(undefined, (rawError) => {\n        const error = locatedError(rawError, fieldNodes, pathToArray(path));\n        return handleFieldError(error, returnType, exeContext);\n      });\n    }\n\n    return completed;\n  } catch (rawError) {\n    const error = locatedError(rawError, fieldNodes, pathToArray(path));\n    return handleFieldError(error, returnType, exeContext);\n  }\n}\n/**\n * @internal\n */\n\nexport function buildResolveInfo(\n  exeContext,\n  fieldDef,\n  fieldNodes,\n  parentType,\n  path,\n) {\n  // The resolve function's optional fourth argument is a collection of\n  // information about the current execution state.\n  return {\n    fieldName: fieldDef.name,\n    fieldNodes,\n    returnType: fieldDef.type,\n    parentType,\n    path,\n    schema: exeContext.schema,\n    fragments: exeContext.fragments,\n    rootValue: exeContext.rootValue,\n    operation: exeContext.operation,\n    variableValues: exeContext.variableValues,\n  };\n}\n\nfunction handleFieldError(error, returnType, exeContext) {\n  // If the field type is non-nullable, then it is resolved without any\n  // protection from errors, however it still properly locates the error.\n  if (isNonNullType(returnType)) {\n    throw error;\n  } // Otherwise, error protection is applied, logging the error and resolving\n  // a null value for this field if one is encountered.\n\n  exeContext.errors.push(error);\n  return null;\n}\n/**\n * Implements the instructions for completeValue as defined in the\n * \"Value Completion\" section of the spec.\n *\n * If the field type is Non-Null, then this recursively completes the value\n * for the inner type. It throws a field error if that completion returns null,\n * as per the \"Nullability\" section of the spec.\n *\n * If the field type is a List, then this recursively completes the value\n * for the inner type on each item in the list.\n *\n * If the field type is a Scalar or Enum, ensures the completed value is a legal\n * value of the type by calling the `serialize` method of GraphQL type\n * definition.\n *\n * If the field is an abstract type, determine the runtime type of the value\n * and then complete based on that type\n *\n * Otherwise, the field type expects a sub-selection set, and will complete the\n * value by executing all sub-selections.\n */\n\nfunction completeValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If result is an Error, throw a located error.\n  if (result instanceof Error) {\n    throw result;\n  } // If field type is NonNull, complete for inner type, and throw field error\n  // if result is null.\n\n  if (isNonNullType(returnType)) {\n    const completed = completeValue(\n      exeContext,\n      returnType.ofType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n\n    if (completed === null) {\n      throw new Error(\n        `Cannot return null for non-nullable field ${info.parentType.name}.${info.fieldName}.`,\n      );\n    }\n\n    return completed;\n  } // If result value is null or undefined then return null.\n\n  if (result == null) {\n    return null;\n  } // If field type is List, complete each item in the list with the inner type\n\n  if (isListType(returnType)) {\n    return completeListValue(\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n  } // If field type is a leaf type, Scalar or Enum, serialize to a valid value,\n  // returning null if serialization is not possible.\n\n  if (isLeafType(returnType)) {\n    return completeLeafValue(returnType, result);\n  } // If field type is an abstract type, Interface or Union, determine the\n  // runtime Object type and complete for that type.\n\n  if (isAbstractType(returnType)) {\n    return completeAbstractValue(\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n  } // If field type is Object, execute and complete all sub-selections.\n\n  if (isObjectType(returnType)) {\n    return completeObjectValue(\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n  }\n  /* c8 ignore next 6 */\n  // Not reachable, all possible output types have been considered.\n\n  false ||\n    invariant(\n      false,\n      'Cannot complete value of unexpected output type: ' + inspect(returnType),\n    );\n}\n/**\n * Complete a list value by completing each item in the list with the\n * inner type\n */\n\nfunction completeListValue(\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  path,\n  result,\n) {\n  if (!isIterableObject(result)) {\n    throw new GraphQLError(\n      `Expected Iterable, but did not find one for field \"${info.parentType.name}.${info.fieldName}\".`,\n    );\n  } // This is specified as a simple map, however we're optimizing the path\n  // where the list contains no Promises by avoiding creating another Promise.\n\n  const itemType = returnType.ofType;\n  let containsPromise = false;\n  const completedResults = Array.from(result, (item, index) => {\n    // No need to modify the info object containing the path,\n    // since from here on it is not ever accessed by resolver functions.\n    const itemPath = addPath(path, index, undefined);\n\n    try {\n      let completedItem;\n\n      if (isPromise(item)) {\n        completedItem = item.then((resolved) =>\n          completeValue(\n            exeContext,\n            itemType,\n            fieldNodes,\n            info,\n            itemPath,\n            resolved,\n          ),\n        );\n      } else {\n        completedItem = completeValue(\n          exeContext,\n          itemType,\n          fieldNodes,\n          info,\n          itemPath,\n          item,\n        );\n      }\n\n      if (isPromise(completedItem)) {\n        containsPromise = true; // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n        // to take a second callback for the error case.\n\n        return completedItem.then(undefined, (rawError) => {\n          const error = locatedError(\n            rawError,\n            fieldNodes,\n            pathToArray(itemPath),\n          );\n          return handleFieldError(error, itemType, exeContext);\n        });\n      }\n\n      return completedItem;\n    } catch (rawError) {\n      const error = locatedError(rawError, fieldNodes, pathToArray(itemPath));\n      return handleFieldError(error, itemType, exeContext);\n    }\n  });\n  return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n/**\n * Complete a Scalar or Enum by serializing to a valid value, returning\n * null if serialization is not possible.\n */\n\nfunction completeLeafValue(returnType, result) {\n  const serializedResult = returnType.serialize(result);\n\n  if (serializedResult == null) {\n    throw new Error(\n      `Expected \\`${inspect(returnType)}.serialize(${inspect(result)})\\` to ` +\n        `return non-nullable value, returned: ${inspect(serializedResult)}`,\n    );\n  }\n\n  return serializedResult;\n}\n/**\n * Complete a value of an abstract type by determining the runtime object type\n * of that value, then complete the value for that type.\n */\n\nfunction completeAbstractValue(\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  path,\n  result,\n) {\n  var _returnType$resolveTy;\n\n  const resolveTypeFn =\n    (_returnType$resolveTy = returnType.resolveType) !== null &&\n    _returnType$resolveTy !== void 0\n      ? _returnType$resolveTy\n      : exeContext.typeResolver;\n  const contextValue = exeContext.contextValue;\n  const runtimeType = resolveTypeFn(result, contextValue, info, returnType);\n\n  if (isPromise(runtimeType)) {\n    return runtimeType.then((resolvedRuntimeType) =>\n      completeObjectValue(\n        exeContext,\n        ensureValidRuntimeType(\n          resolvedRuntimeType,\n          exeContext,\n          returnType,\n          fieldNodes,\n          info,\n          result,\n        ),\n        fieldNodes,\n        info,\n        path,\n        result,\n      ),\n    );\n  }\n\n  return completeObjectValue(\n    exeContext,\n    ensureValidRuntimeType(\n      runtimeType,\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      result,\n    ),\n    fieldNodes,\n    info,\n    path,\n    result,\n  );\n}\n\nfunction ensureValidRuntimeType(\n  runtimeTypeName,\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  result,\n) {\n  if (runtimeTypeName == null) {\n    throw new GraphQLError(\n      `Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\". Either the \"${returnType.name}\" type should provide a \"resolveType\" function or each possible type should provide an \"isTypeOf\" function.`,\n      fieldNodes,\n    );\n  } // releases before 16.0.0 supported returning `GraphQLObjectType` from `resolveType`\n  // TODO: remove in 17.0.0 release\n\n  if (isObjectType(runtimeTypeName)) {\n    throw new GraphQLError(\n      'Support for returning GraphQLObjectType from resolveType was removed in graphql-js@16.0.0 please return type name instead.',\n    );\n  }\n\n  if (typeof runtimeTypeName !== 'string') {\n    throw new GraphQLError(\n      `Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\" with ` +\n        `value ${inspect(result)}, received \"${inspect(runtimeTypeName)}\".`,\n    );\n  }\n\n  const runtimeType = exeContext.schema.getType(runtimeTypeName);\n\n  if (runtimeType == null) {\n    throw new GraphQLError(\n      `Abstract type \"${returnType.name}\" was resolved to a type \"${runtimeTypeName}\" that does not exist inside the schema.`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  if (!isObjectType(runtimeType)) {\n    throw new GraphQLError(\n      `Abstract type \"${returnType.name}\" was resolved to a non-object type \"${runtimeTypeName}\".`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  if (!exeContext.schema.isSubType(returnType, runtimeType)) {\n    throw new GraphQLError(\n      `Runtime Object type \"${runtimeType.name}\" is not a possible type for \"${returnType.name}\".`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  return runtimeType;\n}\n/**\n * Complete an Object value by executing all sub-selections.\n */\n\nfunction completeObjectValue(\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  path,\n  result,\n) {\n  // Collect sub-fields to execute to complete this value.\n  const subFieldNodes = collectSubfields(exeContext, returnType, fieldNodes); // If there is an isTypeOf predicate function, call it with the\n  // current result. If isTypeOf returns false, then raise an error rather\n  // than continuing execution.\n\n  if (returnType.isTypeOf) {\n    const isTypeOf = returnType.isTypeOf(result, exeContext.contextValue, info);\n\n    if (isPromise(isTypeOf)) {\n      return isTypeOf.then((resolvedIsTypeOf) => {\n        if (!resolvedIsTypeOf) {\n          throw invalidReturnTypeError(returnType, result, fieldNodes);\n        }\n\n        return executeFields(\n          exeContext,\n          returnType,\n          result,\n          path,\n          subFieldNodes,\n        );\n      });\n    }\n\n    if (!isTypeOf) {\n      throw invalidReturnTypeError(returnType, result, fieldNodes);\n    }\n  }\n\n  return executeFields(exeContext, returnType, result, path, subFieldNodes);\n}\n\nfunction invalidReturnTypeError(returnType, result, fieldNodes) {\n  return new GraphQLError(\n    `Expected value of type \"${returnType.name}\" but got: ${inspect(result)}.`,\n    {\n      nodes: fieldNodes,\n    },\n  );\n}\n/**\n * If a resolveType function is not given, then a default resolve behavior is\n * used which attempts two strategies:\n *\n * First, See if the provided value has a `__typename` field defined, if so, use\n * that value as name of the resolved type.\n *\n * Otherwise, test each possible type for the abstract type by calling\n * isTypeOf for the object being coerced, returning the first type that matches.\n */\n\nexport const defaultTypeResolver = function (\n  value,\n  contextValue,\n  info,\n  abstractType,\n) {\n  // First, look for `__typename`.\n  if (isObjectLike(value) && typeof value.__typename === 'string') {\n    return value.__typename;\n  } // Otherwise, test each possible type.\n\n  const possibleTypes = info.schema.getPossibleTypes(abstractType);\n  const promisedIsTypeOfResults = [];\n\n  for (let i = 0; i < possibleTypes.length; i++) {\n    const type = possibleTypes[i];\n\n    if (type.isTypeOf) {\n      const isTypeOfResult = type.isTypeOf(value, contextValue, info);\n\n      if (isPromise(isTypeOfResult)) {\n        promisedIsTypeOfResults[i] = isTypeOfResult;\n      } else if (isTypeOfResult) {\n        return type.name;\n      }\n    }\n  }\n\n  if (promisedIsTypeOfResults.length) {\n    return Promise.all(promisedIsTypeOfResults).then((isTypeOfResults) => {\n      for (let i = 0; i < isTypeOfResults.length; i++) {\n        if (isTypeOfResults[i]) {\n          return possibleTypes[i].name;\n        }\n      }\n    });\n  }\n};\n/**\n * If a resolve function is not given, then a default resolve behavior is used\n * which takes the property of the source object of the same name as the field\n * and returns it as the result, or if it's a function, returns the result\n * of calling that function while passing along args and context value.\n */\n\nexport const defaultFieldResolver = function (\n  source,\n  args,\n  contextValue,\n  info,\n) {\n  // ensure source is a value for which property access is acceptable.\n  if (isObjectLike(source) || typeof source === 'function') {\n    const property = source[info.fieldName];\n\n    if (typeof property === 'function') {\n      return source[info.fieldName](args, contextValue, info);\n    }\n\n    return property;\n  }\n};\n/**\n * This method looks up the field on the given type definition.\n * It has special casing for the three introspection fields,\n * __schema, __type and __typename. __typename is special because\n * it can always be queried as a field, even in situations where no\n * other fields are allowed, like on a Union. __schema and __type\n * could get automatically added to the query type, but that would\n * require mutating type definitions, which would cause issues.\n *\n * @internal\n */\n\nexport function getFieldDef(schema, parentType, fieldNode) {\n  const fieldName = fieldNode.name.value;\n\n  if (\n    fieldName === SchemaMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return SchemaMetaFieldDef;\n  } else if (\n    fieldName === TypeMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return TypeMetaFieldDef;\n  } else if (fieldName === TypeNameMetaFieldDef.name) {\n    return TypeNameMetaFieldDef;\n  }\n\n  return parentType.getFields()[fieldName];\n}\n", "import { devAssert } from './jsutils/devAssert.mjs';\nimport { isPromise } from './jsutils/isPromise.mjs';\nimport { parse } from './language/parser.mjs';\nimport { validateSchema } from './type/validate.mjs';\nimport { validate } from './validation/validate.mjs';\nimport { execute } from './execution/execute.mjs';\n/**\n * This is the primary entry point function for fulfilling GraphQL operations\n * by parsing, validating, and executing a GraphQL document along side a\n * GraphQL schema.\n *\n * More sophisticated GraphQL servers, such as those which persist queries,\n * may wish to separate the validation and execution phases to a static time\n * tooling step, and a server runtime step.\n *\n * Accepts either an object with named arguments, or individual arguments:\n *\n * schema:\n *    The GraphQL type system to use when validating and executing a query.\n * source:\n *    A GraphQL language formatted string representing the requested operation.\n * rootValue:\n *    The value provided as the first argument to resolver functions on the top\n *    level type (e.g. the query object type).\n * contextValue:\n *    The context value is provided as an argument to resolver functions after\n *    field arguments. It is used to pass shared information useful at any point\n *    during executing this query, for example the currently logged in user and\n *    connections to databases or other services.\n * variableValues:\n *    A mapping of variable name to runtime value to use for all variables\n *    defined in the requestString.\n * operationName:\n *    The name of the operation to use if requestString contains multiple\n *    possible operations. Can be omitted if requestString contains only\n *    one operation.\n * fieldResolver:\n *    A resolver function to use when one is not provided by the schema.\n *    If not provided, the default field resolver is used (which looks for a\n *    value or method on the source value with the field's name).\n * typeResolver:\n *    A type resolver function to use when none is provided by the schema.\n *    If not provided, the default type resolver is used (which looks for a\n *    `__typename` field or alternatively calls the `isTypeOf` method).\n */\n\nexport function graphql(args) {\n  // Always return a Promise for a consistent API.\n  return new Promise((resolve) => resolve(graphqlImpl(args)));\n}\n/**\n * The graphqlSync function also fulfills GraphQL operations by parsing,\n * validating, and executing a GraphQL document along side a GraphQL schema.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\nexport function graphqlSync(args) {\n  const result = graphqlImpl(args); // Assert that the execution was synchronous.\n\n  if (isPromise(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n\nfunction graphqlImpl(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 ||\n    devAssert(\n      false,\n      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',\n    );\n  const {\n    schema,\n    source,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n  } = args; // Validate Schema\n\n  const schemaValidationErrors = validateSchema(schema);\n\n  if (schemaValidationErrors.length > 0) {\n    return {\n      errors: schemaValidationErrors,\n    };\n  } // Parse\n\n  let document;\n\n  try {\n    document = parse(source);\n  } catch (syntaxError) {\n    return {\n      errors: [syntaxError],\n    };\n  } // Validate\n\n  const validationErrors = validate(schema, document);\n\n  if (validationErrors.length > 0) {\n    return {\n      errors: validationErrors,\n    };\n  } // Execute\n\n  return execute({\n    schema,\n    document,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n  });\n}\n", "export {\n  // Predicate\n  isSchema, // Assertion\n  assertSchema, // GraphQL Schema definition\n  GraphQLSchema,\n} from './schema.mjs';\nexport {\n  resolveObjMapThunk,\n  resolveReadonlyArrayThunk, // Predicates\n  isType,\n  isScalarType,\n  isObjectType,\n  isInterfaceType,\n  isUnionType,\n  isEnumType,\n  isInputObjectType,\n  isListType,\n  isNonNullType,\n  isInputType,\n  isOutputType,\n  isLeafType,\n  isCompositeType,\n  isAbstractType,\n  isWrappingType,\n  isNullableType,\n  isNamedType,\n  isRequiredArgument,\n  isRequiredInputField, // Assertions\n  assertType,\n  assertScalarType,\n  assertObjectType,\n  assertInterfaceType,\n  assertUnionType,\n  assertEnumType,\n  assertInputObjectType,\n  assertListType,\n  assertNonNullType,\n  assertInputType,\n  assertOutputType,\n  assertLeafType,\n  assertCompositeType,\n  assertAbstractType,\n  assertWrappingType,\n  assertNullableType,\n  assertNamedType, // Un-modifiers\n  getNullableType,\n  getNamedType, // Definitions\n  GraphQLScalarType,\n  GraphQLObjectType,\n  GraphQLInterfaceType,\n  GraphQLUnionType,\n  GraphQLEnumType,\n  GraphQLInputObjectType, // Type Wrappers\n  GraphQLList,\n  GraphQLNonNull,\n} from './definition.mjs';\nexport {\n  // Predicate\n  isDirective, // Assertion\n  assertDirective, // Directives Definition\n  GraphQLDirective, // Built-in Directives defined by the Spec\n  isSpecifiedDirective,\n  specifiedDirectives,\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n  GraphQLDeprecatedDirective,\n  GraphQLSpecifiedByDirective, // Constant Deprecation Reason\n  DEFAULT_DEPRECATION_REASON,\n} from './directives.mjs';\n// Common built-in scalar instances.\nexport {\n  // Predicate\n  isSpecifiedScalarType, // Standard GraphQL Scalars\n  specifiedScalarTypes,\n  GraphQLInt,\n  GraphQLFloat,\n  GraphQLString,\n  GraphQLBoolean,\n  GraphQLID, // Int boundaries constants\n  GRAPHQL_MAX_INT,\n  GRAPHQL_MIN_INT,\n} from './scalars.mjs';\nexport {\n  // Predicate\n  isIntrospectionType, // GraphQL Types for introspection.\n  introspectionTypes,\n  __Schema,\n  __Directive,\n  __DirectiveLocation,\n  __Type,\n  __Field,\n  __InputValue,\n  __EnumValue,\n  __TypeKind, // \"Enum\" of Type Kinds\n  TypeKind, // Meta-field definitions.\n  SchemaMetaFieldDef,\n  TypeMetaFieldDef,\n  TypeNameMetaFieldDef,\n} from './introspection.mjs'; // Validate GraphQL schema.\n\nexport { validateSchema, assertValidSchema } from './validate.mjs'; // Upholds the spec rules about naming.\n\nexport { assertName, assertEnumValueName } from './assertName.mjs';\n", "export { Source } from './source.mjs';\nexport { getLocation } from './location.mjs';\nexport { printLocation, printSourceLocation } from './printLocation.mjs';\nexport { Kind } from './kinds.mjs';\nexport { TokenKind } from './tokenKind.mjs';\nexport { Lexer } from './lexer.mjs';\nexport { parse, parseValue, parseConstValue, parseType } from './parser.mjs';\nexport { print } from './printer.mjs';\nexport {\n  visit,\n  visitInParallel,\n  getVisitFn,\n  getEnterLeaveForKind,\n  BREAK,\n} from './visitor.mjs';\nexport { Location, Token, OperationTypeNode } from './ast.mjs';\nexport {\n  isDefinitionNode,\n  isExecutableDefinitionNode,\n  isSelectionNode,\n  isValueNode,\n  isConstValueNode,\n  isTypeNode,\n  isTypeSystemDefinitionNode,\n  isTypeDefinitionNode,\n  isTypeSystemExtensionNode,\n  isTypeExtensionNode,\n} from './predicates.mjs';\nexport { DirectiveLocation } from './directiveLocation.mjs';\n", "/**\n * Returns true if the provided object implements the AsyncIterator protocol via\n * implementing a `Symbol.asyncIterator` method.\n */\nexport function isAsyncIterable(maybeAsyncIterable) {\n  return (\n    typeof (maybeAsyncIterable === null || maybeAsyncIterable === void 0\n      ? void 0\n      : maybeAsyncIterable[Symbol.asyncIterator]) === 'function'\n  );\n}\n", "/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nexport function mapAsyncIterator(iterable, callback) {\n  const iterator = iterable[Symbol.asyncIterator]();\n\n  async function mapResult(result) {\n    if (result.done) {\n      return result;\n    }\n\n    try {\n      return {\n        value: await callback(result.value),\n        done: false,\n      };\n    } catch (error) {\n      /* c8 ignore start */\n      // FIXME: add test case\n      if (typeof iterator.return === 'function') {\n        try {\n          await iterator.return();\n        } catch (_e) {\n          /* ignore error */\n        }\n      }\n\n      throw error;\n      /* c8 ignore stop */\n    }\n  }\n\n  return {\n    async next() {\n      return mapResult(await iterator.next());\n    },\n\n    async return() {\n      // If iterator.return() does not exist, then type R must be undefined.\n      return typeof iterator.return === 'function'\n        ? mapResult(await iterator.return())\n        : {\n            value: undefined,\n            done: true,\n          };\n    },\n\n    async throw(error) {\n      if (typeof iterator.throw === 'function') {\n        return mapResult(await iterator.throw(error));\n      }\n\n      throw error;\n    },\n\n    [Symbol.asyncIterator]() {\n      return this;\n    },\n  };\n}\n", "import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isAsyncIterable } from '../jsutils/isAsyncIterable.mjs';\nimport { addPath, pathToArray } from '../jsutils/Path.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { locatedError } from '../error/locatedError.mjs';\nimport { collectFields } from './collectFields.mjs';\nimport {\n  assertValidExecutionArguments,\n  buildExecutionContext,\n  buildResolveInfo,\n  execute,\n  getFieldDef,\n} from './execute.mjs';\nimport { mapAsyncIterator } from './mapAsyncIterator.mjs';\nimport { getArgumentValues } from './values.mjs';\n/**\n * Implements the \"Subscribe\" algorithm described in the GraphQL specification.\n *\n * Returns a Promise which resolves to either an AsyncIterator (if successful)\n * or an ExecutionResult (error). The promise will be rejected if the schema or\n * other arguments to this function are invalid, or if the resolved event stream\n * is not an async iterable.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with\n * descriptive errors and no data will be returned.\n *\n * If the source stream could not be created due to faulty subscription\n * resolver logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to an AsyncIterator, which\n * yields a stream of ExecutionResults representing the response stream.\n *\n * Accepts either an object with named arguments, or individual arguments.\n */\n\nexport async function subscribe(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 ||\n    devAssert(\n      false,\n      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',\n    );\n  const resultOrStream = await createSourceEventStream(args);\n\n  if (!isAsyncIterable(resultOrStream)) {\n    return resultOrStream;\n  } // For each payload yielded from a subscription, map it over the normal\n  // GraphQL `execute` function, with `payload` as the rootValue.\n  // This implements the \"MapSourceToResponseEvent\" algorithm described in\n  // the GraphQL specification. The `execute` function provides the\n  // \"ExecuteSubscriptionEvent\" algorithm, as it is nearly identical to the\n  // \"ExecuteQuery\" algorithm, for which `execute` is also used.\n\n  const mapSourceToResponse = (payload) =>\n    execute({ ...args, rootValue: payload }); // Map every source value to a ExecutionResult value as described above.\n\n  return mapAsyncIterator(resultOrStream, mapSourceToResponse);\n}\n\nfunction toNormalizedArgs(args) {\n  const firstArg = args[0];\n\n  if (firstArg && 'document' in firstArg) {\n    return firstArg;\n  }\n\n  return {\n    schema: firstArg,\n    // FIXME: when underlying TS bug fixed, see https://github.com/microsoft/TypeScript/issues/31613\n    document: args[1],\n    rootValue: args[2],\n    contextValue: args[3],\n    variableValues: args[4],\n    operationName: args[5],\n    subscribeFieldResolver: args[6],\n  };\n}\n/**\n * Implements the \"CreateSourceEventStream\" algorithm described in the\n * GraphQL specification, resolving the subscription source event stream.\n *\n * Returns a Promise which resolves to either an AsyncIterable (if successful)\n * or an ExecutionResult (error). The promise will be rejected if the schema or\n * other arguments to this function are invalid, or if the resolved event stream\n * is not an async iterable.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with\n * descriptive errors and no data will be returned.\n *\n * If the the source stream could not be created due to faulty subscription\n * resolver logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to the AsyncIterable for the\n * event stream returned by the resolver.\n *\n * A Source Event Stream represents a sequence of events, each of which triggers\n * a GraphQL execution for that event.\n *\n * This may be useful when hosting the stateful subscription service in a\n * different process or machine than the stateless GraphQL execution engine,\n * or otherwise separating these two steps. For more on this, see the\n * \"Supporting Subscriptions at Scale\" information in the GraphQL specification.\n */\n\nexport async function createSourceEventStream(...rawArgs) {\n  const args = toNormalizedArgs(rawArgs);\n  const { schema, document, variableValues } = args; // If arguments are missing or incorrectly typed, this is an internal\n  // developer mistake which should throw an early error.\n\n  assertValidExecutionArguments(schema, document, variableValues); // If a valid execution context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n\n  const exeContext = buildExecutionContext(args); // Return early errors if execution context failed.\n\n  if (!('schema' in exeContext)) {\n    return {\n      errors: exeContext,\n    };\n  }\n\n  try {\n    const eventStream = await executeSubscription(exeContext); // Assert field returned an event stream, otherwise yield an error.\n\n    if (!isAsyncIterable(eventStream)) {\n      throw new Error(\n        'Subscription field must return Async Iterable. ' +\n          `Received: ${inspect(eventStream)}.`,\n      );\n    }\n\n    return eventStream;\n  } catch (error) {\n    // If it GraphQLError, report it as an ExecutionResult, containing only errors and no data.\n    // Otherwise treat the error as a system-class error and re-throw it.\n    if (error instanceof GraphQLError) {\n      return {\n        errors: [error],\n      };\n    }\n\n    throw error;\n  }\n}\n\nasync function executeSubscription(exeContext) {\n  const { schema, fragments, operation, variableValues, rootValue } =\n    exeContext;\n  const rootType = schema.getSubscriptionType();\n\n  if (rootType == null) {\n    throw new GraphQLError(\n      'Schema is not configured to execute subscription operation.',\n      {\n        nodes: operation,\n      },\n    );\n  }\n\n  const rootFields = collectFields(\n    schema,\n    fragments,\n    variableValues,\n    rootType,\n    operation.selectionSet,\n  );\n  const [responseName, fieldNodes] = [...rootFields.entries()][0];\n  const fieldDef = getFieldDef(schema, rootType, fieldNodes[0]);\n\n  if (!fieldDef) {\n    const fieldName = fieldNodes[0].name.value;\n    throw new GraphQLError(\n      `The subscription field \"${fieldName}\" is not defined.`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  const path = addPath(undefined, responseName, rootType.name);\n  const info = buildResolveInfo(\n    exeContext,\n    fieldDef,\n    fieldNodes,\n    rootType,\n    path,\n  );\n\n  try {\n    var _fieldDef$subscribe;\n\n    // Implements the \"ResolveFieldEventStream\" algorithm from GraphQL specification.\n    // It differs from \"ResolveFieldValue\" due to providing a different `resolveFn`.\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    const args = getArgumentValues(fieldDef, fieldNodes[0], variableValues); // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n\n    const contextValue = exeContext.contextValue; // Call the `subscribe()` resolver or the default resolver to produce an\n    // AsyncIterable yielding raw payloads.\n\n    const resolveFn =\n      (_fieldDef$subscribe = fieldDef.subscribe) !== null &&\n      _fieldDef$subscribe !== void 0\n        ? _fieldDef$subscribe\n        : exeContext.subscribeFieldResolver;\n    const eventStream = await resolveFn(rootValue, args, contextValue, info);\n\n    if (eventStream instanceof Error) {\n      throw eventStream;\n    }\n\n    return eventStream;\n  } catch (error) {\n    throw locatedError(error, fieldNodes, pathToArray(path));\n  }\n}\n", "export { pathToArray as responsePathAsArray } from '../jsutils/Path.mjs';\nexport {\n  execute,\n  executeSync,\n  defaultFieldResolver,\n  defaultTypeResolver,\n} from './execute.mjs';\nexport { subscribe, createSourceEventStream } from './subscribe.mjs';\nexport {\n  getArgumentValues,\n  getVariableValues,\n  getDirectiveValues,\n} from './values.mjs';\n", "import { invariant } from '../../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../../error/GraphQLError.mjs';\nimport { getNamedType, isInputObjectType } from '../../../type/definition.mjs';\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nexport function NoDeprecatedCustomRule(context) {\n  return {\n    Field(node) {\n      const fieldDef = context.getFieldDef();\n      const deprecationReason =\n        fieldDef === null || fieldDef === void 0\n          ? void 0\n          : fieldDef.deprecationReason;\n\n      if (fieldDef && deprecationReason != null) {\n        const parentType = context.getParentType();\n        parentType != null || invariant(false);\n        context.reportError(\n          new GraphQLError(\n            `The field ${parentType.name}.${fieldDef.name} is deprecated. ${deprecationReason}`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    Argument(node) {\n      const argDef = context.getArgument();\n      const deprecationReason =\n        argDef === null || argDef === void 0\n          ? void 0\n          : argDef.deprecationReason;\n\n      if (argDef && deprecationReason != null) {\n        const directiveDef = context.getDirective();\n\n        if (directiveDef != null) {\n          context.reportError(\n            new GraphQLError(\n              `Directive \"@${directiveDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        } else {\n          const parentType = context.getParentType();\n          const fieldDef = context.getFieldDef();\n          (parentType != null && fieldDef != null) || invariant(false);\n          context.reportError(\n            new GraphQLError(\n              `Field \"${parentType.name}.${fieldDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    ObjectField(node) {\n      const inputObjectDef = getNamedType(context.getParentInputType());\n\n      if (isInputObjectType(inputObjectDef)) {\n        const inputFieldDef = inputObjectDef.getFields()[node.name.value];\n        const deprecationReason =\n          inputFieldDef === null || inputFieldDef === void 0\n            ? void 0\n            : inputFieldDef.deprecationReason;\n\n        if (deprecationReason != null) {\n          context.reportError(\n            new GraphQLError(\n              `The input field ${inputObjectDef.name}.${inputFieldDef.name} is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    EnumValue(node) {\n      const enumValueDef = context.getEnumValue();\n      const deprecationReason =\n        enumValueDef === null || enumValueDef === void 0\n          ? void 0\n          : enumValueDef.deprecationReason;\n\n      if (enumValueDef && deprecationReason != null) {\n        const enumTypeDef = getNamedType(context.getInputType());\n        enumTypeDef != null || invariant(false);\n        context.reportError(\n          new GraphQLError(\n            `The enum value \"${enumTypeDef.name}.${enumValueDef.name}\" is deprecated. ${deprecationReason}`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "import { GraphQLError } from '../../../error/GraphQLError.mjs';\nimport { getNamedType } from '../../../type/definition.mjs';\nimport { isIntrospectionType } from '../../../type/introspection.mjs';\n\n/**\n * Prohibit introspection queries\n *\n * A GraphQL document is only valid if all fields selected are not fields that\n * return an introspection type.\n *\n * Note: This rule is optional and is not part of the Validation section of the\n * GraphQL Specification. This rule effectively disables introspection, which\n * does not reflect best practices and should only be done if absolutely necessary.\n */\nexport function NoSchemaIntrospectionCustomRule(context) {\n  return {\n    Field(node) {\n      const type = getNamedType(context.getType());\n\n      if (type && isIntrospectionType(type)) {\n        context.reportError(\n          new GraphQLError(\n            `GraphQL introspection has been disabled, but the requested query contained the field \"${node.name.value}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "export { validate } from './validate.mjs';\nexport { ValidationContext } from './ValidationContext.mjs';\n// All validation rules in the GraphQL Specification.\nexport { specifiedRules } from './specifiedRules.mjs'; // Spec Section: \"Executable Definitions\"\n\nexport { ExecutableDefinitionsRule } from './rules/ExecutableDefinitionsRule.mjs'; // Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\nexport { FieldsOnCorrectTypeRule } from './rules/FieldsOnCorrectTypeRule.mjs'; // Spec Section: \"Fragments on Composite Types\"\n\nexport { FragmentsOnCompositeTypesRule } from './rules/FragmentsOnCompositeTypesRule.mjs'; // Spec Section: \"Argument Names\"\n\nexport { KnownArgumentNamesRule } from './rules/KnownArgumentNamesRule.mjs'; // Spec Section: \"Directives Are Defined\"\n\nexport { KnownDirectivesRule } from './rules/KnownDirectivesRule.mjs'; // Spec Section: \"Fragment spread target defined\"\n\nexport { KnownFragmentNamesRule } from './rules/KnownFragmentNamesRule.mjs'; // Spec Section: \"Fragment Spread Type Existence\"\n\nexport { KnownTypeNamesRule } from './rules/KnownTypeNamesRule.mjs'; // Spec Section: \"Lone Anonymous Operation\"\n\nexport { LoneAnonymousOperationRule } from './rules/LoneAnonymousOperationRule.mjs'; // Spec Section: \"Fragments must not form cycles\"\n\nexport { NoFragmentCyclesRule } from './rules/NoFragmentCyclesRule.mjs'; // Spec Section: \"All Variable Used Defined\"\n\nexport { NoUndefinedVariablesRule } from './rules/NoUndefinedVariablesRule.mjs'; // Spec Section: \"Fragments must be used\"\n\nexport { NoUnusedFragmentsRule } from './rules/NoUnusedFragmentsRule.mjs'; // Spec Section: \"All Variables Used\"\n\nexport { NoUnusedVariablesRule } from './rules/NoUnusedVariablesRule.mjs'; // Spec Section: \"Field Selection Merging\"\n\nexport { OverlappingFieldsCanBeMergedRule } from './rules/OverlappingFieldsCanBeMergedRule.mjs'; // Spec Section: \"Fragment spread is possible\"\n\nexport { PossibleFragmentSpreadsRule } from './rules/PossibleFragmentSpreadsRule.mjs'; // Spec Section: \"Argument Optionality\"\n\nexport { ProvidedRequiredArgumentsRule } from './rules/ProvidedRequiredArgumentsRule.mjs'; // Spec Section: \"Leaf Field Selections\"\n\nexport { ScalarLeafsRule } from './rules/ScalarLeafsRule.mjs'; // Spec Section: \"Subscriptions with Single Root Field\"\n\nexport { SingleFieldSubscriptionsRule } from './rules/SingleFieldSubscriptionsRule.mjs'; // Spec Section: \"Argument Uniqueness\"\n\nexport { UniqueArgumentNamesRule } from './rules/UniqueArgumentNamesRule.mjs'; // Spec Section: \"Directives Are Unique Per Location\"\n\nexport { UniqueDirectivesPerLocationRule } from './rules/UniqueDirectivesPerLocationRule.mjs'; // Spec Section: \"Fragment Name Uniqueness\"\n\nexport { UniqueFragmentNamesRule } from './rules/UniqueFragmentNamesRule.mjs'; // Spec Section: \"Input Object Field Uniqueness\"\n\nexport { UniqueInputFieldNamesRule } from './rules/UniqueInputFieldNamesRule.mjs'; // Spec Section: \"Operation Name Uniqueness\"\n\nexport { UniqueOperationNamesRule } from './rules/UniqueOperationNamesRule.mjs'; // Spec Section: \"Variable Uniqueness\"\n\nexport { UniqueVariableNamesRule } from './rules/UniqueVariableNamesRule.mjs'; // Spec Section: \"Values Type Correctness\"\n\nexport { ValuesOfCorrectTypeRule } from './rules/ValuesOfCorrectTypeRule.mjs'; // Spec Section: \"Variables are Input Types\"\n\nexport { VariablesAreInputTypesRule } from './rules/VariablesAreInputTypesRule.mjs'; // Spec Section: \"All Variable Usages Are Allowed\"\n\nexport { VariablesInAllowedPositionRule } from './rules/VariablesInAllowedPositionRule.mjs'; // SDL-specific validation rules\n\nexport { LoneSchemaDefinitionRule } from './rules/LoneSchemaDefinitionRule.mjs';\nexport { UniqueOperationTypesRule } from './rules/UniqueOperationTypesRule.mjs';\nexport { UniqueTypeNamesRule } from './rules/UniqueTypeNamesRule.mjs';\nexport { UniqueEnumValueNamesRule } from './rules/UniqueEnumValueNamesRule.mjs';\nexport { UniqueFieldDefinitionNamesRule } from './rules/UniqueFieldDefinitionNamesRule.mjs';\nexport { UniqueArgumentDefinitionNamesRule } from './rules/UniqueArgumentDefinitionNamesRule.mjs';\nexport { UniqueDirectiveNamesRule } from './rules/UniqueDirectiveNamesRule.mjs';\nexport { PossibleTypeExtensionsRule } from './rules/PossibleTypeExtensionsRule.mjs'; // Optional rules not defined by the GraphQL Specification\n\nexport { NoDeprecatedCustomRule } from './rules/custom/NoDeprecatedCustomRule.mjs';\nexport { NoSchemaIntrospectionCustomRule } from './rules/custom/NoSchemaIntrospectionCustomRule.mjs';\n", "export { GraphQLError, printError, formatError } from './GraphQLError.mjs';\nexport { syntaxError } from './syntaxError.mjs';\nexport { locatedError } from './locatedError.mjs';\n", "/**\n * Produce the GraphQL query recommended for a full schema introspection.\n * Accepts optional IntrospectionOptions.\n */\nexport function getIntrospectionQuery(options) {\n  const optionsWithDefault = {\n    descriptions: true,\n    specifiedByUrl: false,\n    directiveIsRepeatable: false,\n    schemaDescription: false,\n    inputValueDeprecation: false,\n    ...options,\n  };\n  const descriptions = optionsWithDefault.descriptions ? 'description' : '';\n  const specifiedByUrl = optionsWithDefault.specifiedByUrl\n    ? 'specifiedByURL'\n    : '';\n  const directiveIsRepeatable = optionsWithDefault.directiveIsRepeatable\n    ? 'isRepeatable'\n    : '';\n  const schemaDescription = optionsWithDefault.schemaDescription\n    ? descriptions\n    : '';\n\n  function inputDeprecation(str) {\n    return optionsWithDefault.inputValueDeprecation ? str : '';\n  }\n\n  return `\n    query IntrospectionQuery {\n      __schema {\n        ${schemaDescription}\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          ${descriptions}\n          ${directiveIsRepeatable}\n          locations\n          args${inputDeprecation('(includeDeprecated: true)')} {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      ${descriptions}\n      ${specifiedByUrl}\n      fields(includeDeprecated: true) {\n        name\n        ${descriptions}\n        args${inputDeprecation('(includeDeprecated: true)')} {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields${inputDeprecation('(includeDeprecated: true)')} {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        ${descriptions}\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      ${descriptions}\n      type { ...TypeRef }\n      defaultValue\n      ${inputDeprecation('isDeprecated')}\n      ${inputDeprecation('deprecationReason')}\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n}\n", "import { Kind } from '../language/kinds.mjs';\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\n\nexport function getOperationAST(documentAST, operationName) {\n  let operation = null;\n\n  for (const definition of documentAST.definitions) {\n    if (definition.kind === Kind.OPERATION_DEFINITION) {\n      var _definition$name;\n\n      if (operationName == null) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n\n        operation = definition;\n      } else if (\n        ((_definition$name = definition.name) === null ||\n        _definition$name === void 0\n          ? void 0\n          : _definition$name.value) === operationName\n      ) {\n        return definition;\n      }\n    }\n  }\n\n  return operation;\n}\n", "import { GraphQLError } from '../error/GraphQLError.mjs';\n\n/**\n * Extracts the root type of the operation from the schema.\n *\n * @deprecated Please use `GraphQLSchema.getRootType` instead. Will be removed in v17\n */\nexport function getOperationRootType(schema, operation) {\n  if (operation.operation === 'query') {\n    const queryType = schema.getQueryType();\n\n    if (!queryType) {\n      throw new GraphQLError(\n        'Schema does not define the required query root type.',\n        {\n          nodes: operation,\n        },\n      );\n    }\n\n    return queryType;\n  }\n\n  if (operation.operation === 'mutation') {\n    const mutationType = schema.getMutationType();\n\n    if (!mutationType) {\n      throw new GraphQLError('Schema is not configured for mutations.', {\n        nodes: operation,\n      });\n    }\n\n    return mutationType;\n  }\n\n  if (operation.operation === 'subscription') {\n    const subscriptionType = schema.getSubscriptionType();\n\n    if (!subscriptionType) {\n      throw new GraphQLError('Schema is not configured for subscriptions.', {\n        nodes: operation,\n      });\n    }\n\n    return subscriptionType;\n  }\n\n  throw new GraphQLError(\n    'Can only have query, mutation and subscription operations.',\n    {\n      nodes: operation,\n    },\n  );\n}\n", "import { invariant } from '../jsutils/invariant.mjs';\nimport { parse } from '../language/parser.mjs';\nimport { executeSync } from '../execution/execute.mjs';\nimport { getIntrospectionQuery } from './getIntrospectionQuery.mjs';\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\n\nexport function introspectionFromSchema(schema, options) {\n  const optionsWithDefaults = {\n    specifiedByUrl: true,\n    directiveIsRepeatable: true,\n    schemaDescription: true,\n    inputValueDeprecation: true,\n    ...options,\n  };\n  const document = parse(getIntrospectionQuery(optionsWithDefaults));\n  const result = executeSync({\n    schema,\n    document,\n  });\n  (!result.errors && result.data) || invariant(false);\n  return result.data;\n}\n", "import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { parseValue } from '../language/parser.mjs';\nimport {\n  assertInterfaceType,\n  assertNullableType,\n  assertObjectType,\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLInterfaceType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  GraphQLScalarType,\n  GraphQLUnionType,\n  isInputType,\n  isOutputType,\n} from '../type/definition.mjs';\nimport { GraphQLDirective } from '../type/directives.mjs';\nimport { introspectionTypes, TypeKind } from '../type/introspection.mjs';\nimport { specifiedScalarTypes } from '../type/scalars.mjs';\nimport { GraphQLSchema } from '../type/schema.mjs';\nimport { valueFromAST } from './valueFromAST.mjs';\n/**\n * Build a GraphQLSchema for use by client tools.\n *\n * Given the result of a client running the introspection query, creates and\n * returns a GraphQLSchema instance which can be then used with all graphql-js\n * tools, but cannot be used to execute a query, as introspection does not\n * represent the \"resolver\", \"parse\" or \"serialize\" functions or any other\n * server-internal mechanisms.\n *\n * This function expects a complete introspection result. Don't forget to check\n * the \"errors\" field of a server response before calling this function.\n */\n\nexport function buildClientSchema(introspection, options) {\n  (isObjectLike(introspection) && isObjectLike(introspection.__schema)) ||\n    devAssert(\n      false,\n      `Invalid or incomplete introspection result. Ensure that you are passing \"data\" property of introspection response and no \"errors\" was returned alongside: ${inspect(\n        introspection,\n      )}.`,\n    ); // Get the schema from the introspection result.\n\n  const schemaIntrospection = introspection.__schema; // Iterate through all types, getting the type definition for each.\n\n  const typeMap = keyValMap(\n    schemaIntrospection.types,\n    (typeIntrospection) => typeIntrospection.name,\n    (typeIntrospection) => buildType(typeIntrospection),\n  ); // Include standard types only if they are used.\n\n  for (const stdType of [...specifiedScalarTypes, ...introspectionTypes]) {\n    if (typeMap[stdType.name]) {\n      typeMap[stdType.name] = stdType;\n    }\n  } // Get the root Query, Mutation, and Subscription types.\n\n  const queryType = schemaIntrospection.queryType\n    ? getObjectType(schemaIntrospection.queryType)\n    : null;\n  const mutationType = schemaIntrospection.mutationType\n    ? getObjectType(schemaIntrospection.mutationType)\n    : null;\n  const subscriptionType = schemaIntrospection.subscriptionType\n    ? getObjectType(schemaIntrospection.subscriptionType)\n    : null; // Get the directives supported by Introspection, assuming empty-set if\n  // directives were not queried for.\n\n  const directives = schemaIntrospection.directives\n    ? schemaIntrospection.directives.map(buildDirective)\n    : []; // Then produce and return a Schema with these types.\n\n  return new GraphQLSchema({\n    description: schemaIntrospection.description,\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: Object.values(typeMap),\n    directives,\n    assumeValid:\n      options === null || options === void 0 ? void 0 : options.assumeValid,\n  }); // Given a type reference in introspection, return the GraphQLType instance.\n  // preferring cached instances before building new instances.\n\n  function getType(typeRef) {\n    if (typeRef.kind === TypeKind.LIST) {\n      const itemRef = typeRef.ofType;\n\n      if (!itemRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      return new GraphQLList(getType(itemRef));\n    }\n\n    if (typeRef.kind === TypeKind.NON_NULL) {\n      const nullableRef = typeRef.ofType;\n\n      if (!nullableRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      const nullableType = getType(nullableRef);\n      return new GraphQLNonNull(assertNullableType(nullableType));\n    }\n\n    return getNamedType(typeRef);\n  }\n\n  function getNamedType(typeRef) {\n    const typeName = typeRef.name;\n\n    if (!typeName) {\n      throw new Error(`Unknown type reference: ${inspect(typeRef)}.`);\n    }\n\n    const type = typeMap[typeName];\n\n    if (!type) {\n      throw new Error(\n        `Invalid or incomplete schema, unknown type: ${typeName}. Ensure that a full introspection query is used in order to build a client schema.`,\n      );\n    }\n\n    return type;\n  }\n\n  function getObjectType(typeRef) {\n    return assertObjectType(getNamedType(typeRef));\n  }\n\n  function getInterfaceType(typeRef) {\n    return assertInterfaceType(getNamedType(typeRef));\n  } // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n\n  function buildType(type) {\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (type != null && type.name != null && type.kind != null) {\n      // FIXME: Properly type IntrospectionType, it's a breaking change so fix in v17\n      // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n      switch (type.kind) {\n        case TypeKind.SCALAR:\n          return buildScalarDef(type);\n\n        case TypeKind.OBJECT:\n          return buildObjectDef(type);\n\n        case TypeKind.INTERFACE:\n          return buildInterfaceDef(type);\n\n        case TypeKind.UNION:\n          return buildUnionDef(type);\n\n        case TypeKind.ENUM:\n          return buildEnumDef(type);\n\n        case TypeKind.INPUT_OBJECT:\n          return buildInputObjectDef(type);\n      }\n    }\n\n    const typeStr = inspect(type);\n    throw new Error(\n      `Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${typeStr}.`,\n    );\n  }\n\n  function buildScalarDef(scalarIntrospection) {\n    return new GraphQLScalarType({\n      name: scalarIntrospection.name,\n      description: scalarIntrospection.description,\n      specifiedByURL: scalarIntrospection.specifiedByURL,\n    });\n  }\n\n  function buildImplementationsList(implementingIntrospection) {\n    // TODO: Temporary workaround until GraphQL ecosystem will fully support\n    // 'interfaces' on interface types.\n    if (\n      implementingIntrospection.interfaces === null &&\n      implementingIntrospection.kind === TypeKind.INTERFACE\n    ) {\n      return [];\n    }\n\n    if (!implementingIntrospection.interfaces) {\n      const implementingIntrospectionStr = inspect(implementingIntrospection);\n      throw new Error(\n        `Introspection result missing interfaces: ${implementingIntrospectionStr}.`,\n      );\n    }\n\n    return implementingIntrospection.interfaces.map(getInterfaceType);\n  }\n\n  function buildObjectDef(objectIntrospection) {\n    return new GraphQLObjectType({\n      name: objectIntrospection.name,\n      description: objectIntrospection.description,\n      interfaces: () => buildImplementationsList(objectIntrospection),\n      fields: () => buildFieldDefMap(objectIntrospection),\n    });\n  }\n\n  function buildInterfaceDef(interfaceIntrospection) {\n    return new GraphQLInterfaceType({\n      name: interfaceIntrospection.name,\n      description: interfaceIntrospection.description,\n      interfaces: () => buildImplementationsList(interfaceIntrospection),\n      fields: () => buildFieldDefMap(interfaceIntrospection),\n    });\n  }\n\n  function buildUnionDef(unionIntrospection) {\n    if (!unionIntrospection.possibleTypes) {\n      const unionIntrospectionStr = inspect(unionIntrospection);\n      throw new Error(\n        `Introspection result missing possibleTypes: ${unionIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLUnionType({\n      name: unionIntrospection.name,\n      description: unionIntrospection.description,\n      types: () => unionIntrospection.possibleTypes.map(getObjectType),\n    });\n  }\n\n  function buildEnumDef(enumIntrospection) {\n    if (!enumIntrospection.enumValues) {\n      const enumIntrospectionStr = inspect(enumIntrospection);\n      throw new Error(\n        `Introspection result missing enumValues: ${enumIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLEnumType({\n      name: enumIntrospection.name,\n      description: enumIntrospection.description,\n      values: keyValMap(\n        enumIntrospection.enumValues,\n        (valueIntrospection) => valueIntrospection.name,\n        (valueIntrospection) => ({\n          description: valueIntrospection.description,\n          deprecationReason: valueIntrospection.deprecationReason,\n        }),\n      ),\n    });\n  }\n\n  function buildInputObjectDef(inputObjectIntrospection) {\n    if (!inputObjectIntrospection.inputFields) {\n      const inputObjectIntrospectionStr = inspect(inputObjectIntrospection);\n      throw new Error(\n        `Introspection result missing inputFields: ${inputObjectIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLInputObjectType({\n      name: inputObjectIntrospection.name,\n      description: inputObjectIntrospection.description,\n      fields: () => buildInputValueDefMap(inputObjectIntrospection.inputFields),\n    });\n  }\n\n  function buildFieldDefMap(typeIntrospection) {\n    if (!typeIntrospection.fields) {\n      throw new Error(\n        `Introspection result missing fields: ${inspect(typeIntrospection)}.`,\n      );\n    }\n\n    return keyValMap(\n      typeIntrospection.fields,\n      (fieldIntrospection) => fieldIntrospection.name,\n      buildField,\n    );\n  }\n\n  function buildField(fieldIntrospection) {\n    const type = getType(fieldIntrospection.type);\n\n    if (!isOutputType(type)) {\n      const typeStr = inspect(type);\n      throw new Error(\n        `Introspection must provide output type for fields, but received: ${typeStr}.`,\n      );\n    }\n\n    if (!fieldIntrospection.args) {\n      const fieldIntrospectionStr = inspect(fieldIntrospection);\n      throw new Error(\n        `Introspection result missing field args: ${fieldIntrospectionStr}.`,\n      );\n    }\n\n    return {\n      description: fieldIntrospection.description,\n      deprecationReason: fieldIntrospection.deprecationReason,\n      type,\n      args: buildInputValueDefMap(fieldIntrospection.args),\n    };\n  }\n\n  function buildInputValueDefMap(inputValueIntrospections) {\n    return keyValMap(\n      inputValueIntrospections,\n      (inputValue) => inputValue.name,\n      buildInputValue,\n    );\n  }\n\n  function buildInputValue(inputValueIntrospection) {\n    const type = getType(inputValueIntrospection.type);\n\n    if (!isInputType(type)) {\n      const typeStr = inspect(type);\n      throw new Error(\n        `Introspection must provide input type for arguments, but received: ${typeStr}.`,\n      );\n    }\n\n    const defaultValue =\n      inputValueIntrospection.defaultValue != null\n        ? valueFromAST(parseValue(inputValueIntrospection.defaultValue), type)\n        : undefined;\n    return {\n      description: inputValueIntrospection.description,\n      type,\n      defaultValue,\n      deprecationReason: inputValueIntrospection.deprecationReason,\n    };\n  }\n\n  function buildDirective(directiveIntrospection) {\n    if (!directiveIntrospection.args) {\n      const directiveIntrospectionStr = inspect(directiveIntrospection);\n      throw new Error(\n        `Introspection result missing directive args: ${directiveIntrospectionStr}.`,\n      );\n    }\n\n    if (!directiveIntrospection.locations) {\n      const directiveIntrospectionStr = inspect(directiveIntrospection);\n      throw new Error(\n        `Introspection result missing directive locations: ${directiveIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLDirective({\n      name: directiveIntrospection.name,\n      description: directiveIntrospection.description,\n      isRepeatable: directiveIntrospection.isRepeatable,\n      locations: directiveIntrospection.locations.slice(),\n      args: buildInputValueDefMap(directiveIntrospection.args),\n    });\n  }\n}\n", "import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { mapValue } from '../jsutils/mapValue.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport {\n  isTypeDefinitionNode,\n  isTypeExtensionNode,\n} from '../language/predicates.mjs';\nimport {\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLInterfaceType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  GraphQLScalarType,\n  GraphQLUnionType,\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n  isScalarType,\n  isUnionType,\n} from '../type/definition.mjs';\nimport {\n  GraphQLDeprecatedDirective,\n  GraphQLDirective,\n  GraphQLSpecifiedByDirective,\n} from '../type/directives.mjs';\nimport {\n  introspectionTypes,\n  isIntrospectionType,\n} from '../type/introspection.mjs';\nimport {\n  isSpecifiedScalarType,\n  specifiedScalarTypes,\n} from '../type/scalars.mjs';\nimport { assertSchema, GraphQLSchema } from '../type/schema.mjs';\nimport { assertValidSDLExtension } from '../validation/validate.mjs';\nimport { getDirectiveValues } from '../execution/values.mjs';\nimport { valueFromAST } from './valueFromAST.mjs';\n\n/**\n * Produces a new schema given an existing schema and a document which may\n * contain GraphQL type extensions and definitions. The original schema will\n * remain unaltered.\n *\n * Because a schema represents a graph of references, a schema cannot be\n * extended without effectively making an entire copy. We do not know until it's\n * too late if subgraphs remain unchanged.\n *\n * This algorithm copies the provided schema, applying extensions while\n * producing the copy. The original schema remains unaltered.\n */\nexport function extendSchema(schema, documentAST, options) {\n  assertSchema(schema);\n  (documentAST != null && documentAST.kind === Kind.DOCUMENT) ||\n    devAssert(false, 'Must provide valid Document AST.');\n\n  if (\n    (options === null || options === void 0 ? void 0 : options.assumeValid) !==\n      true &&\n    (options === null || options === void 0\n      ? void 0\n      : options.assumeValidSDL) !== true\n  ) {\n    assertValidSDLExtension(documentAST, schema);\n  }\n\n  const schemaConfig = schema.toConfig();\n  const extendedConfig = extendSchemaImpl(schemaConfig, documentAST, options);\n  return schemaConfig === extendedConfig\n    ? schema\n    : new GraphQLSchema(extendedConfig);\n}\n/**\n * @internal\n */\n\nexport function extendSchemaImpl(schemaConfig, documentAST, options) {\n  var _schemaDef, _schemaDef$descriptio, _schemaDef2, _options$assumeValid;\n\n  // Collect the type definitions and extensions found in the document.\n  const typeDefs = [];\n  const typeExtensionsMap = Object.create(null); // New directives and types are separate because a directives and types can\n  // have the same name. For example, a type named \"skip\".\n\n  const directiveDefs = [];\n  let schemaDef; // Schema extensions are collected which may add additional operation types.\n\n  const schemaExtensions = [];\n\n  for (const def of documentAST.definitions) {\n    if (def.kind === Kind.SCHEMA_DEFINITION) {\n      schemaDef = def;\n    } else if (def.kind === Kind.SCHEMA_EXTENSION) {\n      schemaExtensions.push(def);\n    } else if (isTypeDefinitionNode(def)) {\n      typeDefs.push(def);\n    } else if (isTypeExtensionNode(def)) {\n      const extendedTypeName = def.name.value;\n      const existingTypeExtensions = typeExtensionsMap[extendedTypeName];\n      typeExtensionsMap[extendedTypeName] = existingTypeExtensions\n        ? existingTypeExtensions.concat([def])\n        : [def];\n    } else if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      directiveDefs.push(def);\n    }\n  } // If this document contains no new types, extensions, or directives then\n  // return the same unmodified GraphQLSchema instance.\n\n  if (\n    Object.keys(typeExtensionsMap).length === 0 &&\n    typeDefs.length === 0 &&\n    directiveDefs.length === 0 &&\n    schemaExtensions.length === 0 &&\n    schemaDef == null\n  ) {\n    return schemaConfig;\n  }\n\n  const typeMap = Object.create(null);\n\n  for (const existingType of schemaConfig.types) {\n    typeMap[existingType.name] = extendNamedType(existingType);\n  }\n\n  for (const typeNode of typeDefs) {\n    var _stdTypeMap$name;\n\n    const name = typeNode.name.value;\n    typeMap[name] =\n      (_stdTypeMap$name = stdTypeMap[name]) !== null &&\n      _stdTypeMap$name !== void 0\n        ? _stdTypeMap$name\n        : buildType(typeNode);\n  }\n\n  const operationTypes = {\n    // Get the extended root operation types.\n    query: schemaConfig.query && replaceNamedType(schemaConfig.query),\n    mutation: schemaConfig.mutation && replaceNamedType(schemaConfig.mutation),\n    subscription:\n      schemaConfig.subscription && replaceNamedType(schemaConfig.subscription),\n    // Then, incorporate schema definition and all schema extensions.\n    ...(schemaDef && getOperationTypes([schemaDef])),\n    ...getOperationTypes(schemaExtensions),\n  }; // Then produce and return a Schema config with these types.\n\n  return {\n    description:\n      (_schemaDef = schemaDef) === null || _schemaDef === void 0\n        ? void 0\n        : (_schemaDef$descriptio = _schemaDef.description) === null ||\n          _schemaDef$descriptio === void 0\n        ? void 0\n        : _schemaDef$descriptio.value,\n    ...operationTypes,\n    types: Object.values(typeMap),\n    directives: [\n      ...schemaConfig.directives.map(replaceDirective),\n      ...directiveDefs.map(buildDirective),\n    ],\n    extensions: Object.create(null),\n    astNode:\n      (_schemaDef2 = schemaDef) !== null && _schemaDef2 !== void 0\n        ? _schemaDef2\n        : schemaConfig.astNode,\n    extensionASTNodes: schemaConfig.extensionASTNodes.concat(schemaExtensions),\n    assumeValid:\n      (_options$assumeValid =\n        options === null || options === void 0\n          ? void 0\n          : options.assumeValid) !== null && _options$assumeValid !== void 0\n        ? _options$assumeValid\n        : false,\n  }; // Below are functions used for producing this schema that have closed over\n  // this scope and have access to the schema, cache, and newly defined types.\n\n  function replaceType(type) {\n    if (isListType(type)) {\n      // @ts-expect-error\n      return new GraphQLList(replaceType(type.ofType));\n    }\n\n    if (isNonNullType(type)) {\n      // @ts-expect-error\n      return new GraphQLNonNull(replaceType(type.ofType));\n    } // @ts-expect-error FIXME\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    // Note: While this could make early assertions to get the correctly\n    // typed values, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    return typeMap[type.name];\n  }\n\n  function replaceDirective(directive) {\n    const config = directive.toConfig();\n    return new GraphQLDirective({\n      ...config,\n      args: mapValue(config.args, extendArg),\n    });\n  }\n\n  function extendNamedType(type) {\n    if (isIntrospectionType(type) || isSpecifiedScalarType(type)) {\n      // Builtin types are not extended.\n      return type;\n    }\n\n    if (isScalarType(type)) {\n      return extendScalarType(type);\n    }\n\n    if (isObjectType(type)) {\n      return extendObjectType(type);\n    }\n\n    if (isInterfaceType(type)) {\n      return extendInterfaceType(type);\n    }\n\n    if (isUnionType(type)) {\n      return extendUnionType(type);\n    }\n\n    if (isEnumType(type)) {\n      return extendEnumType(type);\n    }\n\n    if (isInputObjectType(type)) {\n      return extendInputObjectType(type);\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible type definition nodes have been considered.\n\n    false || invariant(false, 'Unexpected type: ' + inspect(type));\n  }\n\n  function extendInputObjectType(type) {\n    var _typeExtensionsMap$co;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co !== void 0\n        ? _typeExtensionsMap$co\n        : [];\n    return new GraphQLInputObjectType({\n      ...config,\n      fields: () => ({\n        ...mapValue(config.fields, (field) => ({\n          ...field,\n          type: replaceType(field.type),\n        })),\n        ...buildInputFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendEnumType(type) {\n    var _typeExtensionsMap$ty;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$ty = typeExtensionsMap[type.name]) !== null &&\n      _typeExtensionsMap$ty !== void 0\n        ? _typeExtensionsMap$ty\n        : [];\n    return new GraphQLEnumType({\n      ...config,\n      values: { ...config.values, ...buildEnumValueMap(extensions) },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendScalarType(type) {\n    var _typeExtensionsMap$co2;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co2 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co2 !== void 0\n        ? _typeExtensionsMap$co2\n        : [];\n    let specifiedByURL = config.specifiedByURL;\n\n    for (const extensionNode of extensions) {\n      var _getSpecifiedByURL;\n\n      specifiedByURL =\n        (_getSpecifiedByURL = getSpecifiedByURL(extensionNode)) !== null &&\n        _getSpecifiedByURL !== void 0\n          ? _getSpecifiedByURL\n          : specifiedByURL;\n    }\n\n    return new GraphQLScalarType({\n      ...config,\n      specifiedByURL,\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendObjectType(type) {\n    var _typeExtensionsMap$co3;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co3 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co3 !== void 0\n        ? _typeExtensionsMap$co3\n        : [];\n    return new GraphQLObjectType({\n      ...config,\n      interfaces: () => [\n        ...type.getInterfaces().map(replaceNamedType),\n        ...buildInterfaces(extensions),\n      ],\n      fields: () => ({\n        ...mapValue(config.fields, extendField),\n        ...buildFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendInterfaceType(type) {\n    var _typeExtensionsMap$co4;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co4 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co4 !== void 0\n        ? _typeExtensionsMap$co4\n        : [];\n    return new GraphQLInterfaceType({\n      ...config,\n      interfaces: () => [\n        ...type.getInterfaces().map(replaceNamedType),\n        ...buildInterfaces(extensions),\n      ],\n      fields: () => ({\n        ...mapValue(config.fields, extendField),\n        ...buildFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendUnionType(type) {\n    var _typeExtensionsMap$co5;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co5 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co5 !== void 0\n        ? _typeExtensionsMap$co5\n        : [];\n    return new GraphQLUnionType({\n      ...config,\n      types: () => [\n        ...type.getTypes().map(replaceNamedType),\n        ...buildUnionTypes(extensions),\n      ],\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendField(field) {\n    return {\n      ...field,\n      type: replaceType(field.type),\n      args: field.args && mapValue(field.args, extendArg),\n    };\n  }\n\n  function extendArg(arg) {\n    return { ...arg, type: replaceType(arg.type) };\n  }\n\n  function getOperationTypes(nodes) {\n    const opTypes = {};\n\n    for (const node of nodes) {\n      var _node$operationTypes;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const operationTypesNodes =\n        /* c8 ignore next */\n        (_node$operationTypes = node.operationTypes) !== null &&\n        _node$operationTypes !== void 0\n          ? _node$operationTypes\n          : [];\n\n      for (const operationType of operationTypesNodes) {\n        // Note: While this could make early assertions to get the correctly\n        // typed values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable results.\n        // @ts-expect-error\n        opTypes[operationType.operation] = getNamedType(operationType.type);\n      }\n    }\n\n    return opTypes;\n  }\n\n  function getNamedType(node) {\n    var _stdTypeMap$name2;\n\n    const name = node.name.value;\n    const type =\n      (_stdTypeMap$name2 = stdTypeMap[name]) !== null &&\n      _stdTypeMap$name2 !== void 0\n        ? _stdTypeMap$name2\n        : typeMap[name];\n\n    if (type === undefined) {\n      throw new Error(`Unknown type: \"${name}\".`);\n    }\n\n    return type;\n  }\n\n  function getWrappedType(node) {\n    if (node.kind === Kind.LIST_TYPE) {\n      return new GraphQLList(getWrappedType(node.type));\n    }\n\n    if (node.kind === Kind.NON_NULL_TYPE) {\n      return new GraphQLNonNull(getWrappedType(node.type));\n    }\n\n    return getNamedType(node);\n  }\n\n  function buildDirective(node) {\n    var _node$description;\n\n    return new GraphQLDirective({\n      name: node.name.value,\n      description:\n        (_node$description = node.description) === null ||\n        _node$description === void 0\n          ? void 0\n          : _node$description.value,\n      // @ts-expect-error\n      locations: node.locations.map(({ value }) => value),\n      isRepeatable: node.repeatable,\n      args: buildArgumentMap(node.arguments),\n      astNode: node,\n    });\n  }\n\n  function buildFieldMap(nodes) {\n    const fieldConfigMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$fields;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const nodeFields =\n        /* c8 ignore next */\n        (_node$fields = node.fields) !== null && _node$fields !== void 0\n          ? _node$fields\n          : [];\n\n      for (const field of nodeFields) {\n        var _field$description;\n\n        fieldConfigMap[field.name.value] = {\n          // Note: While this could make assertions to get the correctly typed\n          // value, that would throw immediately while type system validation\n          // with validateSchema() will produce more actionable results.\n          type: getWrappedType(field.type),\n          description:\n            (_field$description = field.description) === null ||\n            _field$description === void 0\n              ? void 0\n              : _field$description.value,\n          args: buildArgumentMap(field.arguments),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field,\n        };\n      }\n    }\n\n    return fieldConfigMap;\n  }\n\n  function buildArgumentMap(args) {\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n    const argsNodes =\n      /* c8 ignore next */\n      args !== null && args !== void 0 ? args : [];\n    const argConfigMap = Object.create(null);\n\n    for (const arg of argsNodes) {\n      var _arg$description;\n\n      // Note: While this could make assertions to get the correctly typed\n      // value, that would throw immediately while type system validation\n      // with validateSchema() will produce more actionable results.\n      const type = getWrappedType(arg.type);\n      argConfigMap[arg.name.value] = {\n        type,\n        description:\n          (_arg$description = arg.description) === null ||\n          _arg$description === void 0\n            ? void 0\n            : _arg$description.value,\n        defaultValue: valueFromAST(arg.defaultValue, type),\n        deprecationReason: getDeprecationReason(arg),\n        astNode: arg,\n      };\n    }\n\n    return argConfigMap;\n  }\n\n  function buildInputFieldMap(nodes) {\n    const inputFieldMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$fields2;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const fieldsNodes =\n        /* c8 ignore next */\n        (_node$fields2 = node.fields) !== null && _node$fields2 !== void 0\n          ? _node$fields2\n          : [];\n\n      for (const field of fieldsNodes) {\n        var _field$description2;\n\n        // Note: While this could make assertions to get the correctly typed\n        // value, that would throw immediately while type system validation\n        // with validateSchema() will produce more actionable results.\n        const type = getWrappedType(field.type);\n        inputFieldMap[field.name.value] = {\n          type,\n          description:\n            (_field$description2 = field.description) === null ||\n            _field$description2 === void 0\n              ? void 0\n              : _field$description2.value,\n          defaultValue: valueFromAST(field.defaultValue, type),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field,\n        };\n      }\n    }\n\n    return inputFieldMap;\n  }\n\n  function buildEnumValueMap(nodes) {\n    const enumValueMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$values;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const valuesNodes =\n        /* c8 ignore next */\n        (_node$values = node.values) !== null && _node$values !== void 0\n          ? _node$values\n          : [];\n\n      for (const value of valuesNodes) {\n        var _value$description;\n\n        enumValueMap[value.name.value] = {\n          description:\n            (_value$description = value.description) === null ||\n            _value$description === void 0\n              ? void 0\n              : _value$description.value,\n          deprecationReason: getDeprecationReason(value),\n          astNode: value,\n        };\n      }\n    }\n\n    return enumValueMap;\n  }\n\n  function buildInterfaces(nodes) {\n    // Note: While this could make assertions to get the correctly typed\n    // values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    // @ts-expect-error\n    return nodes.flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (node) => {\n        var _node$interfaces$map, _node$interfaces;\n\n        return (\n          /* c8 ignore next */\n          (_node$interfaces$map =\n            (_node$interfaces = node.interfaces) === null ||\n            _node$interfaces === void 0\n              ? void 0\n              : _node$interfaces.map(getNamedType)) !== null &&\n            _node$interfaces$map !== void 0\n            ? _node$interfaces$map\n            : []\n        );\n      },\n    );\n  }\n\n  function buildUnionTypes(nodes) {\n    // Note: While this could make assertions to get the correctly typed\n    // values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    // @ts-expect-error\n    return nodes.flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (node) => {\n        var _node$types$map, _node$types;\n\n        return (\n          /* c8 ignore next */\n          (_node$types$map =\n            (_node$types = node.types) === null || _node$types === void 0\n              ? void 0\n              : _node$types.map(getNamedType)) !== null &&\n            _node$types$map !== void 0\n            ? _node$types$map\n            : []\n        );\n      },\n    );\n  }\n\n  function buildType(astNode) {\n    var _typeExtensionsMap$na;\n\n    const name = astNode.name.value;\n    const extensionASTNodes =\n      (_typeExtensionsMap$na = typeExtensionsMap[name]) !== null &&\n      _typeExtensionsMap$na !== void 0\n        ? _typeExtensionsMap$na\n        : [];\n\n    switch (astNode.kind) {\n      case Kind.OBJECT_TYPE_DEFINITION: {\n        var _astNode$description;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLObjectType({\n          name,\n          description:\n            (_astNode$description = astNode.description) === null ||\n            _astNode$description === void 0\n              ? void 0\n              : _astNode$description.value,\n          interfaces: () => buildInterfaces(allNodes),\n          fields: () => buildFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.INTERFACE_TYPE_DEFINITION: {\n        var _astNode$description2;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLInterfaceType({\n          name,\n          description:\n            (_astNode$description2 = astNode.description) === null ||\n            _astNode$description2 === void 0\n              ? void 0\n              : _astNode$description2.value,\n          interfaces: () => buildInterfaces(allNodes),\n          fields: () => buildFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.ENUM_TYPE_DEFINITION: {\n        var _astNode$description3;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLEnumType({\n          name,\n          description:\n            (_astNode$description3 = astNode.description) === null ||\n            _astNode$description3 === void 0\n              ? void 0\n              : _astNode$description3.value,\n          values: buildEnumValueMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.UNION_TYPE_DEFINITION: {\n        var _astNode$description4;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLUnionType({\n          name,\n          description:\n            (_astNode$description4 = astNode.description) === null ||\n            _astNode$description4 === void 0\n              ? void 0\n              : _astNode$description4.value,\n          types: () => buildUnionTypes(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.SCALAR_TYPE_DEFINITION: {\n        var _astNode$description5;\n\n        return new GraphQLScalarType({\n          name,\n          description:\n            (_astNode$description5 = astNode.description) === null ||\n            _astNode$description5 === void 0\n              ? void 0\n              : _astNode$description5.value,\n          specifiedByURL: getSpecifiedByURL(astNode),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION: {\n        var _astNode$description6;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLInputObjectType({\n          name,\n          description:\n            (_astNode$description6 = astNode.description) === null ||\n            _astNode$description6 === void 0\n              ? void 0\n              : _astNode$description6.value,\n          fields: () => buildInputFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n    }\n  }\n}\nconst stdTypeMap = keyMap(\n  [...specifiedScalarTypes, ...introspectionTypes],\n  (type) => type.name,\n);\n/**\n * Given a field or enum value node, returns the string value for the\n * deprecation reason.\n */\n\nfunction getDeprecationReason(node) {\n  const deprecated = getDirectiveValues(GraphQLDeprecatedDirective, node); // @ts-expect-error validated by `getDirectiveValues`\n\n  return deprecated === null || deprecated === void 0\n    ? void 0\n    : deprecated.reason;\n}\n/**\n * Given a scalar node, returns the string value for the specifiedByURL.\n */\n\nfunction getSpecifiedByURL(node) {\n  const specifiedBy = getDirectiveValues(GraphQLSpecifiedByDirective, node); // @ts-expect-error validated by `getDirectiveValues`\n\n  return specifiedBy === null || specifiedBy === void 0\n    ? void 0\n    : specifiedBy.url;\n}\n", "import { devAssert } from '../jsutils/devAssert.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { parse } from '../language/parser.mjs';\nimport { specifiedDirectives } from '../type/directives.mjs';\nimport { GraphQLSchema } from '../type/schema.mjs';\nimport { assertValidSDL } from '../validation/validate.mjs';\nimport { extendSchemaImpl } from './extendSchema.mjs';\n\n/**\n * This takes the ast of a schema document produced by the parse function in\n * src/language/parser.js.\n *\n * If no schema definition is provided, then it will look for types named Query,\n * Mutation and Subscription.\n *\n * Given that AST it constructs a GraphQLSchema. The resulting schema\n * has no resolve methods, so execution will use default resolvers.\n */\nexport function buildASTSchema(documentAST, options) {\n  (documentAST != null && documentAST.kind === Kind.DOCUMENT) ||\n    devAssert(false, 'Must provide valid Document AST.');\n\n  if (\n    (options === null || options === void 0 ? void 0 : options.assumeValid) !==\n      true &&\n    (options === null || options === void 0\n      ? void 0\n      : options.assumeValidSDL) !== true\n  ) {\n    assertValidSDL(documentAST);\n  }\n\n  const emptySchemaConfig = {\n    description: undefined,\n    types: [],\n    directives: [],\n    extensions: Object.create(null),\n    extensionASTNodes: [],\n    assumeValid: false,\n  };\n  const config = extendSchemaImpl(emptySchemaConfig, documentAST, options);\n\n  if (config.astNode == null) {\n    for (const type of config.types) {\n      switch (type.name) {\n        // Note: While this could make early assertions to get the correctly\n        // typed values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable results.\n        case 'Query':\n          // @ts-expect-error validated in `validateSchema`\n          config.query = type;\n          break;\n\n        case 'Mutation':\n          // @ts-expect-error validated in `validateSchema`\n          config.mutation = type;\n          break;\n\n        case 'Subscription':\n          // @ts-expect-error validated in `validateSchema`\n          config.subscription = type;\n          break;\n      }\n    }\n  }\n\n  const directives = [\n    ...config.directives, // If specified directives were not explicitly declared, add them.\n    ...specifiedDirectives.filter((stdDirective) =>\n      config.directives.every(\n        (directive) => directive.name !== stdDirective.name,\n      ),\n    ),\n  ];\n  return new GraphQLSchema({ ...config, directives });\n}\n/**\n * A helper function to build a GraphQLSchema directly from a source\n * document.\n */\n\nexport function buildSchema(source, options) {\n  const document = parse(source, {\n    noLocation:\n      options === null || options === void 0 ? void 0 : options.noLocation,\n    allowLegacyFragmentVariables:\n      options === null || options === void 0\n        ? void 0\n        : options.allowLegacyFragmentVariables,\n  });\n  return buildASTSchema(document, {\n    assumeValidSDL:\n      options === null || options === void 0 ? void 0 : options.assumeValidSDL,\n    assumeValid:\n      options === null || options === void 0 ? void 0 : options.assumeValid,\n  });\n}\n", "import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { naturalCompare } from '../jsutils/naturalCompare.mjs';\nimport {\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLInterfaceType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  GraphQLUnionType,\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n  isScalarType,\n  isUnionType,\n} from '../type/definition.mjs';\nimport { GraphQLDirective } from '../type/directives.mjs';\nimport { isIntrospectionType } from '../type/introspection.mjs';\nimport { GraphQLSchema } from '../type/schema.mjs';\n/**\n * Sort GraphQLSchema.\n *\n * This function returns a sorted copy of the given GraphQLSchema.\n */\n\nexport function lexicographicSortSchema(schema) {\n  const schemaConfig = schema.toConfig();\n  const typeMap = keyValMap(\n    sortByName(schemaConfig.types),\n    (type) => type.name,\n    sortNamedType,\n  );\n  return new GraphQLSchema({\n    ...schemaConfig,\n    types: Object.values(typeMap),\n    directives: sortByName(schemaConfig.directives).map(sortDirective),\n    query: replaceMaybeType(schemaConfig.query),\n    mutation: replaceMaybeType(schemaConfig.mutation),\n    subscription: replaceMaybeType(schemaConfig.subscription),\n  });\n\n  function replaceType(type) {\n    if (isListType(type)) {\n      // @ts-expect-error\n      return new GraphQLList(replaceType(type.ofType));\n    } else if (isNonNullType(type)) {\n      // @ts-expect-error\n      return new GraphQLNonNull(replaceType(type.ofType));\n    } // @ts-expect-error FIXME: TS Conversion\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    return typeMap[type.name];\n  }\n\n  function replaceMaybeType(maybeType) {\n    return maybeType && replaceNamedType(maybeType);\n  }\n\n  function sortDirective(directive) {\n    const config = directive.toConfig();\n    return new GraphQLDirective({\n      ...config,\n      locations: sortBy(config.locations, (x) => x),\n      args: sortArgs(config.args),\n    });\n  }\n\n  function sortArgs(args) {\n    return sortObjMap(args, (arg) => ({ ...arg, type: replaceType(arg.type) }));\n  }\n\n  function sortFields(fieldsMap) {\n    return sortObjMap(fieldsMap, (field) => ({\n      ...field,\n      type: replaceType(field.type),\n      args: field.args && sortArgs(field.args),\n    }));\n  }\n\n  function sortInputFields(fieldsMap) {\n    return sortObjMap(fieldsMap, (field) => ({\n      ...field,\n      type: replaceType(field.type),\n    }));\n  }\n\n  function sortTypes(array) {\n    return sortByName(array).map(replaceNamedType);\n  }\n\n  function sortNamedType(type) {\n    if (isScalarType(type) || isIntrospectionType(type)) {\n      return type;\n    }\n\n    if (isObjectType(type)) {\n      const config = type.toConfig();\n      return new GraphQLObjectType({\n        ...config,\n        interfaces: () => sortTypes(config.interfaces),\n        fields: () => sortFields(config.fields),\n      });\n    }\n\n    if (isInterfaceType(type)) {\n      const config = type.toConfig();\n      return new GraphQLInterfaceType({\n        ...config,\n        interfaces: () => sortTypes(config.interfaces),\n        fields: () => sortFields(config.fields),\n      });\n    }\n\n    if (isUnionType(type)) {\n      const config = type.toConfig();\n      return new GraphQLUnionType({\n        ...config,\n        types: () => sortTypes(config.types),\n      });\n    }\n\n    if (isEnumType(type)) {\n      const config = type.toConfig();\n      return new GraphQLEnumType({\n        ...config,\n        values: sortObjMap(config.values, (value) => value),\n      });\n    }\n\n    if (isInputObjectType(type)) {\n      const config = type.toConfig();\n      return new GraphQLInputObjectType({\n        ...config,\n        fields: () => sortInputFields(config.fields),\n      });\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible types have been considered.\n\n    false || invariant(false, 'Unexpected type: ' + inspect(type));\n  }\n}\n\nfunction sortObjMap(map, sortValueFn) {\n  const sortedMap = Object.create(null);\n\n  for (const key of Object.keys(map).sort(naturalCompare)) {\n    sortedMap[key] = sortValueFn(map[key]);\n  }\n\n  return sortedMap;\n}\n\nfunction sortByName(array) {\n  return sortBy(array, (obj) => obj.name);\n}\n\nfunction sortBy(array, mapToKey) {\n  return array.slice().sort((obj1, obj2) => {\n    const key1 = mapToKey(obj1);\n    const key2 = mapToKey(obj2);\n    return naturalCompare(key1, key2);\n  });\n}\n", "import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { isPrintableAsBlockString } from '../language/blockString.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport {\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isObjectType,\n  isScalarType,\n  isUnionType,\n} from '../type/definition.mjs';\nimport {\n  DEFAULT_DEPRECATION_REASON,\n  isSpecifiedDirective,\n} from '../type/directives.mjs';\nimport { isIntrospectionType } from '../type/introspection.mjs';\nimport { isSpecifiedScalarType } from '../type/scalars.mjs';\nimport { astFromValue } from './astFromValue.mjs';\nexport function printSchema(schema) {\n  return printFilteredSchema(\n    schema,\n    (n) => !isSpecifiedDirective(n),\n    isDefinedType,\n  );\n}\nexport function printIntrospectionSchema(schema) {\n  return printFilteredSchema(schema, isSpecifiedDirective, isIntrospectionType);\n}\n\nfunction isDefinedType(type) {\n  return !isSpecifiedScalarType(type) && !isIntrospectionType(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter) {\n  const directives = schema.getDirectives().filter(directiveFilter);\n  const types = Object.values(schema.getTypeMap()).filter(typeFilter);\n  return [\n    printSchemaDefinition(schema),\n    ...directives.map((directive) => printDirective(directive)),\n    ...types.map((type) => printType(type)),\n  ]\n    .filter(Boolean)\n    .join('\\n\\n');\n}\n\nfunction printSchemaDefinition(schema) {\n  if (schema.description == null && isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  const operationTypes = [];\n  const queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(`  query: ${queryType.name}`);\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(`  mutation: ${mutationType.name}`);\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(`  subscription: ${subscriptionType.name}`);\n  }\n\n  return printDescription(schema) + `schema {\\n${operationTypes.join('\\n')}\\n}`;\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n * ```graphql\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *     subscription: Subscription\n *   }\n * ```\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\nfunction isSchemaOfCommonNames(schema) {\n  const queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nexport function printType(type) {\n  if (isScalarType(type)) {\n    return printScalar(type);\n  }\n\n  if (isObjectType(type)) {\n    return printObject(type);\n  }\n\n  if (isInterfaceType(type)) {\n    return printInterface(type);\n  }\n\n  if (isUnionType(type)) {\n    return printUnion(type);\n  }\n\n  if (isEnumType(type)) {\n    return printEnum(type);\n  }\n\n  if (isInputObjectType(type)) {\n    return printInputObject(type);\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false || invariant(false, 'Unexpected type: ' + inspect(type));\n}\n\nfunction printScalar(type) {\n  return (\n    printDescription(type) + `scalar ${type.name}` + printSpecifiedByURL(type)\n  );\n}\n\nfunction printImplementedInterfaces(type) {\n  const interfaces = type.getInterfaces();\n  return interfaces.length\n    ? ' implements ' + interfaces.map((i) => i.name).join(' & ')\n    : '';\n}\n\nfunction printObject(type) {\n  return (\n    printDescription(type) +\n    `type ${type.name}` +\n    printImplementedInterfaces(type) +\n    printFields(type)\n  );\n}\n\nfunction printInterface(type) {\n  return (\n    printDescription(type) +\n    `interface ${type.name}` +\n    printImplementedInterfaces(type) +\n    printFields(type)\n  );\n}\n\nfunction printUnion(type) {\n  const types = type.getTypes();\n  const possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(type) + 'union ' + type.name + possibleTypes;\n}\n\nfunction printEnum(type) {\n  const values = type\n    .getValues()\n    .map(\n      (value, i) =>\n        printDescription(value, '  ', !i) +\n        '  ' +\n        value.name +\n        printDeprecated(value.deprecationReason),\n    );\n  return printDescription(type) + `enum ${type.name}` + printBlock(values);\n}\n\nfunction printInputObject(type) {\n  const fields = Object.values(type.getFields()).map(\n    (f, i) => printDescription(f, '  ', !i) + '  ' + printInputValue(f),\n  );\n  return printDescription(type) + `input ${type.name}` + printBlock(fields);\n}\n\nfunction printFields(type) {\n  const fields = Object.values(type.getFields()).map(\n    (f, i) =>\n      printDescription(f, '  ', !i) +\n      '  ' +\n      f.name +\n      printArgs(f.args, '  ') +\n      ': ' +\n      String(f.type) +\n      printDeprecated(f.deprecationReason),\n  );\n  return printBlock(fields);\n}\n\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\n\nfunction printArgs(args, indentation = '') {\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n  if (args.every((arg) => !arg.description)) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return (\n    '(\\n' +\n    args\n      .map(\n        (arg, i) =>\n          printDescription(arg, '  ' + indentation, !i) +\n          '  ' +\n          indentation +\n          printInputValue(arg),\n      )\n      .join('\\n') +\n    '\\n' +\n    indentation +\n    ')'\n  );\n}\n\nfunction printInputValue(arg) {\n  const defaultAST = astFromValue(arg.defaultValue, arg.type);\n  let argDecl = arg.name + ': ' + String(arg.type);\n\n  if (defaultAST) {\n    argDecl += ` = ${print(defaultAST)}`;\n  }\n\n  return argDecl + printDeprecated(arg.deprecationReason);\n}\n\nfunction printDirective(directive) {\n  return (\n    printDescription(directive) +\n    'directive @' +\n    directive.name +\n    printArgs(directive.args) +\n    (directive.isRepeatable ? ' repeatable' : '') +\n    ' on ' +\n    directive.locations.join(' | ')\n  );\n}\n\nfunction printDeprecated(reason) {\n  if (reason == null) {\n    return '';\n  }\n\n  if (reason !== DEFAULT_DEPRECATION_REASON) {\n    const astValue = print({\n      kind: Kind.STRING,\n      value: reason,\n    });\n    return ` @deprecated(reason: ${astValue})`;\n  }\n\n  return ' @deprecated';\n}\n\nfunction printSpecifiedByURL(scalar) {\n  if (scalar.specifiedByURL == null) {\n    return '';\n  }\n\n  const astValue = print({\n    kind: Kind.STRING,\n    value: scalar.specifiedByURL,\n  });\n  return ` @specifiedBy(url: ${astValue})`;\n}\n\nfunction printDescription(def, indentation = '', firstInBlock = true) {\n  const { description } = def;\n\n  if (description == null) {\n    return '';\n  }\n\n  const blockString = print({\n    kind: Kind.STRING,\n    value: description,\n    block: isPrintableAsBlockString(description),\n  });\n  const prefix =\n    indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}\n", "import { Kind } from '../language/kinds.mjs';\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\n\nexport function concatAST(documents) {\n  const definitions = [];\n\n  for (const doc of documents) {\n    definitions.push(...doc.definitions);\n  }\n\n  return {\n    kind: Kind.DOCUMENT,\n    definitions,\n  };\n}\n", "import { Kind } from '../language/kinds.mjs';\nimport { visit } from '../language/visitor.mjs';\n/**\n * separateOperations accepts a single AST document which may contain many\n * operations and fragments and returns a collection of AST documents each of\n * which contains a single operation as well the fragment definitions it\n * refers to.\n */\n\nexport function separateOperations(documentAST) {\n  const operations = [];\n  const depGraph = Object.create(null); // Populate metadata and build a dependency graph.\n\n  for (const definitionNode of documentAST.definitions) {\n    switch (definitionNode.kind) {\n      case Kind.OPERATION_DEFINITION:\n        operations.push(definitionNode);\n        break;\n\n      case Kind.FRAGMENT_DEFINITION:\n        depGraph[definitionNode.name.value] = collectDependencies(\n          definitionNode.selectionSet,\n        );\n        break;\n\n      default: // ignore non-executable definitions\n    }\n  } // For each operation, produce a new synthesized AST which includes only what\n  // is necessary for completing that operation.\n\n  const separatedDocumentASTs = Object.create(null);\n\n  for (const operation of operations) {\n    const dependencies = new Set();\n\n    for (const fragmentName of collectDependencies(operation.selectionSet)) {\n      collectTransitiveDependencies(dependencies, depGraph, fragmentName);\n    } // Provides the empty string for anonymous operations.\n\n    const operationName = operation.name ? operation.name.value : ''; // The list of definition nodes to be included for this operation, sorted\n    // to retain the same order as the original document.\n\n    separatedDocumentASTs[operationName] = {\n      kind: Kind.DOCUMENT,\n      definitions: documentAST.definitions.filter(\n        (node) =>\n          node === operation ||\n          (node.kind === Kind.FRAGMENT_DEFINITION &&\n            dependencies.has(node.name.value)),\n      ),\n    };\n  }\n\n  return separatedDocumentASTs;\n}\n\n// From a dependency graph, collects a list of transitive dependencies by\n// recursing through a dependency graph.\nfunction collectTransitiveDependencies(collected, depGraph, fromName) {\n  if (!collected.has(fromName)) {\n    collected.add(fromName);\n    const immediateDeps = depGraph[fromName];\n\n    if (immediateDeps !== undefined) {\n      for (const toName of immediateDeps) {\n        collectTransitiveDependencies(collected, depGraph, toName);\n      }\n    }\n  }\n}\n\nfunction collectDependencies(selectionSet) {\n  const dependencies = [];\n  visit(selectionSet, {\n    FragmentSpread(node) {\n      dependencies.push(node.name.value);\n    },\n  });\n  return dependencies;\n}\n", "import { printBlockString } from '../language/blockString.mjs';\nimport { isPunctuatorTokenKind, Lexer } from '../language/lexer.mjs';\nimport { isSource, Source } from '../language/source.mjs';\nimport { TokenKind } from '../language/tokenKind.mjs';\n/**\n * Strips characters that are not significant to the validity or execution\n * of a GraphQL document:\n *   - UnicodeBOM\n *   - WhiteSpace\n *   - LineTerminator\n *   - Comment\n *   - Comma\n *   - BlockString indentation\n *\n * Note: It is required to have a delimiter character between neighboring\n * non-punctuator tokens and this function always uses single space as delimiter.\n *\n * It is guaranteed that both input and output documents if parsed would result\n * in the exact same AST except for nodes location.\n *\n * Warning: It is guaranteed that this function will always produce stable results.\n * However, it's not guaranteed that it will stay the same between different\n * releases due to bugfixes or changes in the GraphQL specification.\n *\n * Query example:\n *\n * ```graphql\n * query SomeQuery($foo: String!, $bar: String) {\n *   someField(foo: $foo, bar: $bar) {\n *     a\n *     b {\n *       c\n *       d\n *     }\n *   }\n * }\n * ```\n *\n * Becomes:\n *\n * ```graphql\n * query SomeQuery($foo:String!$bar:String){someField(foo:$foo bar:$bar){a b{c d}}}\n * ```\n *\n * SDL example:\n *\n * ```graphql\n * \"\"\"\n * Type description\n * \"\"\"\n * type Foo {\n *   \"\"\"\n *   Field description\n *   \"\"\"\n *   bar: String\n * }\n * ```\n *\n * Becomes:\n *\n * ```graphql\n * \"\"\"Type description\"\"\" type Foo{\"\"\"Field description\"\"\" bar:String}\n * ```\n */\n\nexport function stripIgnoredCharacters(source) {\n  const sourceObj = isSource(source) ? source : new Source(source);\n  const body = sourceObj.body;\n  const lexer = new Lexer(sourceObj);\n  let strippedBody = '';\n  let wasLastAddedTokenNonPunctuator = false;\n\n  while (lexer.advance().kind !== TokenKind.EOF) {\n    const currentToken = lexer.token;\n    const tokenKind = currentToken.kind;\n    /**\n     * Every two non-punctuator tokens should have space between them.\n     * Also prevent case of non-punctuator token following by spread resulting\n     * in invalid token (e.g. `1...` is invalid Float token).\n     */\n\n    const isNonPunctuator = !isPunctuatorTokenKind(currentToken.kind);\n\n    if (wasLastAddedTokenNonPunctuator) {\n      if (isNonPunctuator || currentToken.kind === TokenKind.SPREAD) {\n        strippedBody += ' ';\n      }\n    }\n\n    const tokenBody = body.slice(currentToken.start, currentToken.end);\n\n    if (tokenKind === TokenKind.BLOCK_STRING) {\n      strippedBody += printBlockString(currentToken.value, {\n        minimize: true,\n      });\n    } else {\n      strippedBody += tokenBody;\n    }\n\n    wasLastAddedTokenNonPunctuator = isNonPunctuator;\n  }\n\n  return strippedBody;\n}\n", "import { devAssert } from '../jsutils/devAssert.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { assertName } from '../type/assertName.mjs';\n/* c8 ignore start */\n\n/**\n * Upholds the spec rules about naming.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\n\nexport function assertValidName(name) {\n  const error = isValidNameError(name);\n\n  if (error) {\n    throw error;\n  }\n\n  return name;\n}\n/**\n * Returns an Error if a name is invalid.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\n\nexport function isValidNameError(name) {\n  typeof name === 'string' || devAssert(false, 'Expected name to be a string.');\n\n  if (name.startsWith('__')) {\n    return new GraphQLError(\n      `Name \"${name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`,\n    );\n  }\n\n  try {\n    assertName(name);\n  } catch (error) {\n    return error;\n  }\n}\n/* c8 ignore stop */\n", "import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { print } from '../language/printer.mjs';\nimport {\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isListType,\n  isNamedType,\n  isNonNullType,\n  isObjectType,\n  isRequiredArgument,\n  isRequiredInputField,\n  isScalarType,\n  isUnionType,\n} from '../type/definition.mjs';\nimport { isSpecifiedScalarType } from '../type/scalars.mjs';\nimport { astFromValue } from './astFromValue.mjs';\nimport { sortValueNode } from './sortValueNode.mjs';\nvar BreakingChangeType;\n\n(function (BreakingChangeType) {\n  BreakingChangeType['TYPE_REMOVED'] = 'TYPE_REMOVED';\n  BreakingChangeType['TYPE_CHANGED_KIND'] = 'TYPE_CHANGED_KIND';\n  BreakingChangeType['TYPE_REMOVED_FROM_UNION'] = 'TYPE_REMOVED_FROM_UNION';\n  BreakingChangeType['VALUE_REMOVED_FROM_ENUM'] = 'VALUE_REMOVED_FROM_ENUM';\n  BreakingChangeType['REQUIRED_INPUT_FIELD_ADDED'] =\n    'REQUIRED_INPUT_FIELD_ADDED';\n  BreakingChangeType['IMPLEMENTED_INTERFACE_REMOVED'] =\n    'IMPLEMENTED_INTERFACE_REMOVED';\n  BreakingChangeType['FIELD_REMOVED'] = 'FIELD_REMOVED';\n  BreakingChangeType['FIELD_CHANGED_KIND'] = 'FIELD_CHANGED_KIND';\n  BreakingChangeType['REQUIRED_ARG_ADDED'] = 'REQUIRED_ARG_ADDED';\n  BreakingChangeType['ARG_REMOVED'] = 'ARG_REMOVED';\n  BreakingChangeType['ARG_CHANGED_KIND'] = 'ARG_CHANGED_KIND';\n  BreakingChangeType['DIRECTIVE_REMOVED'] = 'DIRECTIVE_REMOVED';\n  BreakingChangeType['DIRECTIVE_ARG_REMOVED'] = 'DIRECTIVE_ARG_REMOVED';\n  BreakingChangeType['REQUIRED_DIRECTIVE_ARG_ADDED'] =\n    'REQUIRED_DIRECTIVE_ARG_ADDED';\n  BreakingChangeType['DIRECTIVE_REPEATABLE_REMOVED'] =\n    'DIRECTIVE_REPEATABLE_REMOVED';\n  BreakingChangeType['DIRECTIVE_LOCATION_REMOVED'] =\n    'DIRECTIVE_LOCATION_REMOVED';\n})(BreakingChangeType || (BreakingChangeType = {}));\n\nexport { BreakingChangeType };\nvar DangerousChangeType;\n\n(function (DangerousChangeType) {\n  DangerousChangeType['VALUE_ADDED_TO_ENUM'] = 'VALUE_ADDED_TO_ENUM';\n  DangerousChangeType['TYPE_ADDED_TO_UNION'] = 'TYPE_ADDED_TO_UNION';\n  DangerousChangeType['OPTIONAL_INPUT_FIELD_ADDED'] =\n    'OPTIONAL_INPUT_FIELD_ADDED';\n  DangerousChangeType['OPTIONAL_ARG_ADDED'] = 'OPTIONAL_ARG_ADDED';\n  DangerousChangeType['IMPLEMENTED_INTERFACE_ADDED'] =\n    'IMPLEMENTED_INTERFACE_ADDED';\n  DangerousChangeType['ARG_DEFAULT_VALUE_CHANGE'] = 'ARG_DEFAULT_VALUE_CHANGE';\n})(DangerousChangeType || (DangerousChangeType = {}));\n\nexport { DangerousChangeType };\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */\nexport function findBreakingChanges(oldSchema, newSchema) {\n  // @ts-expect-error\n  return findSchemaChanges(oldSchema, newSchema).filter(\n    (change) => change.type in BreakingChangeType,\n  );\n}\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */\n\nexport function findDangerousChanges(oldSchema, newSchema) {\n  // @ts-expect-error\n  return findSchemaChanges(oldSchema, newSchema).filter(\n    (change) => change.type in DangerousChangeType,\n  );\n}\n\nfunction findSchemaChanges(oldSchema, newSchema) {\n  return [\n    ...findTypeChanges(oldSchema, newSchema),\n    ...findDirectiveChanges(oldSchema, newSchema),\n  ];\n}\n\nfunction findDirectiveChanges(oldSchema, newSchema) {\n  const schemaChanges = [];\n  const directivesDiff = diff(\n    oldSchema.getDirectives(),\n    newSchema.getDirectives(),\n  );\n\n  for (const oldDirective of directivesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.DIRECTIVE_REMOVED,\n      description: `${oldDirective.name} was removed.`,\n    });\n  }\n\n  for (const [oldDirective, newDirective] of directivesDiff.persisted) {\n    const argsDiff = diff(oldDirective.args, newDirective.args);\n\n    for (const newArg of argsDiff.added) {\n      if (isRequiredArgument(newArg)) {\n        schemaChanges.push({\n          type: BreakingChangeType.REQUIRED_DIRECTIVE_ARG_ADDED,\n          description: `A required arg ${newArg.name} on directive ${oldDirective.name} was added.`,\n        });\n      }\n    }\n\n    for (const oldArg of argsDiff.removed) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_ARG_REMOVED,\n        description: `${oldArg.name} was removed from ${oldDirective.name}.`,\n      });\n    }\n\n    if (oldDirective.isRepeatable && !newDirective.isRepeatable) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_REPEATABLE_REMOVED,\n        description: `Repeatable flag was removed from ${oldDirective.name}.`,\n      });\n    }\n\n    for (const location of oldDirective.locations) {\n      if (!newDirective.locations.includes(location)) {\n        schemaChanges.push({\n          type: BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,\n          description: `${location} was removed from ${oldDirective.name}.`,\n        });\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findTypeChanges(oldSchema, newSchema) {\n  const schemaChanges = [];\n  const typesDiff = diff(\n    Object.values(oldSchema.getTypeMap()),\n    Object.values(newSchema.getTypeMap()),\n  );\n\n  for (const oldType of typesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED,\n      description: isSpecifiedScalarType(oldType)\n        ? `Standard scalar ${oldType.name} was removed because it is not referenced anymore.`\n        : `${oldType.name} was removed.`,\n    });\n  }\n\n  for (const [oldType, newType] of typesDiff.persisted) {\n    if (isEnumType(oldType) && isEnumType(newType)) {\n      schemaChanges.push(...findEnumTypeChanges(oldType, newType));\n    } else if (isUnionType(oldType) && isUnionType(newType)) {\n      schemaChanges.push(...findUnionTypeChanges(oldType, newType));\n    } else if (isInputObjectType(oldType) && isInputObjectType(newType)) {\n      schemaChanges.push(...findInputObjectTypeChanges(oldType, newType));\n    } else if (isObjectType(oldType) && isObjectType(newType)) {\n      schemaChanges.push(\n        ...findFieldChanges(oldType, newType),\n        ...findImplementedInterfacesChanges(oldType, newType),\n      );\n    } else if (isInterfaceType(oldType) && isInterfaceType(newType)) {\n      schemaChanges.push(\n        ...findFieldChanges(oldType, newType),\n        ...findImplementedInterfacesChanges(oldType, newType),\n      );\n    } else if (oldType.constructor !== newType.constructor) {\n      schemaChanges.push({\n        type: BreakingChangeType.TYPE_CHANGED_KIND,\n        description:\n          `${oldType.name} changed from ` +\n          `${typeKindName(oldType)} to ${typeKindName(newType)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findInputObjectTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const fieldsDiff = diff(\n    Object.values(oldType.getFields()),\n    Object.values(newType.getFields()),\n  );\n\n  for (const newField of fieldsDiff.added) {\n    if (isRequiredInputField(newField)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_INPUT_FIELD_ADDED,\n        description: `A required field ${newField.name} on input type ${oldType.name} was added.`,\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_INPUT_FIELD_ADDED,\n        description: `An optional field ${newField.name} on input type ${oldType.name} was added.`,\n      });\n    }\n  }\n\n  for (const oldField of fieldsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: `${oldType.name}.${oldField.name} was removed.`,\n    });\n  }\n\n  for (const [oldField, newField] of fieldsDiff.persisted) {\n    const isSafe = isChangeSafeForInputObjectFieldOrFieldArg(\n      oldField.type,\n      newField.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} changed type from ` +\n          `${String(oldField.type)} to ${String(newField.type)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findUnionTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const possibleTypesDiff = diff(oldType.getTypes(), newType.getTypes());\n\n  for (const newPossibleType of possibleTypesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.TYPE_ADDED_TO_UNION,\n      description: `${newPossibleType.name} was added to union type ${oldType.name}.`,\n    });\n  }\n\n  for (const oldPossibleType of possibleTypesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,\n      description: `${oldPossibleType.name} was removed from union type ${oldType.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findEnumTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const valuesDiff = diff(oldType.getValues(), newType.getValues());\n\n  for (const newValue of valuesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.VALUE_ADDED_TO_ENUM,\n      description: `${newValue.name} was added to enum type ${oldType.name}.`,\n    });\n  }\n\n  for (const oldValue of valuesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,\n      description: `${oldValue.name} was removed from enum type ${oldType.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findImplementedInterfacesChanges(oldType, newType) {\n  const schemaChanges = [];\n  const interfacesDiff = diff(oldType.getInterfaces(), newType.getInterfaces());\n\n  for (const newInterface of interfacesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.IMPLEMENTED_INTERFACE_ADDED,\n      description: `${newInterface.name} added to interfaces implemented by ${oldType.name}.`,\n    });\n  }\n\n  for (const oldInterface of interfacesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.IMPLEMENTED_INTERFACE_REMOVED,\n      description: `${oldType.name} no longer implements interface ${oldInterface.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findFieldChanges(oldType, newType) {\n  const schemaChanges = [];\n  const fieldsDiff = diff(\n    Object.values(oldType.getFields()),\n    Object.values(newType.getFields()),\n  );\n\n  for (const oldField of fieldsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: `${oldType.name}.${oldField.name} was removed.`,\n    });\n  }\n\n  for (const [oldField, newField] of fieldsDiff.persisted) {\n    schemaChanges.push(...findArgChanges(oldType, oldField, newField));\n    const isSafe = isChangeSafeForObjectOrInterfaceField(\n      oldField.type,\n      newField.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} changed type from ` +\n          `${String(oldField.type)} to ${String(newField.type)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findArgChanges(oldType, oldField, newField) {\n  const schemaChanges = [];\n  const argsDiff = diff(oldField.args, newField.args);\n\n  for (const oldArg of argsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.ARG_REMOVED,\n      description: `${oldType.name}.${oldField.name} arg ${oldArg.name} was removed.`,\n    });\n  }\n\n  for (const [oldArg, newArg] of argsDiff.persisted) {\n    const isSafe = isChangeSafeForInputObjectFieldOrFieldArg(\n      oldArg.type,\n      newArg.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.ARG_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} arg ${oldArg.name} has changed type from ` +\n          `${String(oldArg.type)} to ${String(newArg.type)}.`,\n      });\n    } else if (oldArg.defaultValue !== undefined) {\n      if (newArg.defaultValue === undefined) {\n        schemaChanges.push({\n          type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n          description: `${oldType.name}.${oldField.name} arg ${oldArg.name} defaultValue was removed.`,\n        });\n      } else {\n        // Since we looking only for client's observable changes we should\n        // compare default values in the same representation as they are\n        // represented inside introspection.\n        const oldValueStr = stringifyValue(oldArg.defaultValue, oldArg.type);\n        const newValueStr = stringifyValue(newArg.defaultValue, newArg.type);\n\n        if (oldValueStr !== newValueStr) {\n          schemaChanges.push({\n            type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n            description: `${oldType.name}.${oldField.name} arg ${oldArg.name} has changed defaultValue from ${oldValueStr} to ${newValueStr}.`,\n          });\n        }\n      }\n    }\n  }\n\n  for (const newArg of argsDiff.added) {\n    if (isRequiredArgument(newArg)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_ARG_ADDED,\n        description: `A required arg ${newArg.name} on ${oldType.name}.${oldField.name} was added.`,\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_ARG_ADDED,\n        description: `An optional arg ${newArg.name} on ${oldType.name}.${oldField.name} was added.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction isChangeSafeForObjectOrInterfaceField(oldType, newType) {\n  if (isListType(oldType)) {\n    return (\n      // if they're both lists, make sure the underlying types are compatible\n      (isListType(newType) &&\n        isChangeSafeForObjectOrInterfaceField(\n          oldType.ofType,\n          newType.ofType,\n        )) || // moving from nullable to non-null of the same underlying type is safe\n      (isNonNullType(newType) &&\n        isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType))\n    );\n  }\n\n  if (isNonNullType(oldType)) {\n    // if they're both non-null, make sure the underlying types are compatible\n    return (\n      isNonNullType(newType) &&\n      isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType)\n    );\n  }\n\n  return (\n    // if they're both named types, see if their names are equivalent\n    (isNamedType(newType) && oldType.name === newType.name) || // moving from nullable to non-null of the same underlying type is safe\n    (isNonNullType(newType) &&\n      isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType))\n  );\n}\n\nfunction isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {\n  if (isListType(oldType)) {\n    // if they're both lists, make sure the underlying types are compatible\n    return (\n      isListType(newType) &&\n      isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType)\n    );\n  }\n\n  if (isNonNullType(oldType)) {\n    return (\n      // if they're both non-null, make sure the underlying types are\n      // compatible\n      (isNonNullType(newType) &&\n        isChangeSafeForInputObjectFieldOrFieldArg(\n          oldType.ofType,\n          newType.ofType,\n        )) || // moving from non-null to nullable of the same underlying type is safe\n      (!isNonNullType(newType) &&\n        isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType))\n    );\n  } // if they're both named types, see if their names are equivalent\n\n  return isNamedType(newType) && oldType.name === newType.name;\n}\n\nfunction typeKindName(type) {\n  if (isScalarType(type)) {\n    return 'a Scalar type';\n  }\n\n  if (isObjectType(type)) {\n    return 'an Object type';\n  }\n\n  if (isInterfaceType(type)) {\n    return 'an Interface type';\n  }\n\n  if (isUnionType(type)) {\n    return 'a Union type';\n  }\n\n  if (isEnumType(type)) {\n    return 'an Enum type';\n  }\n\n  if (isInputObjectType(type)) {\n    return 'an Input type';\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false || invariant(false, 'Unexpected type: ' + inspect(type));\n}\n\nfunction stringifyValue(value, type) {\n  const ast = astFromValue(value, type);\n  ast != null || invariant(false);\n  return print(sortValueNode(ast));\n}\n\nfunction diff(oldArray, newArray) {\n  const added = [];\n  const removed = [];\n  const persisted = [];\n  const oldMap = keyMap(oldArray, ({ name }) => name);\n  const newMap = keyMap(newArray, ({ name }) => name);\n\n  for (const oldItem of oldArray) {\n    const newItem = newMap[oldItem.name];\n\n    if (newItem === undefined) {\n      removed.push(oldItem);\n    } else {\n      persisted.push([oldItem, newItem]);\n    }\n  }\n\n  for (const newItem of newArray) {\n    if (oldMap[newItem.name] === undefined) {\n      added.push(newItem);\n    }\n  }\n\n  return {\n    added,\n    persisted,\n    removed,\n  };\n}\n", "// Produce the GraphQL query recommended for a full schema introspection.\nexport { getIntrospectionQuery } from './getIntrospectionQuery.mjs';\n// Gets the target Operation from a Document.\nexport { getOperationAST } from './getOperationAST.mjs'; // Gets the Type for the target Operation AST.\n\nexport { getOperationRootType } from './getOperationRootType.mjs'; // Convert a GraphQLSchema to an IntrospectionQuery.\n\nexport { introspectionFromSchema } from './introspectionFromSchema.mjs'; // Build a GraphQLSchema from an introspection result.\n\nexport { buildClientSchema } from './buildClientSchema.mjs'; // Build a GraphQLSchema from GraphQL Schema language.\n\nexport { buildASTSchema, buildSchema } from './buildASTSchema.mjs';\n// Extends an existing GraphQLSchema from a parsed GraphQL Schema language AST.\nexport { extendSchema } from './extendSchema.mjs'; // Sort a GraphQLSchema.\n\nexport { lexicographicSortSchema } from './lexicographicSortSchema.mjs'; // Print a GraphQLSchema to GraphQL Schema language.\n\nexport {\n  printSchema,\n  printType,\n  printIntrospectionSchema,\n} from './printSchema.mjs'; // Create a GraphQLType from a GraphQL language AST.\n\nexport { typeFromAST } from './typeFromAST.mjs'; // Create a JavaScript value from a GraphQL language AST with a type.\n\nexport { valueFromAST } from './valueFromAST.mjs'; // Create a JavaScript value from a GraphQL language AST without a type.\n\nexport { valueFromASTUntyped } from './valueFromASTUntyped.mjs'; // Create a GraphQL language AST from a JavaScript value.\n\nexport { astFromValue } from './astFromValue.mjs'; // A helper to use within recursive-descent visitors which need to be aware of the GraphQL type system.\n\nexport { TypeInfo, visitWithTypeInfo } from './TypeInfo.mjs'; // Coerces a JavaScript value to a GraphQL type, or produces errors.\n\nexport { coerceInputValue } from './coerceInputValue.mjs'; // Concatenates multiple AST together.\n\nexport { concatAST } from './concatAST.mjs'; // Separates an AST into an AST per Operation.\n\nexport { separateOperations } from './separateOperations.mjs'; // Strips characters that are not significant to the validity or execution of a GraphQL document.\n\nexport { stripIgnoredCharacters } from './stripIgnoredCharacters.mjs'; // Comparators for types\n\nexport {\n  isEqualType,\n  isTypeSubTypeOf,\n  doTypesOverlap,\n} from './typeComparators.mjs'; // Asserts that a string is a valid GraphQL name\n\nexport { assertValidName, isValidNameError } from './assertValidName.mjs'; // Compares two GraphQLSchemas and detects breaking changes.\n\nexport {\n  BreakingChangeType,\n  DangerousChangeType,\n  findBreakingChanges,\n  findDangerousChanges,\n} from './findBreakingChanges.mjs';\n", "/**\n * GraphQL.js provides a reference implementation for the GraphQL specification\n * but is also a useful utility for operating on GraphQL files and building\n * sophisticated tools.\n *\n * This primary module exports a general purpose function for fulfilling all\n * steps of the GraphQL specification in a single operation, but also includes\n * utilities for every part of the GraphQL specification:\n *\n *   - Parsing the GraphQL language.\n *   - Building a GraphQL type schema.\n *   - Validating a GraphQL request against a type schema.\n *   - Executing a GraphQL request against a type schema.\n *\n * This also includes utility functions for operating on GraphQL types and\n * GraphQL documents to facilitate building tools.\n *\n * You may also import from each sub-directory directly. For example, the\n * following two import statements are equivalent:\n *\n * ```ts\n * import { parse } from 'graphql';\n * import { parse } from 'graphql/language';\n * ```\n *\n * @packageDocumentation\n */\n// The GraphQL.js version info.\nexport { version, versionInfo } from './version.mjs'; // The primary entry point into fulfilling a GraphQL request.\n\nexport { graphql, graphqlSync } from './graphql.mjs'; // Create and operate on GraphQL type definitions and schema.\n\nexport {\n  resolveObjMapThunk,\n  resolveReadonlyArrayThunk, // Definitions\n  GraphQLSchema,\n  GraphQLDirective,\n  GraphQLScalarType,\n  GraphQLObjectType,\n  GraphQLInterfaceType,\n  GraphQLUnionType,\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLList,\n  GraphQLNonNull, // Standard GraphQL Scalars\n  specifiedScalarTypes,\n  GraphQLInt,\n  GraphQLFloat,\n  GraphQLString,\n  GraphQLBoolean,\n  GraphQLID, // Int boundaries constants\n  GRAPHQL_MAX_INT,\n  GRAPHQL_MIN_INT, // Built-in Directives defined by the Spec\n  specifiedDirectives,\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n  GraphQLDeprecatedDirective,\n  GraphQLSpecifiedByDirective, // \"Enum\" of Type Kinds\n  TypeKind, // Constant Deprecation Reason\n  DEFAULT_DEPRECATION_REASON, // GraphQL Types for introspection.\n  introspectionTypes,\n  __Schema,\n  __Directive,\n  __DirectiveLocation,\n  __Type,\n  __Field,\n  __InputValue,\n  __EnumValue,\n  __TypeKind, // Meta-field definitions.\n  SchemaMetaFieldDef,\n  TypeMetaFieldDef,\n  TypeNameMetaFieldDef, // Predicates\n  isSchema,\n  isDirective,\n  isType,\n  isScalarType,\n  isObjectType,\n  isInterfaceType,\n  isUnionType,\n  isEnumType,\n  isInputObjectType,\n  isListType,\n  isNonNullType,\n  isInputType,\n  isOutputType,\n  isLeafType,\n  isCompositeType,\n  isAbstractType,\n  isWrappingType,\n  isNullableType,\n  isNamedType,\n  isRequiredArgument,\n  isRequiredInputField,\n  isSpecifiedScalarType,\n  isIntrospectionType,\n  isSpecifiedDirective, // Assertions\n  assertSchema,\n  assertDirective,\n  assertType,\n  assertScalarType,\n  assertObjectType,\n  assertInterfaceType,\n  assertUnionType,\n  assertEnumType,\n  assertInputObjectType,\n  assertListType,\n  assertNonNullType,\n  assertInputType,\n  assertOutputType,\n  assertLeafType,\n  assertCompositeType,\n  assertAbstractType,\n  assertWrappingType,\n  assertNullableType,\n  assertNamedType, // Un-modifiers\n  getNullableType,\n  getNamedType, // Validate GraphQL schema.\n  validateSchema,\n  assertValidSchema, // Upholds the spec rules about naming.\n  assertName,\n  assertEnumValueName,\n} from './type/index.mjs';\n// Parse and operate on GraphQL language source files.\nexport {\n  Token,\n  Source,\n  Location,\n  OperationTypeNode,\n  getLocation, // Print source location.\n  printLocation,\n  printSourceLocation, // Lex\n  Lexer,\n  TokenKind, // Parse\n  parse,\n  parseValue,\n  parseConstValue,\n  parseType, // Print\n  print, // Visit\n  visit,\n  visitInParallel,\n  getVisitFn,\n  getEnterLeaveForKind,\n  BREAK,\n  Kind,\n  DirectiveLocation, // Predicates\n  isDefinitionNode,\n  isExecutableDefinitionNode,\n  isSelectionNode,\n  isValueNode,\n  isConstValueNode,\n  isTypeNode,\n  isTypeSystemDefinitionNode,\n  isTypeDefinitionNode,\n  isTypeSystemExtensionNode,\n  isTypeExtensionNode,\n} from './language/index.mjs';\n// Execute GraphQL queries.\nexport {\n  execute,\n  executeSync,\n  defaultFieldResolver,\n  defaultTypeResolver,\n  responsePathAsArray,\n  getArgumentValues,\n  getVariableValues,\n  getDirectiveValues,\n  subscribe,\n  createSourceEventStream,\n} from './execution/index.mjs';\n// Validate GraphQL documents.\nexport {\n  validate,\n  ValidationContext, // All validation rules in the GraphQL Specification.\n  specifiedRules, // Individual validation rules.\n  ExecutableDefinitionsRule,\n  FieldsOnCorrectTypeRule,\n  FragmentsOnCompositeTypesRule,\n  KnownArgumentNamesRule,\n  KnownDirectivesRule,\n  KnownFragmentNamesRule,\n  KnownTypeNamesRule,\n  LoneAnonymousOperationRule,\n  NoFragmentCyclesRule,\n  NoUndefinedVariablesRule,\n  NoUnusedFragmentsRule,\n  NoUnusedVariablesRule,\n  OverlappingFieldsCanBeMergedRule,\n  PossibleFragmentSpreadsRule,\n  ProvidedRequiredArgumentsRule,\n  ScalarLeafsRule,\n  SingleFieldSubscriptionsRule,\n  UniqueArgumentNamesRule,\n  UniqueDirectivesPerLocationRule,\n  UniqueFragmentNamesRule,\n  UniqueInputFieldNamesRule,\n  UniqueOperationNamesRule,\n  UniqueVariableNamesRule,\n  ValuesOfCorrectTypeRule,\n  VariablesAreInputTypesRule,\n  VariablesInAllowedPositionRule, // SDL-specific validation rules\n  LoneSchemaDefinitionRule,\n  UniqueOperationTypesRule,\n  UniqueTypeNamesRule,\n  UniqueEnumValueNamesRule,\n  UniqueFieldDefinitionNamesRule,\n  UniqueArgumentDefinitionNamesRule,\n  UniqueDirectiveNamesRule,\n  PossibleTypeExtensionsRule, // Custom validation rules\n  NoDeprecatedCustomRule,\n  NoSchemaIntrospectionCustomRule,\n} from './validation/index.mjs';\n// Create, format, and print GraphQL errors.\nexport {\n  GraphQLError,\n  syntaxError,\n  locatedError,\n  printError,\n  formatError,\n} from './error/index.mjs';\n// Utilities for operating on GraphQL type schema and parsed sources.\nexport {\n  // Produce the GraphQL query recommended for a full schema introspection.\n  // Accepts optional IntrospectionOptions.\n  getIntrospectionQuery, // Gets the target Operation from a Document.\n  getOperationAST, // Gets the Type for the target Operation AST.\n  getOperationRootType, // Convert a GraphQLSchema to an IntrospectionQuery.\n  introspectionFromSchema, // Build a GraphQLSchema from an introspection result.\n  buildClientSchema, // Build a GraphQLSchema from a parsed GraphQL Schema language AST.\n  buildASTSchema, // Build a GraphQLSchema from a GraphQL schema language document.\n  buildSchema, // Extends an existing GraphQLSchema from a parsed GraphQL Schema language AST.\n  extendSchema, // Sort a GraphQLSchema.\n  lexicographicSortSchema, // Print a GraphQLSchema to GraphQL Schema language.\n  printSchema, // Print a GraphQLType to GraphQL Schema language.\n  printType, // Prints the built-in introspection schema in the Schema Language format.\n  printIntrospectionSchema, // Create a GraphQLType from a GraphQL language AST.\n  typeFromAST, // Create a JavaScript value from a GraphQL language AST with a Type.\n  valueFromAST, // Create a JavaScript value from a GraphQL language AST without a Type.\n  valueFromASTUntyped, // Create a GraphQL language AST from a JavaScript value.\n  astFromValue, // A helper to use within recursive-descent visitors which need to be aware of the GraphQL type system.\n  TypeInfo,\n  visitWithTypeInfo, // Coerces a JavaScript value to a GraphQL type, or produces errors.\n  coerceInputValue, // Concatenates multiple AST together.\n  concatAST, // Separates an AST into an AST per Operation.\n  separateOperations, // Strips characters that are not significant to the validity or execution of a GraphQL document.\n  stripIgnoredCharacters, // Comparators for types\n  isEqualType,\n  isTypeSubTypeOf,\n  doTypesOverlap, // Asserts a string is a valid GraphQL name.\n  assertValidName, // Determine if a string is a valid GraphQL name.\n  isValidNameError, // Compares two GraphQLSchemas and detects breaking changes.\n  BreakingChangeType,\n  DangerousChangeType,\n  findBreakingChanges,\n  findDangerousChanges,\n} from './utilities/index.mjs';\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertSome = exports.isSome = exports.compareNodes = exports.nodeToString = exports.compareStrings = exports.isValidPath = exports.isDocumentString = exports.asArray = void 0;\nconst graphql_1 = require(\"graphql\");\nconst asArray = (fns) => (Array.isArray(fns) ? fns : fns ? [fns] : []);\nexports.asArray = asArray;\nconst invalidDocRegex = /\\.[a-z0-9]+$/i;\nfunction isDocumentString(str) {\n    if (typeof str !== 'string') {\n        return false;\n    }\n    // XXX: is-valid-path or is-glob treat SDL as a valid path\n    // (`scalar Date` for example)\n    // this why checking the extension is fast enough\n    // and prevent from parsing the string in order to find out\n    // if the string is a SDL\n    if (invalidDocRegex.test(str)) {\n        return false;\n    }\n    try {\n        (0, graphql_1.parse)(str);\n        return true;\n    }\n    catch (e) { }\n    return false;\n}\nexports.isDocumentString = isDocumentString;\nconst invalidPathRegex = /[‘“!%^<=>`]/;\nfunction isValidPath(str) {\n    return typeof str === 'string' && !invalidPathRegex.test(str);\n}\nexports.isValidPath = isValidPath;\nfunction compareStrings(a, b) {\n    if (String(a) < String(b)) {\n        return -1;\n    }\n    if (String(a) > String(b)) {\n        return 1;\n    }\n    return 0;\n}\nexports.compareStrings = compareStrings;\nfunction nodeToString(a) {\n    var _a, _b;\n    let name;\n    if ('alias' in a) {\n        name = (_a = a.alias) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    if (name == null && 'name' in a) {\n        name = (_b = a.name) === null || _b === void 0 ? void 0 : _b.value;\n    }\n    if (name == null) {\n        name = a.kind;\n    }\n    return name;\n}\nexports.nodeToString = nodeToString;\nfunction compareNodes(a, b, customFn) {\n    const aStr = nodeToString(a);\n    const bStr = nodeToString(b);\n    if (typeof customFn === 'function') {\n        return customFn(aStr, bStr);\n    }\n    return compareStrings(aStr, bStr);\n}\nexports.compareNodes = compareNodes;\nfunction isSome(input) {\n    return input != null;\n}\nexports.isSome = isSome;\nfunction assertSome(input, message = 'Value should be something') {\n    if (input == null) {\n        throw new Error(message);\n    }\n}\nexports.assertSome = assertSome;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasOwnProperty = exports.promiseReduce = exports.isPromise = exports.isObjectLike = exports.isIterableObject = void 0;\nfunction isIterableObject(value) {\n    return value != null && typeof value === 'object' && Symbol.iterator in value;\n}\nexports.isIterableObject = isIterableObject;\nfunction isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexports.isObjectLike = isObjectLike;\nfunction isPromise(value) {\n    return isObjectLike(value) && typeof value['then'] === 'function';\n}\nexports.isPromise = isPromise;\nfunction promiseReduce(values, callbackFn, initialValue) {\n    let accumulator = initialValue;\n    for (const value of values) {\n        accumulator = isPromise(accumulator)\n            ? accumulator.then(resolved => callbackFn(resolved, value))\n            : callbackFn(accumulator, value);\n    }\n    return accumulator;\n}\nexports.promiseReduce = promiseReduce;\nfunction hasOwnProperty(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nexports.hasOwnProperty = hasOwnProperty;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.relocatedError = exports.createGraphQLError = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction createGraphQLError(message, options) {\n    if (graphql_1.versionInfo.major >= 17) {\n        return new graphql_1.GraphQLError(message, options);\n    }\n    return new graphql_1.GraphQLError(message, options === null || options === void 0 ? void 0 : options.nodes, options === null || options === void 0 ? void 0 : options.source, options === null || options === void 0 ? void 0 : options.positions, options === null || options === void 0 ? void 0 : options.path, options === null || options === void 0 ? void 0 : options.originalError, options === null || options === void 0 ? void 0 : options.extensions);\n}\nexports.createGraphQLError = createGraphQLError;\nfunction relocatedError(originalError, path) {\n    return createGraphQLError(originalError.message, {\n        nodes: originalError.nodes,\n        source: originalError.source,\n        positions: originalError.positions,\n        path: path == null ? originalError.path : path,\n        originalError,\n        extensions: originalError.extensions,\n    });\n}\nexports.relocatedError = relocatedError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAggregateError = exports.AggregateError = void 0;\nlet AggregateErrorImpl;\nexports.AggregateError = AggregateErrorImpl;\nif (typeof AggregateError === 'undefined') {\n    class AggregateErrorClass extends Error {\n        constructor(errors, message = '') {\n            super(message);\n            this.errors = errors;\n            this.name = 'AggregateError';\n            Error.captureStackTrace(this, AggregateErrorClass);\n        }\n    }\n    exports.AggregateError = AggregateErrorImpl = function (errors, message) {\n        return new AggregateErrorClass(errors, message);\n    };\n}\nelse {\n    exports.AggregateError = AggregateErrorImpl = AggregateError;\n}\nfunction isAggregateError(error) {\n    return 'errors' in error && Array.isArray(error['errors']);\n}\nexports.isAggregateError = isAggregateError;\n", "\"use strict\";\n// Taken from graphql-js\n// https://github.com/graphql/graphql-js/blob/main/src/jsutils/inspect.ts\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.inspect = void 0;\nconst graphql_1 = require(\"graphql\");\nconst AggregateError_js_1 = require(\"./AggregateError.js\");\nconst MAX_RECURSIVE_DEPTH = 3;\n/**\n * Used to print values in error messages.\n */\nfunction inspect(value) {\n    return formatValue(value, []);\n}\nexports.inspect = inspect;\nfunction formatValue(value, seenValues) {\n    switch (typeof value) {\n        case 'string':\n            return JSON.stringify(value);\n        case 'function':\n            return value.name ? `[function ${value.name}]` : '[function]';\n        case 'object':\n            return formatObjectValue(value, seenValues);\n        default:\n            return String(value);\n    }\n}\nfunction formatError(value) {\n    if (value instanceof graphql_1.GraphQLError) {\n        return value.toString();\n    }\n    return `${value.name}: ${value.message};\\n ${value.stack}`;\n}\nfunction formatObjectValue(value, previouslySeenValues) {\n    if (value === null) {\n        return 'null';\n    }\n    if (value instanceof Error) {\n        if ((0, AggregateError_js_1.isAggregateError)(value)) {\n            return formatError(value) + '\\n' + formatArray(value.errors, previouslySeenValues);\n        }\n        return formatError(value);\n    }\n    if (previouslySeenValues.includes(value)) {\n        return '[Circular]';\n    }\n    const seenValues = [...previouslySeenValues, value];\n    if (isJSONable(value)) {\n        const jsonValue = value.toJSON();\n        // check for infinite recursion\n        if (jsonValue !== value) {\n            return typeof jsonValue === 'string' ? jsonValue : formatValue(jsonValue, seenValues);\n        }\n    }\n    else if (Array.isArray(value)) {\n        return formatArray(value, seenValues);\n    }\n    return formatObject(value, seenValues);\n}\nfunction isJSONable(value) {\n    return typeof value.toJSON === 'function';\n}\nfunction formatObject(object, seenValues) {\n    const entries = Object.entries(object);\n    if (entries.length === 0) {\n        return '{}';\n    }\n    if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n        return '[' + getObjectTag(object) + ']';\n    }\n    const properties = entries.map(([key, value]) => key + ': ' + formatValue(value, seenValues));\n    return '{ ' + properties.join(', ') + ' }';\n}\nfunction formatArray(array, seenValues) {\n    if (array.length === 0) {\n        return '[]';\n    }\n    if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n        return '[Array]';\n    }\n    const len = array.length;\n    const items = [];\n    for (let i = 0; i < len; ++i) {\n        items.push(formatValue(array[i], seenValues));\n    }\n    return '[' + items.join(', ') + ']';\n}\nfunction getObjectTag(object) {\n    const tag = Object.prototype.toString\n        .call(object)\n        .replace(/^\\[object /, '')\n        .replace(/]$/, '');\n    if (tag === 'Object' && typeof object.constructor === 'function') {\n        const name = object.constructor.name;\n        if (typeof name === 'string' && name !== '') {\n            return name;\n        }\n    }\n    return tag;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getArgumentValues = void 0;\nconst jsutils_js_1 = require(\"./jsutils.js\");\nconst graphql_1 = require(\"graphql\");\nconst errors_js_1 = require(\"./errors.js\");\nconst inspect_js_1 = require(\"./inspect.js\");\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getArgumentValues(def, node, variableValues = {}) {\n    var _a;\n    const coercedValues = {};\n    const argumentNodes = (_a = node.arguments) !== null && _a !== void 0 ? _a : [];\n    const argNodeMap = argumentNodes.reduce((prev, arg) => ({\n        ...prev,\n        [arg.name.value]: arg,\n    }), {});\n    for (const { name, type: argType, defaultValue } of def.args) {\n        const argumentNode = argNodeMap[name];\n        if (!argumentNode) {\n            if (defaultValue !== undefined) {\n                coercedValues[name] = defaultValue;\n            }\n            else if ((0, graphql_1.isNonNullType)(argType)) {\n                throw (0, errors_js_1.createGraphQLError)(`Argument \"${name}\" of required type \"${(0, inspect_js_1.inspect)(argType)}\" ` + 'was not provided.', {\n                    nodes: [node],\n                });\n            }\n            continue;\n        }\n        const valueNode = argumentNode.value;\n        let isNull = valueNode.kind === graphql_1.Kind.NULL;\n        if (valueNode.kind === graphql_1.Kind.VARIABLE) {\n            const variableName = valueNode.name.value;\n            if (variableValues == null || !(0, jsutils_js_1.hasOwnProperty)(variableValues, variableName)) {\n                if (defaultValue !== undefined) {\n                    coercedValues[name] = defaultValue;\n                }\n                else if ((0, graphql_1.isNonNullType)(argType)) {\n                    throw (0, errors_js_1.createGraphQLError)(`Argument \"${name}\" of required type \"${(0, inspect_js_1.inspect)(argType)}\" ` +\n                        `was provided the variable \"$${variableName}\" which was not provided a runtime value.`, {\n                        nodes: [valueNode],\n                    });\n                }\n                continue;\n            }\n            isNull = variableValues[variableName] == null;\n        }\n        if (isNull && (0, graphql_1.isNonNullType)(argType)) {\n            throw (0, errors_js_1.createGraphQLError)(`Argument \"${name}\" of non-null type \"${(0, inspect_js_1.inspect)(argType)}\" ` + 'must not be null.', {\n                nodes: [valueNode],\n            });\n        }\n        const coercedValue = (0, graphql_1.valueFromAST)(valueNode, argType, variableValues);\n        if (coercedValue === undefined) {\n            // Note: ValuesOfCorrectTypeRule validation should catch this before\n            // execution. This is a runtime check to ensure execution does not\n            // continue with an invalid argument value.\n            throw (0, errors_js_1.createGraphQLError)(`Argument \"${name}\" has invalid value ${(0, graphql_1.print)(valueNode)}.`, {\n                nodes: [valueNode],\n            });\n        }\n        coercedValues[name] = coercedValue;\n    }\n    return coercedValues;\n}\nexports.getArgumentValues = getArgumentValues;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDirective = exports.getDirectives = exports.getDirectiveInExtensions = exports.getDirectivesInExtensions = void 0;\nconst getArgumentValues_js_1 = require(\"./getArgumentValues.js\");\nfunction getDirectivesInExtensions(node, pathToDirectivesInExtensions = ['directives']) {\n    return pathToDirectivesInExtensions.reduce((acc, pathSegment) => (acc == null ? acc : acc[pathSegment]), node === null || node === void 0 ? void 0 : node.extensions);\n}\nexports.getDirectivesInExtensions = getDirectivesInExtensions;\nfunction _getDirectiveInExtensions(directivesInExtensions, directiveName) {\n    const directiveInExtensions = directivesInExtensions.filter(directiveAnnotation => directiveAnnotation.name === directiveName);\n    if (!directiveInExtensions.length) {\n        return undefined;\n    }\n    return directiveInExtensions.map(directive => { var _a; return (_a = directive.args) !== null && _a !== void 0 ? _a : {}; });\n}\nfunction getDirectiveInExtensions(node, directiveName, pathToDirectivesInExtensions = ['directives']) {\n    const directivesInExtensions = pathToDirectivesInExtensions.reduce((acc, pathSegment) => (acc == null ? acc : acc[pathSegment]), node === null || node === void 0 ? void 0 : node.extensions);\n    if (directivesInExtensions === undefined) {\n        return undefined;\n    }\n    if (Array.isArray(directivesInExtensions)) {\n        return _getDirectiveInExtensions(directivesInExtensions, directiveName);\n    }\n    // Support condensed format by converting to longer format\n    // The condensed format does not preserve ordering of directives when  repeatable directives are used.\n    // See https://github.com/ardatan/graphql-tools/issues/2534\n    const reformattedDirectivesInExtensions = [];\n    for (const [name, argsOrArrayOfArgs] of Object.entries(directivesInExtensions)) {\n        if (Array.isArray(argsOrArrayOfArgs)) {\n            for (const args of argsOrArrayOfArgs) {\n                reformattedDirectivesInExtensions.push({ name, args });\n            }\n        }\n        else {\n            reformattedDirectivesInExtensions.push({ name, args: argsOrArrayOfArgs });\n        }\n    }\n    return _getDirectiveInExtensions(reformattedDirectivesInExtensions, directiveName);\n}\nexports.getDirectiveInExtensions = getDirectiveInExtensions;\nfunction getDirectives(schema, node, pathToDirectivesInExtensions = ['directives']) {\n    const directivesInExtensions = getDirectivesInExtensions(node, pathToDirectivesInExtensions);\n    if (directivesInExtensions != null && directivesInExtensions.length > 0) {\n        return directivesInExtensions;\n    }\n    const schemaDirectives = schema && schema.getDirectives ? schema.getDirectives() : [];\n    const schemaDirectiveMap = schemaDirectives.reduce((schemaDirectiveMap, schemaDirective) => {\n        schemaDirectiveMap[schemaDirective.name] = schemaDirective;\n        return schemaDirectiveMap;\n    }, {});\n    let astNodes = [];\n    if (node.astNode) {\n        astNodes.push(node.astNode);\n    }\n    if ('extensionASTNodes' in node && node.extensionASTNodes) {\n        astNodes = [...astNodes, ...node.extensionASTNodes];\n    }\n    const result = [];\n    for (const astNode of astNodes) {\n        if (astNode.directives) {\n            for (const directiveNode of astNode.directives) {\n                const schemaDirective = schemaDirectiveMap[directiveNode.name.value];\n                if (schemaDirective) {\n                    result.push({ name: directiveNode.name.value, args: (0, getArgumentValues_js_1.getArgumentValues)(schemaDirective, directiveNode) });\n                }\n            }\n        }\n    }\n    return result;\n}\nexports.getDirectives = getDirectives;\nfunction getDirective(schema, node, directiveName, pathToDirectivesInExtensions = ['directives']) {\n    const directiveInExtensions = getDirectiveInExtensions(node, directiveName, pathToDirectivesInExtensions);\n    if (directiveInExtensions != null) {\n        return directiveInExtensions;\n    }\n    const schemaDirective = schema && schema.getDirective ? schema.getDirective(directiveName) : undefined;\n    if (schemaDirective == null) {\n        return undefined;\n    }\n    let astNodes = [];\n    if (node.astNode) {\n        astNodes.push(node.astNode);\n    }\n    if ('extensionASTNodes' in node && node.extensionASTNodes) {\n        astNodes = [...astNodes, ...node.extensionASTNodes];\n    }\n    const result = [];\n    for (const astNode of astNodes) {\n        if (astNode.directives) {\n            for (const directiveNode of astNode.directives) {\n                if (directiveNode.name.value === directiveName) {\n                    result.push((0, getArgumentValues_js_1.getArgumentValues)(schemaDirective, directiveNode));\n                }\n            }\n        }\n    }\n    if (!result.length) {\n        return undefined;\n    }\n    return result;\n}\nexports.getDirective = getDirective;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFieldsWithDirectives = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction getFieldsWithDirectives(documentNode, options = {}) {\n    const result = {};\n    let selected = ['ObjectTypeDefinition', 'ObjectTypeExtension'];\n    if (options.includeInputTypes) {\n        selected = [...selected, 'InputObjectTypeDefinition', 'InputObjectTypeExtension'];\n    }\n    const allTypes = documentNode.definitions.filter(obj => selected.includes(obj.kind));\n    for (const type of allTypes) {\n        const typeName = type.name.value;\n        if (type.fields == null) {\n            continue;\n        }\n        for (const field of type.fields) {\n            if (field.directives && field.directives.length > 0) {\n                const fieldName = field.name.value;\n                const key = `${typeName}.${fieldName}`;\n                const directives = field.directives.map(d => ({\n                    name: d.name.value,\n                    args: (d.arguments || []).reduce((prev, arg) => ({ ...prev, [arg.name.value]: (0, graphql_1.valueFromASTUntyped)(arg.value) }), {}),\n                }));\n                result[key] = directives;\n            }\n        }\n    }\n    return result;\n}\nexports.getFieldsWithDirectives = getFieldsWithDirectives;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getArgumentsWithDirectives = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction isTypeWithFields(t) {\n    return t.kind === graphql_1.Kind.OBJECT_TYPE_DEFINITION || t.kind === graphql_1.Kind.OBJECT_TYPE_EXTENSION;\n}\nfunction getArgumentsWithDirectives(documentNode) {\n    var _a;\n    const result = {};\n    const allTypes = documentNode.definitions.filter(isTypeWithFields);\n    for (const type of allTypes) {\n        if (type.fields == null) {\n            continue;\n        }\n        for (const field of type.fields) {\n            const argsWithDirectives = (_a = field.arguments) === null || _a === void 0 ? void 0 : _a.filter(arg => { var _a; return (_a = arg.directives) === null || _a === void 0 ? void 0 : _a.length; });\n            if (!(argsWithDirectives === null || argsWithDirectives === void 0 ? void 0 : argsWithDirectives.length)) {\n                continue;\n            }\n            const typeFieldResult = (result[`${type.name.value}.${field.name.value}`] = {});\n            for (const arg of argsWithDirectives) {\n                const directives = arg.directives.map(d => ({\n                    name: d.name.value,\n                    args: (d.arguments || []).reduce((prev, dArg) => ({ ...prev, [dArg.name.value]: (0, graphql_1.valueFromASTUntyped)(dArg.value) }), {}),\n                }));\n                typeFieldResult[arg.name.value] = directives;\n            }\n        }\n    }\n    return result;\n}\nexports.getArgumentsWithDirectives = getArgumentsWithDirectives;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getImplementingTypes = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction getImplementingTypes(interfaceName, schema) {\n    const allTypesMap = schema.getTypeMap();\n    const result = [];\n    for (const graphqlTypeName in allTypesMap) {\n        const graphqlType = allTypesMap[graphqlTypeName];\n        if ((0, graphql_1.isObjectType)(graphqlType)) {\n            const allInterfaces = graphqlType.getInterfaces();\n            if (allInterfaces.find(int => int.name === interfaceName)) {\n                result.push(graphqlType.name);\n            }\n        }\n    }\n    return result;\n}\nexports.getImplementingTypes = getImplementingTypes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.astFromType = void 0;\nconst graphql_1 = require(\"graphql\");\nconst inspect_js_1 = require(\"./inspect.js\");\nfunction astFromType(type) {\n    if ((0, graphql_1.isNonNullType)(type)) {\n        const innerType = astFromType(type.ofType);\n        if (innerType.kind === graphql_1.Kind.NON_NULL_TYPE) {\n            throw new Error(`Invalid type node ${(0, inspect_js_1.inspect)(type)}. Inner type of non-null type cannot be a non-null type.`);\n        }\n        return {\n            kind: graphql_1.Kind.NON_NULL_TYPE,\n            type: innerType,\n        };\n    }\n    else if ((0, graphql_1.isListType)(type)) {\n        return {\n            kind: graphql_1.Kind.LIST_TYPE,\n            type: astFromType(type.ofType),\n        };\n    }\n    return {\n        kind: graphql_1.Kind.NAMED_TYPE,\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: type.name,\n        },\n    };\n}\nexports.astFromType = astFromType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.astFromValueUntyped = void 0;\nconst graphql_1 = require(\"graphql\");\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using the following mapping.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String               |\n * | Number        | Int / Float          |\n * | null          | NullValue            |\n *\n */\nfunction astFromValueUntyped(value) {\n    // only explicit null, not undefined, NaN\n    if (value === null) {\n        return { kind: graphql_1.Kind.NULL };\n    }\n    // undefined\n    if (value === undefined) {\n        return null;\n    }\n    // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n    // the value is not an array, convert the value using the list's item type.\n    if (Array.isArray(value)) {\n        const valuesNodes = [];\n        for (const item of value) {\n            const itemNode = astFromValueUntyped(item);\n            if (itemNode != null) {\n                valuesNodes.push(itemNode);\n            }\n        }\n        return { kind: graphql_1.Kind.LIST, values: valuesNodes };\n    }\n    if (typeof value === 'object') {\n        const fieldNodes = [];\n        for (const fieldName in value) {\n            const fieldValue = value[fieldName];\n            const ast = astFromValueUntyped(fieldValue);\n            if (ast) {\n                fieldNodes.push({\n                    kind: graphql_1.Kind.OBJECT_FIELD,\n                    name: { kind: graphql_1.Kind.NAME, value: fieldName },\n                    value: ast,\n                });\n            }\n        }\n        return { kind: graphql_1.Kind.OBJECT, fields: fieldNodes };\n    }\n    // Others serialize based on their corresponding JavaScript scalar types.\n    if (typeof value === 'boolean') {\n        return { kind: graphql_1.Kind.BOOLEAN, value };\n    }\n    // JavaScript numbers can be Int or Float values.\n    if (typeof value === 'number' && isFinite(value)) {\n        const stringNum = String(value);\n        return integerStringRegExp.test(stringNum)\n            ? { kind: graphql_1.Kind.INT, value: stringNum }\n            : { kind: graphql_1.Kind.FLOAT, value: stringNum };\n    }\n    if (typeof value === 'string') {\n        return { kind: graphql_1.Kind.STRING, value };\n    }\n    throw new TypeError(`Cannot convert value to AST: ${value}.`);\n}\nexports.astFromValueUntyped = astFromValueUntyped;\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.memoize2of5 = exports.memoize2of4 = exports.memoize5 = exports.memoize4 = exports.memoize3 = exports.memoize2 = exports.memoize1 = void 0;\nfunction memoize1(fn) {\n    const memoize1cache = new WeakMap();\n    return function memoized(a1) {\n        const cachedValue = memoize1cache.get(a1);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1);\n            memoize1cache.set(a1, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexports.memoize1 = memoize1;\nfunction memoize2(fn) {\n    const memoize2cache = new WeakMap();\n    return function memoized(a1, a2) {\n        let cache2 = memoize2cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2cache.set(a1, cache2);\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexports.memoize2 = memoize2;\nfunction memoize3(fn) {\n    const memoize3Cache = new WeakMap();\n    return function memoized(a1, a2, a3) {\n        let cache2 = memoize3Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize3Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        const cachedValue = cache3.get(a3);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexports.memoize3 = memoize3;\nfunction memoize4(fn) {\n    const memoize4Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize4Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize4Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cache4 = cache3.get(a3);\n        if (!cache4) {\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cachedValue = cache4.get(a4);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexports.memoize4 = memoize4;\nfunction memoize5(fn) {\n    const memoize5Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize5Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize5Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache4 = cache3.get(a3);\n        if (!cache4) {\n            cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache5 = cache4.get(a4);\n        if (!cache5) {\n            cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        const cachedValue = cache5.get(a5);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexports.memoize5 = memoize5;\nfunction memoize2of4(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexports.memoize2of4 = memoize2of4;\nfunction memoize2of5(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nexports.memoize2of5 = memoize2of5;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRootTypeMap = exports.getRootTypes = exports.getRootTypeNames = exports.getDefinedRootType = void 0;\nconst errors_js_1 = require(\"./errors.js\");\nconst memoize_js_1 = require(\"./memoize.js\");\nfunction getDefinedRootType(schema, operation, nodes) {\n    const rootTypeMap = (0, exports.getRootTypeMap)(schema);\n    const rootType = rootTypeMap.get(operation);\n    if (rootType == null) {\n        throw (0, errors_js_1.createGraphQLError)(`Schema is not configured to execute ${operation} operation.`, {\n            nodes,\n        });\n    }\n    return rootType;\n}\nexports.getDefinedRootType = getDefinedRootType;\nexports.getRootTypeNames = (0, memoize_js_1.memoize1)(function getRootTypeNames(schema) {\n    const rootTypes = (0, exports.getRootTypes)(schema);\n    return new Set([...rootTypes].map(type => type.name));\n});\nexports.getRootTypes = (0, memoize_js_1.memoize1)(function getRootTypes(schema) {\n    const rootTypeMap = (0, exports.getRootTypeMap)(schema);\n    return new Set(rootTypeMap.values());\n});\nexports.getRootTypeMap = (0, memoize_js_1.memoize1)(function getRootTypeMap(schema) {\n    const rootTypeMap = new Map();\n    const queryType = schema.getQueryType();\n    if (queryType) {\n        rootTypeMap.set('query', queryType);\n    }\n    const mutationType = schema.getMutationType();\n    if (mutationType) {\n        rootTypeMap.set('mutation', mutationType);\n    }\n    const subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        rootTypeMap.set('subscription', subscriptionType);\n    }\n    return rootTypeMap;\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeDirectiveNodes = exports.makeDirectiveNode = exports.makeDeprecatedDirective = exports.astFromEnumValue = exports.astFromInputField = exports.astFromField = exports.astFromScalarType = exports.astFromEnumType = exports.astFromInputObjectType = exports.astFromUnionType = exports.astFromInterfaceType = exports.astFromObjectType = exports.astFromArg = exports.getDeprecatableDirectiveNodes = exports.getDirectiveNodes = exports.astFromDirective = exports.astFromSchema = exports.printSchemaWithDirectives = exports.getDocumentNodeFromSchema = void 0;\nconst graphql_1 = require(\"graphql\");\nconst astFromType_js_1 = require(\"./astFromType.js\");\nconst get_directives_js_1 = require(\"./get-directives.js\");\nconst astFromValueUntyped_js_1 = require(\"./astFromValueUntyped.js\");\nconst helpers_js_1 = require(\"./helpers.js\");\nconst rootTypes_js_1 = require(\"./rootTypes.js\");\nfunction getDocumentNodeFromSchema(schema, options = {}) {\n    const pathToDirectivesInExtensions = options.pathToDirectivesInExtensions;\n    const typesMap = schema.getTypeMap();\n    const schemaNode = astFromSchema(schema, pathToDirectivesInExtensions);\n    const definitions = schemaNode != null ? [schemaNode] : [];\n    const directives = schema.getDirectives();\n    for (const directive of directives) {\n        if ((0, graphql_1.isSpecifiedDirective)(directive)) {\n            continue;\n        }\n        definitions.push(astFromDirective(directive, schema, pathToDirectivesInExtensions));\n    }\n    for (const typeName in typesMap) {\n        const type = typesMap[typeName];\n        const isPredefinedScalar = (0, graphql_1.isSpecifiedScalarType)(type);\n        const isIntrospection = (0, graphql_1.isIntrospectionType)(type);\n        if (isPredefinedScalar || isIntrospection) {\n            continue;\n        }\n        if ((0, graphql_1.isObjectType)(type)) {\n            definitions.push(astFromObjectType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0, graphql_1.isInterfaceType)(type)) {\n            definitions.push(astFromInterfaceType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0, graphql_1.isUnionType)(type)) {\n            definitions.push(astFromUnionType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0, graphql_1.isInputObjectType)(type)) {\n            definitions.push(astFromInputObjectType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0, graphql_1.isEnumType)(type)) {\n            definitions.push(astFromEnumType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0, graphql_1.isScalarType)(type)) {\n            definitions.push(astFromScalarType(type, schema, pathToDirectivesInExtensions));\n        }\n        else {\n            throw new Error(`Unknown type ${type}.`);\n        }\n    }\n    return {\n        kind: graphql_1.Kind.DOCUMENT,\n        definitions,\n    };\n}\nexports.getDocumentNodeFromSchema = getDocumentNodeFromSchema;\n// this approach uses the default schema printer rather than a custom solution, so may be more backwards compatible\n// currently does not allow customization of printSchema options having to do with comments.\nfunction printSchemaWithDirectives(schema, options = {}) {\n    const documentNode = getDocumentNodeFromSchema(schema, options);\n    return (0, graphql_1.print)(documentNode);\n}\nexports.printSchemaWithDirectives = printSchemaWithDirectives;\nfunction astFromSchema(schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    const operationTypeMap = new Map([\n        ['query', undefined],\n        ['mutation', undefined],\n        ['subscription', undefined],\n    ]);\n    const nodes = [];\n    if (schema.astNode != null) {\n        nodes.push(schema.astNode);\n    }\n    if (schema.extensionASTNodes != null) {\n        for (const extensionASTNode of schema.extensionASTNodes) {\n            nodes.push(extensionASTNode);\n        }\n    }\n    for (const node of nodes) {\n        if (node.operationTypes) {\n            for (const operationTypeDefinitionNode of node.operationTypes) {\n                operationTypeMap.set(operationTypeDefinitionNode.operation, operationTypeDefinitionNode);\n            }\n        }\n    }\n    const rootTypeMap = (0, rootTypes_js_1.getRootTypeMap)(schema);\n    for (const [operationTypeNode, operationTypeDefinitionNode] of operationTypeMap) {\n        const rootType = rootTypeMap.get(operationTypeNode);\n        if (rootType != null) {\n            const rootTypeAST = (0, astFromType_js_1.astFromType)(rootType);\n            if (operationTypeDefinitionNode != null) {\n                operationTypeDefinitionNode.type = rootTypeAST;\n            }\n            else {\n                operationTypeMap.set(operationTypeNode, {\n                    kind: graphql_1.Kind.OPERATION_TYPE_DEFINITION,\n                    operation: operationTypeNode,\n                    type: rootTypeAST,\n                });\n            }\n        }\n    }\n    const operationTypes = [...operationTypeMap.values()].filter(helpers_js_1.isSome);\n    const directives = getDirectiveNodes(schema, schema, pathToDirectivesInExtensions);\n    if (!operationTypes.length && !directives.length) {\n        return null;\n    }\n    const schemaNode = {\n        kind: operationTypes != null ? graphql_1.Kind.SCHEMA_DEFINITION : graphql_1.Kind.SCHEMA_EXTENSION,\n        operationTypes,\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: directives,\n    };\n    // This code is so weird because it needs to support GraphQL.js 14\n    // In GraphQL.js 14 there is no `description` value on schemaNode\n    schemaNode.description =\n        ((_b = (_a = schema.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : schema.description != null)\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: schema.description,\n                block: true,\n            }\n            : undefined;\n    return schemaNode;\n}\nexports.astFromSchema = astFromSchema;\nfunction astFromDirective(directive, schema, pathToDirectivesInExtensions) {\n    var _a, _b, _c, _d;\n    return {\n        kind: graphql_1.Kind.DIRECTIVE_DEFINITION,\n        description: (_b = (_a = directive.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (directive.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: directive.description,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: directive.name,\n        },\n        arguments: (_c = directive.args) === null || _c === void 0 ? void 0 : _c.map(arg => astFromArg(arg, schema, pathToDirectivesInExtensions)),\n        repeatable: directive.isRepeatable,\n        locations: ((_d = directive.locations) === null || _d === void 0 ? void 0 : _d.map(location => ({\n            kind: graphql_1.Kind.NAME,\n            value: location,\n        }))) || [],\n    };\n}\nexports.astFromDirective = astFromDirective;\nfunction getDirectiveNodes(entity, schema, pathToDirectivesInExtensions) {\n    const directivesInExtensions = (0, get_directives_js_1.getDirectivesInExtensions)(entity, pathToDirectivesInExtensions);\n    let nodes = [];\n    if (entity.astNode != null) {\n        nodes.push(entity.astNode);\n    }\n    if ('extensionASTNodes' in entity && entity.extensionASTNodes != null) {\n        nodes = nodes.concat(entity.extensionASTNodes);\n    }\n    let directives;\n    if (directivesInExtensions != null) {\n        directives = makeDirectiveNodes(schema, directivesInExtensions);\n    }\n    else {\n        directives = [];\n        for (const node of nodes) {\n            if (node.directives) {\n                directives.push(...node.directives);\n            }\n        }\n    }\n    return directives;\n}\nexports.getDirectiveNodes = getDirectiveNodes;\nfunction getDeprecatableDirectiveNodes(entity, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    let directiveNodesBesidesDeprecated = [];\n    let deprecatedDirectiveNode = null;\n    const directivesInExtensions = (0, get_directives_js_1.getDirectivesInExtensions)(entity, pathToDirectivesInExtensions);\n    let directives;\n    if (directivesInExtensions != null) {\n        directives = makeDirectiveNodes(schema, directivesInExtensions);\n    }\n    else {\n        directives = (_a = entity.astNode) === null || _a === void 0 ? void 0 : _a.directives;\n    }\n    if (directives != null) {\n        directiveNodesBesidesDeprecated = directives.filter(directive => directive.name.value !== 'deprecated');\n        if (entity.deprecationReason != null) {\n            deprecatedDirectiveNode = (_b = directives.filter(directive => directive.name.value === 'deprecated')) === null || _b === void 0 ? void 0 : _b[0];\n        }\n    }\n    if (entity.deprecationReason != null &&\n        deprecatedDirectiveNode == null) {\n        deprecatedDirectiveNode = makeDeprecatedDirective(entity.deprecationReason);\n    }\n    return deprecatedDirectiveNode == null\n        ? directiveNodesBesidesDeprecated\n        : [deprecatedDirectiveNode].concat(directiveNodesBesidesDeprecated);\n}\nexports.getDeprecatableDirectiveNodes = getDeprecatableDirectiveNodes;\nfunction astFromArg(arg, schema, pathToDirectivesInExtensions) {\n    var _a, _b, _c;\n    return {\n        kind: graphql_1.Kind.INPUT_VALUE_DEFINITION,\n        description: (_b = (_a = arg.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (arg.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: arg.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: arg.name,\n        },\n        type: (0, astFromType_js_1.astFromType)(arg.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        defaultValue: arg.defaultValue !== undefined ? (_c = (0, graphql_1.astFromValue)(arg.defaultValue, arg.type)) !== null && _c !== void 0 ? _c : undefined : undefined,\n        directives: getDeprecatableDirectiveNodes(arg, schema, pathToDirectivesInExtensions),\n    };\n}\nexports.astFromArg = astFromArg;\nfunction astFromObjectType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql_1.Kind.OBJECT_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromField(field, schema, pathToDirectivesInExtensions)),\n        interfaces: Object.values(type.getInterfaces()).map(iFace => (0, astFromType_js_1.astFromType)(iFace)),\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nexports.astFromObjectType = astFromObjectType;\nfunction astFromInterfaceType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    const node = {\n        kind: graphql_1.Kind.INTERFACE_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromField(field, schema, pathToDirectivesInExtensions)),\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n    if ('getInterfaces' in type) {\n        node.interfaces = Object.values(type.getInterfaces()).map(iFace => (0, astFromType_js_1.astFromType)(iFace));\n    }\n    return node;\n}\nexports.astFromInterfaceType = astFromInterfaceType;\nfunction astFromUnionType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql_1.Kind.UNION_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: type.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n        types: type.getTypes().map(type => (0, astFromType_js_1.astFromType)(type)),\n    };\n}\nexports.astFromUnionType = astFromUnionType;\nfunction astFromInputObjectType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromInputField(field, schema, pathToDirectivesInExtensions)),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nexports.astFromInputObjectType = astFromInputObjectType;\nfunction astFromEnumType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql_1.Kind.ENUM_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: type.name,\n        },\n        values: Object.values(type.getValues()).map(value => astFromEnumValue(value, schema, pathToDirectivesInExtensions)),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nexports.astFromEnumType = astFromEnumType;\nfunction astFromScalarType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b, _c;\n    const directivesInExtensions = (0, get_directives_js_1.getDirectivesInExtensions)(type, pathToDirectivesInExtensions);\n    const directives = directivesInExtensions\n        ? makeDirectiveNodes(schema, directivesInExtensions)\n        : ((_a = type.astNode) === null || _a === void 0 ? void 0 : _a.directives) || [];\n    const specifiedByValue = (type['specifiedByUrl'] || type['specifiedByURL']);\n    if (specifiedByValue && !directives.some(directiveNode => directiveNode.name.value === 'specifiedBy')) {\n        const specifiedByArgs = {\n            url: specifiedByValue,\n        };\n        directives.push(makeDirectiveNode('specifiedBy', specifiedByArgs));\n    }\n    return {\n        kind: graphql_1.Kind.SCALAR_TYPE_DEFINITION,\n        description: (_c = (_b = type.astNode) === null || _b === void 0 ? void 0 : _b.description) !== null && _c !== void 0 ? _c : (type.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: type.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: directives,\n    };\n}\nexports.astFromScalarType = astFromScalarType;\nfunction astFromField(field, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql_1.Kind.FIELD_DEFINITION,\n        description: (_b = (_a = field.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (field.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: field.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: field.name,\n        },\n        arguments: field.args.map(arg => astFromArg(arg, schema, pathToDirectivesInExtensions)),\n        type: (0, astFromType_js_1.astFromType)(field.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDeprecatableDirectiveNodes(field, schema, pathToDirectivesInExtensions),\n    };\n}\nexports.astFromField = astFromField;\nfunction astFromInputField(field, schema, pathToDirectivesInExtensions) {\n    var _a, _b, _c;\n    return {\n        kind: graphql_1.Kind.INPUT_VALUE_DEFINITION,\n        description: (_b = (_a = field.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (field.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: field.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: field.name,\n        },\n        type: (0, astFromType_js_1.astFromType)(field.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDeprecatableDirectiveNodes(field, schema, pathToDirectivesInExtensions),\n        defaultValue: (_c = (0, graphql_1.astFromValue)(field.defaultValue, field.type)) !== null && _c !== void 0 ? _c : undefined,\n    };\n}\nexports.astFromInputField = astFromInputField;\nfunction astFromEnumValue(value, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql_1.Kind.ENUM_VALUE_DEFINITION,\n        description: (_b = (_a = value.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (value.description\n            ? {\n                kind: graphql_1.Kind.STRING,\n                value: value.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: value.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDeprecatableDirectiveNodes(value, schema, pathToDirectivesInExtensions),\n    };\n}\nexports.astFromEnumValue = astFromEnumValue;\nfunction makeDeprecatedDirective(deprecationReason) {\n    return makeDirectiveNode('deprecated', { reason: deprecationReason }, graphql_1.GraphQLDeprecatedDirective);\n}\nexports.makeDeprecatedDirective = makeDeprecatedDirective;\nfunction makeDirectiveNode(name, args, directive) {\n    const directiveArguments = [];\n    if (directive != null) {\n        for (const arg of directive.args) {\n            const argName = arg.name;\n            const argValue = args[argName];\n            if (argValue !== undefined) {\n                const value = (0, graphql_1.astFromValue)(argValue, arg.type);\n                if (value) {\n                    directiveArguments.push({\n                        kind: graphql_1.Kind.ARGUMENT,\n                        name: {\n                            kind: graphql_1.Kind.NAME,\n                            value: argName,\n                        },\n                        value,\n                    });\n                }\n            }\n        }\n    }\n    else {\n        for (const argName in args) {\n            const argValue = args[argName];\n            const value = (0, astFromValueUntyped_js_1.astFromValueUntyped)(argValue);\n            if (value) {\n                directiveArguments.push({\n                    kind: graphql_1.Kind.ARGUMENT,\n                    name: {\n                        kind: graphql_1.Kind.NAME,\n                        value: argName,\n                    },\n                    value,\n                });\n            }\n        }\n    }\n    return {\n        kind: graphql_1.Kind.DIRECTIVE,\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: name,\n        },\n        arguments: directiveArguments,\n    };\n}\nexports.makeDirectiveNode = makeDirectiveNode;\nfunction makeDirectiveNodes(schema, directiveValues) {\n    const directiveNodes = [];\n    for (const directiveName in directiveValues) {\n        const arrayOrSingleValue = directiveValues[directiveName];\n        const directive = schema === null || schema === void 0 ? void 0 : schema.getDirective(directiveName);\n        if (Array.isArray(arrayOrSingleValue)) {\n            for (const value of arrayOrSingleValue) {\n                directiveNodes.push(makeDirectiveNode(directiveName, value, directive));\n            }\n        }\n        else {\n            directiveNodes.push(makeDirectiveNode(directiveName, arrayOrSingleValue, directive));\n        }\n    }\n    return directiveNodes;\n}\nexports.makeDirectiveNodes = makeDirectiveNodes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDefaultRules = exports.validateGraphQlDocuments = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction validateGraphQlDocuments(schema, documents, rules = createDefaultRules()) {\n    var _a;\n    const definitionMap = new Map();\n    for (const document of documents) {\n        for (const docDefinition of document.definitions) {\n            if ('name' in docDefinition && docDefinition.name) {\n                definitionMap.set(`${docDefinition.kind}_${docDefinition.name.value}`, docDefinition);\n            }\n            else {\n                definitionMap.set(Date.now().toString(), docDefinition);\n            }\n        }\n    }\n    const fullAST = {\n        kind: graphql_1.Kind.DOCUMENT,\n        definitions: Array.from(definitionMap.values()),\n    };\n    const errors = (0, graphql_1.validate)(schema, fullAST, rules);\n    for (const error of errors) {\n        error.stack = error.message;\n        if (error.locations) {\n            for (const location of error.locations) {\n                error.stack += `\\n    at ${(_a = error.source) === null || _a === void 0 ? void 0 : _a.name}:${location.line}:${location.column}`;\n            }\n        }\n    }\n    return errors;\n}\nexports.validateGraphQlDocuments = validateGraphQlDocuments;\nfunction createDefaultRules() {\n    let ignored = ['NoUnusedFragmentsRule', 'NoUnusedVariablesRule', 'KnownDirectivesRule'];\n    if (graphql_1.versionInfo.major < 15) {\n        ignored = ignored.map(rule => rule.replace(/Rule$/, ''));\n    }\n    return graphql_1.specifiedRules.filter((f) => !ignored.includes(f.name));\n}\nexports.createDefaultRules = createDefaultRules;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseGraphQLJSON = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction stripBOM(content) {\n    content = content.toString();\n    // Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n    // because the buffer-to-string conversion in `fs.readFileSync()`\n    // translates it to FEFF, the UTF-16 BOM.\n    if (content.charCodeAt(0) === 0xfeff) {\n        content = content.slice(1);\n    }\n    return content;\n}\nfunction parseBOM(content) {\n    return JSON.parse(stripBOM(content));\n}\nfunction parseGraphQLJSON(location, jsonContent, options) {\n    let parsedJson = parseBOM(jsonContent);\n    if (parsedJson.data) {\n        parsedJson = parsedJson.data;\n    }\n    if (parsedJson.kind === 'Document') {\n        return {\n            location,\n            document: parsedJson,\n        };\n    }\n    else if (parsedJson.__schema) {\n        const schema = (0, graphql_1.buildClientSchema)(parsedJson, options);\n        return {\n            location,\n            schema,\n        };\n    }\n    else if (typeof parsedJson === 'string') {\n        return {\n            location,\n            rawSDL: parsedJson,\n        };\n    }\n    throw new Error(`Not valid JSON content`);\n}\nexports.parseGraphQLJSON = parseGraphQLJSON;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBlockStringIndentation = exports.dedentBlockStringValue = exports.getLeadingCommentBlock = exports.getComment = exports.getDescription = exports.printWithComments = exports.printComment = exports.pushComment = exports.collectComment = exports.resetComments = void 0;\nconst graphql_1 = require(\"graphql\");\nconst MAX_LINE_LENGTH = 80;\nlet commentsRegistry = {};\nfunction resetComments() {\n    commentsRegistry = {};\n}\nexports.resetComments = resetComments;\nfunction collectComment(node) {\n    var _a;\n    const entityName = (_a = node.name) === null || _a === void 0 ? void 0 : _a.value;\n    if (entityName == null) {\n        return;\n    }\n    pushComment(node, entityName);\n    switch (node.kind) {\n        case 'EnumTypeDefinition':\n            if (node.values) {\n                for (const value of node.values) {\n                    pushComment(value, entityName, value.name.value);\n                }\n            }\n            break;\n        case 'ObjectTypeDefinition':\n        case 'InputObjectTypeDefinition':\n        case 'InterfaceTypeDefinition':\n            if (node.fields) {\n                for (const field of node.fields) {\n                    pushComment(field, entityName, field.name.value);\n                    if (isFieldDefinitionNode(field) && field.arguments) {\n                        for (const arg of field.arguments) {\n                            pushComment(arg, entityName, field.name.value, arg.name.value);\n                        }\n                    }\n                }\n            }\n            break;\n    }\n}\nexports.collectComment = collectComment;\nfunction pushComment(node, entity, field, argument) {\n    const comment = getComment(node);\n    if (typeof comment !== 'string' || comment.length === 0) {\n        return;\n    }\n    const keys = [entity];\n    if (field) {\n        keys.push(field);\n        if (argument) {\n            keys.push(argument);\n        }\n    }\n    const path = keys.join('.');\n    if (!commentsRegistry[path]) {\n        commentsRegistry[path] = [];\n    }\n    commentsRegistry[path].push(comment);\n}\nexports.pushComment = pushComment;\nfunction printComment(comment) {\n    return '\\n# ' + comment.replace(/\\n/g, '\\n# ');\n}\nexports.printComment = printComment;\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * NOTE: ==> This file has been modified just to add comments to the printed AST\n * This is a temp measure, we will move to using the original non modified printer.js ASAP.\n */\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\nfunction join(maybeArray, separator) {\n    return maybeArray ? maybeArray.filter(x => x).join(separator || '') : '';\n}\nfunction hasMultilineItems(maybeArray) {\n    var _a;\n    return (_a = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.some(str => str.includes('\\n'))) !== null && _a !== void 0 ? _a : false;\n}\nfunction addDescription(cb) {\n    return (node, _key, _parent, path, ancestors) => {\n        var _a;\n        const keys = [];\n        const parent = path.reduce((prev, key) => {\n            if (['fields', 'arguments', 'values'].includes(key) && prev.name) {\n                keys.push(prev.name.value);\n            }\n            return prev[key];\n        }, ancestors[0]);\n        const key = [...keys, (_a = parent === null || parent === void 0 ? void 0 : parent.name) === null || _a === void 0 ? void 0 : _a.value].filter(Boolean).join('.');\n        const items = [];\n        if (node.kind.includes('Definition') && commentsRegistry[key]) {\n            items.push(...commentsRegistry[key]);\n        }\n        return join([...items.map(printComment), node.description, cb(node, _key, _parent, path, ancestors)], '\\n');\n    };\n}\nfunction indent(maybeString) {\n    return maybeString && `  ${maybeString.replace(/\\n/g, '\\n  ')}`;\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\nfunction block(array) {\n    return array && array.length !== 0 ? `{\\n${indent(join(array, '\\n'))}\\n}` : '';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\nfunction wrap(start, maybeString, end) {\n    return maybeString ? start + maybeString + (end || '') : '';\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n */\nfunction printBlockString(value, isDescription = false) {\n    const escaped = value.replace(/\"\"\"/g, '\\\\\"\"\"');\n    return (value[0] === ' ' || value[0] === '\\t') && value.indexOf('\\n') === -1\n        ? `\"\"\"${escaped.replace(/\"$/, '\"\\n')}\"\"\"`\n        : `\"\"\"\\n${isDescription ? escaped : indent(escaped)}\\n\"\"\"`;\n}\nconst printDocASTReducer = {\n    Name: { leave: node => node.value },\n    Variable: { leave: node => '$' + node.name },\n    // Document\n    Document: {\n        leave: node => join(node.definitions, '\\n\\n'),\n    },\n    OperationDefinition: {\n        leave: node => {\n            const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n            const prefix = join([node.operation, join([node.name, varDefs]), join(node.directives, ' ')], ' ');\n            // the query short form.\n            return prefix + ' ' + node.selectionSet;\n        },\n    },\n    VariableDefinition: {\n        leave: ({ variable, type, defaultValue, directives }) => variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' ')),\n    },\n    SelectionSet: { leave: ({ selections }) => block(selections) },\n    Field: {\n        leave({ alias, name, arguments: args, directives, selectionSet }) {\n            const prefix = wrap('', alias, ': ') + name;\n            let argsLine = prefix + wrap('(', join(args, ', '), ')');\n            if (argsLine.length > MAX_LINE_LENGTH) {\n                argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n            }\n            return join([argsLine, join(directives, ' '), selectionSet], ' ');\n        },\n    },\n    Argument: { leave: ({ name, value }) => name + ': ' + value },\n    // Fragments\n    FragmentSpread: {\n        leave: ({ name, directives }) => '...' + name + wrap(' ', join(directives, ' ')),\n    },\n    InlineFragment: {\n        leave: ({ typeCondition, directives, selectionSet }) => join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' '),\n    },\n    FragmentDefinition: {\n        leave: ({ name, typeCondition, variableDefinitions, directives, selectionSet }) => \n        // Note: fragment variable definitions are experimental and may be changed\n        // or removed in the future.\n        `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n            `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n            selectionSet,\n    },\n    // Value\n    IntValue: { leave: ({ value }) => value },\n    FloatValue: { leave: ({ value }) => value },\n    StringValue: {\n        leave: ({ value, block: isBlockString }) => {\n            if (isBlockString) {\n                return printBlockString(value);\n            }\n            return JSON.stringify(value);\n        },\n    },\n    BooleanValue: { leave: ({ value }) => (value ? 'true' : 'false') },\n    NullValue: { leave: () => 'null' },\n    EnumValue: { leave: ({ value }) => value },\n    ListValue: { leave: ({ values }) => '[' + join(values, ', ') + ']' },\n    ObjectValue: { leave: ({ fields }) => '{' + join(fields, ', ') + '}' },\n    ObjectField: { leave: ({ name, value }) => name + ': ' + value },\n    // Directive\n    Directive: {\n        leave: ({ name, arguments: args }) => '@' + name + wrap('(', join(args, ', '), ')'),\n    },\n    // Type\n    NamedType: { leave: ({ name }) => name },\n    ListType: { leave: ({ type }) => '[' + type + ']' },\n    NonNullType: { leave: ({ type }) => type + '!' },\n    // Type System Definitions\n    SchemaDefinition: {\n        leave: ({ directives, operationTypes }) => join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n    },\n    OperationTypeDefinition: {\n        leave: ({ operation, type }) => operation + ': ' + type,\n    },\n    ScalarTypeDefinition: {\n        leave: ({ name, directives }) => join(['scalar', name, join(directives, ' ')], ' '),\n    },\n    ObjectTypeDefinition: {\n        leave: ({ name, interfaces, directives, fields }) => join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' '),\n    },\n    FieldDefinition: {\n        leave: ({ name, arguments: args, type, directives }) => name +\n            (hasMultilineItems(args)\n                ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n                : wrap('(', join(args, ', '), ')')) +\n            ': ' +\n            type +\n            wrap(' ', join(directives, ' ')),\n    },\n    InputValueDefinition: {\n        leave: ({ name, type, defaultValue, directives }) => join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' '),\n    },\n    InterfaceTypeDefinition: {\n        leave: ({ name, interfaces, directives, fields }) => join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' '),\n    },\n    UnionTypeDefinition: {\n        leave: ({ name, directives, types }) => join(['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' '),\n    },\n    EnumTypeDefinition: {\n        leave: ({ name, directives, values }) => join(['enum', name, join(directives, ' '), block(values)], ' '),\n    },\n    EnumValueDefinition: {\n        leave: ({ name, directives }) => join([name, join(directives, ' ')], ' '),\n    },\n    InputObjectTypeDefinition: {\n        leave: ({ name, directives, fields }) => join(['input', name, join(directives, ' '), block(fields)], ' '),\n    },\n    DirectiveDefinition: {\n        leave: ({ name, arguments: args, repeatable, locations }) => 'directive @' +\n            name +\n            (hasMultilineItems(args)\n                ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n                : wrap('(', join(args, ', '), ')')) +\n            (repeatable ? ' repeatable' : '') +\n            ' on ' +\n            join(locations, ' | '),\n    },\n    SchemaExtension: {\n        leave: ({ directives, operationTypes }) => join(['extend schema', join(directives, ' '), block(operationTypes)], ' '),\n    },\n    ScalarTypeExtension: {\n        leave: ({ name, directives }) => join(['extend scalar', name, join(directives, ' ')], ' '),\n    },\n    ObjectTypeExtension: {\n        leave: ({ name, interfaces, directives, fields }) => join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' '),\n    },\n    InterfaceTypeExtension: {\n        leave: ({ name, interfaces, directives, fields }) => join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' '),\n    },\n    UnionTypeExtension: {\n        leave: ({ name, directives, types }) => join(['extend union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' '),\n    },\n    EnumTypeExtension: {\n        leave: ({ name, directives, values }) => join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n    },\n    InputObjectTypeExtension: {\n        leave: ({ name, directives, fields }) => join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n    },\n};\nconst printDocASTReducerWithComments = Object.keys(printDocASTReducer).reduce((prev, key) => ({\n    ...prev,\n    [key]: {\n        leave: addDescription(printDocASTReducer[key].leave),\n    },\n}), {});\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction printWithComments(ast) {\n    return (0, graphql_1.visit)(ast, printDocASTReducerWithComments);\n}\nexports.printWithComments = printWithComments;\nfunction isFieldDefinitionNode(node) {\n    return node.kind === 'FieldDefinition';\n}\n// graphql < v13 and > v15 does not export getDescription\nfunction getDescription(node, options) {\n    if (node.description != null) {\n        return node.description.value;\n    }\n    if (options === null || options === void 0 ? void 0 : options.commentDescriptions) {\n        return getComment(node);\n    }\n}\nexports.getDescription = getDescription;\nfunction getComment(node) {\n    const rawValue = getLeadingCommentBlock(node);\n    if (rawValue !== undefined) {\n        return dedentBlockStringValue(`\\n${rawValue}`);\n    }\n}\nexports.getComment = getComment;\nfunction getLeadingCommentBlock(node) {\n    const loc = node.loc;\n    if (!loc) {\n        return;\n    }\n    const comments = [];\n    let token = loc.startToken.prev;\n    while (token != null &&\n        token.kind === graphql_1.TokenKind.COMMENT &&\n        token.next != null &&\n        token.prev != null &&\n        token.line + 1 === token.next.line &&\n        token.line !== token.prev.line) {\n        const value = String(token.value);\n        comments.push(value);\n        token = token.prev;\n    }\n    return comments.length > 0 ? comments.reverse().join('\\n') : undefined;\n}\nexports.getLeadingCommentBlock = getLeadingCommentBlock;\nfunction dedentBlockStringValue(rawString) {\n    // Expand a block string's raw value into independent lines.\n    const lines = rawString.split(/\\r\\n|[\\n\\r]/g);\n    // Remove common indentation from all lines but first.\n    const commonIndent = getBlockStringIndentation(lines);\n    if (commonIndent !== 0) {\n        for (let i = 1; i < lines.length; i++) {\n            lines[i] = lines[i].slice(commonIndent);\n        }\n    }\n    // Remove leading and trailing blank lines.\n    while (lines.length > 0 && isBlank(lines[0])) {\n        lines.shift();\n    }\n    while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n        lines.pop();\n    }\n    // Return a string of the lines joined with U+000A.\n    return lines.join('\\n');\n}\nexports.dedentBlockStringValue = dedentBlockStringValue;\n/**\n * @internal\n */\nfunction getBlockStringIndentation(lines) {\n    let commonIndent = null;\n    for (let i = 1; i < lines.length; i++) {\n        const line = lines[i];\n        const indent = leadingWhitespace(line);\n        if (indent === line.length) {\n            continue; // skip empty lines\n        }\n        if (commonIndent === null || indent < commonIndent) {\n            commonIndent = indent;\n            if (commonIndent === 0) {\n                break;\n            }\n        }\n    }\n    return commonIndent === null ? 0 : commonIndent;\n}\nexports.getBlockStringIndentation = getBlockStringIndentation;\nfunction leadingWhitespace(str) {\n    let i = 0;\n    while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n        i++;\n    }\n    return i;\n}\nfunction isBlank(str) {\n    return leadingWhitespace(str) === str.length;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isDescribable = exports.transformCommentsToDescriptions = exports.parseGraphQLSDL = void 0;\nconst graphql_1 = require(\"graphql\");\nconst comments_js_1 = require(\"./comments.js\");\nfunction parseGraphQLSDL(location, rawSDL, options = {}) {\n    let document;\n    try {\n        if (options.commentDescriptions && rawSDL.includes('#')) {\n            document = transformCommentsToDescriptions(rawSDL, options);\n            // If noLocation=true, we need to make sure to print and parse it again, to remove locations,\n            // since `transformCommentsToDescriptions` must have locations set in order to transform the comments\n            // into descriptions.\n            if (options.noLocation) {\n                document = (0, graphql_1.parse)((0, graphql_1.print)(document), options);\n            }\n        }\n        else {\n            document = (0, graphql_1.parse)(new graphql_1.Source(rawSDL, location), options);\n        }\n    }\n    catch (e) {\n        if (e.message.includes('EOF') && rawSDL.replace(/(\\#[^*]*)/g, '').trim() === '') {\n            document = {\n                kind: graphql_1.Kind.DOCUMENT,\n                definitions: [],\n            };\n        }\n        else {\n            throw e;\n        }\n    }\n    return {\n        location,\n        document,\n    };\n}\nexports.parseGraphQLSDL = parseGraphQLSDL;\nfunction transformCommentsToDescriptions(sourceSdl, options = {}) {\n    const parsedDoc = (0, graphql_1.parse)(sourceSdl, {\n        ...options,\n        noLocation: false,\n    });\n    const modifiedDoc = (0, graphql_1.visit)(parsedDoc, {\n        leave: (node) => {\n            if (isDescribable(node)) {\n                const rawValue = (0, comments_js_1.getLeadingCommentBlock)(node);\n                if (rawValue !== undefined) {\n                    const commentsBlock = (0, comments_js_1.dedentBlockStringValue)('\\n' + rawValue);\n                    const isBlock = commentsBlock.includes('\\n');\n                    if (!node.description) {\n                        return {\n                            ...node,\n                            description: {\n                                kind: graphql_1.Kind.STRING,\n                                value: commentsBlock,\n                                block: isBlock,\n                            },\n                        };\n                    }\n                    else {\n                        return {\n                            ...node,\n                            description: {\n                                ...node.description,\n                                value: node.description.value + '\\n' + commentsBlock,\n                                block: true,\n                            },\n                        };\n                    }\n                }\n            }\n        },\n    });\n    return modifiedDoc;\n}\nexports.transformCommentsToDescriptions = transformCommentsToDescriptions;\nfunction isDescribable(node) {\n    return ((0, graphql_1.isTypeSystemDefinitionNode)(node) ||\n        node.kind === graphql_1.Kind.FIELD_DEFINITION ||\n        node.kind === graphql_1.Kind.INPUT_VALUE_DEFINITION ||\n        node.kind === graphql_1.Kind.ENUM_VALUE_DEFINITION);\n}\nexports.isDescribable = isDescribable;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildOperationNodeForField = void 0;\nconst graphql_1 = require(\"graphql\");\nconst rootTypes_js_1 = require(\"./rootTypes.js\");\nlet operationVariables = [];\nlet fieldTypeMap = new Map();\nfunction addOperationVariable(variable) {\n    operationVariables.push(variable);\n}\nfunction resetOperationVariables() {\n    operationVariables = [];\n}\nfunction resetFieldMap() {\n    fieldTypeMap = new Map();\n}\nfunction buildOperationNodeForField({ schema, kind, field, models, ignore = [], depthLimit, circularReferenceDepth, argNames, selectedFields = true, }) {\n    resetOperationVariables();\n    resetFieldMap();\n    const rootTypeNames = (0, rootTypes_js_1.getRootTypeNames)(schema);\n    const operationNode = buildOperationAndCollectVariables({\n        schema,\n        fieldName: field,\n        kind,\n        models: models || [],\n        ignore,\n        depthLimit: depthLimit || Infinity,\n        circularReferenceDepth: circularReferenceDepth || 1,\n        argNames,\n        selectedFields,\n        rootTypeNames,\n    });\n    // attach variables\n    operationNode.variableDefinitions = [...operationVariables];\n    resetOperationVariables();\n    resetFieldMap();\n    return operationNode;\n}\nexports.buildOperationNodeForField = buildOperationNodeForField;\nfunction buildOperationAndCollectVariables({ schema, fieldName, kind, models, ignore, depthLimit, circularReferenceDepth, argNames, selectedFields, rootTypeNames, }) {\n    const type = (0, rootTypes_js_1.getDefinedRootType)(schema, kind);\n    const field = type.getFields()[fieldName];\n    const operationName = `${fieldName}_${kind}`;\n    if (field.args) {\n        for (const arg of field.args) {\n            const argName = arg.name;\n            if (!argNames || argNames.includes(argName)) {\n                addOperationVariable(resolveVariable(arg, argName));\n            }\n        }\n    }\n    return {\n        kind: graphql_1.Kind.OPERATION_DEFINITION,\n        operation: kind,\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: operationName,\n        },\n        variableDefinitions: [],\n        selectionSet: {\n            kind: graphql_1.Kind.SELECTION_SET,\n            selections: [\n                resolveField({\n                    type,\n                    field,\n                    models,\n                    firstCall: true,\n                    path: [],\n                    ancestors: [],\n                    ignore,\n                    depthLimit,\n                    circularReferenceDepth,\n                    schema,\n                    depth: 0,\n                    argNames,\n                    selectedFields,\n                    rootTypeNames,\n                }),\n            ],\n        },\n    };\n}\nfunction resolveSelectionSet({ parent, type, models, firstCall, path, ancestors, ignore, depthLimit, circularReferenceDepth, schema, depth, argNames, selectedFields, rootTypeNames, }) {\n    if (typeof selectedFields === 'boolean' && depth > depthLimit) {\n        return;\n    }\n    if ((0, graphql_1.isUnionType)(type)) {\n        const types = type.getTypes();\n        return {\n            kind: graphql_1.Kind.SELECTION_SET,\n            selections: types\n                .filter(t => !hasCircularRef([...ancestors, t], {\n                depth: circularReferenceDepth,\n            }))\n                .map(t => {\n                return {\n                    kind: graphql_1.Kind.INLINE_FRAGMENT,\n                    typeCondition: {\n                        kind: graphql_1.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql_1.Kind.NAME,\n                            value: t.name,\n                        },\n                    },\n                    selectionSet: resolveSelectionSet({\n                        parent: type,\n                        type: t,\n                        models,\n                        path,\n                        ancestors,\n                        ignore,\n                        depthLimit,\n                        circularReferenceDepth,\n                        schema,\n                        depth,\n                        argNames,\n                        selectedFields,\n                        rootTypeNames,\n                    }),\n                };\n            })\n                .filter(fragmentNode => { var _a, _b; return ((_b = (_a = fragmentNode === null || fragmentNode === void 0 ? void 0 : fragmentNode.selectionSet) === null || _a === void 0 ? void 0 : _a.selections) === null || _b === void 0 ? void 0 : _b.length) > 0; }),\n        };\n    }\n    if ((0, graphql_1.isInterfaceType)(type)) {\n        const types = Object.values(schema.getTypeMap()).filter((t) => (0, graphql_1.isObjectType)(t) && t.getInterfaces().includes(type));\n        return {\n            kind: graphql_1.Kind.SELECTION_SET,\n            selections: types\n                .filter(t => !hasCircularRef([...ancestors, t], {\n                depth: circularReferenceDepth,\n            }))\n                .map(t => {\n                return {\n                    kind: graphql_1.Kind.INLINE_FRAGMENT,\n                    typeCondition: {\n                        kind: graphql_1.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql_1.Kind.NAME,\n                            value: t.name,\n                        },\n                    },\n                    selectionSet: resolveSelectionSet({\n                        parent: type,\n                        type: t,\n                        models,\n                        path,\n                        ancestors,\n                        ignore,\n                        depthLimit,\n                        circularReferenceDepth,\n                        schema,\n                        depth,\n                        argNames,\n                        selectedFields,\n                        rootTypeNames,\n                    }),\n                };\n            })\n                .filter(fragmentNode => { var _a, _b; return ((_b = (_a = fragmentNode === null || fragmentNode === void 0 ? void 0 : fragmentNode.selectionSet) === null || _a === void 0 ? void 0 : _a.selections) === null || _b === void 0 ? void 0 : _b.length) > 0; }),\n        };\n    }\n    if ((0, graphql_1.isObjectType)(type) && !rootTypeNames.has(type.name)) {\n        const isIgnored = ignore.includes(type.name) || ignore.includes(`${parent.name}.${path[path.length - 1]}`);\n        const isModel = models.includes(type.name);\n        if (!firstCall && isModel && !isIgnored) {\n            return {\n                kind: graphql_1.Kind.SELECTION_SET,\n                selections: [\n                    {\n                        kind: graphql_1.Kind.FIELD,\n                        name: {\n                            kind: graphql_1.Kind.NAME,\n                            value: 'id',\n                        },\n                    },\n                ],\n            };\n        }\n        const fields = type.getFields();\n        return {\n            kind: graphql_1.Kind.SELECTION_SET,\n            selections: Object.keys(fields)\n                .filter(fieldName => {\n                return !hasCircularRef([...ancestors, (0, graphql_1.getNamedType)(fields[fieldName].type)], {\n                    depth: circularReferenceDepth,\n                });\n            })\n                .map(fieldName => {\n                const selectedSubFields = typeof selectedFields === 'object' ? selectedFields[fieldName] : true;\n                if (selectedSubFields) {\n                    return resolveField({\n                        type,\n                        field: fields[fieldName],\n                        models,\n                        path: [...path, fieldName],\n                        ancestors,\n                        ignore,\n                        depthLimit,\n                        circularReferenceDepth,\n                        schema,\n                        depth,\n                        argNames,\n                        selectedFields: selectedSubFields,\n                        rootTypeNames,\n                    });\n                }\n                return null;\n            })\n                .filter((f) => {\n                var _a, _b;\n                if (f == null) {\n                    return false;\n                }\n                else if ('selectionSet' in f) {\n                    return !!((_b = (_a = f.selectionSet) === null || _a === void 0 ? void 0 : _a.selections) === null || _b === void 0 ? void 0 : _b.length);\n                }\n                return true;\n            }),\n        };\n    }\n}\nfunction resolveVariable(arg, name) {\n    function resolveVariableType(type) {\n        if ((0, graphql_1.isListType)(type)) {\n            return {\n                kind: graphql_1.Kind.LIST_TYPE,\n                type: resolveVariableType(type.ofType),\n            };\n        }\n        if ((0, graphql_1.isNonNullType)(type)) {\n            return {\n                kind: graphql_1.Kind.NON_NULL_TYPE,\n                // for v16 compatibility\n                type: resolveVariableType(type.ofType),\n            };\n        }\n        return {\n            kind: graphql_1.Kind.NAMED_TYPE,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: type.name,\n            },\n        };\n    }\n    return {\n        kind: graphql_1.Kind.VARIABLE_DEFINITION,\n        variable: {\n            kind: graphql_1.Kind.VARIABLE,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: name || arg.name,\n            },\n        },\n        type: resolveVariableType(arg.type),\n    };\n}\nfunction getArgumentName(name, path) {\n    return [...path, name].join('_');\n}\nfunction resolveField({ type, field, models, firstCall, path, ancestors, ignore, depthLimit, circularReferenceDepth, schema, depth, argNames, selectedFields, rootTypeNames, }) {\n    const namedType = (0, graphql_1.getNamedType)(field.type);\n    let args = [];\n    let removeField = false;\n    if (field.args && field.args.length) {\n        args = field.args\n            .map(arg => {\n            const argumentName = getArgumentName(arg.name, path);\n            if (argNames && !argNames.includes(argumentName)) {\n                if ((0, graphql_1.isNonNullType)(arg.type)) {\n                    removeField = true;\n                }\n                return null;\n            }\n            if (!firstCall) {\n                addOperationVariable(resolveVariable(arg, argumentName));\n            }\n            return {\n                kind: graphql_1.Kind.ARGUMENT,\n                name: {\n                    kind: graphql_1.Kind.NAME,\n                    value: arg.name,\n                },\n                value: {\n                    kind: graphql_1.Kind.VARIABLE,\n                    name: {\n                        kind: graphql_1.Kind.NAME,\n                        value: getArgumentName(arg.name, path),\n                    },\n                },\n            };\n        })\n            .filter(Boolean);\n    }\n    if (removeField) {\n        return null;\n    }\n    const fieldPath = [...path, field.name];\n    const fieldPathStr = fieldPath.join('.');\n    let fieldName = field.name;\n    if (fieldTypeMap.has(fieldPathStr) && fieldTypeMap.get(fieldPathStr) !== field.type.toString()) {\n        fieldName += field.type.toString().replace('!', 'NonNull').replace('[', 'List').replace(']', '');\n    }\n    fieldTypeMap.set(fieldPathStr, field.type.toString());\n    if (!(0, graphql_1.isScalarType)(namedType) && !(0, graphql_1.isEnumType)(namedType)) {\n        return {\n            kind: graphql_1.Kind.FIELD,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: field.name,\n            },\n            ...(fieldName !== field.name && { alias: { kind: graphql_1.Kind.NAME, value: fieldName } }),\n            selectionSet: resolveSelectionSet({\n                parent: type,\n                type: namedType,\n                models,\n                firstCall,\n                path: fieldPath,\n                ancestors: [...ancestors, type],\n                ignore,\n                depthLimit,\n                circularReferenceDepth,\n                schema,\n                depth: depth + 1,\n                argNames,\n                selectedFields,\n                rootTypeNames,\n            }) || undefined,\n            arguments: args,\n        };\n    }\n    return {\n        kind: graphql_1.Kind.FIELD,\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: field.name,\n        },\n        ...(fieldName !== field.name && { alias: { kind: graphql_1.Kind.NAME, value: fieldName } }),\n        arguments: args,\n    };\n}\nfunction hasCircularRef(types, config = {\n    depth: 1,\n}) {\n    const type = types[types.length - 1];\n    if ((0, graphql_1.isScalarType)(type)) {\n        return false;\n    }\n    const size = types.filter(t => t.name === type.name).length;\n    return size > config.depth;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DirectiveLocation = void 0;\nvar DirectiveLocation;\n(function (DirectiveLocation) {\n    /** Request Definitions */\n    DirectiveLocation[\"QUERY\"] = \"QUERY\";\n    DirectiveLocation[\"MUTATION\"] = \"MUTATION\";\n    DirectiveLocation[\"SUBSCRIPTION\"] = \"SUBSCRIPTION\";\n    DirectiveLocation[\"FIELD\"] = \"FIELD\";\n    DirectiveLocation[\"FRAGMENT_DEFINITION\"] = \"FRAGMENT_DEFINITION\";\n    DirectiveLocation[\"FRAGMENT_SPREAD\"] = \"FRAGMENT_SPREAD\";\n    DirectiveLocation[\"INLINE_FRAGMENT\"] = \"INLINE_FRAGMENT\";\n    DirectiveLocation[\"VARIABLE_DEFINITION\"] = \"VARIABLE_DEFINITION\";\n    /** Type System Definitions */\n    DirectiveLocation[\"SCHEMA\"] = \"SCHEMA\";\n    DirectiveLocation[\"SCALAR\"] = \"SCALAR\";\n    DirectiveLocation[\"OBJECT\"] = \"OBJECT\";\n    DirectiveLocation[\"FIELD_DEFINITION\"] = \"FIELD_DEFINITION\";\n    DirectiveLocation[\"ARGUMENT_DEFINITION\"] = \"ARGUMENT_DEFINITION\";\n    DirectiveLocation[\"INTERFACE\"] = \"INTERFACE\";\n    DirectiveLocation[\"UNION\"] = \"UNION\";\n    DirectiveLocation[\"ENUM\"] = \"ENUM\";\n    DirectiveLocation[\"ENUM_VALUE\"] = \"ENUM_VALUE\";\n    DirectiveLocation[\"INPUT_OBJECT\"] = \"INPUT_OBJECT\";\n    DirectiveLocation[\"INPUT_FIELD_DEFINITION\"] = \"INPUT_FIELD_DEFINITION\";\n})(DirectiveLocation = exports.DirectiveLocation || (exports.DirectiveLocation = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MapperKind = void 0;\nvar MapperKind;\n(function (MapperKind) {\n    MapperKind[\"TYPE\"] = \"MapperKind.TYPE\";\n    MapperKind[\"SCALAR_TYPE\"] = \"MapperKind.SCALAR_TYPE\";\n    MapperKind[\"ENUM_TYPE\"] = \"MapperKind.ENUM_TYPE\";\n    MapperKind[\"COMPOSITE_TYPE\"] = \"MapperKind.COMPOSITE_TYPE\";\n    MapperKind[\"OBJECT_TYPE\"] = \"MapperKind.OBJECT_TYPE\";\n    MapperKind[\"INPUT_OBJECT_TYPE\"] = \"MapperKind.INPUT_OBJECT_TYPE\";\n    MapperKind[\"ABSTRACT_TYPE\"] = \"MapperKind.ABSTRACT_TYPE\";\n    MapperKind[\"UNION_TYPE\"] = \"MapperKind.UNION_TYPE\";\n    MapperKind[\"INTERFACE_TYPE\"] = \"MapperKind.INTERFACE_TYPE\";\n    MapperKind[\"ROOT_OBJECT\"] = \"MapperKind.ROOT_OBJECT\";\n    MapperKind[\"QUERY\"] = \"MapperKind.QUERY\";\n    MapperKind[\"MUTATION\"] = \"MapperKind.MUTATION\";\n    MapperKind[\"SUBSCRIPTION\"] = \"MapperKind.SUBSCRIPTION\";\n    MapperKind[\"DIRECTIVE\"] = \"MapperKind.DIRECTIVE\";\n    MapperKind[\"FIELD\"] = \"MapperKind.FIELD\";\n    MapperKind[\"COMPOSITE_FIELD\"] = \"MapperKind.COMPOSITE_FIELD\";\n    MapperKind[\"OBJECT_FIELD\"] = \"MapperKind.OBJECT_FIELD\";\n    MapperKind[\"ROOT_FIELD\"] = \"MapperKind.ROOT_FIELD\";\n    MapperKind[\"QUERY_ROOT_FIELD\"] = \"MapperKind.QUERY_ROOT_FIELD\";\n    MapperKind[\"MUTATION_ROOT_FIELD\"] = \"MapperKind.MUTATION_ROOT_FIELD\";\n    MapperKind[\"SUBSCRIPTION_ROOT_FIELD\"] = \"MapperKind.SUBSCRIPTION_ROOT_FIELD\";\n    MapperKind[\"INTERFACE_FIELD\"] = \"MapperKind.INTERFACE_FIELD\";\n    MapperKind[\"INPUT_OBJECT_FIELD\"] = \"MapperKind.INPUT_OBJECT_FIELD\";\n    MapperKind[\"ARGUMENT\"] = \"MapperKind.ARGUMENT\";\n    MapperKind[\"ENUM_VALUE\"] = \"MapperKind.ENUM_VALUE\";\n})(MapperKind = exports.MapperKind || (exports.MapperKind = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getObjectTypeFromTypeMap = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction getObjectTypeFromTypeMap(typeMap, type) {\n    if (type) {\n        const maybeObjectType = typeMap[type.name];\n        if ((0, graphql_1.isObjectType)(maybeObjectType)) {\n            return maybeObjectType;\n        }\n    }\n}\nexports.getObjectTypeFromTypeMap = getObjectTypeFromTypeMap;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBuiltInForStub = exports.isNamedStub = exports.createStub = exports.createNamedStub = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction createNamedStub(name, type) {\n    let constructor;\n    if (type === 'object') {\n        constructor = graphql_1.GraphQLObjectType;\n    }\n    else if (type === 'interface') {\n        constructor = graphql_1.GraphQLInterfaceType;\n    }\n    else {\n        constructor = graphql_1.GraphQLInputObjectType;\n    }\n    return new constructor({\n        name,\n        fields: {\n            _fake: {\n                type: graphql_1.GraphQLString,\n            },\n        },\n    });\n}\nexports.createNamedStub = createNamedStub;\nfunction createStub(node, type) {\n    switch (node.kind) {\n        case graphql_1.Kind.LIST_TYPE:\n            return new graphql_1.GraphQLList(createStub(node.type, type));\n        case graphql_1.Kind.NON_NULL_TYPE:\n            return new graphql_1.GraphQLNonNull(createStub(node.type, type));\n        default:\n            if (type === 'output') {\n                return createNamedStub(node.name.value, 'object');\n            }\n            return createNamedStub(node.name.value, 'input');\n    }\n}\nexports.createStub = createStub;\nfunction isNamedStub(type) {\n    if ('getFields' in type) {\n        const fields = type.getFields();\n        // eslint-disable-next-line no-unreachable-loop\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            return field.name === '_fake';\n        }\n    }\n    return false;\n}\nexports.isNamedStub = isNamedStub;\nfunction getBuiltInForStub(type) {\n    switch (type.name) {\n        case graphql_1.GraphQLInt.name:\n            return graphql_1.GraphQLInt;\n        case graphql_1.GraphQLFloat.name:\n            return graphql_1.GraphQLFloat;\n        case graphql_1.GraphQLString.name:\n            return graphql_1.GraphQLString;\n        case graphql_1.GraphQLBoolean.name:\n            return graphql_1.GraphQLBoolean;\n        case graphql_1.GraphQLID.name:\n            return graphql_1.GraphQLID;\n        default:\n            return type;\n    }\n}\nexports.getBuiltInForStub = getBuiltInForStub;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rewireTypes = void 0;\nconst graphql_1 = require(\"graphql\");\nconst stub_js_1 = require(\"./stub.js\");\nfunction rewireTypes(originalTypeMap, directives) {\n    const referenceTypeMap = Object.create(null);\n    for (const typeName in originalTypeMap) {\n        referenceTypeMap[typeName] = originalTypeMap[typeName];\n    }\n    const newTypeMap = Object.create(null);\n    for (const typeName in referenceTypeMap) {\n        const namedType = referenceTypeMap[typeName];\n        if (namedType == null || typeName.startsWith('__')) {\n            continue;\n        }\n        const newName = namedType.name;\n        if (newName.startsWith('__')) {\n            continue;\n        }\n        if (newTypeMap[newName] != null) {\n            console.warn(`Duplicate schema type name ${newName} found; keeping the existing one found in the schema`);\n            continue;\n        }\n        newTypeMap[newName] = namedType;\n    }\n    for (const typeName in newTypeMap) {\n        newTypeMap[typeName] = rewireNamedType(newTypeMap[typeName]);\n    }\n    const newDirectives = directives.map(directive => rewireDirective(directive));\n    return {\n        typeMap: newTypeMap,\n        directives: newDirectives,\n    };\n    function rewireDirective(directive) {\n        if ((0, graphql_1.isSpecifiedDirective)(directive)) {\n            return directive;\n        }\n        const directiveConfig = directive.toConfig();\n        directiveConfig.args = rewireArgs(directiveConfig.args);\n        return new graphql_1.GraphQLDirective(directiveConfig);\n    }\n    function rewireArgs(args) {\n        const rewiredArgs = {};\n        for (const argName in args) {\n            const arg = args[argName];\n            const rewiredArgType = rewireType(arg.type);\n            if (rewiredArgType != null) {\n                arg.type = rewiredArgType;\n                rewiredArgs[argName] = arg;\n            }\n        }\n        return rewiredArgs;\n    }\n    function rewireNamedType(type) {\n        if ((0, graphql_1.isObjectType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n                interfaces: () => rewireNamedTypes(config.interfaces),\n            };\n            return new graphql_1.GraphQLObjectType(newConfig);\n        }\n        else if ((0, graphql_1.isInterfaceType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n            };\n            if ('interfaces' in newConfig) {\n                newConfig.interfaces = () => rewireNamedTypes(config.interfaces);\n            }\n            return new graphql_1.GraphQLInterfaceType(newConfig);\n        }\n        else if ((0, graphql_1.isUnionType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                types: () => rewireNamedTypes(config.types),\n            };\n            return new graphql_1.GraphQLUnionType(newConfig);\n        }\n        else if ((0, graphql_1.isInputObjectType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireInputFields(config.fields),\n            };\n            return new graphql_1.GraphQLInputObjectType(newConfig);\n        }\n        else if ((0, graphql_1.isEnumType)(type)) {\n            const enumConfig = type.toConfig();\n            return new graphql_1.GraphQLEnumType(enumConfig);\n        }\n        else if ((0, graphql_1.isScalarType)(type)) {\n            if ((0, graphql_1.isSpecifiedScalarType)(type)) {\n                return type;\n            }\n            const scalarConfig = type.toConfig();\n            return new graphql_1.GraphQLScalarType(scalarConfig);\n        }\n        throw new Error(`Unexpected schema type: ${type}`);\n    }\n    function rewireFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null && field.args) {\n                field.type = rewiredFieldType;\n                field.args = rewireArgs(field.args);\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireInputFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null) {\n                field.type = rewiredFieldType;\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireNamedTypes(namedTypes) {\n        const rewiredTypes = [];\n        for (const namedType of namedTypes) {\n            const rewiredType = rewireType(namedType);\n            if (rewiredType != null) {\n                rewiredTypes.push(rewiredType);\n            }\n        }\n        return rewiredTypes;\n    }\n    function rewireType(type) {\n        if ((0, graphql_1.isListType)(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql_1.GraphQLList(rewiredType) : null;\n        }\n        else if ((0, graphql_1.isNonNullType)(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql_1.GraphQLNonNull(rewiredType) : null;\n        }\n        else if ((0, graphql_1.isNamedType)(type)) {\n            let rewiredType = referenceTypeMap[type.name];\n            if (rewiredType === undefined) {\n                rewiredType = (0, stub_js_1.isNamedStub)(type) ? (0, stub_js_1.getBuiltInForStub)(type) : rewireNamedType(type);\n                newTypeMap[rewiredType.name] = referenceTypeMap[type.name] = rewiredType;\n            }\n            return rewiredType != null ? newTypeMap[rewiredType.name] : null;\n        }\n        return null;\n    }\n}\nexports.rewireTypes = rewireTypes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseInputValueLiteral = exports.parseInputValue = exports.serializeInputValue = exports.transformInputValue = void 0;\nconst graphql_1 = require(\"graphql\");\nconst helpers_js_1 = require(\"./helpers.js\");\nfunction transformInputValue(type, value, inputLeafValueTransformer = null, inputObjectValueTransformer = null) {\n    if (value == null) {\n        return value;\n    }\n    const nullableType = (0, graphql_1.getNullableType)(type);\n    if ((0, graphql_1.isLeafType)(nullableType)) {\n        return inputLeafValueTransformer != null ? inputLeafValueTransformer(nullableType, value) : value;\n    }\n    else if ((0, graphql_1.isListType)(nullableType)) {\n        return (0, helpers_js_1.asArray)(value).map((listMember) => transformInputValue(nullableType.ofType, listMember, inputLeafValueTransformer, inputObjectValueTransformer));\n    }\n    else if ((0, graphql_1.isInputObjectType)(nullableType)) {\n        const fields = nullableType.getFields();\n        const newValue = {};\n        for (const key in value) {\n            const field = fields[key];\n            if (field != null) {\n                newValue[key] = transformInputValue(field.type, value[key], inputLeafValueTransformer, inputObjectValueTransformer);\n            }\n        }\n        return inputObjectValueTransformer != null ? inputObjectValueTransformer(nullableType, newValue) : newValue;\n    }\n    // unreachable, no other possible return value\n}\nexports.transformInputValue = transformInputValue;\nfunction serializeInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.serialize(v);\n        }\n        catch (_a) {\n            return v;\n        }\n    });\n}\nexports.serializeInputValue = serializeInputValue;\nfunction parseInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.parseValue(v);\n        }\n        catch (_a) {\n            return v;\n        }\n    });\n}\nexports.parseInputValue = parseInputValue;\nfunction parseInputValueLiteral(type, value) {\n    return transformInputValue(type, value, (t, v) => t.parseLiteral(v, {}));\n}\nexports.parseInputValueLiteral = parseInputValueLiteral;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.correctASTNodes = exports.mapSchema = void 0;\nconst graphql_1 = require(\"graphql\");\nconst getObjectTypeFromTypeMap_js_1 = require(\"./getObjectTypeFromTypeMap.js\");\nconst Interfaces_js_1 = require(\"./Interfaces.js\");\nconst rewire_js_1 = require(\"./rewire.js\");\nconst transformInputValue_js_1 = require(\"./transformInputValue.js\");\nfunction mapSchema(schema, schemaMapper = {}) {\n    const newTypeMap = mapArguments(mapFields(mapTypes(mapDefaultValues(mapEnumValues(mapTypes(mapDefaultValues(schema.getTypeMap(), schema, transformInputValue_js_1.serializeInputValue), schema, schemaMapper, type => (0, graphql_1.isLeafType)(type)), schema, schemaMapper), schema, transformInputValue_js_1.parseInputValue), schema, schemaMapper, type => !(0, graphql_1.isLeafType)(type)), schema, schemaMapper), schema, schemaMapper);\n    const originalDirectives = schema.getDirectives();\n    const newDirectives = mapDirectives(originalDirectives, schema, schemaMapper);\n    const { typeMap, directives } = (0, rewire_js_1.rewireTypes)(newTypeMap, newDirectives);\n    return new graphql_1.GraphQLSchema({\n        ...schema.toConfig(),\n        query: (0, getObjectTypeFromTypeMap_js_1.getObjectTypeFromTypeMap)(typeMap, (0, getObjectTypeFromTypeMap_js_1.getObjectTypeFromTypeMap)(newTypeMap, schema.getQueryType())),\n        mutation: (0, getObjectTypeFromTypeMap_js_1.getObjectTypeFromTypeMap)(typeMap, (0, getObjectTypeFromTypeMap_js_1.getObjectTypeFromTypeMap)(newTypeMap, schema.getMutationType())),\n        subscription: (0, getObjectTypeFromTypeMap_js_1.getObjectTypeFromTypeMap)(typeMap, (0, getObjectTypeFromTypeMap_js_1.getObjectTypeFromTypeMap)(newTypeMap, schema.getSubscriptionType())),\n        types: Object.values(typeMap),\n        directives,\n    });\n}\nexports.mapSchema = mapSchema;\nfunction mapTypes(originalTypeMap, schema, schemaMapper, testFn = () => true) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (originalType == null || !testFn(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const typeMapper = getTypeMapper(schema, schemaMapper, typeName);\n            if (typeMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const maybeNewType = typeMapper(originalType, schema);\n            if (maybeNewType === undefined) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            newTypeMap[typeName] = maybeNewType;\n        }\n    }\n    return newTypeMap;\n}\nfunction mapEnumValues(originalTypeMap, schema, schemaMapper) {\n    const enumValueMapper = getEnumValueMapper(schemaMapper);\n    if (!enumValueMapper) {\n        return originalTypeMap;\n    }\n    return mapTypes(originalTypeMap, schema, {\n        [Interfaces_js_1.MapperKind.ENUM_TYPE]: type => {\n            const config = type.toConfig();\n            const originalEnumValueConfigMap = config.values;\n            const newEnumValueConfigMap = {};\n            for (const externalValue in originalEnumValueConfigMap) {\n                const originalEnumValueConfig = originalEnumValueConfigMap[externalValue];\n                const mappedEnumValue = enumValueMapper(originalEnumValueConfig, type.name, schema, externalValue);\n                if (mappedEnumValue === undefined) {\n                    newEnumValueConfigMap[externalValue] = originalEnumValueConfig;\n                }\n                else if (Array.isArray(mappedEnumValue)) {\n                    const [newExternalValue, newEnumValueConfig] = mappedEnumValue;\n                    newEnumValueConfigMap[newExternalValue] =\n                        newEnumValueConfig === undefined ? originalEnumValueConfig : newEnumValueConfig;\n                }\n                else if (mappedEnumValue !== null) {\n                    newEnumValueConfigMap[externalValue] = mappedEnumValue;\n                }\n            }\n            return correctASTNodes(new graphql_1.GraphQLEnumType({\n                ...config,\n                values: newEnumValueConfigMap,\n            }));\n        },\n    }, type => (0, graphql_1.isEnumType)(type));\n}\nfunction mapDefaultValues(originalTypeMap, schema, fn) {\n    const newTypeMap = mapArguments(originalTypeMap, schema, {\n        [Interfaces_js_1.MapperKind.ARGUMENT]: argumentConfig => {\n            if (argumentConfig.defaultValue === undefined) {\n                return argumentConfig;\n            }\n            const maybeNewType = getNewType(originalTypeMap, argumentConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...argumentConfig,\n                    defaultValue: fn(maybeNewType, argumentConfig.defaultValue),\n                };\n            }\n        },\n    });\n    return mapFields(newTypeMap, schema, {\n        [Interfaces_js_1.MapperKind.INPUT_OBJECT_FIELD]: inputFieldConfig => {\n            if (inputFieldConfig.defaultValue === undefined) {\n                return inputFieldConfig;\n            }\n            const maybeNewType = getNewType(newTypeMap, inputFieldConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...inputFieldConfig,\n                    defaultValue: fn(maybeNewType, inputFieldConfig.defaultValue),\n                };\n            }\n        },\n    });\n}\nfunction getNewType(newTypeMap, type) {\n    if ((0, graphql_1.isListType)(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql_1.GraphQLList(newType) : null;\n    }\n    else if ((0, graphql_1.isNonNullType)(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql_1.GraphQLNonNull(newType) : null;\n    }\n    else if ((0, graphql_1.isNamedType)(type)) {\n        const newType = newTypeMap[type.name];\n        return newType != null ? newType : null;\n    }\n    return null;\n}\nfunction mapFields(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!(0, graphql_1.isObjectType)(originalType) && !(0, graphql_1.isInterfaceType)(originalType) && !(0, graphql_1.isInputObjectType)(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const fieldMapper = getFieldMapper(schema, schemaMapper, typeName);\n            if (fieldMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const mappedField = fieldMapper(originalFieldConfig, fieldName, typeName, schema);\n                if (mappedField === undefined) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                }\n                else if (Array.isArray(mappedField)) {\n                    const [newFieldName, newFieldConfig] = mappedField;\n                    if (newFieldConfig.astNode != null) {\n                        newFieldConfig.astNode = {\n                            ...newFieldConfig.astNode,\n                            name: {\n                                ...newFieldConfig.astNode.name,\n                                value: newFieldName,\n                            },\n                        };\n                    }\n                    newFieldConfigMap[newFieldName] = newFieldConfig === undefined ? originalFieldConfig : newFieldConfig;\n                }\n                else if (mappedField !== null) {\n                    newFieldConfigMap[fieldName] = mappedField;\n                }\n            }\n            if ((0, graphql_1.isObjectType)(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql_1.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else if ((0, graphql_1.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql_1.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else {\n                newTypeMap[typeName] = correctASTNodes(new graphql_1.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapArguments(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!(0, graphql_1.isObjectType)(originalType) && !(0, graphql_1.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const argumentMapper = getArgumentMapper(schemaMapper);\n            if (argumentMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const originalArgumentConfigMap = originalFieldConfig.args;\n                if (originalArgumentConfigMap == null) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const argumentNames = Object.keys(originalArgumentConfigMap);\n                if (!argumentNames.length) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const newArgumentConfigMap = {};\n                for (const argumentName of argumentNames) {\n                    const originalArgumentConfig = originalArgumentConfigMap[argumentName];\n                    const mappedArgument = argumentMapper(originalArgumentConfig, fieldName, typeName, schema);\n                    if (mappedArgument === undefined) {\n                        newArgumentConfigMap[argumentName] = originalArgumentConfig;\n                    }\n                    else if (Array.isArray(mappedArgument)) {\n                        const [newArgumentName, newArgumentConfig] = mappedArgument;\n                        newArgumentConfigMap[newArgumentName] = newArgumentConfig;\n                    }\n                    else if (mappedArgument !== null) {\n                        newArgumentConfigMap[argumentName] = mappedArgument;\n                    }\n                }\n                newFieldConfigMap[fieldName] = {\n                    ...originalFieldConfig,\n                    args: newArgumentConfigMap,\n                };\n            }\n            if ((0, graphql_1.isObjectType)(originalType)) {\n                newTypeMap[typeName] = new graphql_1.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else if ((0, graphql_1.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = new graphql_1.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else {\n                newTypeMap[typeName] = new graphql_1.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapDirectives(originalDirectives, schema, schemaMapper) {\n    const directiveMapper = getDirectiveMapper(schemaMapper);\n    if (directiveMapper == null) {\n        return originalDirectives.slice();\n    }\n    const newDirectives = [];\n    for (const directive of originalDirectives) {\n        const mappedDirective = directiveMapper(directive, schema);\n        if (mappedDirective === undefined) {\n            newDirectives.push(directive);\n        }\n        else if (mappedDirective !== null) {\n            newDirectives.push(mappedDirective);\n        }\n    }\n    return newDirectives;\n}\nfunction getTypeSpecifiers(schema, typeName) {\n    var _a, _b, _c;\n    const type = schema.getType(typeName);\n    const specifiers = [Interfaces_js_1.MapperKind.TYPE];\n    if ((0, graphql_1.isObjectType)(type)) {\n        specifiers.push(Interfaces_js_1.MapperKind.COMPOSITE_TYPE, Interfaces_js_1.MapperKind.OBJECT_TYPE);\n        if (typeName === ((_a = schema.getQueryType()) === null || _a === void 0 ? void 0 : _a.name)) {\n            specifiers.push(Interfaces_js_1.MapperKind.ROOT_OBJECT, Interfaces_js_1.MapperKind.QUERY);\n        }\n        else if (typeName === ((_b = schema.getMutationType()) === null || _b === void 0 ? void 0 : _b.name)) {\n            specifiers.push(Interfaces_js_1.MapperKind.ROOT_OBJECT, Interfaces_js_1.MapperKind.MUTATION);\n        }\n        else if (typeName === ((_c = schema.getSubscriptionType()) === null || _c === void 0 ? void 0 : _c.name)) {\n            specifiers.push(Interfaces_js_1.MapperKind.ROOT_OBJECT, Interfaces_js_1.MapperKind.SUBSCRIPTION);\n        }\n    }\n    else if ((0, graphql_1.isInputObjectType)(type)) {\n        specifiers.push(Interfaces_js_1.MapperKind.INPUT_OBJECT_TYPE);\n    }\n    else if ((0, graphql_1.isInterfaceType)(type)) {\n        specifiers.push(Interfaces_js_1.MapperKind.COMPOSITE_TYPE, Interfaces_js_1.MapperKind.ABSTRACT_TYPE, Interfaces_js_1.MapperKind.INTERFACE_TYPE);\n    }\n    else if ((0, graphql_1.isUnionType)(type)) {\n        specifiers.push(Interfaces_js_1.MapperKind.COMPOSITE_TYPE, Interfaces_js_1.MapperKind.ABSTRACT_TYPE, Interfaces_js_1.MapperKind.UNION_TYPE);\n    }\n    else if ((0, graphql_1.isEnumType)(type)) {\n        specifiers.push(Interfaces_js_1.MapperKind.ENUM_TYPE);\n    }\n    else if ((0, graphql_1.isScalarType)(type)) {\n        specifiers.push(Interfaces_js_1.MapperKind.SCALAR_TYPE);\n    }\n    return specifiers;\n}\nfunction getTypeMapper(schema, schemaMapper, typeName) {\n    const specifiers = getTypeSpecifiers(schema, typeName);\n    let typeMapper;\n    const stack = [...specifiers];\n    while (!typeMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        typeMapper = schemaMapper[next];\n    }\n    return typeMapper != null ? typeMapper : null;\n}\nfunction getFieldSpecifiers(schema, typeName) {\n    var _a, _b, _c;\n    const type = schema.getType(typeName);\n    const specifiers = [Interfaces_js_1.MapperKind.FIELD];\n    if ((0, graphql_1.isObjectType)(type)) {\n        specifiers.push(Interfaces_js_1.MapperKind.COMPOSITE_FIELD, Interfaces_js_1.MapperKind.OBJECT_FIELD);\n        if (typeName === ((_a = schema.getQueryType()) === null || _a === void 0 ? void 0 : _a.name)) {\n            specifiers.push(Interfaces_js_1.MapperKind.ROOT_FIELD, Interfaces_js_1.MapperKind.QUERY_ROOT_FIELD);\n        }\n        else if (typeName === ((_b = schema.getMutationType()) === null || _b === void 0 ? void 0 : _b.name)) {\n            specifiers.push(Interfaces_js_1.MapperKind.ROOT_FIELD, Interfaces_js_1.MapperKind.MUTATION_ROOT_FIELD);\n        }\n        else if (typeName === ((_c = schema.getSubscriptionType()) === null || _c === void 0 ? void 0 : _c.name)) {\n            specifiers.push(Interfaces_js_1.MapperKind.ROOT_FIELD, Interfaces_js_1.MapperKind.SUBSCRIPTION_ROOT_FIELD);\n        }\n    }\n    else if ((0, graphql_1.isInterfaceType)(type)) {\n        specifiers.push(Interfaces_js_1.MapperKind.COMPOSITE_FIELD, Interfaces_js_1.MapperKind.INTERFACE_FIELD);\n    }\n    else if ((0, graphql_1.isInputObjectType)(type)) {\n        specifiers.push(Interfaces_js_1.MapperKind.INPUT_OBJECT_FIELD);\n    }\n    return specifiers;\n}\nfunction getFieldMapper(schema, schemaMapper, typeName) {\n    const specifiers = getFieldSpecifiers(schema, typeName);\n    let fieldMapper;\n    const stack = [...specifiers];\n    while (!fieldMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        // TODO: fix this as unknown cast\n        fieldMapper = schemaMapper[next];\n    }\n    return fieldMapper !== null && fieldMapper !== void 0 ? fieldMapper : null;\n}\nfunction getArgumentMapper(schemaMapper) {\n    const argumentMapper = schemaMapper[Interfaces_js_1.MapperKind.ARGUMENT];\n    return argumentMapper != null ? argumentMapper : null;\n}\nfunction getDirectiveMapper(schemaMapper) {\n    const directiveMapper = schemaMapper[Interfaces_js_1.MapperKind.DIRECTIVE];\n    return directiveMapper != null ? directiveMapper : null;\n}\nfunction getEnumValueMapper(schemaMapper) {\n    const enumValueMapper = schemaMapper[Interfaces_js_1.MapperKind.ENUM_VALUE];\n    return enumValueMapper != null ? enumValueMapper : null;\n}\nfunction correctASTNodes(type) {\n    if ((0, graphql_1.isObjectType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql_1.Kind.OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql_1.Kind.OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql_1.GraphQLObjectType(config);\n    }\n    else if ((0, graphql_1.isInterfaceType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql_1.Kind.INTERFACE_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql_1.Kind.INTERFACE_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql_1.GraphQLInterfaceType(config);\n    }\n    else if ((0, graphql_1.isInputObjectType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql_1.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql_1.GraphQLInputObjectType(config);\n    }\n    else if ((0, graphql_1.isEnumType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const values = [];\n            for (const enumKey in config.values) {\n                const enumValueConfig = config.values[enumKey];\n                if (enumValueConfig.astNode != null) {\n                    values.push(enumValueConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                values,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                values: undefined,\n            }));\n        }\n        return new graphql_1.GraphQLEnumType(config);\n    }\n    else {\n        return type;\n    }\n}\nexports.correctASTNodes = correctASTNodes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterSchema = void 0;\nconst graphql_1 = require(\"graphql\");\nconst Interfaces_js_1 = require(\"./Interfaces.js\");\nconst mapSchema_js_1 = require(\"./mapSchema.js\");\nfunction filterSchema({ schema, typeFilter = () => true, fieldFilter = undefined, rootFieldFilter = undefined, objectFieldFilter = undefined, interfaceFieldFilter = undefined, inputObjectFieldFilter = undefined, argumentFilter = undefined, }) {\n    const filteredSchema = (0, mapSchema_js_1.mapSchema)(schema, {\n        [Interfaces_js_1.MapperKind.QUERY]: (type) => filterRootFields(type, 'Query', rootFieldFilter, argumentFilter),\n        [Interfaces_js_1.MapperKind.MUTATION]: (type) => filterRootFields(type, 'Mutation', rootFieldFilter, argumentFilter),\n        [Interfaces_js_1.MapperKind.SUBSCRIPTION]: (type) => filterRootFields(type, 'Subscription', rootFieldFilter, argumentFilter),\n        [Interfaces_js_1.MapperKind.OBJECT_TYPE]: (type) => typeFilter(type.name, type)\n            ? filterElementFields(graphql_1.GraphQLObjectType, type, objectFieldFilter || fieldFilter, argumentFilter)\n            : null,\n        [Interfaces_js_1.MapperKind.INTERFACE_TYPE]: (type) => typeFilter(type.name, type)\n            ? filterElementFields(graphql_1.GraphQLInterfaceType, type, interfaceFieldFilter || fieldFilter, argumentFilter)\n            : null,\n        [Interfaces_js_1.MapperKind.INPUT_OBJECT_TYPE]: (type) => typeFilter(type.name, type)\n            ? filterElementFields(graphql_1.GraphQLInputObjectType, type, inputObjectFieldFilter || fieldFilter)\n            : null,\n        [Interfaces_js_1.MapperKind.UNION_TYPE]: (type) => (typeFilter(type.name, type) ? undefined : null),\n        [Interfaces_js_1.MapperKind.ENUM_TYPE]: (type) => (typeFilter(type.name, type) ? undefined : null),\n        [Interfaces_js_1.MapperKind.SCALAR_TYPE]: (type) => (typeFilter(type.name, type) ? undefined : null),\n    });\n    return filteredSchema;\n}\nexports.filterSchema = filterSchema;\nfunction filterRootFields(type, operation, rootFieldFilter, argumentFilter) {\n    if (rootFieldFilter || argumentFilter) {\n        const config = type.toConfig();\n        for (const fieldName in config.fields) {\n            const field = config.fields[fieldName];\n            if (rootFieldFilter && !rootFieldFilter(operation, fieldName, config.fields[fieldName])) {\n                delete config.fields[fieldName];\n            }\n            else if (argumentFilter && field.args) {\n                for (const argName in field.args) {\n                    if (!argumentFilter(operation, fieldName, argName, field.args[argName])) {\n                        delete field.args[argName];\n                    }\n                }\n            }\n        }\n        return new graphql_1.GraphQLObjectType(config);\n    }\n    return type;\n}\nfunction filterElementFields(ElementConstructor, type, fieldFilter, argumentFilter) {\n    if (fieldFilter || argumentFilter) {\n        const config = type.toConfig();\n        for (const fieldName in config.fields) {\n            const field = config.fields[fieldName];\n            if (fieldFilter && !fieldFilter(type.name, fieldName, config.fields[fieldName])) {\n                delete config.fields[fieldName];\n            }\n            else if (argumentFilter && 'args' in field) {\n                for (const argName in field.args) {\n                    if (!argumentFilter(type.name, fieldName, argName, field.args[argName])) {\n                        delete field.args[argName];\n                    }\n                }\n            }\n        }\n        return new ElementConstructor(config);\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.healTypes = exports.healSchema = void 0;\nconst graphql_1 = require(\"graphql\");\n// Update any references to named schema types that disagree with the named\n// types found in schema.getTypeMap().\n//\n// healSchema and its callers (visitSchema/visitSchemaDirectives) all modify the schema in place.\n// Therefore, private variables (such as the stored implementation map and the proper root types)\n// are not updated.\n//\n// If this causes issues, the schema could be more aggressively healed as follows:\n//\n// healSchema(schema);\n// const config = schema.toConfig()\n// const healedSchema = new GraphQLSchema({\n//   ...config,\n//   query: schema.getType('<desired new root query type name>'),\n//   mutation: schema.getType('<desired new root mutation type name>'),\n//   subscription: schema.getType('<desired new root subscription type name>'),\n// });\n//\n// One can then also -- if necessary --  assign the correct private variables to the initial schema\n// as follows:\n// Object.assign(schema, healedSchema);\n//\n// These steps are not taken automatically to preserve backwards compatibility with graphql-tools v4.\n// See https://github.com/ardatan/graphql-tools/issues/1462\n//\n// They were briefly taken in v5, but can now be phased out as they were only required when other\n// areas of the codebase were using healSchema and visitSchema more extensively.\n//\nfunction healSchema(schema) {\n    healTypes(schema.getTypeMap(), schema.getDirectives());\n    return schema;\n}\nexports.healSchema = healSchema;\nfunction healTypes(originalTypeMap, directives) {\n    const actualNamedTypeMap = Object.create(null);\n    // If any of the .name properties of the GraphQLNamedType objects in\n    // schema.getTypeMap() have changed, the keys of the type map need to\n    // be updated accordingly.\n    for (const typeName in originalTypeMap) {\n        const namedType = originalTypeMap[typeName];\n        if (namedType == null || typeName.startsWith('__')) {\n            continue;\n        }\n        const actualName = namedType.name;\n        if (actualName.startsWith('__')) {\n            continue;\n        }\n        if (actualNamedTypeMap[actualName] != null) {\n            console.warn(`Duplicate schema type name ${actualName} found; keeping the existing one found in the schema`);\n            continue;\n        }\n        actualNamedTypeMap[actualName] = namedType;\n        // Note: we are deliberately leaving namedType in the schema by its\n        // original name (which might be different from actualName), so that\n        // references by that name can be healed.\n    }\n    // Now add back every named type by its actual name.\n    for (const typeName in actualNamedTypeMap) {\n        const namedType = actualNamedTypeMap[typeName];\n        originalTypeMap[typeName] = namedType;\n    }\n    // Directive declaration argument types can refer to named types.\n    for (const decl of directives) {\n        decl.args = decl.args.filter(arg => {\n            arg.type = healType(arg.type);\n            return arg.type !== null;\n        });\n    }\n    for (const typeName in originalTypeMap) {\n        const namedType = originalTypeMap[typeName];\n        // Heal all named types, except for dangling references, kept only to redirect.\n        if (!typeName.startsWith('__') && typeName in actualNamedTypeMap) {\n            if (namedType != null) {\n                healNamedType(namedType);\n            }\n        }\n    }\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__') && !(typeName in actualNamedTypeMap)) {\n            delete originalTypeMap[typeName];\n        }\n    }\n    function healNamedType(type) {\n        if ((0, graphql_1.isObjectType)(type)) {\n            healFields(type);\n            healInterfaces(type);\n            return;\n        }\n        else if ((0, graphql_1.isInterfaceType)(type)) {\n            healFields(type);\n            if ('getInterfaces' in type) {\n                healInterfaces(type);\n            }\n            return;\n        }\n        else if ((0, graphql_1.isUnionType)(type)) {\n            healUnderlyingTypes(type);\n            return;\n        }\n        else if ((0, graphql_1.isInputObjectType)(type)) {\n            healInputFields(type);\n            return;\n        }\n        else if ((0, graphql_1.isLeafType)(type)) {\n            return;\n        }\n        throw new Error(`Unexpected schema type: ${type}`);\n    }\n    function healFields(type) {\n        const fieldMap = type.getFields();\n        for (const [key, field] of Object.entries(fieldMap)) {\n            field.args\n                .map(arg => {\n                arg.type = healType(arg.type);\n                return arg.type === null ? null : arg;\n            })\n                .filter(Boolean);\n            field.type = healType(field.type);\n            if (field.type === null) {\n                delete fieldMap[key];\n            }\n        }\n    }\n    function healInterfaces(type) {\n        if ('getInterfaces' in type) {\n            const interfaces = type.getInterfaces();\n            interfaces.push(...interfaces\n                .splice(0)\n                .map(iface => healType(iface))\n                .filter(Boolean));\n        }\n    }\n    function healInputFields(type) {\n        const fieldMap = type.getFields();\n        for (const [key, field] of Object.entries(fieldMap)) {\n            field.type = healType(field.type);\n            if (field.type === null) {\n                delete fieldMap[key];\n            }\n        }\n    }\n    function healUnderlyingTypes(type) {\n        const types = type.getTypes();\n        types.push(...types\n            .splice(0)\n            .map(t => healType(t))\n            .filter(Boolean));\n    }\n    function healType(type) {\n        // Unwrap the two known wrapper types\n        if ((0, graphql_1.isListType)(type)) {\n            const healedType = healType(type.ofType);\n            return healedType != null ? new graphql_1.GraphQLList(healedType) : null;\n        }\n        else if ((0, graphql_1.isNonNullType)(type)) {\n            const healedType = healType(type.ofType);\n            return healedType != null ? new graphql_1.GraphQLNonNull(healedType) : null;\n        }\n        else if ((0, graphql_1.isNamedType)(type)) {\n            // If a type annotation on a field or an argument or a union member is\n            // any `GraphQLNamedType` with a `name`, then it must end up identical\n            // to `schema.getType(name)`, since `schema.getTypeMap()` is the source\n            // of truth for all named schema types.\n            // Note that new types can still be simply added by adding a field, as\n            // the official type will be undefined, not null.\n            const officialType = originalTypeMap[type.name];\n            if (officialType && type !== officialType) {\n                return officialType;\n            }\n        }\n        return type;\n    }\n}\nexports.healTypes = healTypes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResolversFromSchema = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction getResolversFromSchema(schema, \n// Include default merged resolvers\nincludeDefaultMergedResolver) {\n    var _a, _b;\n    const resolvers = Object.create(null);\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        if (!typeName.startsWith('__')) {\n            const type = typeMap[typeName];\n            if ((0, graphql_1.isScalarType)(type)) {\n                if (!(0, graphql_1.isSpecifiedScalarType)(type)) {\n                    const config = type.toConfig();\n                    delete config.astNode; // avoid AST duplication elsewhere\n                    resolvers[typeName] = new graphql_1.GraphQLScalarType(config);\n                }\n            }\n            else if ((0, graphql_1.isEnumType)(type)) {\n                resolvers[typeName] = {};\n                const values = type.getValues();\n                for (const value of values) {\n                    resolvers[typeName][value.name] = value.value;\n                }\n            }\n            else if ((0, graphql_1.isInterfaceType)(type)) {\n                if (type.resolveType != null) {\n                    resolvers[typeName] = {\n                        __resolveType: type.resolveType,\n                    };\n                }\n            }\n            else if ((0, graphql_1.isUnionType)(type)) {\n                if (type.resolveType != null) {\n                    resolvers[typeName] = {\n                        __resolveType: type.resolveType,\n                    };\n                }\n            }\n            else if ((0, graphql_1.isObjectType)(type)) {\n                resolvers[typeName] = {};\n                if (type.isTypeOf != null) {\n                    resolvers[typeName].__isTypeOf = type.isTypeOf;\n                }\n                const fields = type.getFields();\n                for (const fieldName in fields) {\n                    const field = fields[fieldName];\n                    if (field.subscribe != null) {\n                        resolvers[typeName][fieldName] = resolvers[typeName][fieldName] || {};\n                        resolvers[typeName][fieldName].subscribe = field.subscribe;\n                    }\n                    if (field.resolve != null && ((_a = field.resolve) === null || _a === void 0 ? void 0 : _a.name) !== 'defaultFieldResolver') {\n                        switch ((_b = field.resolve) === null || _b === void 0 ? void 0 : _b.name) {\n                            case 'defaultMergedResolver':\n                                if (!includeDefaultMergedResolver) {\n                                    continue;\n                                }\n                                break;\n                            case 'defaultFieldResolver':\n                                continue;\n                        }\n                        resolvers[typeName][fieldName] = resolvers[typeName][fieldName] || {};\n                        resolvers[typeName][fieldName].resolve = field.resolve;\n                    }\n                }\n            }\n        }\n    }\n    return resolvers;\n}\nexports.getResolversFromSchema = getResolversFromSchema;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.forEachField = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction forEachField(schema, fn) {\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        // TODO: maybe have an option to include these?\n        if (!(0, graphql_1.getNamedType)(type).name.startsWith('__') && (0, graphql_1.isObjectType)(type)) {\n            const fields = type.getFields();\n            for (const fieldName in fields) {\n                const field = fields[fieldName];\n                fn(field, typeName, fieldName);\n            }\n        }\n    }\n}\nexports.forEachField = forEachField;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.forEachDefaultValue = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction forEachDefaultValue(schema, fn) {\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        if (!(0, graphql_1.getNamedType)(type).name.startsWith('__')) {\n            if ((0, graphql_1.isObjectType)(type)) {\n                const fields = type.getFields();\n                for (const fieldName in fields) {\n                    const field = fields[fieldName];\n                    for (const arg of field.args) {\n                        arg.defaultValue = fn(arg.type, arg.defaultValue);\n                    }\n                }\n            }\n            else if ((0, graphql_1.isInputObjectType)(type)) {\n                const fields = type.getFields();\n                for (const fieldName in fields) {\n                    const field = fields[fieldName];\n                    field.defaultValue = fn(field.type, field.defaultValue);\n                }\n            }\n        }\n    }\n}\nexports.forEachDefaultValue = forEachDefaultValue;\n", "\"use strict\";\n// addTypes uses toConfig to create a new schema with a new or replaced\n// type or directive. Rewiring is employed so that the replaced type can be\n// reconnected with the existing types.\n//\n// Rewiring is employed even for new types or directives as a convenience, so\n// that type references within the new type or directive do not have to be to\n// the identical objects within the original schema.\n//\n// In fact, the type references could even be stub types with entirely different\n// fields, as long as the type references share the same name as the desired\n// type within the original schema's type map.\n//\n// This makes it easy to perform simple schema operations (e.g. adding a new\n// type with a fiew fields removed from an existing type) that could normally be\n// performed by using toConfig directly, but is blocked if any intervening\n// more advanced schema operations have caused the types to be recreated via\n// rewiring.\n//\n// Type recreation happens, for example, with every use of mapSchema, as the\n// types are always rewired. If fields are selected and removed using\n// mapSchema, adding those fields to a new type can no longer be simply done\n// by toConfig, as the types are not the identical JavaScript objects, and\n// schema creation will fail with errors referencing multiple types with the\n// same names.\n//\n// enhanceSchema can fill this gap by adding an additional round of rewiring.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addTypes = void 0;\nconst graphql_1 = require(\"graphql\");\nconst getObjectTypeFromTypeMap_js_1 = require(\"./getObjectTypeFromTypeMap.js\");\nconst rewire_js_1 = require(\"./rewire.js\");\nfunction addTypes(schema, newTypesOrDirectives) {\n    const config = schema.toConfig();\n    const originalTypeMap = {};\n    for (const type of config.types) {\n        originalTypeMap[type.name] = type;\n    }\n    const originalDirectiveMap = {};\n    for (const directive of config.directives) {\n        originalDirectiveMap[directive.name] = directive;\n    }\n    for (const newTypeOrDirective of newTypesOrDirectives) {\n        if ((0, graphql_1.isNamedType)(newTypeOrDirective)) {\n            originalTypeMap[newTypeOrDirective.name] = newTypeOrDirective;\n        }\n        else if ((0, graphql_1.isDirective)(newTypeOrDirective)) {\n            originalDirectiveMap[newTypeOrDirective.name] = newTypeOrDirective;\n        }\n    }\n    const { typeMap, directives } = (0, rewire_js_1.rewireTypes)(originalTypeMap, Object.values(originalDirectiveMap));\n    return new graphql_1.GraphQLSchema({\n        ...config,\n        query: (0, getObjectTypeFromTypeMap_js_1.getObjectTypeFromTypeMap)(typeMap, schema.getQueryType()),\n        mutation: (0, getObjectTypeFromTypeMap_js_1.getObjectTypeFromTypeMap)(typeMap, schema.getMutationType()),\n        subscription: (0, getObjectTypeFromTypeMap_js_1.getObjectTypeFromTypeMap)(typeMap, schema.getSubscriptionType()),\n        types: Object.values(typeMap),\n        directives,\n    });\n}\nexports.addTypes = addTypes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pruneSchema = void 0;\nconst graphql_1 = require(\"graphql\");\nconst mapSchema_js_1 = require(\"./mapSchema.js\");\nconst Interfaces_js_1 = require(\"./Interfaces.js\");\nconst rootTypes_js_1 = require(\"./rootTypes.js\");\nconst get_implementing_types_js_1 = require(\"./get-implementing-types.js\");\n/**\n * Prunes the provided schema, removing unused and empty types\n * @param schema The schema to prune\n * @param options Additional options for removing unused types from the schema\n */\nfunction pruneSchema(schema, options = {}) {\n    const { skipEmptyCompositeTypePruning, skipEmptyUnionPruning, skipPruning, skipUnimplementedInterfacesPruning, skipUnusedTypesPruning, } = options;\n    let prunedTypes = []; // Pruned types during mapping\n    let prunedSchema = schema;\n    do {\n        let visited = visitSchema(prunedSchema);\n        // Custom pruning  was defined, so we need to pre-emptively revisit the schema accounting for this\n        if (skipPruning) {\n            const revisit = [];\n            for (const typeName in prunedSchema.getTypeMap()) {\n                if (typeName.startsWith('__')) {\n                    continue;\n                }\n                const type = prunedSchema.getType(typeName);\n                // if we want to skip pruning for this type, add it to the list of types to revisit\n                if (type && skipPruning(type)) {\n                    revisit.push(typeName);\n                }\n            }\n            visited = visitQueue(revisit, prunedSchema, visited); // visit again\n        }\n        prunedTypes = [];\n        prunedSchema = (0, mapSchema_js_1.mapSchema)(prunedSchema, {\n            [Interfaces_js_1.MapperKind.TYPE]: type => {\n                if (!visited.has(type.name) && !(0, graphql_1.isSpecifiedScalarType)(type)) {\n                    if ((0, graphql_1.isUnionType)(type) ||\n                        (0, graphql_1.isInputObjectType)(type) ||\n                        (0, graphql_1.isInterfaceType)(type) ||\n                        (0, graphql_1.isObjectType)(type) ||\n                        (0, graphql_1.isScalarType)(type)) {\n                        // skipUnusedTypesPruning: skip pruning unused types\n                        if (skipUnusedTypesPruning) {\n                            return type;\n                        }\n                        // skipEmptyUnionPruning: skip pruning empty unions\n                        if ((0, graphql_1.isUnionType)(type) && skipEmptyUnionPruning && !Object.keys(type.getTypes()).length) {\n                            return type;\n                        }\n                        if ((0, graphql_1.isInputObjectType)(type) || (0, graphql_1.isInterfaceType)(type) || (0, graphql_1.isObjectType)(type)) {\n                            // skipEmptyCompositeTypePruning: skip pruning object types or interfaces with no fields\n                            if (skipEmptyCompositeTypePruning && !Object.keys(type.getFields()).length) {\n                                return type;\n                            }\n                        }\n                        // skipUnimplementedInterfacesPruning: skip pruning interfaces that are not implemented by any other types\n                        if ((0, graphql_1.isInterfaceType)(type) && skipUnimplementedInterfacesPruning) {\n                            return type;\n                        }\n                    }\n                    prunedTypes.push(type.name);\n                    visited.delete(type.name);\n                    return null;\n                }\n                return type;\n            },\n        });\n    } while (prunedTypes.length); // Might have empty types and need to prune again\n    return prunedSchema;\n}\nexports.pruneSchema = pruneSchema;\nfunction visitSchema(schema) {\n    const queue = []; // queue of nodes to visit\n    // Grab the root types and start there\n    for (const type of (0, rootTypes_js_1.getRootTypes)(schema)) {\n        queue.push(type.name);\n    }\n    return visitQueue(queue, schema);\n}\nfunction visitQueue(queue, schema, visited = new Set()) {\n    // Interfaces encountered that are field return types need to be revisited to add their implementations\n    const revisit = new Map();\n    // Navigate all types starting with pre-queued types (root types)\n    while (queue.length) {\n        const typeName = queue.pop();\n        // Skip types we already visited unless it is an interface type that needs revisiting\n        if (visited.has(typeName) && revisit[typeName] !== true) {\n            continue;\n        }\n        const type = schema.getType(typeName);\n        if (type) {\n            // Get types for union\n            if ((0, graphql_1.isUnionType)(type)) {\n                queue.push(...type.getTypes().map(type => type.name));\n            }\n            // If it is an interface and it is a returned type, grab all implementations so we can use proper __typename in fragments\n            if ((0, graphql_1.isInterfaceType)(type) && revisit[typeName] === true) {\n                queue.push(...(0, get_implementing_types_js_1.getImplementingTypes)(type.name, schema));\n                // No need to revisit this interface again\n                revisit[typeName] = false;\n            }\n            if ((0, graphql_1.isEnumType)(type)) {\n                // Visit enum values directives argument types\n                queue.push(...type.getValues().flatMap(value => {\n                    if (value.astNode) {\n                        return getDirectivesArgumentsTypeNames(schema, value.astNode);\n                    }\n                    return [];\n                }));\n            }\n            // Visit interfaces this type is implementing if they haven't been visited yet\n            if ('getInterfaces' in type) {\n                // Only pushes to queue to visit but not return types\n                queue.push(...type.getInterfaces().map(iface => iface.name));\n            }\n            // If the type has fields visit those field types\n            if ('getFields' in type) {\n                const fields = type.getFields();\n                const entries = Object.entries(fields);\n                if (!entries.length) {\n                    continue;\n                }\n                for (const [, field] of entries) {\n                    if ((0, graphql_1.isObjectType)(type)) {\n                        // Visit arg types and arg directives arguments types\n                        queue.push(...field.args.flatMap(arg => {\n                            const typeNames = [(0, graphql_1.getNamedType)(arg.type).name];\n                            if (arg.astNode) {\n                                typeNames.push(...getDirectivesArgumentsTypeNames(schema, arg.astNode));\n                            }\n                            return typeNames;\n                        }));\n                    }\n                    const namedType = (0, graphql_1.getNamedType)(field.type);\n                    queue.push(namedType.name);\n                    if (field.astNode) {\n                        queue.push(...getDirectivesArgumentsTypeNames(schema, field.astNode));\n                    }\n                    // Interfaces returned on fields need to be revisited to add their implementations\n                    if ((0, graphql_1.isInterfaceType)(namedType) && !(namedType.name in revisit)) {\n                        revisit[namedType.name] = true;\n                    }\n                }\n            }\n            if (type.astNode) {\n                queue.push(...getDirectivesArgumentsTypeNames(schema, type.astNode));\n            }\n            visited.add(typeName); // Mark as visited (and therefore it is used and should be kept)\n        }\n    }\n    return visited;\n}\nfunction getDirectivesArgumentsTypeNames(schema, astNode) {\n    var _a;\n    return ((_a = astNode.directives) !== null && _a !== void 0 ? _a : []).flatMap(directive => { var _a, _b; return (_b = (_a = schema.getDirective(directive.name.value)) === null || _a === void 0 ? void 0 : _a.args.map(arg => (0, graphql_1.getNamedType)(arg.type).name)) !== null && _b !== void 0 ? _b : []; });\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeDeep = void 0;\nconst helpers_js_1 = require(\"./helpers.js\");\nfunction mergeDeep(sources, respectPrototype = false) {\n    const target = sources[0] || {};\n    const output = {};\n    if (respectPrototype) {\n        Object.setPrototypeOf(output, Object.create(Object.getPrototypeOf(target)));\n    }\n    for (const source of sources) {\n        if (isObject(target) && isObject(source)) {\n            if (respectPrototype) {\n                const outputPrototype = Object.getPrototypeOf(output);\n                const sourcePrototype = Object.getPrototypeOf(source);\n                if (sourcePrototype) {\n                    for (const key of Object.getOwnPropertyNames(sourcePrototype)) {\n                        const descriptor = Object.getOwnPropertyDescriptor(sourcePrototype, key);\n                        if ((0, helpers_js_1.isSome)(descriptor)) {\n                            Object.defineProperty(outputPrototype, key, descriptor);\n                        }\n                    }\n                }\n            }\n            for (const key in source) {\n                if (isObject(source[key])) {\n                    if (!(key in output)) {\n                        Object.assign(output, { [key]: source[key] });\n                    }\n                    else {\n                        output[key] = mergeDeep([output[key], source[key]], respectPrototype);\n                    }\n                }\n                else {\n                    Object.assign(output, { [key]: source[key] });\n                }\n            }\n        }\n    }\n    return output;\n}\nexports.mergeDeep = mergeDeep;\nfunction isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseSelectionSet = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction parseSelectionSet(selectionSet, options) {\n    const query = (0, graphql_1.parse)(selectionSet, options).definitions[0];\n    return query.selectionSet;\n}\nexports.parseSelectionSet = parseSelectionSet;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResponseKeyFromInfo = void 0;\n/**\n * Get the key under which the result of this resolver will be placed in the response JSON. Basically, just\n * resolves aliases.\n * @param info The info argument to the resolver.\n */\nfunction getResponseKeyFromInfo(info) {\n    return info.fieldNodes[0].alias != null ? info.fieldNodes[0].alias.value : info.fieldName;\n}\nexports.getResponseKeyFromInfo = getResponseKeyFromInfo;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.modifyObjectFields = exports.selectObjectFields = exports.removeObjectFields = exports.appendObjectFields = void 0;\nconst graphql_1 = require(\"graphql\");\nconst Interfaces_js_1 = require(\"./Interfaces.js\");\nconst mapSchema_js_1 = require(\"./mapSchema.js\");\nconst addTypes_js_1 = require(\"./addTypes.js\");\nfunction appendObjectFields(schema, typeName, additionalFields) {\n    if (schema.getType(typeName) == null) {\n        return (0, addTypes_js_1.addTypes)(schema, [\n            new graphql_1.GraphQLObjectType({\n                name: typeName,\n                fields: additionalFields,\n            }),\n        ]);\n    }\n    return (0, mapSchema_js_1.mapSchema)(schema, {\n        [Interfaces_js_1.MapperKind.OBJECT_TYPE]: type => {\n            if (type.name === typeName) {\n                const config = type.toConfig();\n                const originalFieldConfigMap = config.fields;\n                const newFieldConfigMap = {};\n                for (const fieldName in originalFieldConfigMap) {\n                    newFieldConfigMap[fieldName] = originalFieldConfigMap[fieldName];\n                }\n                for (const fieldName in additionalFields) {\n                    newFieldConfigMap[fieldName] = additionalFields[fieldName];\n                }\n                return (0, mapSchema_js_1.correctASTNodes)(new graphql_1.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        },\n    });\n}\nexports.appendObjectFields = appendObjectFields;\nfunction removeObjectFields(schema, typeName, testFn) {\n    const removedFields = {};\n    const newSchema = (0, mapSchema_js_1.mapSchema)(schema, {\n        [Interfaces_js_1.MapperKind.OBJECT_TYPE]: type => {\n            if (type.name === typeName) {\n                const config = type.toConfig();\n                const originalFieldConfigMap = config.fields;\n                const newFieldConfigMap = {};\n                for (const fieldName in originalFieldConfigMap) {\n                    const originalFieldConfig = originalFieldConfigMap[fieldName];\n                    if (testFn(fieldName, originalFieldConfig)) {\n                        removedFields[fieldName] = originalFieldConfig;\n                    }\n                    else {\n                        newFieldConfigMap[fieldName] = originalFieldConfig;\n                    }\n                }\n                return (0, mapSchema_js_1.correctASTNodes)(new graphql_1.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        },\n    });\n    return [newSchema, removedFields];\n}\nexports.removeObjectFields = removeObjectFields;\nfunction selectObjectFields(schema, typeName, testFn) {\n    const selectedFields = {};\n    (0, mapSchema_js_1.mapSchema)(schema, {\n        [Interfaces_js_1.MapperKind.OBJECT_TYPE]: type => {\n            if (type.name === typeName) {\n                const config = type.toConfig();\n                const originalFieldConfigMap = config.fields;\n                for (const fieldName in originalFieldConfigMap) {\n                    const originalFieldConfig = originalFieldConfigMap[fieldName];\n                    if (testFn(fieldName, originalFieldConfig)) {\n                        selectedFields[fieldName] = originalFieldConfig;\n                    }\n                }\n            }\n            return undefined;\n        },\n    });\n    return selectedFields;\n}\nexports.selectObjectFields = selectObjectFields;\nfunction modifyObjectFields(schema, typeName, testFn, newFields) {\n    const removedFields = {};\n    const newSchema = (0, mapSchema_js_1.mapSchema)(schema, {\n        [Interfaces_js_1.MapperKind.OBJECT_TYPE]: type => {\n            if (type.name === typeName) {\n                const config = type.toConfig();\n                const originalFieldConfigMap = config.fields;\n                const newFieldConfigMap = {};\n                for (const fieldName in originalFieldConfigMap) {\n                    const originalFieldConfig = originalFieldConfigMap[fieldName];\n                    if (testFn(fieldName, originalFieldConfig)) {\n                        removedFields[fieldName] = originalFieldConfig;\n                    }\n                    else {\n                        newFieldConfigMap[fieldName] = originalFieldConfig;\n                    }\n                }\n                for (const fieldName in newFields) {\n                    const fieldConfig = newFields[fieldName];\n                    newFieldConfigMap[fieldName] = fieldConfig;\n                }\n                return (0, mapSchema_js_1.correctASTNodes)(new graphql_1.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        },\n    });\n    return [newSchema, removedFields];\n}\nexports.modifyObjectFields = modifyObjectFields;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.renameType = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction renameType(type, newTypeName) {\n    if ((0, graphql_1.isObjectType)(type)) {\n        return new graphql_1.GraphQLObjectType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0, graphql_1.isInterfaceType)(type)) {\n        return new graphql_1.GraphQLInterfaceType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0, graphql_1.isUnionType)(type)) {\n        return new graphql_1.GraphQLUnionType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0, graphql_1.isInputObjectType)(type)) {\n        return new graphql_1.GraphQLInputObjectType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0, graphql_1.isEnumType)(type)) {\n        return new graphql_1.GraphQLEnumType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0, graphql_1.isScalarType)(type)) {\n        return new graphql_1.GraphQLScalarType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    throw new Error(`Unknown type ${type}.`);\n}\nexports.renameType = renameType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapAsyncIterator = void 0;\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterator, callback, rejectCallback) {\n    let $return;\n    let abruptClose;\n    if (typeof iterator.return === 'function') {\n        $return = iterator.return;\n        abruptClose = (error) => {\n            const rethrow = () => Promise.reject(error);\n            return $return.call(iterator).then(rethrow, rethrow);\n        };\n    }\n    function mapResult(result) {\n        return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n    }\n    let mapReject;\n    if (rejectCallback) {\n        // Capture rejectCallback to ensure it cannot be null.\n        const reject = rejectCallback;\n        mapReject = (error) => asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    }\n    return {\n        next() {\n            return iterator.next().then(mapResult, mapReject);\n        },\n        return() {\n            return $return\n                ? $return.call(iterator).then(mapResult, mapReject)\n                : Promise.resolve({ value: undefined, done: true });\n        },\n        throw(error) {\n            if (typeof iterator.throw === 'function') {\n                return iterator.throw(error).then(mapResult, mapReject);\n            }\n            return Promise.reject(error).catch(abruptClose);\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\nexports.mapAsyncIterator = mapAsyncIterator;\nfunction asyncMapValue(value, callback) {\n    return new Promise(resolve => resolve(callback(value)));\n}\nfunction iteratorResult(value) {\n    return { value, done: false };\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createVariableNameGenerator = exports.updateArgument = void 0;\nconst graphql_1 = require(\"graphql\");\nconst astFromType_js_1 = require(\"./astFromType.js\");\nfunction updateArgument(argumentNodes, variableDefinitionsMap, variableValues, argName, varName, type, value) {\n    argumentNodes[argName] = {\n        kind: graphql_1.Kind.ARGUMENT,\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: argName,\n        },\n        value: {\n            kind: graphql_1.Kind.VARIABLE,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: varName,\n            },\n        },\n    };\n    variableDefinitionsMap[varName] = {\n        kind: graphql_1.Kind.VARIABLE_DEFINITION,\n        variable: {\n            kind: graphql_1.Kind.VARIABLE,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: varName,\n            },\n        },\n        type: (0, astFromType_js_1.astFromType)(type),\n    };\n    if (value !== undefined) {\n        variableValues[varName] = value;\n        return;\n    }\n    // including the variable in the map with value of `undefined`\n    // will actually be translated by graphql-js into `null`\n    // see https://github.com/graphql/graphql-js/issues/2533\n    if (varName in variableValues) {\n        delete variableValues[varName];\n    }\n}\nexports.updateArgument = updateArgument;\nfunction createVariableNameGenerator(variableDefinitionMap) {\n    let varCounter = 0;\n    return (argName) => {\n        let varName;\n        do {\n            varName = `_v${(varCounter++).toString()}_${argName}`;\n        } while (varName in variableDefinitionMap);\n        return varName;\n    };\n}\nexports.createVariableNameGenerator = createVariableNameGenerator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.implementsAbstractType = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction implementsAbstractType(schema, typeA, typeB) {\n    if (typeB == null || typeA == null) {\n        return false;\n    }\n    else if (typeA === typeB) {\n        return true;\n    }\n    else if ((0, graphql_1.isCompositeType)(typeA) && (0, graphql_1.isCompositeType)(typeB)) {\n        return (0, graphql_1.doTypesOverlap)(schema, typeA, typeB);\n    }\n    return false;\n}\nexports.implementsAbstractType = implementsAbstractType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.observableToAsyncIterable = void 0;\nfunction observableToAsyncIterable(observable) {\n    const pullQueue = [];\n    const pushQueue = [];\n    let listening = true;\n    const pushValue = (value) => {\n        if (pullQueue.length !== 0) {\n            // It is safe to use the ! operator here as we check the length.\n            pullQueue.shift()({ value, done: false });\n        }\n        else {\n            pushQueue.push({ value, done: false });\n        }\n    };\n    const pushError = (error) => {\n        if (pullQueue.length !== 0) {\n            // It is safe to use the ! operator here as we check the length.\n            pullQueue.shift()({ value: { errors: [error] }, done: false });\n        }\n        else {\n            pushQueue.push({ value: { errors: [error] }, done: false });\n        }\n    };\n    const pushDone = () => {\n        if (pullQueue.length !== 0) {\n            // It is safe to use the ! operator here as we check the length.\n            pullQueue.shift()({ done: true });\n        }\n        else {\n            pushQueue.push({ done: true });\n        }\n    };\n    const pullValue = () => new Promise(resolve => {\n        if (pushQueue.length !== 0) {\n            const element = pushQueue.shift();\n            // either {value: {errors: [...]}} or {value: ...}\n            resolve(element);\n        }\n        else {\n            pullQueue.push(resolve);\n        }\n    });\n    const subscription = observable.subscribe({\n        next(value) {\n            pushValue(value);\n        },\n        error(err) {\n            pushError(err);\n        },\n        complete() {\n            pushDone();\n        },\n    });\n    const emptyQueue = () => {\n        if (listening) {\n            listening = false;\n            subscription.unsubscribe();\n            for (const resolve of pullQueue) {\n                resolve({ value: undefined, done: true });\n            }\n            pullQueue.length = 0;\n            pushQueue.length = 0;\n        }\n    };\n    return {\n        next() {\n            // return is a defined method, so it is safe to call it.\n            return listening ? pullValue() : this.return();\n        },\n        return() {\n            emptyQueue();\n            return Promise.resolve({ value: undefined, done: true });\n        },\n        throw(error) {\n            emptyQueue();\n            return Promise.reject(error);\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\nexports.observableToAsyncIterable = observableToAsyncIterable;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOperationASTFromRequest = exports.getOperationASTFromDocument = void 0;\nconst graphql_1 = require(\"graphql\");\nconst memoize_js_1 = require(\"./memoize.js\");\nfunction getOperationASTFromDocument(documentNode, operationName) {\n    const doc = (0, graphql_1.getOperationAST)(documentNode, operationName);\n    if (!doc) {\n        throw new Error(`Cannot infer operation ${operationName || ''}`);\n    }\n    return doc;\n}\nexports.getOperationASTFromDocument = getOperationASTFromDocument;\nexports.getOperationASTFromRequest = (0, memoize_js_1.memoize1)(function getOperationASTFromRequest(request) {\n    return getOperationASTFromDocument(request.document, request.operationName);\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GraphQLStreamDirective = exports.GraphQLDeferDirective = void 0;\nconst graphql_1 = require(\"graphql\");\n/**\n * Used to conditionally defer fragments.\n */\nexports.GraphQLDeferDirective = new graphql_1.GraphQLDirective({\n    name: 'defer',\n    description: 'Directs the executor to defer this fragment when the `if` argument is true or undefined.',\n    locations: [graphql_1.DirectiveLocation.FRAGMENT_SPREAD, graphql_1.DirectiveLocation.INLINE_FRAGMENT],\n    args: {\n        if: {\n            type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLBoolean),\n            description: 'Deferred when true or undefined.',\n            defaultValue: true,\n        },\n        label: {\n            type: graphql_1.GraphQLString,\n            description: 'Unique name',\n        },\n    },\n});\n/**\n * Used to conditionally stream list fields.\n */\nexports.GraphQLStreamDirective = new graphql_1.GraphQLDirective({\n    name: 'stream',\n    description: 'Directs the executor to stream plural fields when the `if` argument is true or undefined.',\n    locations: [graphql_1.DirectiveLocation.FIELD],\n    args: {\n        if: {\n            type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLBoolean),\n            description: 'Stream when true or undefined.',\n            defaultValue: true,\n        },\n        label: {\n            type: graphql_1.GraphQLString,\n            description: 'Unique name',\n        },\n        initialCount: {\n            defaultValue: 0,\n            type: graphql_1.GraphQLInt,\n            description: 'Number of items to return immediately',\n        },\n    },\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccumulatorMap = void 0;\n/**\n * ES6 Map with additional `add` method to accumulate items.\n */\nclass AccumulatorMap extends Map {\n    get [Symbol.toStringTag]() {\n        return 'AccumulatorMap';\n    }\n    add(key, item) {\n        const group = this.get(key);\n        if (group === undefined) {\n            this.set(key, [item]);\n        }\n        else {\n            group.push(item);\n        }\n    }\n}\nexports.AccumulatorMap = AccumulatorMap;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.collectSubFields = exports.getDeferValues = exports.getFieldEntryKey = exports.doesFragmentConditionMatch = exports.shouldIncludeNode = exports.collectFields = void 0;\nconst memoize_js_1 = require(\"./memoize.js\");\nconst graphql_1 = require(\"graphql\");\nconst directives_js_1 = require(\"./directives.js\");\nconst AccumulatorMap_js_1 = require(\"./AccumulatorMap.js\");\nfunction collectFieldsImpl(schema, fragments, variableValues, runtimeType, selectionSet, fields, patches, visitedFragmentNames) {\n    for (const selection of selectionSet.selections) {\n        switch (selection.kind) {\n            case graphql_1.Kind.FIELD: {\n                if (!shouldIncludeNode(variableValues, selection)) {\n                    continue;\n                }\n                fields.add(getFieldEntryKey(selection), selection);\n                break;\n            }\n            case graphql_1.Kind.INLINE_FRAGMENT: {\n                if (!shouldIncludeNode(variableValues, selection) ||\n                    !doesFragmentConditionMatch(schema, selection, runtimeType)) {\n                    continue;\n                }\n                const defer = getDeferValues(variableValues, selection);\n                if (defer) {\n                    const patchFields = new AccumulatorMap_js_1.AccumulatorMap();\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, selection.selectionSet, patchFields, patches, visitedFragmentNames);\n                    patches.push({\n                        label: defer.label,\n                        fields: patchFields,\n                    });\n                }\n                else {\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, selection.selectionSet, fields, patches, visitedFragmentNames);\n                }\n                break;\n            }\n            case graphql_1.Kind.FRAGMENT_SPREAD: {\n                const fragName = selection.name.value;\n                if (!shouldIncludeNode(variableValues, selection)) {\n                    continue;\n                }\n                const defer = getDeferValues(variableValues, selection);\n                if (visitedFragmentNames.has(fragName) && !defer) {\n                    continue;\n                }\n                const fragment = fragments[fragName];\n                if (!fragment || !doesFragmentConditionMatch(schema, fragment, runtimeType)) {\n                    continue;\n                }\n                if (!defer) {\n                    visitedFragmentNames.add(fragName);\n                }\n                if (defer) {\n                    const patchFields = new AccumulatorMap_js_1.AccumulatorMap();\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, fragment.selectionSet, patchFields, patches, visitedFragmentNames);\n                    patches.push({\n                        label: defer.label,\n                        fields: patchFields,\n                    });\n                }\n                else {\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, fragment.selectionSet, fields, patches, visitedFragmentNames);\n                }\n                break;\n            }\n        }\n    }\n}\n/**\n * Given a selectionSet, collects all of the fields and returns them.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field that\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * object type returned by that field.\n *\n */\nfunction collectFields(schema, fragments, variableValues, runtimeType, selectionSet) {\n    const fields = new AccumulatorMap_js_1.AccumulatorMap();\n    const patches = [];\n    collectFieldsImpl(schema, fragments, variableValues, runtimeType, selectionSet, fields, patches, new Set());\n    return { fields, patches };\n}\nexports.collectFields = collectFields;\n/**\n * Determines if a field should be included based on the `@include` and `@skip`\n * directives, where `@skip` has higher precedence than `@include`.\n */\nfunction shouldIncludeNode(variableValues, node) {\n    const skip = (0, graphql_1.getDirectiveValues)(graphql_1.GraphQLSkipDirective, node, variableValues);\n    if ((skip === null || skip === void 0 ? void 0 : skip['if']) === true) {\n        return false;\n    }\n    const include = (0, graphql_1.getDirectiveValues)(graphql_1.GraphQLIncludeDirective, node, variableValues);\n    if ((include === null || include === void 0 ? void 0 : include['if']) === false) {\n        return false;\n    }\n    return true;\n}\nexports.shouldIncludeNode = shouldIncludeNode;\n/**\n * Determines if a fragment is applicable to the given type.\n */\nfunction doesFragmentConditionMatch(schema, fragment, type) {\n    const typeConditionNode = fragment.typeCondition;\n    if (!typeConditionNode) {\n        return true;\n    }\n    const conditionalType = (0, graphql_1.typeFromAST)(schema, typeConditionNode);\n    if (conditionalType === type) {\n        return true;\n    }\n    if ((0, graphql_1.isAbstractType)(conditionalType)) {\n        const possibleTypes = schema.getPossibleTypes(conditionalType);\n        return possibleTypes.includes(type);\n    }\n    return false;\n}\nexports.doesFragmentConditionMatch = doesFragmentConditionMatch;\n/**\n * Implements the logic to compute the key of a given field's entry\n */\nfunction getFieldEntryKey(node) {\n    return node.alias ? node.alias.value : node.name.value;\n}\nexports.getFieldEntryKey = getFieldEntryKey;\n/**\n * Returns an object containing the `@defer` arguments if a field should be\n * deferred based on the experimental flag, defer directive present and\n * not disabled by the \"if\" argument.\n */\nfunction getDeferValues(variableValues, node) {\n    const defer = (0, graphql_1.getDirectiveValues)(directives_js_1.GraphQLDeferDirective, node, variableValues);\n    if (!defer) {\n        return;\n    }\n    if (defer['if'] === false) {\n        return;\n    }\n    return {\n        label: typeof defer['label'] === 'string' ? defer['label'] : undefined,\n    };\n}\nexports.getDeferValues = getDeferValues;\n/**\n * Given an array of field nodes, collects all of the subfields of the passed\n * in fields, and returns them at the end.\n *\n * CollectSubFields requires the \"return type\" of an object. For a field that\n * returns an Interface or Union type, the \"return type\" will be the actual\n * object type returned by that field.\n *\n */\nexports.collectSubFields = (0, memoize_js_1.memoize5)(function collectSubfields(schema, fragments, variableValues, returnType, fieldNodes) {\n    const subFieldNodes = new AccumulatorMap_js_1.AccumulatorMap();\n    const visitedFragmentNames = new Set();\n    const subPatches = [];\n    const subFieldsAndPatches = {\n        fields: subFieldNodes,\n        patches: subPatches,\n    };\n    for (const node of fieldNodes) {\n        if (node.selectionSet) {\n            collectFieldsImpl(schema, fragments, variableValues, returnType, node.selectionSet, subFieldNodes, subPatches, visitedFragmentNames);\n        }\n    }\n    return subFieldsAndPatches;\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.visitResult = exports.visitErrors = exports.visitData = void 0;\nconst getOperationASTFromRequest_js_1 = require(\"./getOperationASTFromRequest.js\");\nconst graphql_1 = require(\"graphql\");\nconst collectFields_js_1 = require(\"./collectFields.js\");\nfunction visitData(data, enter, leave) {\n    if (Array.isArray(data)) {\n        return data.map(value => visitData(value, enter, leave));\n    }\n    else if (typeof data === 'object') {\n        const newData = enter != null ? enter(data) : data;\n        if (newData != null) {\n            for (const key in newData) {\n                const value = newData[key];\n                Object.defineProperty(newData, key, {\n                    value: visitData(value, enter, leave),\n                });\n            }\n        }\n        return leave != null ? leave(newData) : newData;\n    }\n    return data;\n}\nexports.visitData = visitData;\nfunction visitErrors(errors, visitor) {\n    return errors.map(error => visitor(error));\n}\nexports.visitErrors = visitErrors;\nfunction visitResult(result, request, schema, resultVisitorMap, errorVisitorMap) {\n    const fragments = request.document.definitions.reduce((acc, def) => {\n        if (def.kind === graphql_1.Kind.FRAGMENT_DEFINITION) {\n            acc[def.name.value] = def;\n        }\n        return acc;\n    }, {});\n    const variableValues = request.variables || {};\n    const errorInfo = {\n        segmentInfoMap: new Map(),\n        unpathedErrors: new Set(),\n    };\n    const data = result.data;\n    const errors = result.errors;\n    const visitingErrors = errors != null && errorVisitorMap != null;\n    const operationDocumentNode = (0, getOperationASTFromRequest_js_1.getOperationASTFromRequest)(request);\n    if (data != null && operationDocumentNode != null) {\n        result.data = visitRoot(data, operationDocumentNode, schema, fragments, variableValues, resultVisitorMap, visitingErrors ? errors : undefined, errorInfo);\n    }\n    if (errors != null && errorVisitorMap) {\n        result.errors = visitErrorsByType(errors, errorVisitorMap, errorInfo);\n    }\n    return result;\n}\nexports.visitResult = visitResult;\nfunction visitErrorsByType(errors, errorVisitorMap, errorInfo) {\n    const segmentInfoMap = errorInfo.segmentInfoMap;\n    const unpathedErrors = errorInfo.unpathedErrors;\n    const unpathedErrorVisitor = errorVisitorMap['__unpathed'];\n    return errors.map(originalError => {\n        const pathSegmentsInfo = segmentInfoMap.get(originalError);\n        const newError = pathSegmentsInfo == null\n            ? originalError\n            : pathSegmentsInfo.reduceRight((acc, segmentInfo) => {\n                const typeName = segmentInfo.type.name;\n                const typeVisitorMap = errorVisitorMap[typeName];\n                if (typeVisitorMap == null) {\n                    return acc;\n                }\n                const errorVisitor = typeVisitorMap[segmentInfo.fieldName];\n                return errorVisitor == null ? acc : errorVisitor(acc, segmentInfo.pathIndex);\n            }, originalError);\n        if (unpathedErrorVisitor && unpathedErrors.has(originalError)) {\n            return unpathedErrorVisitor(newError);\n        }\n        return newError;\n    });\n}\nfunction getOperationRootType(schema, operationDef) {\n    switch (operationDef.operation) {\n        case 'query':\n            return schema.getQueryType();\n        case 'mutation':\n            return schema.getMutationType();\n        case 'subscription':\n            return schema.getSubscriptionType();\n    }\n}\nfunction visitRoot(root, operation, schema, fragments, variableValues, resultVisitorMap, errors, errorInfo) {\n    const operationRootType = getOperationRootType(schema, operation);\n    const { fields: collectedFields } = (0, collectFields_js_1.collectFields)(schema, fragments, variableValues, operationRootType, operation.selectionSet);\n    return visitObjectValue(root, operationRootType, collectedFields, schema, fragments, variableValues, resultVisitorMap, 0, errors, errorInfo);\n}\nfunction visitObjectValue(object, type, fieldNodeMap, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo) {\n    var _a;\n    const fieldMap = type.getFields();\n    const typeVisitorMap = resultVisitorMap === null || resultVisitorMap === void 0 ? void 0 : resultVisitorMap[type.name];\n    const enterObject = typeVisitorMap === null || typeVisitorMap === void 0 ? void 0 : typeVisitorMap.__enter;\n    const newObject = enterObject != null ? enterObject(object) : object;\n    let sortedErrors;\n    let errorMap = null;\n    if (errors != null) {\n        sortedErrors = sortErrorsByPathSegment(errors, pathIndex);\n        errorMap = sortedErrors.errorMap;\n        for (const error of sortedErrors.unpathedErrors) {\n            errorInfo.unpathedErrors.add(error);\n        }\n    }\n    for (const [responseKey, subFieldNodes] of fieldNodeMap) {\n        const fieldName = subFieldNodes[0].name.value;\n        let fieldType = (_a = fieldMap[fieldName]) === null || _a === void 0 ? void 0 : _a.type;\n        if (fieldType == null) {\n            switch (fieldName) {\n                case '__typename':\n                    fieldType = graphql_1.TypeNameMetaFieldDef.type;\n                    break;\n                case '__schema':\n                    fieldType = graphql_1.SchemaMetaFieldDef.type;\n                    break;\n                case '__type':\n                    fieldType = graphql_1.TypeMetaFieldDef.type;\n                    break;\n            }\n        }\n        const newPathIndex = pathIndex + 1;\n        let fieldErrors;\n        if (errorMap) {\n            fieldErrors = errorMap[responseKey];\n            if (fieldErrors != null) {\n                delete errorMap[responseKey];\n            }\n            addPathSegmentInfo(type, fieldName, newPathIndex, fieldErrors, errorInfo);\n        }\n        const newValue = visitFieldValue(object[responseKey], fieldType, subFieldNodes, schema, fragments, variableValues, resultVisitorMap, newPathIndex, fieldErrors, errorInfo);\n        updateObject(newObject, responseKey, newValue, typeVisitorMap, fieldName);\n    }\n    const oldTypename = newObject.__typename;\n    if (oldTypename != null) {\n        updateObject(newObject, '__typename', oldTypename, typeVisitorMap, '__typename');\n    }\n    if (errorMap) {\n        for (const errorsKey in errorMap) {\n            const errors = errorMap[errorsKey];\n            for (const error of errors) {\n                errorInfo.unpathedErrors.add(error);\n            }\n        }\n    }\n    const leaveObject = typeVisitorMap === null || typeVisitorMap === void 0 ? void 0 : typeVisitorMap.__leave;\n    return leaveObject != null ? leaveObject(newObject) : newObject;\n}\nfunction updateObject(object, responseKey, newValue, typeVisitorMap, fieldName) {\n    if (typeVisitorMap == null) {\n        object[responseKey] = newValue;\n        return;\n    }\n    const fieldVisitor = typeVisitorMap[fieldName];\n    if (fieldVisitor == null) {\n        object[responseKey] = newValue;\n        return;\n    }\n    const visitedValue = fieldVisitor(newValue);\n    if (visitedValue === undefined) {\n        delete object[responseKey];\n        return;\n    }\n    object[responseKey] = visitedValue;\n}\nfunction visitListValue(list, returnType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo) {\n    return list.map(listMember => visitFieldValue(listMember, returnType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex + 1, errors, errorInfo));\n}\nfunction visitFieldValue(value, returnType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors = [], errorInfo) {\n    if (value == null) {\n        return value;\n    }\n    const nullableType = (0, graphql_1.getNullableType)(returnType);\n    if ((0, graphql_1.isListType)(nullableType)) {\n        return visitListValue(value, nullableType.ofType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo);\n    }\n    else if ((0, graphql_1.isAbstractType)(nullableType)) {\n        const finalType = schema.getType(value.__typename);\n        const { fields: collectedFields } = (0, collectFields_js_1.collectSubFields)(schema, fragments, variableValues, finalType, fieldNodes);\n        return visitObjectValue(value, finalType, collectedFields, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo);\n    }\n    else if ((0, graphql_1.isObjectType)(nullableType)) {\n        const { fields: collectedFields } = (0, collectFields_js_1.collectSubFields)(schema, fragments, variableValues, nullableType, fieldNodes);\n        return visitObjectValue(value, nullableType, collectedFields, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo);\n    }\n    const typeVisitorMap = resultVisitorMap === null || resultVisitorMap === void 0 ? void 0 : resultVisitorMap[nullableType.name];\n    if (typeVisitorMap == null) {\n        return value;\n    }\n    const visitedValue = typeVisitorMap(value);\n    return visitedValue === undefined ? value : visitedValue;\n}\nfunction sortErrorsByPathSegment(errors, pathIndex) {\n    var _a;\n    const errorMap = Object.create(null);\n    const unpathedErrors = new Set();\n    for (const error of errors) {\n        const pathSegment = (_a = error.path) === null || _a === void 0 ? void 0 : _a[pathIndex];\n        if (pathSegment == null) {\n            unpathedErrors.add(error);\n            continue;\n        }\n        if (pathSegment in errorMap) {\n            errorMap[pathSegment].push(error);\n        }\n        else {\n            errorMap[pathSegment] = [error];\n        }\n    }\n    return {\n        errorMap,\n        unpathedErrors,\n    };\n}\nfunction addPathSegmentInfo(type, fieldName, pathIndex, errors = [], errorInfo) {\n    for (const error of errors) {\n        const segmentInfo = {\n            type,\n            fieldName,\n            pathIndex,\n        };\n        const pathSegmentsInfo = errorInfo.segmentInfoMap.get(error);\n        if (pathSegmentsInfo == null) {\n            errorInfo.segmentInfoMap.set(error, [segmentInfo]);\n        }\n        else {\n            pathSegmentsInfo.push(segmentInfo);\n        }\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.valueMatchesCriteria = void 0;\nfunction valueMatchesCriteria(value, criteria) {\n    if (value == null) {\n        return value === criteria;\n    }\n    else if (Array.isArray(value)) {\n        return Array.isArray(criteria) && value.every((val, index) => valueMatchesCriteria(val, criteria[index]));\n    }\n    else if (typeof value === 'object') {\n        return (typeof criteria === 'object' &&\n            criteria &&\n            Object.keys(criteria).every(propertyName => valueMatchesCriteria(value[propertyName], criteria[propertyName])));\n    }\n    else if (criteria instanceof RegExp) {\n        return criteria.test(value);\n    }\n    return value === criteria;\n}\nexports.valueMatchesCriteria = valueMatchesCriteria;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAsyncIterable = void 0;\nfunction isAsyncIterable(value) {\n    return (typeof value === 'object' &&\n        value != null &&\n        Symbol.asyncIterator in value &&\n        typeof value[Symbol.asyncIterator] === 'function');\n}\nexports.isAsyncIterable = isAsyncIterable;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isDocumentNode = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction isDocumentNode(object) {\n    return object && typeof object === 'object' && 'kind' in object && object.kind === graphql_1.Kind.DOCUMENT;\n}\nexports.isDocumentNode = isDocumentNode;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withCancel = exports.getAsyncIterableWithCancel = exports.getAsyncIteratorWithCancel = void 0;\nconst memoize_js_1 = require(\"./memoize.js\");\nasync function defaultAsyncIteratorReturn(value) {\n    return { value, done: true };\n}\nconst proxyMethodFactory = (0, memoize_js_1.memoize2)(function proxyMethodFactory(target, targetMethod) {\n    return function proxyMethod(...args) {\n        return Reflect.apply(targetMethod, target, args);\n    };\n});\nfunction getAsyncIteratorWithCancel(asyncIterator, onCancel) {\n    return new Proxy(asyncIterator, {\n        has(asyncIterator, prop) {\n            if (prop === 'return') {\n                return true;\n            }\n            return Reflect.has(asyncIterator, prop);\n        },\n        get(asyncIterator, prop, receiver) {\n            const existingPropValue = Reflect.get(asyncIterator, prop, receiver);\n            if (prop === 'return') {\n                const existingReturn = existingPropValue || defaultAsyncIteratorReturn;\n                return async function returnWithCancel(value) {\n                    const returnValue = await onCancel(value);\n                    return Reflect.apply(existingReturn, asyncIterator, [returnValue]);\n                };\n            }\n            else if (typeof existingPropValue === 'function') {\n                return proxyMethodFactory(asyncIterator, existingPropValue);\n            }\n            return existingPropValue;\n        },\n    });\n}\nexports.getAsyncIteratorWithCancel = getAsyncIteratorWithCancel;\nfunction getAsyncIterableWithCancel(asyncIterable, onCancel) {\n    return new Proxy(asyncIterable, {\n        get(asyncIterable, prop, receiver) {\n            const existingPropValue = Reflect.get(asyncIterable, prop, receiver);\n            if (Symbol.asyncIterator === prop) {\n                return function asyncIteratorFactory() {\n                    const asyncIterator = Reflect.apply(existingPropValue, asyncIterable, []);\n                    return getAsyncIteratorWithCancel(asyncIterator, onCancel);\n                };\n            }\n            else if (typeof existingPropValue === 'function') {\n                return proxyMethodFactory(asyncIterable, existingPropValue);\n            }\n            return existingPropValue;\n        },\n    });\n}\nexports.getAsyncIterableWithCancel = getAsyncIterableWithCancel;\nexports.withCancel = getAsyncIterableWithCancel;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fixSchemaAst = void 0;\nconst graphql_1 = require(\"graphql\");\nconst print_schema_with_directives_js_1 = require(\"./print-schema-with-directives.js\");\nfunction buildFixedSchema(schema, options) {\n    const document = (0, print_schema_with_directives_js_1.getDocumentNodeFromSchema)(schema);\n    return (0, graphql_1.buildASTSchema)(document, {\n        ...(options || {}),\n    });\n}\nfunction fixSchemaAst(schema, options) {\n    // eslint-disable-next-line no-undef-init\n    let schemaWithValidAst = undefined;\n    if (!schema.astNode || !schema.extensionASTNodes) {\n        schemaWithValidAst = buildFixedSchema(schema, options);\n    }\n    if (!schema.astNode && (schemaWithValidAst === null || schemaWithValidAst === void 0 ? void 0 : schemaWithValidAst.astNode)) {\n        schema.astNode = schemaWithValidAst.astNode;\n    }\n    if (!schema.extensionASTNodes && (schemaWithValidAst === null || schemaWithValidAst === void 0 ? void 0 : schemaWithValidAst.astNode)) {\n        schema.extensionASTNodes = schemaWithValidAst.extensionASTNodes;\n    }\n    return schema;\n}\nexports.fixSchemaAst = fixSchemaAst;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractExtensionsFromSchema = void 0;\nconst mapSchema_js_1 = require(\"./mapSchema.js\");\nconst Interfaces_js_1 = require(\"./Interfaces.js\");\nfunction extractExtensionsFromSchema(schema) {\n    const result = {\n        schemaExtensions: schema.extensions || {},\n        types: {},\n    };\n    (0, mapSchema_js_1.mapSchema)(schema, {\n        [Interfaces_js_1.MapperKind.OBJECT_TYPE]: type => {\n            result.types[type.name] = { fields: {}, type: 'object', extensions: type.extensions || {} };\n            return type;\n        },\n        [Interfaces_js_1.MapperKind.INTERFACE_TYPE]: type => {\n            result.types[type.name] = { fields: {}, type: 'interface', extensions: type.extensions || {} };\n            return type;\n        },\n        [Interfaces_js_1.MapperKind.FIELD]: (field, fieldName, typeName) => {\n            result.types[typeName].fields[fieldName] = {\n                arguments: {},\n                extensions: field.extensions || {},\n            };\n            const args = field.args;\n            if (args != null) {\n                for (const argName in args) {\n                    result.types[typeName].fields[fieldName].arguments[argName] =\n                        args[argName].extensions || {};\n                }\n            }\n            return field;\n        },\n        [Interfaces_js_1.MapperKind.ENUM_TYPE]: type => {\n            result.types[type.name] = { values: {}, type: 'enum', extensions: type.extensions || {} };\n            return type;\n        },\n        [Interfaces_js_1.MapperKind.ENUM_VALUE]: (value, typeName, _schema, valueName) => {\n            result.types[typeName].values[valueName] = value.extensions || {};\n            return value;\n        },\n        [Interfaces_js_1.MapperKind.SCALAR_TYPE]: type => {\n            result.types[type.name] = { type: 'scalar', extensions: type.extensions || {} };\n            return type;\n        },\n        [Interfaces_js_1.MapperKind.UNION_TYPE]: type => {\n            result.types[type.name] = { type: 'union', extensions: type.extensions || {} };\n            return type;\n        },\n        [Interfaces_js_1.MapperKind.INPUT_OBJECT_TYPE]: type => {\n            result.types[type.name] = { fields: {}, type: 'input', extensions: type.extensions || {} };\n            return type;\n        },\n        [Interfaces_js_1.MapperKind.INPUT_OBJECT_FIELD]: (field, fieldName, typeName) => {\n            result.types[typeName].fields[fieldName] = {\n                extensions: field.extensions || {},\n            };\n            return field;\n        },\n    });\n    return result;\n}\nexports.extractExtensionsFromSchema = extractExtensionsFromSchema;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.printPathArray = exports.pathToArray = exports.addPath = void 0;\n/**\n * Given a Path and a key, return a new Path containing the new key.\n */\nfunction addPath(prev, key, typename) {\n    return { prev, key, typename };\n}\nexports.addPath = addPath;\n/**\n * Given a Path, return an Array of the path keys.\n */\nfunction pathToArray(path) {\n    const flattened = [];\n    let curr = path;\n    while (curr) {\n        flattened.push(curr.key);\n        curr = curr.prev;\n    }\n    return flattened.reverse();\n}\nexports.pathToArray = pathToArray;\n/**\n * Build a string describing the path.\n */\nfunction printPathArray(path) {\n    return path.map(key => (typeof key === 'number' ? '[' + key.toString() + ']' : '.' + key)).join('');\n}\nexports.printPathArray = printPathArray;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./loaders.js\"), exports);\ntslib_1.__exportStar(require(\"./helpers.js\"), exports);\ntslib_1.__exportStar(require(\"./get-directives.js\"), exports);\ntslib_1.__exportStar(require(\"./get-fields-with-directives.js\"), exports);\ntslib_1.__exportStar(require(\"./get-arguments-with-directives.js\"), exports);\ntslib_1.__exportStar(require(\"./get-implementing-types.js\"), exports);\ntslib_1.__exportStar(require(\"./print-schema-with-directives.js\"), exports);\ntslib_1.__exportStar(require(\"./get-fields-with-directives.js\"), exports);\ntslib_1.__exportStar(require(\"./validate-documents.js\"), exports);\ntslib_1.__exportStar(require(\"./parse-graphql-json.js\"), exports);\ntslib_1.__exportStar(require(\"./parse-graphql-sdl.js\"), exports);\ntslib_1.__exportStar(require(\"./build-operation-for-field.js\"), exports);\ntslib_1.__exportStar(require(\"./types.js\"), exports);\ntslib_1.__exportStar(require(\"./filterSchema.js\"), exports);\ntslib_1.__exportStar(require(\"./heal.js\"), exports);\ntslib_1.__exportStar(require(\"./getResolversFromSchema.js\"), exports);\ntslib_1.__exportStar(require(\"./forEachField.js\"), exports);\ntslib_1.__exportStar(require(\"./forEachDefaultValue.js\"), exports);\ntslib_1.__exportStar(require(\"./mapSchema.js\"), exports);\ntslib_1.__exportStar(require(\"./addTypes.js\"), exports);\ntslib_1.__exportStar(require(\"./rewire.js\"), exports);\ntslib_1.__exportStar(require(\"./prune.js\"), exports);\ntslib_1.__exportStar(require(\"./mergeDeep.js\"), exports);\ntslib_1.__exportStar(require(\"./Interfaces.js\"), exports);\ntslib_1.__exportStar(require(\"./stub.js\"), exports);\ntslib_1.__exportStar(require(\"./selectionSets.js\"), exports);\ntslib_1.__exportStar(require(\"./getResponseKeyFromInfo.js\"), exports);\ntslib_1.__exportStar(require(\"./fields.js\"), exports);\ntslib_1.__exportStar(require(\"./renameType.js\"), exports);\ntslib_1.__exportStar(require(\"./transformInputValue.js\"), exports);\ntslib_1.__exportStar(require(\"./mapAsyncIterator.js\"), exports);\ntslib_1.__exportStar(require(\"./updateArgument.js\"), exports);\ntslib_1.__exportStar(require(\"./implementsAbstractType.js\"), exports);\ntslib_1.__exportStar(require(\"./errors.js\"), exports);\ntslib_1.__exportStar(require(\"./observableToAsyncIterable.js\"), exports);\ntslib_1.__exportStar(require(\"./visitResult.js\"), exports);\ntslib_1.__exportStar(require(\"./getArgumentValues.js\"), exports);\ntslib_1.__exportStar(require(\"./valueMatchesCriteria.js\"), exports);\ntslib_1.__exportStar(require(\"./isAsyncIterable.js\"), exports);\ntslib_1.__exportStar(require(\"./isDocumentNode.js\"), exports);\ntslib_1.__exportStar(require(\"./astFromValueUntyped.js\"), exports);\ntslib_1.__exportStar(require(\"./executor.js\"), exports);\ntslib_1.__exportStar(require(\"./withCancel.js\"), exports);\ntslib_1.__exportStar(require(\"./AggregateError.js\"), exports);\ntslib_1.__exportStar(require(\"./rootTypes.js\"), exports);\ntslib_1.__exportStar(require(\"./comments.js\"), exports);\ntslib_1.__exportStar(require(\"./collectFields.js\"), exports);\ntslib_1.__exportStar(require(\"./inspect.js\"), exports);\ntslib_1.__exportStar(require(\"./memoize.js\"), exports);\ntslib_1.__exportStar(require(\"./fixSchemaAst.js\"), exports);\ntslib_1.__exportStar(require(\"./getOperationASTFromRequest.js\"), exports);\ntslib_1.__exportStar(require(\"./extractExtensionsFromSchema.js\"), exports);\ntslib_1.__exportStar(require(\"./Path.js\"), exports);\ntslib_1.__exportStar(require(\"./jsutils.js\"), exports);\ntslib_1.__exportStar(require(\"./directives.js\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertResolversPresent = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nfunction assertResolversPresent(schema, resolverValidationOptions = {}) {\n    const { requireResolversForArgs, requireResolversForNonScalar, requireResolversForAllFields } = resolverValidationOptions;\n    if (requireResolversForAllFields && (requireResolversForArgs || requireResolversForNonScalar)) {\n        throw new TypeError('requireResolversForAllFields takes precedence over the more specific assertions. ' +\n            'Please configure either requireResolversForAllFields or requireResolversForArgs / ' +\n            'requireResolversForNonScalar, but not a combination of them.');\n    }\n    (0, utils_1.forEachField)(schema, (field, typeName, fieldName) => {\n        // requires a resolver for *every* field.\n        if (requireResolversForAllFields) {\n            expectResolver('requireResolversForAllFields', requireResolversForAllFields, field, typeName, fieldName);\n        }\n        // requires a resolver on every field that has arguments\n        if (requireResolversForArgs && field.args.length > 0) {\n            expectResolver('requireResolversForArgs', requireResolversForArgs, field, typeName, fieldName);\n        }\n        // requires a resolver on every field that returns a non-scalar type\n        if (requireResolversForNonScalar !== 'ignore' && !(0, graphql_1.isScalarType)((0, graphql_1.getNamedType)(field.type))) {\n            expectResolver('requireResolversForNonScalar', requireResolversForNonScalar, field, typeName, fieldName);\n        }\n    });\n}\nexports.assertResolversPresent = assertResolversPresent;\nfunction expectResolver(validator, behavior, field, typeName, fieldName) {\n    if (!field.resolve) {\n        const message = `Resolver missing for \"${typeName}.${fieldName}\".\nTo disable this validator, use:\n  resolverValidationOptions: {\n    ${validator}: 'ignore'\n  }`;\n        if (behavior === 'error') {\n            throw new Error(message);\n        }\n        if (behavior === 'warn') {\n            console.warn(message);\n        }\n        return;\n    }\n    if (typeof field.resolve !== 'function') {\n        throw new Error(`Resolver \"${typeName}.${fieldName}\" must be a function`);\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainResolvers = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction chainResolvers(resolvers) {\n    return (root, args, ctx, info) => resolvers.reduce((prev, curResolver) => {\n        if (curResolver != null) {\n            return curResolver(prev, args, ctx, info);\n        }\n        return (0, graphql_1.defaultFieldResolver)(prev, args, ctx, info);\n    }, root);\n}\nexports.chainResolvers = chainResolvers;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkForResolveTypeResolver = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\n// If we have any union or interface types throw if no there is no resolveType resolver\nfunction checkForResolveTypeResolver(schema, requireResolversForResolveType) {\n    (0, utils_1.mapSchema)(schema, {\n        [utils_1.MapperKind.ABSTRACT_TYPE]: type => {\n            if (!type.resolveType) {\n                const message = `Type \"${type.name}\" is missing a \"__resolveType\" resolver. Pass 'ignore' into ` +\n                    '\"resolverValidationOptions.requireResolversForResolveType\" to disable this error.';\n                if (requireResolversForResolveType === 'error') {\n                    throw new Error(message);\n                }\n                if (requireResolversForResolveType === 'warn') {\n                    console.warn(message);\n                }\n            }\n            return undefined;\n        },\n    });\n}\nexports.checkForResolveTypeResolver = checkForResolveTypeResolver;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendResolversFromInterfaces = void 0;\nfunction extendResolversFromInterfaces(schema, resolvers) {\n    const extendedResolvers = {};\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        if ('getInterfaces' in type) {\n            extendedResolvers[typeName] = {};\n            for (const iFace of type.getInterfaces()) {\n                if (resolvers[iFace.name]) {\n                    for (const fieldName in resolvers[iFace.name]) {\n                        if (fieldName === '__isTypeOf' || !fieldName.startsWith('__')) {\n                            extendedResolvers[typeName][fieldName] = resolvers[iFace.name][fieldName];\n                        }\n                    }\n                }\n            }\n            const typeResolvers = resolvers[typeName];\n            extendedResolvers[typeName] = {\n                ...extendedResolvers[typeName],\n                ...typeResolvers,\n            };\n        }\n        else {\n            const typeResolvers = resolvers[typeName];\n            if (typeResolvers != null) {\n                extendedResolvers[typeName] = typeResolvers;\n            }\n        }\n    }\n    return extendedResolvers;\n}\nexports.extendResolversFromInterfaces = extendResolversFromInterfaces;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addResolversToSchema = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nconst checkForResolveTypeResolver_js_1 = require(\"./checkForResolveTypeResolver.js\");\nconst extendResolversFromInterfaces_js_1 = require(\"./extendResolversFromInterfaces.js\");\nfunction addResolversToSchema({ schema, resolvers: inputResolvers, defaultFieldResolver, resolverValidationOptions = {}, inheritResolversFromInterfaces = false, updateResolversInPlace = false, }) {\n    const { requireResolversToMatchSchema = 'error', requireResolversForResolveType } = resolverValidationOptions;\n    const resolvers = inheritResolversFromInterfaces\n        ? (0, extendResolversFromInterfaces_js_1.extendResolversFromInterfaces)(schema, inputResolvers)\n        : inputResolvers;\n    for (const typeName in resolvers) {\n        const resolverValue = resolvers[typeName];\n        const resolverType = typeof resolverValue;\n        if (resolverType !== 'object') {\n            throw new Error(`\"${typeName}\" defined in resolvers, but has invalid value \"${resolverValue}\". The resolver's value must be of type object.`);\n        }\n        const type = schema.getType(typeName);\n        if (type == null) {\n            if (requireResolversToMatchSchema === 'ignore') {\n                continue;\n            }\n            throw new Error(`\"${typeName}\" defined in resolvers, but not in schema`);\n        }\n        else if ((0, graphql_1.isSpecifiedScalarType)(type)) {\n            // allow -- without recommending -- overriding of specified scalar types\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else {\n                    type[fieldName] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0, graphql_1.isEnumType)(type)) {\n            const values = type.getValues();\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__') &&\n                    !values.some(value => value.name === fieldName) &&\n                    requireResolversToMatchSchema &&\n                    requireResolversToMatchSchema !== 'ignore') {\n                    throw new Error(`${type.name}.${fieldName} was defined in resolvers, but not present within ${type.name}`);\n                }\n            }\n        }\n        else if ((0, graphql_1.isUnionType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__') &&\n                    requireResolversToMatchSchema &&\n                    requireResolversToMatchSchema !== 'ignore') {\n                    throw new Error(`${type.name}.${fieldName} was defined in resolvers, but ${type.name} is not an object or interface type`);\n                }\n            }\n        }\n        else if ((0, graphql_1.isObjectType)(type) || (0, graphql_1.isInterfaceType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__')) {\n                    const fields = type.getFields();\n                    const field = fields[fieldName];\n                    if (field == null) {\n                        // Field present in resolver but not in schema\n                        if (requireResolversToMatchSchema && requireResolversToMatchSchema !== 'ignore') {\n                            throw new Error(`${typeName}.${fieldName} defined in resolvers, but not in schema`);\n                        }\n                    }\n                    else {\n                        // Field present in both the resolver and schema\n                        const fieldResolve = resolverValue[fieldName];\n                        if (typeof fieldResolve !== 'function' && typeof fieldResolve !== 'object') {\n                            throw new Error(`Resolver ${typeName}.${fieldName} must be object or function`);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    schema = updateResolversInPlace\n        ? addResolversToExistingSchema(schema, resolvers, defaultFieldResolver)\n        : createNewSchemaWithResolvers(schema, resolvers, defaultFieldResolver);\n    if (requireResolversForResolveType && requireResolversForResolveType !== 'ignore') {\n        (0, checkForResolveTypeResolver_js_1.checkForResolveTypeResolver)(schema, requireResolversForResolveType);\n    }\n    return schema;\n}\nexports.addResolversToSchema = addResolversToSchema;\nfunction addResolversToExistingSchema(schema, resolvers, defaultFieldResolver) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    const typeMap = schema.getTypeMap();\n    for (const typeName in resolvers) {\n        const type = schema.getType(typeName);\n        const resolverValue = resolvers[typeName];\n        if ((0, graphql_1.isScalarType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else if (fieldName === 'astNode' && type.astNode != null) {\n                    type.astNode = {\n                        ...type.astNode,\n                        description: (_b = (_a = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : type.astNode.description,\n                        directives: ((_c = type.astNode.directives) !== null && _c !== void 0 ? _c : []).concat((_e = (_d = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _d === void 0 ? void 0 : _d.directives) !== null && _e !== void 0 ? _e : []),\n                    };\n                }\n                else if (fieldName === 'extensionASTNodes' && type.extensionASTNodes != null) {\n                    type.extensionASTNodes = type.extensionASTNodes.concat((_f = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _f !== void 0 ? _f : []);\n                }\n                else if (fieldName === 'extensions' &&\n                    type.extensions != null &&\n                    resolverValue.extensions != null) {\n                    type.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                }\n                else {\n                    type[fieldName] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0, graphql_1.isEnumType)(type)) {\n            const config = type.toConfig();\n            const enumValueConfigMap = config.values;\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    config[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else if (fieldName === 'astNode' && config.astNode != null) {\n                    config.astNode = {\n                        ...config.astNode,\n                        description: (_h = (_g = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _g === void 0 ? void 0 : _g.description) !== null && _h !== void 0 ? _h : config.astNode.description,\n                        directives: ((_j = config.astNode.directives) !== null && _j !== void 0 ? _j : []).concat((_l = (_k = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _k === void 0 ? void 0 : _k.directives) !== null && _l !== void 0 ? _l : []),\n                    };\n                }\n                else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                    config.extensionASTNodes = config.extensionASTNodes.concat((_m = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _m !== void 0 ? _m : []);\n                }\n                else if (fieldName === 'extensions' &&\n                    type.extensions != null &&\n                    resolverValue.extensions != null) {\n                    type.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                }\n                else if (enumValueConfigMap[fieldName]) {\n                    enumValueConfigMap[fieldName].value = resolverValue[fieldName];\n                }\n            }\n            typeMap[typeName] = new graphql_1.GraphQLEnumType(config);\n        }\n        else if ((0, graphql_1.isUnionType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0, graphql_1.isObjectType)(type) || (0, graphql_1.isInterfaceType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    // this is for isTypeOf and resolveType and all the other stuff.\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                    continue;\n                }\n                const fields = type.getFields();\n                const field = fields[fieldName];\n                if (field != null) {\n                    const fieldResolve = resolverValue[fieldName];\n                    if (typeof fieldResolve === 'function') {\n                        // for convenience. Allows shorter syntax in resolver definition file\n                        field.resolve = fieldResolve.bind(resolverValue);\n                    }\n                    else {\n                        setFieldProperties(field, fieldResolve);\n                    }\n                }\n            }\n        }\n    }\n    // serialize all default values prior to healing fields with new scalar/enum types.\n    (0, utils_1.forEachDefaultValue)(schema, utils_1.serializeInputValue);\n    // schema may have new scalar/enum types that require healing\n    (0, utils_1.healSchema)(schema);\n    // reparse all default values with new parsing functions.\n    (0, utils_1.forEachDefaultValue)(schema, utils_1.parseInputValue);\n    if (defaultFieldResolver != null) {\n        (0, utils_1.forEachField)(schema, field => {\n            if (!field.resolve) {\n                field.resolve = defaultFieldResolver;\n            }\n        });\n    }\n    return schema;\n}\nfunction createNewSchemaWithResolvers(schema, resolvers, defaultFieldResolver) {\n    schema = (0, utils_1.mapSchema)(schema, {\n        [utils_1.MapperKind.SCALAR_TYPE]: type => {\n            var _a, _b, _c, _d, _e, _f;\n            const config = type.toConfig();\n            const resolverValue = resolvers[type.name];\n            if (!(0, graphql_1.isSpecifiedScalarType)(type) && resolverValue != null) {\n                for (const fieldName in resolverValue) {\n                    if (fieldName.startsWith('__')) {\n                        config[fieldName.substring(2)] = resolverValue[fieldName];\n                    }\n                    else if (fieldName === 'astNode' && config.astNode != null) {\n                        config.astNode = {\n                            ...config.astNode,\n                            description: (_b = (_a = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : config.astNode.description,\n                            directives: ((_c = config.astNode.directives) !== null && _c !== void 0 ? _c : []).concat((_e = (_d = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _d === void 0 ? void 0 : _d.directives) !== null && _e !== void 0 ? _e : []),\n                        };\n                    }\n                    else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                        config.extensionASTNodes = config.extensionASTNodes.concat((_f = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _f !== void 0 ? _f : []);\n                    }\n                    else if (fieldName === 'extensions' &&\n                        config.extensions != null &&\n                        resolverValue.extensions != null) {\n                        config.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                    }\n                    else {\n                        config[fieldName] = resolverValue[fieldName];\n                    }\n                }\n                return new graphql_1.GraphQLScalarType(config);\n            }\n        },\n        [utils_1.MapperKind.ENUM_TYPE]: type => {\n            var _a, _b, _c, _d, _e, _f;\n            const resolverValue = resolvers[type.name];\n            const config = type.toConfig();\n            const enumValueConfigMap = config.values;\n            if (resolverValue != null) {\n                for (const fieldName in resolverValue) {\n                    if (fieldName.startsWith('__')) {\n                        config[fieldName.substring(2)] = resolverValue[fieldName];\n                    }\n                    else if (fieldName === 'astNode' && config.astNode != null) {\n                        config.astNode = {\n                            ...config.astNode,\n                            description: (_b = (_a = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : config.astNode.description,\n                            directives: ((_c = config.astNode.directives) !== null && _c !== void 0 ? _c : []).concat((_e = (_d = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _d === void 0 ? void 0 : _d.directives) !== null && _e !== void 0 ? _e : []),\n                        };\n                    }\n                    else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                        config.extensionASTNodes = config.extensionASTNodes.concat((_f = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _f !== void 0 ? _f : []);\n                    }\n                    else if (fieldName === 'extensions' &&\n                        config.extensions != null &&\n                        resolverValue.extensions != null) {\n                        config.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                    }\n                    else if (enumValueConfigMap[fieldName]) {\n                        enumValueConfigMap[fieldName].value = resolverValue[fieldName];\n                    }\n                }\n                return new graphql_1.GraphQLEnumType(config);\n            }\n        },\n        [utils_1.MapperKind.UNION_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__resolveType']) {\n                    config.resolveType = resolverValue['__resolveType'];\n                }\n                return new graphql_1.GraphQLUnionType(config);\n            }\n        },\n        [utils_1.MapperKind.OBJECT_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__isTypeOf']) {\n                    config.isTypeOf = resolverValue['__isTypeOf'];\n                }\n                return new graphql_1.GraphQLObjectType(config);\n            }\n        },\n        [utils_1.MapperKind.INTERFACE_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__resolveType']) {\n                    config.resolveType = resolverValue['__resolveType'];\n                }\n                return new graphql_1.GraphQLInterfaceType(config);\n            }\n        },\n        [utils_1.MapperKind.COMPOSITE_FIELD]: (fieldConfig, fieldName, typeName) => {\n            const resolverValue = resolvers[typeName];\n            if (resolverValue != null) {\n                const fieldResolve = resolverValue[fieldName];\n                if (fieldResolve != null) {\n                    const newFieldConfig = { ...fieldConfig };\n                    if (typeof fieldResolve === 'function') {\n                        // for convenience. Allows shorter syntax in resolver definition file\n                        newFieldConfig.resolve = fieldResolve.bind(resolverValue);\n                    }\n                    else {\n                        setFieldProperties(newFieldConfig, fieldResolve);\n                    }\n                    return newFieldConfig;\n                }\n            }\n        },\n    });\n    if (defaultFieldResolver != null) {\n        schema = (0, utils_1.mapSchema)(schema, {\n            [utils_1.MapperKind.OBJECT_FIELD]: fieldConfig => ({\n                ...fieldConfig,\n                resolve: fieldConfig.resolve != null ? fieldConfig.resolve : defaultFieldResolver,\n            }),\n        });\n    }\n    return schema;\n}\nfunction setFieldProperties(field, propertiesObj) {\n    for (const propertyName in propertiesObj) {\n        field[propertyName] = propertiesObj[propertyName];\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeResolvers = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\n/**\n * Deep merges multiple resolver definition objects into a single definition.\n * @param resolversDefinitions Resolver definitions to be merged\n * @param options Additional options\n *\n * ```js\n * const { mergeResolvers } = require('@graphql-tools/merge');\n * const clientResolver = require('./clientResolver');\n * const productResolver = require('./productResolver');\n *\n * const resolvers = mergeResolvers([\n *  clientResolver,\n *  productResolver,\n * ]);\n * ```\n *\n * If you don't want to manually create the array of resolver objects, you can\n * also use this function along with loadFiles:\n *\n * ```js\n * const path = require('path');\n * const { mergeResolvers } = require('@graphql-tools/merge');\n * const { loadFilesSync } = require('@graphql-tools/load-files');\n *\n * const resolversArray = loadFilesSync(path.join(__dirname, './resolvers'));\n *\n * const resolvers = mergeResolvers(resolversArray)\n * ```\n */\nfunction mergeResolvers(resolversDefinitions, options) {\n    if (!resolversDefinitions || (Array.isArray(resolversDefinitions) && resolversDefinitions.length === 0)) {\n        return {};\n    }\n    if (!Array.isArray(resolversDefinitions)) {\n        return resolversDefinitions;\n    }\n    if (resolversDefinitions.length === 1) {\n        return resolversDefinitions[0] || {};\n    }\n    const resolvers = new Array();\n    for (let resolversDefinition of resolversDefinitions) {\n        if (Array.isArray(resolversDefinition)) {\n            resolversDefinition = mergeResolvers(resolversDefinition);\n        }\n        if (typeof resolversDefinition === 'object' && resolversDefinition) {\n            resolvers.push(resolversDefinition);\n        }\n    }\n    const result = (0, utils_1.mergeDeep)(resolvers, true);\n    if (options === null || options === void 0 ? void 0 : options.exclusions) {\n        for (const exclusion of options.exclusions) {\n            const [typeName, fieldName] = exclusion.split('.');\n            if (!fieldName || fieldName === '*') {\n                delete result[typeName];\n            }\n            else if (result[typeName]) {\n                delete result[typeName][fieldName];\n            }\n        }\n    }\n    return result;\n}\nexports.mergeResolvers = mergeResolvers;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeArguments = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\nfunction mergeArguments(args1, args2, config) {\n    const result = deduplicateArguments([...args2, ...args1].filter(utils_1.isSome));\n    if (config && config.sort) {\n        result.sort(utils_1.compareNodes);\n    }\n    return result;\n}\nexports.mergeArguments = mergeArguments;\nfunction deduplicateArguments(args) {\n    return args.reduce((acc, current) => {\n        const dup = acc.find(arg => arg.name.value === current.name.value);\n        if (!dup) {\n            return acc.concat([current]);\n        }\n        return acc;\n    }, []);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeDirective = exports.mergeDirectives = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nfunction directiveAlreadyExists(directivesArr, otherDirective) {\n    return !!directivesArr.find(directive => directive.name.value === otherDirective.name.value);\n}\nfunction nameAlreadyExists(name, namesArr) {\n    return namesArr.some(({ value }) => value === name.value);\n}\nfunction mergeArguments(a1, a2) {\n    const result = [...a2];\n    for (const argument of a1) {\n        const existingIndex = result.findIndex(a => a.name.value === argument.name.value);\n        if (existingIndex > -1) {\n            const existingArg = result[existingIndex];\n            if (existingArg.value.kind === 'ListValue') {\n                const source = existingArg.value.values;\n                const target = argument.value.values;\n                // merge values of two lists\n                existingArg.value.values = deduplicateLists(source, target, (targetVal, source) => {\n                    const value = targetVal.value;\n                    return !value || !source.some((sourceVal) => sourceVal.value === value);\n                });\n            }\n            else {\n                existingArg.value = argument.value;\n            }\n        }\n        else {\n            result.push(argument);\n        }\n    }\n    return result;\n}\nfunction deduplicateDirectives(directives) {\n    return directives\n        .map((directive, i, all) => {\n        const firstAt = all.findIndex(d => d.name.value === directive.name.value);\n        if (firstAt !== i) {\n            const dup = all[firstAt];\n            directive.arguments = mergeArguments(directive.arguments, dup.arguments);\n            return null;\n        }\n        return directive;\n    })\n        .filter(utils_1.isSome);\n}\nfunction mergeDirectives(d1 = [], d2 = [], config) {\n    const reverseOrder = config && config.reverseDirectives;\n    const asNext = reverseOrder ? d1 : d2;\n    const asFirst = reverseOrder ? d2 : d1;\n    const result = deduplicateDirectives([...asNext]);\n    for (const directive of asFirst) {\n        if (directiveAlreadyExists(result, directive)) {\n            const existingDirectiveIndex = result.findIndex(d => d.name.value === directive.name.value);\n            const existingDirective = result[existingDirectiveIndex];\n            result[existingDirectiveIndex].arguments = mergeArguments(directive.arguments || [], existingDirective.arguments || []);\n        }\n        else {\n            result.push(directive);\n        }\n    }\n    return result;\n}\nexports.mergeDirectives = mergeDirectives;\nfunction validateInputs(node, existingNode) {\n    const printedNode = (0, graphql_1.print)({\n        ...node,\n        description: undefined,\n    });\n    const printedExistingNode = (0, graphql_1.print)({\n        ...existingNode,\n        description: undefined,\n    });\n    // eslint-disable-next-line\n    const leaveInputs = new RegExp('(directive @w*d*)|( on .*$)', 'g');\n    const sameArguments = printedNode.replace(leaveInputs, '') === printedExistingNode.replace(leaveInputs, '');\n    if (!sameArguments) {\n        throw new Error(`Unable to merge GraphQL directive \"${node.name.value}\". \\nExisting directive:  \\n\\t${printedExistingNode} \\nReceived directive: \\n\\t${printedNode}`);\n    }\n}\nfunction mergeDirective(node, existingNode) {\n    if (existingNode) {\n        validateInputs(node, existingNode);\n        return {\n            ...node,\n            locations: [\n                ...existingNode.locations,\n                ...node.locations.filter(name => !nameAlreadyExists(name, existingNode.locations)),\n            ],\n        };\n    }\n    return node;\n}\nexports.mergeDirective = mergeDirective;\nfunction deduplicateLists(source, target, filterFn) {\n    return source.concat(target.filter(val => filterFn(val, source)));\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeEnumValues = void 0;\nconst directives_js_1 = require(\"./directives.js\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nfunction mergeEnumValues(first, second, config) {\n    if (config === null || config === void 0 ? void 0 : config.consistentEnumMerge) {\n        const reversed = [];\n        if (first) {\n            reversed.push(...first);\n        }\n        first = second;\n        second = reversed;\n    }\n    const enumValueMap = new Map();\n    if (first) {\n        for (const firstValue of first) {\n            enumValueMap.set(firstValue.name.value, firstValue);\n        }\n    }\n    if (second) {\n        for (const secondValue of second) {\n            const enumValue = secondValue.name.value;\n            if (enumValueMap.has(enumValue)) {\n                const firstValue = enumValueMap.get(enumValue);\n                firstValue.description = secondValue.description || firstValue.description;\n                firstValue.directives = (0, directives_js_1.mergeDirectives)(secondValue.directives, firstValue.directives);\n            }\n            else {\n                enumValueMap.set(enumValue, secondValue);\n            }\n        }\n    }\n    const result = [...enumValueMap.values()];\n    if (config && config.sort) {\n        result.sort(utils_1.compareNodes);\n    }\n    return result;\n}\nexports.mergeEnumValues = mergeEnumValues;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeEnum = void 0;\nconst graphql_1 = require(\"graphql\");\nconst directives_js_1 = require(\"./directives.js\");\nconst enum_values_js_1 = require(\"./enum-values.js\");\nfunction mergeEnum(e1, e2, config) {\n    if (e2) {\n        return {\n            name: e1.name,\n            description: e1['description'] || e2['description'],\n            kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) || e1.kind === 'EnumTypeDefinition' || e2.kind === 'EnumTypeDefinition'\n                ? 'EnumTypeDefinition'\n                : 'EnumTypeExtension',\n            loc: e1.loc,\n            directives: (0, directives_js_1.mergeDirectives)(e1.directives, e2.directives, config),\n            values: (0, enum_values_js_1.mergeEnumValues)(e1.values, e2.values, config),\n        };\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...e1,\n            kind: graphql_1.Kind.ENUM_TYPE_DEFINITION,\n        }\n        : e1;\n}\nexports.mergeEnum = mergeEnum;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultStringComparator = exports.CompareVal = exports.printTypeNode = exports.isNonNullTypeNode = exports.isListTypeNode = exports.isWrappingTypeNode = exports.extractType = exports.isSourceTypes = exports.isStringTypes = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction isStringTypes(types) {\n    return typeof types === 'string';\n}\nexports.isStringTypes = isStringTypes;\nfunction isSourceTypes(types) {\n    return types instanceof graphql_1.Source;\n}\nexports.isSourceTypes = isSourceTypes;\nfunction extractType(type) {\n    let visitedType = type;\n    while (visitedType.kind === graphql_1.Kind.LIST_TYPE || visitedType.kind === 'NonNullType') {\n        visitedType = visitedType.type;\n    }\n    return visitedType;\n}\nexports.extractType = extractType;\nfunction isWrappingTypeNode(type) {\n    return type.kind !== graphql_1.Kind.NAMED_TYPE;\n}\nexports.isWrappingTypeNode = isWrappingTypeNode;\nfunction isListTypeNode(type) {\n    return type.kind === graphql_1.Kind.LIST_TYPE;\n}\nexports.isListTypeNode = isListTypeNode;\nfunction isNonNullTypeNode(type) {\n    return type.kind === graphql_1.Kind.NON_NULL_TYPE;\n}\nexports.isNonNullTypeNode = isNonNullTypeNode;\nfunction printTypeNode(type) {\n    if (isListTypeNode(type)) {\n        return `[${printTypeNode(type.type)}]`;\n    }\n    if (isNonNullTypeNode(type)) {\n        return `${printTypeNode(type.type)}!`;\n    }\n    return type.name.value;\n}\nexports.printTypeNode = printTypeNode;\nvar CompareVal;\n(function (CompareVal) {\n    CompareVal[CompareVal[\"A_SMALLER_THAN_B\"] = -1] = \"A_SMALLER_THAN_B\";\n    CompareVal[CompareVal[\"A_EQUALS_B\"] = 0] = \"A_EQUALS_B\";\n    CompareVal[CompareVal[\"A_GREATER_THAN_B\"] = 1] = \"A_GREATER_THAN_B\";\n})(CompareVal = exports.CompareVal || (exports.CompareVal = {}));\nfunction defaultStringComparator(a, b) {\n    if (a == null && b == null) {\n        return CompareVal.A_EQUALS_B;\n    }\n    if (a == null) {\n        return CompareVal.A_SMALLER_THAN_B;\n    }\n    if (b == null) {\n        return CompareVal.A_GREATER_THAN_B;\n    }\n    if (a < b)\n        return CompareVal.A_SMALLER_THAN_B;\n    if (a > b)\n        return CompareVal.A_GREATER_THAN_B;\n    return CompareVal.A_EQUALS_B;\n}\nexports.defaultStringComparator = defaultStringComparator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeFields = void 0;\nconst utils_js_1 = require(\"./utils.js\");\nconst directives_js_1 = require(\"./directives.js\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nconst arguments_js_1 = require(\"./arguments.js\");\nfunction fieldAlreadyExists(fieldsArr, otherField, config) {\n    const result = fieldsArr.find(field => field.name.value === otherField.name.value);\n    if (result && !(config === null || config === void 0 ? void 0 : config.ignoreFieldConflicts)) {\n        const t1 = (0, utils_js_1.extractType)(result.type);\n        const t2 = (0, utils_js_1.extractType)(otherField.type);\n        if (t1.name.value !== t2.name.value) {\n            throw new Error(`Field \"${otherField.name.value}\" already defined with a different type. Declared as \"${t1.name.value}\", but you tried to override with \"${t2.name.value}\"`);\n        }\n    }\n    return !!result;\n}\nfunction mergeFields(type, f1, f2, config) {\n    const result = [];\n    if (f2 != null) {\n        result.push(...f2);\n    }\n    if (f1 != null) {\n        for (const field of f1) {\n            if (fieldAlreadyExists(result, field, config)) {\n                const existing = result.find((f) => f.name.value === field.name.value);\n                if (!(config === null || config === void 0 ? void 0 : config.ignoreFieldConflicts)) {\n                    if (config === null || config === void 0 ? void 0 : config.throwOnConflict) {\n                        preventConflicts(type, existing, field, false);\n                    }\n                    else {\n                        preventConflicts(type, existing, field, true);\n                    }\n                    if ((0, utils_js_1.isNonNullTypeNode)(field.type) && !(0, utils_js_1.isNonNullTypeNode)(existing.type)) {\n                        existing.type = field.type;\n                    }\n                }\n                existing.arguments = (0, arguments_js_1.mergeArguments)(field['arguments'] || [], existing.arguments || [], config);\n                existing.directives = (0, directives_js_1.mergeDirectives)(field.directives, existing.directives, config);\n                existing.description = field.description || existing.description;\n            }\n            else {\n                result.push(field);\n            }\n        }\n    }\n    if (config && config.sort) {\n        result.sort(utils_1.compareNodes);\n    }\n    if (config && config.exclusions) {\n        const exclusions = config.exclusions;\n        return result.filter(field => !exclusions.includes(`${type.name.value}.${field.name.value}`));\n    }\n    return result;\n}\nexports.mergeFields = mergeFields;\nfunction preventConflicts(type, a, b, ignoreNullability = false) {\n    const aType = (0, utils_js_1.printTypeNode)(a.type);\n    const bType = (0, utils_js_1.printTypeNode)(b.type);\n    if (aType !== bType && !safeChangeForFieldType(a.type, b.type, ignoreNullability)) {\n        throw new Error(`Field '${type.name.value}.${a.name.value}' changed type from '${aType}' to '${bType}'`);\n    }\n}\nfunction safeChangeForFieldType(oldType, newType, ignoreNullability = false) {\n    // both are named\n    if (!(0, utils_js_1.isWrappingTypeNode)(oldType) && !(0, utils_js_1.isWrappingTypeNode)(newType)) {\n        return oldType.toString() === newType.toString();\n    }\n    // new is non-null\n    if ((0, utils_js_1.isNonNullTypeNode)(newType)) {\n        const ofType = (0, utils_js_1.isNonNullTypeNode)(oldType) ? oldType.type : oldType;\n        return safeChangeForFieldType(ofType, newType.type);\n    }\n    // old is non-null\n    if ((0, utils_js_1.isNonNullTypeNode)(oldType)) {\n        return safeChangeForFieldType(newType, oldType, ignoreNullability);\n    }\n    // old is list\n    if ((0, utils_js_1.isListTypeNode)(oldType)) {\n        return (((0, utils_js_1.isListTypeNode)(newType) && safeChangeForFieldType(oldType.type, newType.type)) ||\n            ((0, utils_js_1.isNonNullTypeNode)(newType) && safeChangeForFieldType(oldType, newType['type'])));\n    }\n    return false;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeInputType = void 0;\nconst graphql_1 = require(\"graphql\");\nconst fields_js_1 = require(\"./fields.js\");\nconst directives_js_1 = require(\"./directives.js\");\nfunction mergeInputType(node, existingNode, config) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'InputObjectTypeDefinition' ||\n                    existingNode.kind === 'InputObjectTypeDefinition'\n                    ? 'InputObjectTypeDefinition'\n                    : 'InputObjectTypeExtension',\n                loc: node.loc,\n                fields: (0, fields_js_1.mergeFields)(node, node.fields, existingNode.fields, config),\n                directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config),\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL input type \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n        }\n        : node;\n}\nexports.mergeInputType = mergeInputType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeNamedTypeArray = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\nfunction alreadyExists(arr, other) {\n    return !!arr.find(i => i.name.value === other.name.value);\n}\nfunction mergeNamedTypeArray(first = [], second = [], config = {}) {\n    const result = [...second, ...first.filter(d => !alreadyExists(second, d))];\n    if (config && config.sort) {\n        result.sort(utils_1.compareNodes);\n    }\n    return result;\n}\nexports.mergeNamedTypeArray = mergeNamedTypeArray;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeInterface = void 0;\nconst graphql_1 = require(\"graphql\");\nconst fields_js_1 = require(\"./fields.js\");\nconst directives_js_1 = require(\"./directives.js\");\nconst merge_named_type_array_js_1 = require(\"./merge-named-type-array.js\");\nfunction mergeInterface(node, existingNode, config) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'InterfaceTypeDefinition' ||\n                    existingNode.kind === 'InterfaceTypeDefinition'\n                    ? 'InterfaceTypeDefinition'\n                    : 'InterfaceTypeExtension',\n                loc: node.loc,\n                fields: (0, fields_js_1.mergeFields)(node, node.fields, existingNode.fields, config),\n                directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config),\n                interfaces: node['interfaces']\n                    ? (0, merge_named_type_array_js_1.mergeNamedTypeArray)(node['interfaces'], existingNode['interfaces'], config)\n                    : undefined,\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL interface \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.INTERFACE_TYPE_DEFINITION,\n        }\n        : node;\n}\nexports.mergeInterface = mergeInterface;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeType = void 0;\nconst graphql_1 = require(\"graphql\");\nconst fields_js_1 = require(\"./fields.js\");\nconst directives_js_1 = require(\"./directives.js\");\nconst merge_named_type_array_js_1 = require(\"./merge-named-type-array.js\");\nfunction mergeType(node, existingNode, config) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'ObjectTypeDefinition' ||\n                    existingNode.kind === 'ObjectTypeDefinition'\n                    ? 'ObjectTypeDefinition'\n                    : 'ObjectTypeExtension',\n                loc: node.loc,\n                fields: (0, fields_js_1.mergeFields)(node, node.fields, existingNode.fields, config),\n                directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config),\n                interfaces: (0, merge_named_type_array_js_1.mergeNamedTypeArray)(node.interfaces, existingNode.interfaces, config),\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL type \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.OBJECT_TYPE_DEFINITION,\n        }\n        : node;\n}\nexports.mergeType = mergeType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeScalar = void 0;\nconst graphql_1 = require(\"graphql\");\nconst directives_js_1 = require(\"./directives.js\");\nfunction mergeScalar(node, existingNode, config) {\n    if (existingNode) {\n        return {\n            name: node.name,\n            description: node['description'] || existingNode['description'],\n            kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                node.kind === 'ScalarTypeDefinition' ||\n                existingNode.kind === 'ScalarTypeDefinition'\n                ? 'ScalarTypeDefinition'\n                : 'ScalarTypeExtension',\n            loc: node.loc,\n            directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config),\n        };\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.SCALAR_TYPE_DEFINITION,\n        }\n        : node;\n}\nexports.mergeScalar = mergeScalar;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeUnion = void 0;\nconst graphql_1 = require(\"graphql\");\nconst directives_js_1 = require(\"./directives.js\");\nconst merge_named_type_array_js_1 = require(\"./merge-named-type-array.js\");\nfunction mergeUnion(first, second, config) {\n    if (second) {\n        return {\n            name: first.name,\n            description: first['description'] || second['description'],\n            // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n            directives: (0, directives_js_1.mergeDirectives)(first.directives, second.directives, config),\n            kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) || first.kind === 'UnionTypeDefinition' || second.kind === 'UnionTypeDefinition'\n                ? graphql_1.Kind.UNION_TYPE_DEFINITION\n                : graphql_1.Kind.UNION_TYPE_EXTENSION,\n            loc: first.loc,\n            types: (0, merge_named_type_array_js_1.mergeNamedTypeArray)(first.types, second.types, config),\n        };\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...first,\n            kind: graphql_1.Kind.UNION_TYPE_DEFINITION,\n        }\n        : first;\n}\nexports.mergeUnion = mergeUnion;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeSchemaDefs = exports.DEFAULT_OPERATION_TYPE_NAME_MAP = void 0;\nconst graphql_1 = require(\"graphql\");\nconst directives_js_1 = require(\"./directives.js\");\nexports.DEFAULT_OPERATION_TYPE_NAME_MAP = {\n    query: 'Query',\n    mutation: 'Mutation',\n    subscription: 'Subscription',\n};\nfunction mergeOperationTypes(opNodeList = [], existingOpNodeList = []) {\n    const finalOpNodeList = [];\n    for (const opNodeType in exports.DEFAULT_OPERATION_TYPE_NAME_MAP) {\n        const opNode = opNodeList.find(n => n.operation === opNodeType) || existingOpNodeList.find(n => n.operation === opNodeType);\n        if (opNode) {\n            finalOpNodeList.push(opNode);\n        }\n    }\n    return finalOpNodeList;\n}\nfunction mergeSchemaDefs(node, existingNode, config) {\n    if (existingNode) {\n        return {\n            kind: node.kind === graphql_1.Kind.SCHEMA_DEFINITION || existingNode.kind === graphql_1.Kind.SCHEMA_DEFINITION\n                ? graphql_1.Kind.SCHEMA_DEFINITION\n                : graphql_1.Kind.SCHEMA_EXTENSION,\n            description: node['description'] || existingNode['description'],\n            directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config),\n            operationTypes: mergeOperationTypes(node.operationTypes, existingNode.operationTypes),\n        };\n    }\n    return ((config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.SCHEMA_DEFINITION,\n        }\n        : node);\n}\nexports.mergeSchemaDefs = mergeSchemaDefs;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeGraphQLNodes = exports.isNamedDefinitionNode = exports.schemaDefSymbol = void 0;\nconst graphql_1 = require(\"graphql\");\nconst type_js_1 = require(\"./type.js\");\nconst enum_js_1 = require(\"./enum.js\");\nconst scalar_js_1 = require(\"./scalar.js\");\nconst union_js_1 = require(\"./union.js\");\nconst input_type_js_1 = require(\"./input-type.js\");\nconst interface_js_1 = require(\"./interface.js\");\nconst directives_js_1 = require(\"./directives.js\");\nconst schema_def_js_1 = require(\"./schema-def.js\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nexports.schemaDefSymbol = 'SCHEMA_DEF_SYMBOL';\nfunction isNamedDefinitionNode(definitionNode) {\n    return 'name' in definitionNode;\n}\nexports.isNamedDefinitionNode = isNamedDefinitionNode;\nfunction mergeGraphQLNodes(nodes, config) {\n    var _a, _b, _c;\n    const mergedResultMap = {};\n    for (const nodeDefinition of nodes) {\n        if (isNamedDefinitionNode(nodeDefinition)) {\n            const name = (_a = nodeDefinition.name) === null || _a === void 0 ? void 0 : _a.value;\n            if (config === null || config === void 0 ? void 0 : config.commentDescriptions) {\n                (0, utils_1.collectComment)(nodeDefinition);\n            }\n            if (name == null) {\n                continue;\n            }\n            if (((_b = config === null || config === void 0 ? void 0 : config.exclusions) === null || _b === void 0 ? void 0 : _b.includes(name + '.*')) || ((_c = config === null || config === void 0 ? void 0 : config.exclusions) === null || _c === void 0 ? void 0 : _c.includes(name))) {\n                delete mergedResultMap[name];\n            }\n            else {\n                switch (nodeDefinition.kind) {\n                    case graphql_1.Kind.OBJECT_TYPE_DEFINITION:\n                    case graphql_1.Kind.OBJECT_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, type_js_1.mergeType)(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql_1.Kind.ENUM_TYPE_DEFINITION:\n                    case graphql_1.Kind.ENUM_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, enum_js_1.mergeEnum)(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql_1.Kind.UNION_TYPE_DEFINITION:\n                    case graphql_1.Kind.UNION_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, union_js_1.mergeUnion)(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql_1.Kind.SCALAR_TYPE_DEFINITION:\n                    case graphql_1.Kind.SCALAR_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, scalar_js_1.mergeScalar)(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n                    case graphql_1.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, input_type_js_1.mergeInputType)(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql_1.Kind.INTERFACE_TYPE_DEFINITION:\n                    case graphql_1.Kind.INTERFACE_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, interface_js_1.mergeInterface)(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql_1.Kind.DIRECTIVE_DEFINITION:\n                        mergedResultMap[name] = (0, directives_js_1.mergeDirective)(nodeDefinition, mergedResultMap[name]);\n                        break;\n                }\n            }\n        }\n        else if (nodeDefinition.kind === graphql_1.Kind.SCHEMA_DEFINITION || nodeDefinition.kind === graphql_1.Kind.SCHEMA_EXTENSION) {\n            mergedResultMap[exports.schemaDefSymbol] = (0, schema_def_js_1.mergeSchemaDefs)(nodeDefinition, mergedResultMap[exports.schemaDefSymbol], config);\n        }\n    }\n    return mergedResultMap;\n}\nexports.mergeGraphQLNodes = mergeGraphQLNodes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeGraphQLTypes = exports.mergeTypeDefs = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_js_1 = require(\"./utils.js\");\nconst merge_nodes_js_1 = require(\"./merge-nodes.js\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nconst schema_def_js_1 = require(\"./schema-def.js\");\nfunction mergeTypeDefs(typeSource, config) {\n    (0, utils_1.resetComments)();\n    const doc = {\n        kind: graphql_1.Kind.DOCUMENT,\n        definitions: mergeGraphQLTypes(typeSource, {\n            useSchemaDefinition: true,\n            forceSchemaDefinition: false,\n            throwOnConflict: false,\n            commentDescriptions: false,\n            ...config,\n        }),\n    };\n    let result;\n    if (config === null || config === void 0 ? void 0 : config.commentDescriptions) {\n        result = (0, utils_1.printWithComments)(doc);\n    }\n    else {\n        result = doc;\n    }\n    (0, utils_1.resetComments)();\n    return result;\n}\nexports.mergeTypeDefs = mergeTypeDefs;\nfunction visitTypeSources(typeSource, options, allNodes = [], visitedTypeSources = new Set()) {\n    if (typeSource && !visitedTypeSources.has(typeSource)) {\n        visitedTypeSources.add(typeSource);\n        if (typeof typeSource === 'function') {\n            visitTypeSources(typeSource(), options, allNodes, visitedTypeSources);\n        }\n        else if (Array.isArray(typeSource)) {\n            for (const type of typeSource) {\n                visitTypeSources(type, options, allNodes, visitedTypeSources);\n            }\n        }\n        else if ((0, graphql_1.isSchema)(typeSource)) {\n            const documentNode = (0, utils_1.getDocumentNodeFromSchema)(typeSource, options);\n            visitTypeSources(documentNode.definitions, options, allNodes, visitedTypeSources);\n        }\n        else if ((0, utils_js_1.isStringTypes)(typeSource) || (0, utils_js_1.isSourceTypes)(typeSource)) {\n            const documentNode = (0, graphql_1.parse)(typeSource, options);\n            visitTypeSources(documentNode.definitions, options, allNodes, visitedTypeSources);\n        }\n        else if (typeof typeSource === 'object' && (0, graphql_1.isDefinitionNode)(typeSource)) {\n            allNodes.push(typeSource);\n        }\n        else if ((0, utils_1.isDocumentNode)(typeSource)) {\n            visitTypeSources(typeSource.definitions, options, allNodes, visitedTypeSources);\n        }\n        else {\n            throw new Error(`typeDefs must contain only strings, documents, schemas, or functions, got ${typeof typeSource}`);\n        }\n    }\n    return allNodes;\n}\nfunction mergeGraphQLTypes(typeSource, config) {\n    var _a, _b, _c;\n    (0, utils_1.resetComments)();\n    const allNodes = visitTypeSources(typeSource, config);\n    const mergedNodes = (0, merge_nodes_js_1.mergeGraphQLNodes)(allNodes, config);\n    if (config === null || config === void 0 ? void 0 : config.useSchemaDefinition) {\n        // XXX: right now we don't handle multiple schema definitions\n        const schemaDef = mergedNodes[merge_nodes_js_1.schemaDefSymbol] || {\n            kind: graphql_1.Kind.SCHEMA_DEFINITION,\n            operationTypes: [],\n        };\n        const operationTypes = schemaDef.operationTypes;\n        for (const opTypeDefNodeType in schema_def_js_1.DEFAULT_OPERATION_TYPE_NAME_MAP) {\n            const opTypeDefNode = operationTypes.find(operationType => operationType.operation === opTypeDefNodeType);\n            if (!opTypeDefNode) {\n                const possibleRootTypeName = schema_def_js_1.DEFAULT_OPERATION_TYPE_NAME_MAP[opTypeDefNodeType];\n                const existingPossibleRootType = mergedNodes[possibleRootTypeName];\n                if (existingPossibleRootType != null && existingPossibleRootType.name != null) {\n                    operationTypes.push({\n                        kind: graphql_1.Kind.OPERATION_TYPE_DEFINITION,\n                        type: {\n                            kind: graphql_1.Kind.NAMED_TYPE,\n                            name: existingPossibleRootType.name,\n                        },\n                        operation: opTypeDefNodeType,\n                    });\n                }\n            }\n        }\n        if (((_a = schemaDef === null || schemaDef === void 0 ? void 0 : schemaDef.operationTypes) === null || _a === void 0 ? void 0 : _a.length) != null && schemaDef.operationTypes.length > 0) {\n            mergedNodes[merge_nodes_js_1.schemaDefSymbol] = schemaDef;\n        }\n    }\n    if ((config === null || config === void 0 ? void 0 : config.forceSchemaDefinition) && !((_c = (_b = mergedNodes[merge_nodes_js_1.schemaDefSymbol]) === null || _b === void 0 ? void 0 : _b.operationTypes) === null || _c === void 0 ? void 0 : _c.length)) {\n        mergedNodes[merge_nodes_js_1.schemaDefSymbol] = {\n            kind: graphql_1.Kind.SCHEMA_DEFINITION,\n            operationTypes: [\n                {\n                    kind: graphql_1.Kind.OPERATION_TYPE_DEFINITION,\n                    operation: 'query',\n                    type: {\n                        kind: graphql_1.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql_1.Kind.NAME,\n                            value: 'Query',\n                        },\n                    },\n                },\n            ],\n        };\n    }\n    const mergedNodeDefinitions = Object.values(mergedNodes);\n    if (config === null || config === void 0 ? void 0 : config.sort) {\n        const sortFn = typeof config.sort === 'function' ? config.sort : utils_js_1.defaultStringComparator;\n        mergedNodeDefinitions.sort((a, b) => { var _a, _b; return sortFn((_a = a.name) === null || _a === void 0 ? void 0 : _a.value, (_b = b.name) === null || _b === void 0 ? void 0 : _b.value); });\n    }\n    return mergedNodeDefinitions;\n}\nexports.mergeGraphQLTypes = mergeGraphQLTypes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./arguments.js\"), exports);\ntslib_1.__exportStar(require(\"./directives.js\"), exports);\ntslib_1.__exportStar(require(\"./enum-values.js\"), exports);\ntslib_1.__exportStar(require(\"./enum.js\"), exports);\ntslib_1.__exportStar(require(\"./fields.js\"), exports);\ntslib_1.__exportStar(require(\"./input-type.js\"), exports);\ntslib_1.__exportStar(require(\"./interface.js\"), exports);\ntslib_1.__exportStar(require(\"./merge-named-type-array.js\"), exports);\ntslib_1.__exportStar(require(\"./merge-nodes.js\"), exports);\ntslib_1.__exportStar(require(\"./merge-typedefs.js\"), exports);\ntslib_1.__exportStar(require(\"./scalar.js\"), exports);\ntslib_1.__exportStar(require(\"./type.js\"), exports);\ntslib_1.__exportStar(require(\"./union.js\"), exports);\ntslib_1.__exportStar(require(\"./utils.js\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyExtensions = exports.mergeExtensions = exports.extractExtensionsFromSchema = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\nvar utils_2 = require(\"@graphql-tools/utils\");\nObject.defineProperty(exports, \"extractExtensionsFromSchema\", { enumerable: true, get: function () { return utils_2.extractExtensionsFromSchema; } });\nfunction mergeExtensions(extensions) {\n    return (0, utils_1.mergeDeep)(extensions);\n}\nexports.mergeExtensions = mergeExtensions;\nfunction applyExtensionObject(obj, extensions) {\n    if (!obj) {\n        return;\n    }\n    obj.extensions = (0, utils_1.mergeDeep)([obj.extensions || {}, extensions || {}]);\n}\nfunction applyExtensions(schema, extensions) {\n    applyExtensionObject(schema, extensions.schemaExtensions);\n    for (const [typeName, data] of Object.entries(extensions.types || {})) {\n        const type = schema.getType(typeName);\n        if (type) {\n            applyExtensionObject(type, data.extensions);\n            if (data.type === 'object' || data.type === 'interface') {\n                for (const [fieldName, fieldData] of Object.entries(data.fields)) {\n                    const field = type.getFields()[fieldName];\n                    if (field) {\n                        applyExtensionObject(field, fieldData.extensions);\n                        for (const [arg, argData] of Object.entries(fieldData.arguments)) {\n                            applyExtensionObject(field.args.find(a => a.name === arg), argData);\n                        }\n                    }\n                }\n            }\n            else if (data.type === 'input') {\n                for (const [fieldName, fieldData] of Object.entries(data.fields)) {\n                    const field = type.getFields()[fieldName];\n                    applyExtensionObject(field, fieldData.extensions);\n                }\n            }\n            else if (data.type === 'enum') {\n                for (const [valueName, valueData] of Object.entries(data.values)) {\n                    const value = type.getValue(valueName);\n                    applyExtensionObject(value, valueData);\n                }\n            }\n        }\n    }\n    return schema;\n}\nexports.applyExtensions = applyExtensions;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./merge-resolvers.js\"), exports);\ntslib_1.__exportStar(require(\"./typedefs-mergers/index.js\"), exports);\ntslib_1.__exportStar(require(\"./extensions.js\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeExecutableSchema = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nconst addResolversToSchema_js_1 = require(\"./addResolversToSchema.js\");\nconst assertResolversPresent_js_1 = require(\"./assertResolversPresent.js\");\nconst merge_1 = require(\"@graphql-tools/merge\");\n/**\n * Builds a schema from the provided type definitions and resolvers.\n *\n * The type definitions are written using Schema Definition Language (SDL). They\n * can be provided as a string, a `DocumentNode`, a function, or an array of any\n * of these. If a function is provided, it will be passed no arguments and\n * should return an array of strings or `DocumentNode`s.\n *\n * Note: You can use GraphQL magic comment provide additional syntax\n * highlighting in your editor (with the appropriate editor plugin).\n *\n * ```js\n * const typeDefs = /* GraphQL *\\/ `\n *   type Query {\n *     posts: [Post]\n *     author(id: Int!): Author\n *   }\n * `;\n * ```\n *\n * The `resolvers` object should be a map of type names to nested object, which\n * themselves map the type's fields to their appropriate resolvers.\n * See the [Resolvers](/docs/resolvers) section of the documentation for more details.\n *\n * ```js\n * const resolvers = {\n *   Query: {\n *     posts: (obj, args, ctx, info) => getAllPosts(),\n *     author: (obj, args, ctx, info) => getAuthorById(args.id)\n *   }\n * };\n * ```\n *\n * Once you've defined both the `typeDefs` and `resolvers`, you can create your\n * schema:\n *\n * ```js\n * const schema = makeExecutableSchema({\n *   typeDefs,\n *   resolvers,\n * })\n * ```\n */\nfunction makeExecutableSchema({ typeDefs, resolvers = {}, resolverValidationOptions = {}, inheritResolversFromInterfaces = false, updateResolversInPlace = false, schemaExtensions, ...otherOptions }) {\n    // Validate and clean up arguments\n    if (typeof resolverValidationOptions !== 'object') {\n        throw new Error('Expected `resolverValidationOptions` to be an object');\n    }\n    if (!typeDefs) {\n        throw new Error('Must provide typeDefs');\n    }\n    let schema;\n    if ((0, graphql_1.isSchema)(typeDefs)) {\n        schema = typeDefs;\n    }\n    else if (otherOptions === null || otherOptions === void 0 ? void 0 : otherOptions.commentDescriptions) {\n        const mergedTypeDefs = (0, merge_1.mergeTypeDefs)(typeDefs, {\n            ...otherOptions,\n            commentDescriptions: true,\n        });\n        schema = (0, graphql_1.buildSchema)(mergedTypeDefs, otherOptions);\n    }\n    else {\n        const mergedTypeDefs = (0, merge_1.mergeTypeDefs)(typeDefs, otherOptions);\n        schema = (0, graphql_1.buildASTSchema)(mergedTypeDefs, otherOptions);\n    }\n    // We allow passing in an array of resolver maps, in which case we merge them\n    schema = (0, addResolversToSchema_js_1.addResolversToSchema)({\n        schema,\n        resolvers: (0, merge_1.mergeResolvers)(resolvers),\n        resolverValidationOptions,\n        inheritResolversFromInterfaces,\n        updateResolversInPlace,\n    });\n    if (Object.keys(resolverValidationOptions).length > 0) {\n        (0, assertResolversPresent_js_1.assertResolversPresent)(schema, resolverValidationOptions);\n    }\n    if (schemaExtensions) {\n        schemaExtensions = (0, merge_1.mergeExtensions)((0, utils_1.asArray)(schemaExtensions));\n        (0, merge_1.applyExtensions)(schema, schemaExtensions);\n    }\n    return schema;\n}\nexports.makeExecutableSchema = makeExecutableSchema;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeSchemas = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\nconst makeExecutableSchema_js_1 = require(\"./makeExecutableSchema.js\");\n/**\n * Synchronously merges multiple schemas, typeDefinitions and/or resolvers into a single schema.\n * @param config Configuration object\n */\nfunction mergeSchemas(config) {\n    const extractedTypeDefs = [];\n    const extractedResolvers = [];\n    const extractedSchemaExtensions = [];\n    if (config.schemas != null) {\n        for (const schema of config.schemas) {\n            extractedTypeDefs.push(schema);\n            extractedResolvers.push((0, utils_1.getResolversFromSchema)(schema));\n            extractedSchemaExtensions.push((0, utils_1.extractExtensionsFromSchema)(schema));\n        }\n    }\n    if (config.typeDefs != null) {\n        extractedTypeDefs.push(config.typeDefs);\n    }\n    if (config.resolvers != null) {\n        const additionalResolvers = (0, utils_1.asArray)(config.resolvers);\n        extractedResolvers.push(...additionalResolvers);\n    }\n    if (config.schemaExtensions != null) {\n        const additionalSchemaExtensions = (0, utils_1.asArray)(config.schemaExtensions);\n        extractedSchemaExtensions.push(...additionalSchemaExtensions);\n    }\n    return (0, makeExecutableSchema_js_1.makeExecutableSchema)({\n        ...config,\n        typeDefs: extractedTypeDefs,\n        resolvers: extractedResolvers,\n        schemaExtensions: extractedSchemaExtensions,\n    });\n}\nexports.mergeSchemas = mergeSchemas;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractExtensionsFromSchema = exports.extendResolversFromInterfaces = exports.checkForResolveTypeResolver = exports.addResolversToSchema = exports.chainResolvers = exports.assertResolversPresent = void 0;\nconst tslib_1 = require(\"tslib\");\nvar assertResolversPresent_js_1 = require(\"./assertResolversPresent.js\");\nObject.defineProperty(exports, \"assertResolversPresent\", { enumerable: true, get: function () { return assertResolversPresent_js_1.assertResolversPresent; } });\nvar chainResolvers_js_1 = require(\"./chainResolvers.js\");\nObject.defineProperty(exports, \"chainResolvers\", { enumerable: true, get: function () { return chainResolvers_js_1.chainResolvers; } });\nvar addResolversToSchema_js_1 = require(\"./addResolversToSchema.js\");\nObject.defineProperty(exports, \"addResolversToSchema\", { enumerable: true, get: function () { return addResolversToSchema_js_1.addResolversToSchema; } });\nvar checkForResolveTypeResolver_js_1 = require(\"./checkForResolveTypeResolver.js\");\nObject.defineProperty(exports, \"checkForResolveTypeResolver\", { enumerable: true, get: function () { return checkForResolveTypeResolver_js_1.checkForResolveTypeResolver; } });\nvar extendResolversFromInterfaces_js_1 = require(\"./extendResolversFromInterfaces.js\");\nObject.defineProperty(exports, \"extendResolversFromInterfaces\", { enumerable: true, get: function () { return extendResolversFromInterfaces_js_1.extendResolversFromInterfaces; } });\ntslib_1.__exportStar(require(\"./makeExecutableSchema.js\"), exports);\ntslib_1.__exportStar(require(\"./types.js\"), exports);\ntslib_1.__exportStar(require(\"./merge-schemas.js\"), exports);\nvar utils_1 = require(\"@graphql-tools/utils\");\nObject.defineProperty(exports, \"extractExtensionsFromSchema\", { enumerable: true, get: function () { return utils_1.extractExtensionsFromSchema; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.E_CANCELED = exports.E_ALREADY_LOCKED = exports.E_TIMEOUT = void 0;\nexports.E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nexports.E_ALREADY_LOCKED = new Error('mutex already locked');\nexports.E_CANCELED = new Error('request for lock canceled');\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar errors_1 = require(\"./errors\");\nvar Semaphore = /** @class */ (function () {\n    function Semaphore(_value, _cancelError) {\n        if (_cancelError === void 0) { _cancelError = errors_1.E_CANCELED; }\n        this._value = _value;\n        this._cancelError = _cancelError;\n        this._weightedQueues = [];\n        this._weightedWaiters = [];\n    }\n    Semaphore.prototype.acquire = function (weight) {\n        var _this = this;\n        if (weight === void 0) { weight = 1; }\n        if (weight <= 0)\n            throw new Error(\"invalid weight \".concat(weight, \": must be positive\"));\n        return new Promise(function (resolve, reject) {\n            if (!_this._weightedQueues[weight - 1])\n                _this._weightedQueues[weight - 1] = [];\n            _this._weightedQueues[weight - 1].push({ resolve: resolve, reject: reject });\n            _this._dispatch();\n        });\n    };\n    Semaphore.prototype.runExclusive = function (callback, weight) {\n        if (weight === void 0) { weight = 1; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, value, release;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.acquire(weight)];\n                    case 1:\n                        _a = _b.sent(), value = _a[0], release = _a[1];\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, , 4, 5]);\n                        return [4 /*yield*/, callback(value)];\n                    case 3: return [2 /*return*/, _b.sent()];\n                    case 4:\n                        release();\n                        return [7 /*endfinally*/];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Semaphore.prototype.waitForUnlock = function (weight) {\n        var _this = this;\n        if (weight === void 0) { weight = 1; }\n        if (weight <= 0)\n            throw new Error(\"invalid weight \".concat(weight, \": must be positive\"));\n        return new Promise(function (resolve) {\n            if (!_this._weightedWaiters[weight - 1])\n                _this._weightedWaiters[weight - 1] = [];\n            _this._weightedWaiters[weight - 1].push(resolve);\n            _this._dispatch();\n        });\n    };\n    Semaphore.prototype.isLocked = function () {\n        return this._value <= 0;\n    };\n    Semaphore.prototype.getValue = function () {\n        return this._value;\n    };\n    Semaphore.prototype.setValue = function (value) {\n        this._value = value;\n        this._dispatch();\n    };\n    Semaphore.prototype.release = function (weight) {\n        if (weight === void 0) { weight = 1; }\n        if (weight <= 0)\n            throw new Error(\"invalid weight \".concat(weight, \": must be positive\"));\n        this._value += weight;\n        this._dispatch();\n    };\n    Semaphore.prototype.cancel = function () {\n        var _this = this;\n        this._weightedQueues.forEach(function (queue) { return queue.forEach(function (entry) { return entry.reject(_this._cancelError); }); });\n        this._weightedQueues = [];\n    };\n    Semaphore.prototype._dispatch = function () {\n        var _a;\n        for (var weight = this._value; weight > 0; weight--) {\n            var queueEntry = (_a = this._weightedQueues[weight - 1]) === null || _a === void 0 ? void 0 : _a.shift();\n            if (!queueEntry)\n                continue;\n            var previousValue = this._value;\n            var previousWeight = weight;\n            this._value -= weight;\n            weight = this._value + 1;\n            queueEntry.resolve([previousValue, this._newReleaser(previousWeight)]);\n        }\n        this._drainUnlockWaiters();\n    };\n    Semaphore.prototype._newReleaser = function (weight) {\n        var _this = this;\n        var called = false;\n        return function () {\n            if (called)\n                return;\n            called = true;\n            _this.release(weight);\n        };\n    };\n    Semaphore.prototype._drainUnlockWaiters = function () {\n        for (var weight = this._value; weight > 0; weight--) {\n            if (!this._weightedWaiters[weight - 1])\n                continue;\n            this._weightedWaiters[weight - 1].forEach(function (waiter) { return waiter(); });\n            this._weightedWaiters[weight - 1] = [];\n        }\n    };\n    return Semaphore;\n}());\nexports.default = Semaphore;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Semaphore_1 = require(\"./Semaphore\");\nvar Mutex = /** @class */ (function () {\n    function Mutex(cancelError) {\n        this._semaphore = new Semaphore_1.default(1, cancelError);\n    }\n    Mutex.prototype.acquire = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, releaser;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._semaphore.acquire()];\n                    case 1:\n                        _a = _b.sent(), releaser = _a[1];\n                        return [2 /*return*/, releaser];\n                }\n            });\n        });\n    };\n    Mutex.prototype.runExclusive = function (callback) {\n        return this._semaphore.runExclusive(function () { return callback(); });\n    };\n    Mutex.prototype.isLocked = function () {\n        return this._semaphore.isLocked();\n    };\n    Mutex.prototype.waitForUnlock = function () {\n        return this._semaphore.waitForUnlock();\n    };\n    Mutex.prototype.release = function () {\n        if (this._semaphore.isLocked())\n            this._semaphore.release();\n    };\n    Mutex.prototype.cancel = function () {\n        return this._semaphore.cancel();\n    };\n    return Mutex;\n}());\nexports.default = Mutex;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withTimeout = void 0;\nvar tslib_1 = require(\"tslib\");\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar errors_1 = require(\"./errors\");\nfunction withTimeout(sync, timeout, timeoutError) {\n    var _this = this;\n    if (timeoutError === void 0) { timeoutError = errors_1.E_TIMEOUT; }\n    return {\n        acquire: function (weight) {\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(\"invalid weight \".concat(weight, \": must be positive\"));\n            }\n            return new Promise(function (resolve, reject) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                var isTimeout, handle, ticket, release, e_1;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            isTimeout = false;\n                            handle = setTimeout(function () {\n                                isTimeout = true;\n                                reject(timeoutError);\n                            }, timeout);\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 3, , 4]);\n                            return [4 /*yield*/, sync.acquire(weight)];\n                        case 2:\n                            ticket = _a.sent();\n                            if (isTimeout) {\n                                release = Array.isArray(ticket) ? ticket[1] : ticket;\n                                release();\n                            }\n                            else {\n                                clearTimeout(handle);\n                                resolve(ticket);\n                            }\n                            return [3 /*break*/, 4];\n                        case 3:\n                            e_1 = _a.sent();\n                            if (!isTimeout) {\n                                clearTimeout(handle);\n                                reject(e_1);\n                            }\n                            return [3 /*break*/, 4];\n                        case 4: return [2 /*return*/];\n                    }\n                });\n            }); });\n        },\n        runExclusive: function (callback, weight) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var release, ticket;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            release = function () { return undefined; };\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, , 7, 8]);\n                            return [4 /*yield*/, this.acquire(weight)];\n                        case 2:\n                            ticket = _a.sent();\n                            if (!Array.isArray(ticket)) return [3 /*break*/, 4];\n                            release = ticket[1];\n                            return [4 /*yield*/, callback(ticket[0])];\n                        case 3: return [2 /*return*/, _a.sent()];\n                        case 4:\n                            release = ticket;\n                            return [4 /*yield*/, callback()];\n                        case 5: return [2 /*return*/, _a.sent()];\n                        case 6: return [3 /*break*/, 8];\n                        case 7:\n                            release();\n                            return [7 /*endfinally*/];\n                        case 8: return [2 /*return*/];\n                    }\n                });\n            });\n        },\n        release: function (weight) {\n            sync.release(weight);\n        },\n        cancel: function () {\n            return sync.cancel();\n        },\n        waitForUnlock: function (weight) {\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(\"invalid weight \".concat(weight, \": must be positive\"));\n            }\n            return new Promise(function (resolve, reject) {\n                sync.waitForUnlock(weight).then(resolve);\n                setTimeout(function () { return reject(timeoutError); }, timeout);\n            });\n        },\n        isLocked: function () { return sync.isLocked(); },\n        getValue: function () { return sync.getValue(); },\n        setValue: function (value) { return sync.setValue(value); },\n    };\n}\nexports.withTimeout = withTimeout;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tryAcquire = void 0;\nvar errors_1 = require(\"./errors\");\nvar withTimeout_1 = require(\"./withTimeout\");\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError) {\n    if (alreadyAcquiredError === void 0) { alreadyAcquiredError = errors_1.E_ALREADY_LOCKED; }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (0, withTimeout_1.withTimeout)(sync, 0, alreadyAcquiredError);\n}\nexports.tryAcquire = tryAcquire;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tryAcquire = exports.withTimeout = exports.Semaphore = exports.Mutex = void 0;\nvar tslib_1 = require(\"tslib\");\nvar Mutex_1 = require(\"./Mutex\");\nObject.defineProperty(exports, \"Mutex\", { enumerable: true, get: function () { return Mutex_1.default; } });\nvar Semaphore_1 = require(\"./Semaphore\");\nObject.defineProperty(exports, \"Semaphore\", { enumerable: true, get: function () { return Semaphore_1.default; } });\nvar withTimeout_1 = require(\"./withTimeout\");\nObject.defineProperty(exports, \"withTimeout\", { enumerable: true, get: function () { return withTimeout_1.withTimeout; } });\nvar tryAcquire_1 = require(\"./tryAcquire\");\nObject.defineProperty(exports, \"tryAcquire\", { enumerable: true, get: function () { return tryAcquire_1.tryAcquire; } });\ntslib_1.__exportStar(require(\"./errors\"), exports);\n", "export default {};\n", "\nconst polyfill = require('crypto')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "export default {};\n", "\nconst polyfill = require('fs')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "/*!\n * checksum\n * Copyright(c) 2013 Daniel D. Shaw <dshaw@dshaw.com>\n * MIT Licensed\n */\n\n\n/**\n * Module dependencies\n */\n\nvar crypto = require('crypto')\n  , fs = require('fs')\n\n/**\n * Exports\n */\n\nmodule.exports = checksum\nchecksum.file = checksumFile\n\n/**\n * Checksum\n */\n\nfunction checksum (value, options) {\n  options || (options = {})\n  if (!options.algorithm) options.algorithm = 'sha1'\n\n  var hash = crypto.createHash(options.algorithm)\n\n  // http://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm\n  if (!hash.write) { \n    // pre-streaming crypto API in node < v0.9\n    hash.update(value)\n    return hash.digest('hex')\n\n  } else {\n    // v0.9+ streaming crypto\n    // http://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n    hash.write(value)\n    return hash.digest('hex')\n\n  }\n}\n\n/**\n * Checksum File\n */\n\nfunction checksumFile (filename, options, callback) {\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  options || (options = {})\n  if (!options.algorithm) options.algorithm = 'sha1'\n\n  fs.stat(filename, function (err, stat) {\n    if (!err && !stat.isFile()) err = new Error('Not a file')\n    if (err) return callback(err)\n    \n    \n    var hash = crypto.createHash(options.algorithm)\n      , fileStream = fs.createReadStream(filename)\n\n    if (!hash.write) { // pre-streaming crypto API in node < v0.9\n\n      fileStream.on('data', function (data) {\n        hash.update(data)\n      })\n\n      fileStream.on('end', function () {\n        callback(null, hash.digest('hex'))\n      })\n\n    } else { // v0.9+ streaming crypto\n\n      hash.setEncoding('hex')\n      fileStream.pipe(hash, { end: false })\n\n      fileStream.on('end', function () {\n        hash.end()\n        callback(null, hash.read())\n      })\n\n    }\n  })\n}\n", "/**\n * @license BitSet.js v5.1.1 2/1/2020\n * http://www.xarg.org/2014/03/javascript-bit-array/\n *\n * Copyright (c) 2020, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n(function(root) {\n\n  'use strict';\n\n  /**\n   * The number of bits of a word\n   * @const\n   * @type number\n   */\n  var WORD_LENGTH = 32;\n\n  /**\n   * The log base 2 of WORD_LENGTH\n   * @const\n   * @type number\n   */\n  var WORD_LOG = 5;\n\n  /**\n   * Calculates the number of set bits\n   *\n   * @param {number} v\n   * @returns {number}\n   */\n  function popCount(v) {\n\n    // Warren, H. (2009). Hacker`s Delight. New York, NY: Addison-Wesley\n\n    v -= ((v >>> 1) & 0x55555555);\n    v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\n    return (((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24);\n  }\n\n  /**\n   * Divide a number in base two by B\n   *\n   * @param {Array} arr\n   * @param {number} B\n   * @returns {number}\n   */\n  function divide(arr, B) {\n\n    var r = 0;\n\n    for (var i = 0; i < arr.length; i++) {\n      r *= 2;\n      var d = (arr[i] + r) / B | 0;\n      r = (arr[i] + r) % B;\n      arr[i] = d;\n    }\n    return r;\n  }\n\n  /**\n   * Parses the parameters and set variable P\n   *\n   * @param {Object} P\n   * @param {string|BitSet|Array|Uint8Array|number=} val\n   */\n  function parse(P, val) {\n\n    if (val == null) {\n      P['data'] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      P['_'] = 0;\n      return;\n    }\n\n    if (val instanceof BitSet) {\n      P['data'] = val['data'];\n      P['_'] = val['_'];\n      return;\n    }\n\n    switch (typeof val) {\n\n      case 'number':\n        P['data'] = [val | 0];\n        P['_'] = 0;\n        break;\n\n      case 'string':\n\n        var base = 2;\n        var len = WORD_LENGTH;\n\n        if (val.indexOf('0b') === 0) {\n          val = val.substr(2);\n        } else if (val.indexOf('0x') === 0) {\n          val = val.substr(2);\n          base = 16;\n          len = 8;\n        }\n\n        P['data'] = [];\n        P['_'] = 0;\n\n        var a = val.length - len;\n        var b = val.length;\n\n        do {\n\n          var num = parseInt(val.slice(a > 0 ? a : 0, b), base);\n\n          if (isNaN(num)) {\n            throw SyntaxError('Invalid param');\n          }\n\n          P['data'].push(num | 0);\n\n          if (a <= 0)\n            break;\n\n          a -= len;\n          b -= len;\n        } while (1);\n\n        break;\n\n      default:\n\n        P['data'] = [0];\n        var data = P['data'];\n\n        if (val instanceof Array) {\n\n          for (var i = val.length - 1; i >= 0; i--) {\n\n            var ndx = val[i];\n\n            if (ndx === Infinity) {\n              P['_'] = -1;\n            } else {\n              scale(P, ndx);\n              data[ndx >>> WORD_LOG] |= 1 << ndx;\n            }\n          }\n          break;\n        }\n\n        if (Uint8Array && val instanceof Uint8Array) {\n\n          var bits = 8;\n\n          scale(P, val.length * bits);\n\n          for (var i = 0; i < val.length; i++) {\n\n            var n = val[i];\n\n            for (var j = 0; j < bits; j++) {\n\n              var k = i * bits + j;\n\n              data[k >>> WORD_LOG] |= (n >> j & 1) << k;\n            }\n          }\n          break;\n        }\n        throw SyntaxError('Invalid param');\n    }\n  }\n\n  /**\n   * Module entry point\n   *\n   * @constructor\n   * @param {string|BitSet|number=} param\n   * @returns {BitSet}\n   */\n  function BitSet(param) {\n\n    if (!(this instanceof BitSet)) {\n      return new BitSet(param);\n    }\n    parse(this, param);\n    this['data'] = this['data'].slice();\n  }\n\n  function scale(dst, ndx) {\n\n    var l = ndx >>> WORD_LOG;\n    var d = dst['data'];\n    var v = dst['_'];\n\n    for (var i = d.length; l >= i; l--) {\n      d.push(v);\n    }\n  }\n\n  var P = {\n    'data': [], // Holds the actual bits in form of a 32bit integer array.\n    '_': 0 // Holds the MSB flag information to make indefinitely large bitsets inversion-proof\n  };\n\n  BitSet.prototype = {\n    'data': [],\n    '_': 0,\n    /**\n     * Set a single bit flag\n     *\n     * Ex:\n     * bs1 = new BitSet(10);\n     *\n     * bs1.set(3, 1);\n     *\n     * @param {number} ndx The index of the bit to be set\n     * @param {number=} value Optional value that should be set on the index (0 or 1)\n     * @returns {BitSet} this\n     */\n    'set': function(ndx, value) {\n\n      ndx |= 0;\n\n      scale(this, ndx);\n\n      if (value === undefined || value) {\n        this['data'][ndx >>> WORD_LOG] |= (1 << ndx);\n      } else {\n        this['data'][ndx >>> WORD_LOG] &= ~(1 << ndx);\n      }\n      return this;\n    },\n    /**\n     * Get a single bit flag of a certain bit position\n     *\n     * Ex:\n     * bs1 = new BitSet();\n     * var isValid = bs1.get(12);\n     *\n     * @param {number} ndx the index to be fetched\n     * @returns {number} The binary flag\n     */\n    'get': function(ndx) {\n\n      ndx |= 0;\n\n      var d = this['data'];\n      var n = ndx >>> WORD_LOG;\n\n      if (n >= d.length) {\n        return this['_'] & 1;\n      }\n      return (d[n] >>> ndx) & 1;\n    },\n    /**\n     * Creates the bitwise NOT of a set.\n     *\n     * Ex:\n     * bs1 = new BitSet(10);\n     *\n     * res = bs1.not();\n     *\n     * @returns {BitSet} A new BitSet object, containing the bitwise NOT of this\n     */\n    'not': function() { // invert()\n\n      var t = this['clone']();\n      var d = t['data'];\n      for (var i = 0; i < d.length; i++) {\n        d[i] = ~d[i];\n      }\n\n      t['_'] = ~t['_'];\n\n      return t;\n    },\n    /**\n     * Creates the bitwise AND of two sets.\n     *\n     * Ex:\n     * bs1 = new BitSet(10);\n     * bs2 = new BitSet(10);\n     *\n     * res = bs1.and(bs2);\n     *\n     * @param {BitSet} value A bitset object\n     * @returns {BitSet} A new BitSet object, containing the bitwise AND of this and value\n     */\n    'and': function(value) {// intersection\n\n      parse(P, value);\n\n      var T = this['clone']();\n      var t = T['data'];\n      var p = P['data'];\n\n      var pl = p.length;\n      var p_ = P['_'];\n      var t_ = T['_'];\n\n      // If this is infinite, we need all bits from P\n      if (t_ !== 0) {\n        scale(T, pl * WORD_LENGTH - 1);\n      }\n\n      var tl = t.length;\n      var l = Math.min(pl, tl);\n      var i = 0;\n\n      for (; i < l; i++) {\n        t[i] &= p[i];\n      }\n\n      for (; i < tl; i++) {\n        t[i] &= p_;\n      }\n\n      T['_'] &= p_;\n\n      return T;\n    },\n    /**\n     * Creates the bitwise OR of two sets.\n     *\n     * Ex:\n     * bs1 = new BitSet(10);\n     * bs2 = new BitSet(10);\n     *\n     * res = bs1.or(bs2);\n     *\n     * @param {BitSet} val A bitset object\n     * @returns {BitSet} A new BitSet object, containing the bitwise OR of this and val\n     */\n    'or': function(val) { // union\n\n      parse(P, val);\n\n      var t = this['clone']();\n      var d = t['data'];\n      var p = P['data'];\n\n      var pl = p.length - 1;\n      var tl = d.length - 1;\n\n      var minLength = Math.min(tl, pl);\n\n      // Append backwards, extend array only once\n      for (var i = pl; i > minLength; i--) {\n        d[i] = p[i];\n      }\n\n      for (; i >= 0; i--) {\n        d[i] |= p[i];\n      }\n\n      t['_'] |= P['_'];\n\n      return t;\n    },\n    /**\n     * Creates the bitwise XOR of two sets.\n     *\n     * Ex:\n     * bs1 = new BitSet(10);\n     * bs2 = new BitSet(10);\n     *\n     * res = bs1.xor(bs2);\n     *\n     * @param {BitSet} val A bitset object\n     * @returns {BitSet} A new BitSet object, containing the bitwise XOR of this and val\n     */\n    'xor': function(val) { // symmetric difference\n\n      parse(P, val);\n\n      var t = this['clone']();\n      var d = t['data'];\n      var p = P['data'];\n\n      var t_ = t['_'];\n      var p_ = P['_'];\n\n      var i = 0;\n\n      var tl = d.length - 1;\n      var pl = p.length - 1;\n\n      // Cut if tl > pl\n      for (i = tl; i > pl; i--) {\n        d[i] ^= p_;\n      }\n\n      // Cut if pl > tl\n      for (i = pl; i > tl; i--) {\n        d[i] = t_ ^ p[i];\n      }\n\n      // XOR the rest\n      for (; i >= 0; i--) {\n        d[i] ^= p[i];\n      }\n\n      // XOR infinity\n      t['_'] ^= p_;\n\n      return t;\n    },\n    /**\n     * Creates the bitwise AND NOT (not confuse with NAND!) of two sets.\n     *\n     * Ex:\n     * bs1 = new BitSet(10);\n     * bs2 = new BitSet(10);\n     *\n     * res = bs1.notAnd(bs2);\n     *\n     * @param {BitSet} val A bitset object\n     * @returns {BitSet} A new BitSet object, containing the bitwise AND NOT of this and other\n     */\n    'andNot': function(val) { // difference\n\n      return this['and'](new BitSet(val)['flip']());\n    },\n    /**\n     * Flip/Invert a range of bits by setting\n     *\n     * Ex:\n     * bs1 = new BitSet();\n     * bs1.flip(); // Flip entire set\n     * bs1.flip(5); // Flip single bit\n     * bs1.flip(3,10); // Flip a bit range\n     *\n     * @param {number=} from The start index of the range to be flipped\n     * @param {number=} to The end index of the range to be flipped\n     * @returns {BitSet} this\n     */\n    'flip': function(from, to) {\n\n      if (from === undefined) {\n\n        var d = this['data'];\n        for (var i = 0; i < d.length; i++) {\n          d[i] = ~d[i];\n        }\n\n        this['_'] = ~this['_'];\n\n      } else if (to === undefined) {\n\n        scale(this, from);\n\n        this['data'][from >>> WORD_LOG] ^= (1 << from);\n\n      } else if (0 <= from && from <= to) {\n\n        scale(this, to);\n\n        for (var i = from; i <= to; i++) {\n          this['data'][i >>> WORD_LOG] ^= (1 << i);\n        }\n      }\n      return this;\n    },\n    /**\n     * Clear a range of bits by setting it to 0\n     *\n     * Ex:\n     * bs1 = new BitSet();\n     * bs1.clear(); // Clear entire set\n     * bs1.clear(5); // Clear single bit\n     * bs1.clear(3,10); // Clear a bit range\n     *\n     * @param {number=} from The start index of the range to be cleared\n     * @param {number=} to The end index of the range to be cleared\n     * @returns {BitSet} this\n     */\n    'clear': function(from, to) {\n\n      var data = this['data'];\n\n      if (from === undefined) {\n\n        for (var i = data.length - 1; i >= 0; i--) {\n          data[i] = 0;\n        }\n        this['_'] = 0;\n\n      } else if (to === undefined) {\n\n        from |= 0;\n\n        scale(this, from);\n\n        data[from >>> WORD_LOG] &= ~(1 << from);\n\n      } else if (from <= to) {\n\n        scale(this, to);\n\n        for (var i = from; i <= to; i++) {\n          data[i >>> WORD_LOG] &= ~(1 << i);\n        }\n      }\n      return this;\n    },\n    /**\n     * Gets an entire range as a new bitset object\n     *\n     * Ex:\n     * bs1 = new BitSet();\n     * bs1.slice(4, 8);\n     *\n     * @param {number=} from The start index of the range to be get\n     * @param {number=} to The end index of the range to be get\n     * @returns {BitSet} A new smaller bitset object, containing the extracted range\n     */\n    'slice': function(from, to) {\n\n      if (from === undefined) {\n        return this['clone']();\n      } else if (to === undefined) {\n\n        to = this['data'].length * WORD_LENGTH;\n\n        var im = Object.create(BitSet.prototype);\n\n        im['_'] = this['_'];\n        im['data'] = [0];\n\n        for (var i = from; i <= to; i++) {\n          im['set'](i - from, this['get'](i));\n        }\n        return im;\n\n      } else if (from <= to && 0 <= from) {\n\n        var im = Object.create(BitSet.prototype);\n        im['data'] = [0];\n\n        for (var i = from; i <= to; i++) {\n          im['set'](i - from, this['get'](i));\n        }\n        return im;\n      }\n      return null;\n    },\n    /**\n     * Set a range of bits\n     *\n     * Ex:\n     * bs1 = new BitSet();\n     *\n     * bs1.setRange(10, 15, 1);\n     *\n     * @param {number} from The start index of the range to be set\n     * @param {number} to The end index of the range to be set\n     * @param {number} value Optional value that should be set on the index (0 or 1)\n     * @returns {BitSet} this\n     */\n    'setRange': function(from, to, value) {\n\n      for (var i = from; i <= to; i++) {\n        this['set'](i, value);\n      }\n      return this;\n    },\n    /**\n     * Clones the actual object\n     *\n     * Ex:\n     * bs1 = new BitSet(10);\n     * bs2 = bs1.clone();\n     *\n     * @returns {BitSet|Object} A new BitSet object, containing a copy of the actual object\n     */\n    'clone': function() {\n\n      var im = Object.create(BitSet.prototype);\n      im['data'] = this['data'].slice();\n      im['_'] = this['_'];\n\n      return im;\n    },\n    /**\n     * Gets a list of set bits\n     *\n     * @returns {Array}\n     */\n    'toArray': Math['clz32'] ?\n    function() {\n\n      var ret = [];\n      var data = this['data'];\n\n      for (var i = data.length - 1; i >= 0; i--) {\n\n        var num = data[i];\n\n        while (num !== 0) {\n          var t = 31 - Math['clz32'](num);\n          num ^= 1 << t;\n          ret.unshift((i * WORD_LENGTH) + t);\n        }\n      }\n\n      if (this['_'] !== 0)\n        ret.push(Infinity);\n\n      return ret;\n    } :\n    function() {\n\n      var ret = [];\n      var data = this['data'];\n\n      for (var i = 0; i < data.length; i++) {\n\n        var num = data[i];\n\n        while (num !== 0) {\n          var t = num & -num;\n          num ^= t;\n          ret.push((i * WORD_LENGTH) + popCount(t - 1));\n        }\n      }\n\n      if (this['_'] !== 0)\n        ret.push(Infinity);\n\n      return ret;\n    },\n    /**\n     * Overrides the toString method to get a binary representation of the BitSet\n     *\n     * @param {number=} base\n     * @returns string A binary string\n     */\n    'toString': function(base) {\n\n      var data = this['data'];\n\n      if (!base)\n        base = 2;\n\n      // If base is power of two\n      if ((base & (base - 1)) === 0 && base < 36) {\n\n        var ret = '';\n        var len = 2 + Math.log(4294967295/*Math.pow(2, WORD_LENGTH)-1*/) / Math.log(base) | 0;\n\n        for (var i = data.length - 1; i >= 0; i--) {\n\n          var cur = data[i];\n\n          // Make the number unsigned\n          if (cur < 0)\n            cur += 4294967296 /*Math.pow(2, WORD_LENGTH)*/;\n\n          var tmp = cur.toString(base);\n\n          if (ret !== '') {\n            // Fill small positive numbers with leading zeros. The +1 for array creation is added outside already\n            ret += '0'.repeat(len - tmp.length - 1);\n          }\n          ret += tmp;\n        }\n\n        if (this['_'] === 0) {\n\n          ret = ret.replace(/^0+/, '');\n\n          if (ret === '')\n            ret = '0';\n          return ret;\n\n        } else {\n          // Pad the string with ones\n          ret = '1111' + ret;\n          return ret.replace(/^1+/, '...1111');\n        }\n\n      } else {\n\n        if ((2 > base || base > 36))\n          throw SyntaxError('Invalid base');\n\n        var ret = [];\n        var arr = [];\n\n        // Copy every single bit to a new array\n        for (var i = data.length; i--; ) {\n\n          for (var j = WORD_LENGTH; j--; ) {\n\n            arr.push(data[i] >>> j & 1);\n          }\n        }\n\n        do {\n          ret.unshift(divide(arr, base).toString(base));\n        } while (!arr.every(function(x) {\n          return x === 0;\n        }));\n\n        return ret.join('');\n      }\n    },\n    /**\n     * Check if the BitSet is empty, means all bits are unset\n     *\n     * Ex:\n     * bs1 = new BitSet(10);\n     *\n     * bs1.isEmpty() ? 'yes' : 'no'\n     *\n     * @returns {boolean} Whether the bitset is empty\n     */\n    'isEmpty': function() {\n\n      if (this['_'] !== 0)\n        return false;\n\n      var d = this['data'];\n\n      for (var i = d.length - 1; i >= 0; i--) {\n        if (d[i] !== 0)\n          return false;\n      }\n      return true;\n    },\n    /**\n     * Calculates the number of bits set\n     *\n     * Ex:\n     * bs1 = new BitSet(10);\n     *\n     * var num = bs1.cardinality();\n     *\n     * @returns {number} The number of bits set\n     */\n    'cardinality': function() {\n\n      if (this['_'] !== 0) {\n        return Infinity;\n      }\n\n      var s = 0;\n      var d = this['data'];\n      for (var i = 0; i < d.length; i++) {\n        var n = d[i];\n        if (n !== 0)\n          s += popCount(n);\n      }\n      return s;\n    },\n    /**\n     * Calculates the Most Significant Bit / log base two\n     *\n     * Ex:\n     * bs1 = new BitSet(10);\n     *\n     * var logbase2 = bs1.msb();\n     *\n     * var truncatedTwo = Math.pow(2, logbase2); // May overflow!\n     *\n     * @returns {number} The index of the highest bit set\n     */\n    'msb': Math['clz32'] ?\n    function() {\n\n      if (this['_'] !== 0) {\n        return Infinity;\n      }\n\n      var data = this['data'];\n\n      for (var i = data.length; i-- > 0;) {\n\n        var c = Math['clz32'](data[i]);\n\n        if (c !== WORD_LENGTH) {\n          return (i * WORD_LENGTH) + WORD_LENGTH - 1 - c;\n        }\n      }\n      return Infinity;\n    } :\n    function() {\n\n      if (this['_'] !== 0) {\n        return Infinity;\n      }\n\n      var data = this['data'];\n\n      for (var i = data.length; i-- > 0;) {\n\n        var v = data[i];\n        var c = 0;\n\n        if (v) {\n\n          for (; (v >>>= 1) > 0; c++) {\n          }\n          return (i * WORD_LENGTH) + c;\n        }\n      }\n      return Infinity;\n    },\n    /**\n     * Calculates the number of trailing zeros\n     *\n     * Ex:\n     * bs1 = new BitSet(10);\n     *\n     * var ntz = bs1.ntz();\n     *\n     * @returns {number} The index of the lowest bit set\n     */\n    'ntz': function() {\n\n      var data = this['data'];\n\n      for (var j = 0; j < data.length; j++) {\n        var v = data[j];\n\n        if (v !== 0) {\n\n          v = (v ^ (v - 1)) >>> 1; // Set v's trailing 0s to 1s and zero rest\n\n          return (j * WORD_LENGTH) + popCount(v);\n        }\n      }\n      return Infinity;\n    },\n    /**\n     * Calculates the Least Significant Bit\n     *\n     * Ex:\n     * bs1 = new BitSet(10);\n     *\n     * var lsb = bs1.lsb();\n     *\n     * @returns {number} The index of the lowest bit set\n     */\n    'lsb': function() {\n\n      var data = this['data'];\n\n      for (var i = 0; i < data.length; i++) {\n\n        var v = data[i];\n        var c = 0;\n\n        if (v) {\n\n          var bit = (v & -v);\n\n          for (; (bit >>>= 1); c++) {\n\n          }\n          return WORD_LENGTH * i + c;\n        }\n      }\n      return this['_'] & 1;\n    },\n    /**\n     * Compares two BitSet objects\n     *\n     * Ex:\n     * bs1 = new BitSet(10);\n     * bs2 = new BitSet(10);\n     *\n     * bs1.equals(bs2) ? 'yes' : 'no'\n     *\n     * @param {BitSet} val A bitset object\n     * @returns {boolean} Whether the two BitSets have the same bits set (valid for indefinite sets as well)\n     */\n    'equals': function(val) {\n\n      parse(P, val);\n\n      var t = this['data'];\n      var p = P['data'];\n\n      var t_ = this['_'];\n      var p_ = P['_'];\n\n      var tl = t.length - 1;\n      var pl = p.length - 1;\n\n      if (p_ !== t_) {\n        return false;\n      }\n\n      var minLength = tl < pl ? tl : pl;\n      var i = 0;\n\n      for (; i <= minLength; i++) {\n        if (t[i] !== p[i])\n          return false;\n      }\n\n      for (i = tl; i > pl; i--) {\n        if (t[i] !== p_)\n          return false;\n      }\n\n      for (i = pl; i > tl; i--) {\n        if (p[i] !== t_)\n          return false;\n      }\n      return true;\n    },\n    [Symbol.iterator]: function () {\n\n      var d = this['data'];\n      var ndx = 0;\n\n      if (this['_'] === 0) {\n\n        // Find highest index with something meaningful\n        var highest = 0;\n        for (var i = d.length - 1; i >= 0; i--) {\n          if (d[i] !== 0) {\n            highest = i;\n            break;\n          }\n        }\n\n        return {\n          'next': function () {\n            var n = ndx >>> WORD_LOG;\n\n            return {\n              'done': n > highest || n === highest && (d[n] >>> ndx) === 0,\n              'value': n > highest ? 0 : (d[n] >>> ndx++) & 1\n            };\n          }\n        };\n\n      } else {\n        // Endless iterator!\n        return {\n          'next': function () {\n            var n = ndx >>> WORD_LOG;\n\n            return {\n              'done': false,\n              'value': n < d.length ? (d[n] >>> ndx++) & 1 : 1,\n            };\n          }\n        };\n      }\n    }\n  };\n\n  BitSet['fromBinaryString'] = function(str) {\n\n    return new BitSet('0b' + str);\n  };\n\n  BitSet['fromHexString'] = function(str) {\n\n    return new BitSet('0x' + str);\n  };\n\n  BitSet['Random'] = function(n) {\n\n    if (n === undefined || n < 0) {\n      n = WORD_LENGTH;\n    }\n\n    var m = n % WORD_LENGTH;\n\n    // Create an array, large enough to hold the random bits\n    var t = [];\n    var len = Math.ceil(n / WORD_LENGTH);\n\n    // Create an bitset instance\n    var s = Object.create(BitSet.prototype);\n\n    // Fill the vector with random data, uniformally distributed\n    for (var i = 0; i < len; i++) {\n      t.push(Math.random() * 4294967296 | 0);\n    }\n\n    // Mask out unwanted bits\n    if (m > 0) {\n      t[len - 1] &= (1 << m) - 1;\n    }\n\n    s['data'] = t;\n    s['_'] = 0;\n    return s;\n  };\n\n  if (typeof define === 'function' && define['amd']) {\n    define([], function() {\n      return BitSet;\n    });\n  } else if (typeof exports === 'object') {\n    Object.defineProperty(exports, \"__esModule\", { 'value': true });\n    BitSet['default'] = BitSet;\n    BitSet['BitSet'] = BitSet;\n    module['exports'] = BitSet;\n  } else {\n    root['BitSet'] = BitSet;\n  }\n\n})(this);\n", "{\n  \"name\": \"proskomma-core\",\n  \"version\": \"0.9.14\",\n  \"description\": \"A Scripture Runtime Engine\",\n  \"exports\": {\n    \"require\": \"./index.cjs\",\n    \"import\": \"./esm/wrapper.mjs\"\n  },\n  \"scripts\": {\n    \"test\": \"export PKSRC=dist && npm run build && bash -c \\\"tape -r @babel/register test/code/*.cjs | node_modules/tap-summary/bin/cmd.js\\\"\",\n    \"srcTest\": \"bash -c \\\"tape test/code/main/*.cjs test/code/utils/*.cjs | node_modules/tap-summary/bin/cmd.js\\\"\",\n    \"rawTest\": \"export PKSRC=dist && npm run build && bash -c \\\"tape -r @babel/register test/code/*.cjs\\\"\",\n    \"oneTest\": \"bash -c \\\"tape -r @babel/register test/code/$TESTSCRIPT.cjs\\\"\",\n    \"oneSrcTest\": \"export PKSRC=src && bash -c \\\"tape -r @babel/register test/code/$TESTSCRIPT.cjs\\\"\",\n    \"coverage\": \"node_modules/nyc/bin/nyc.js bash -c \\\"tape -r @babel/register test/code/*.cjs\\\"\",\n    \"build\": \"rm -fr dist && webpack --mode production --config webpack.prod.js\",\n    \"serialize\": \"tape -r @babel/register test/code/serialize.cjs\",\n    \"rawSrcTest\": \"export PKSRC=src && bash -c \\\"tape test/code/main/*.cjs\\\"\",\n    \"testUtils\": \"bash -c \\\"tape test/code/utils/*.cjs\\\"\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/Proskomma/proskomma-core.git\"\n  },\n  \"keywords\": [\n    \"USFM\",\n    \"USX\",\n    \"Scripture\",\n    \"parser\",\n    \"lexer\",\n    \"Proskomma\"\n  ],\n  \"author\": \"Mark Howe\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/Proskomma/proskomma-core/issues\"\n  },\n  \"homepage\": \"https://github.com/Proskomma/proskomma-core#readme\",\n  \"dependencies\": {\n    \"@babel/core\": \"^7.19.0\",\n    \"@graphql-tools/schema\": \"^9.0.3\",\n    \"assert\": \"^2.0.0\",\n    \"async-mutex\": \"^0.4.0\",\n    \"babel-eslint\": \"^10.1.0\",\n    \"base64-js\": \"^1.5.1\",\n    \"bitset\": \"^5.1.1\",\n    \"btoa\": \"^1.2.1\",\n    \"checksum\": \"^1.0.0\",\n    \"constants-browserify\": \"^1.0.0\",\n    \"crypto-browserify\": \"^3.12.0\",\n    \"deep-copy-all\": \"^1.3.4\",\n    \"deep-equal\": \"^2.0.5\",\n    \"exceljs\": \"^4.3.0\",\n    \"fs-extra\": \"^11.1.0\",\n    \"graphql\": \"^v16.6.0\",\n    \"node-polyfill-webpack-plugin\": \"^2.0.1\",\n    \"path-browserify\": \"^1.0.1\",\n    \"proskomma-json-tools\": \"^0.6.5\",\n    \"pure-uuid\": \"^1.6.2\",\n    \"sax\": \"^1.2.4\",\n    \"stream\": \"0.0.2\",\n    \"string_decoder\": \"^1.3.0\",\n    \"utf8-string-bytes\": \"^1.0.3\",\n    \"util\": \"^0.12.4\",\n    \"xregexp\": \"^5.1.1\"\n  },\n  \"devDependencies\": {\n    \"@babel/cli\": \"^7.18.10\",\n    \"@babel/eslint-parser\": \"^7.18.9\",\n    \"@babel/preset-env\": \"^7.19.0\",\n    \"@babel/register\": \"^7.18.9\",\n    \"babel-loader\": \"^8.2.5\",\n    \"buffer\": \"^6.0.3\",\n    \"eslint\": \"^8.23.0\",\n    \"eslint-config-prettier\": \"^8.5.0\",\n    \"eslint-plugin-import\": \"^2.26.0\",\n    \"eslint-plugin-jsdoc\": \"^39.3.6\",\n    \"eslint-plugin-prettier\": \"^v4.2.1\",\n    \"nyc\": \"^15.1.0\",\n    \"path\": \"^0.12.7\",\n    \"prettier\": \"^2.7.1\",\n    \"process\": \"^0.11.10\",\n    \"tap-summary\": \"^4.0.0\",\n    \"tape\": \"^5.6.0\",\n    \"webpack\": \"5.75.0\",\n    \"webpack-cli\": \"4.10.0\"\n  }\n}\n", "// Copyright 2008 The Closure Library Authors. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\n/**\r\n * Converts a JS string to a UTF-8 \"byte\" array.\r\n * @param {string} str 16-bit unicode string.\r\n * @return {!Array<number>} UTF-8 byte array.\r\n */\r\nconst stringToUtf8ByteArray = function(str) {\r\n  // TODO(user): Use native implementations if/when available\r\n  var out = [], p = 0;\r\n  for (var i = 0; i < str.length; i++) {\r\n    var c = str.charCodeAt(i);\r\n    if (c < 128) {\r\n      out[p++] = c;\r\n    } else if (c < 2048) {\r\n      out[p++] = (c >> 6) | 192;\r\n      out[p++] = (c & 63) | 128;\r\n    } else if (\r\n        ((c & 0xFC00) == 0xD800) && (i + 1) < str.length &&\r\n        ((str.charCodeAt(i + 1) & 0xFC00) == 0xDC00)) {\r\n      // Surrogate Pair\r\n      c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF);\r\n      out[p++] = (c >> 18) | 240;\r\n      out[p++] = ((c >> 12) & 63) | 128;\r\n      out[p++] = ((c >> 6) & 63) | 128;\r\n      out[p++] = (c & 63) | 128;\r\n    } else {\r\n      out[p++] = (c >> 12) | 224;\r\n      out[p++] = ((c >> 6) & 63) | 128;\r\n      out[p++] = (c & 63) | 128;\r\n    }\r\n  }\r\n  return out;\r\n};\r\n\r\n\r\n/**\r\n * Converts a UTF-8 byte array to JavaScript's 16-bit Unicode.\r\n * @param {Uint8Array|Array<number>} bytes UTF-8 byte array.\r\n * @return {string} 16-bit Unicode string.\r\n */\r\nconst utf8ByteArrayToString = function(bytes) {\r\n  // TODO(user): Use native implementations if/when available\r\n  var out = [], pos = 0, c = 0;\r\n  while (pos < bytes.length) {\r\n    var c1 = bytes[pos++];\r\n    if (c1 < 128) {\r\n      out[c++] = String.fromCharCode(c1);\r\n    } else if (c1 > 191 && c1 < 224) {\r\n      var c2 = bytes[pos++];\r\n      out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);\r\n    } else if (c1 > 239 && c1 < 365) {\r\n      // Surrogate Pair\r\n      var c2 = bytes[pos++];\r\n      var c3 = bytes[pos++];\r\n      var c4 = bytes[pos++];\r\n      var u = ((c1 & 7) << 18 | (c2 & 63) << 12 | (c3 & 63) << 6 | c4 & 63) -\r\n          0x10000;\r\n      out[c++] = String.fromCharCode(0xD800 + (u >> 10));\r\n      out[c++] = String.fromCharCode(0xDC00 + (u & 1023));\r\n    } else {\r\n      var c2 = bytes[pos++];\r\n      var c3 = bytes[pos++];\r\n      out[c++] =\r\n          String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);\r\n    }\r\n  }\r\n  return out.join('');\r\n};\r\n\r\nmodule.exports = {\r\n  utf8ByteArrayToString: utf8ByteArrayToString,\r\n  stringToUtf8ByteArray: stringToUtf8ByteArray\r\n};", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "const { utf8ByteArrayToString, stringToUtf8ByteArray } = require('utf8-string-bytes');\nconst base64 = require('base64-js');\n\nconst checkNum = (n, func, field) => {\n  if (typeof n !== 'number') {\n    throw new Error(`Argument ${field} of ${func} should be a number, not '${n}' (${typeof n})`);\n  }\n};\n\nclass ByteArray {\n  constructor(initialArraySize, initialLength) {\n    initialArraySize = initialArraySize || 64;\n    initialLength = initialLength || 0;\n    this.growMax = 1024 * 16;\n    this.length = initialLength;\n    this.byteArray = new Uint8Array(initialArraySize);\n  }\n\n  byte(n) {\n    checkNum(n, 'byte', 'n');\n\n    if (n > this.length - 1) {\n      throw Error(`Attempt to read byte ${n} of ByteArray of length ${this.length}`);\n    }\n    return this.byteArray[n];\n  }\n\n  bytes(n, l) {\n    checkNum(n, 'bytes', 'n');\n    checkNum(l, 'bytes', 'l');\n\n    if ((n + l) > this.length) {\n      throw Error(`Attempt to read ${l} bytes from start ${n} of ByteArray of length ${this.length}`);\n    }\n    return this.byteArray.subarray(n, n + l);\n  }\n\n  setByte(n, v) {\n    checkNum(n, 'setByte', 'n');\n    checkNum(v, 'setByte', 'v');\n\n    if (n > this.length - 1) {\n      throw Error(`Attempt to set byte ${n} of ByteArray of length ${this.length}`);\n    }\n\n    if (typeof (v) !== 'number' || v < 0 || v > 255) {\n      throw Error(`Expected value 0-255 when setting ByteArray, found ${v}`);\n    }\n    this.byteArray[n] = v;\n  }\n\n  setBytes(n, v) {\n    checkNum(n, 'setBytes', 'n');\n\n    if ((n + v.length) > this.length) {\n      throw Error(`Attempt to set ${v.length} bytes from start ${n} of ByteArray of length ${this.length}`);\n    }\n    this.byteArray.set(v, n);\n  }\n\n  pushByte(v) {\n    if (typeof (v) !== 'number' || v < 0 || v > 255) {\n      throw Error(`Expected value 0-255 when pushing to ByteArray, found ${v}`);\n    }\n\n    if (this.length === this.byteArray.length) {\n      this.grow();\n    }\n    this.byteArray[this.length] = v;\n    this.length++;\n  }\n\n  grow(minNewSize) {\n    const newBytes = new Uint8Array(\n      Math.max(\n        minNewSize || 0,\n        this.byteArray.length + (\n          Math.min(\n            this.growMax,\n            Math.max(\n              16,\n              this.byteArray.length,\n            ),\n          )\n        ),\n      ),\n    );\n    newBytes.set(this.byteArray);\n    this.byteArray = newBytes;\n  }\n\n  trim() {\n    const newBytes = new Uint8Array(this.length);\n    newBytes.set(this.byteArray.subarray(0, this.length));\n    this.byteArray = newBytes;\n  }\n\n  pushBytes(v) {\n    for (const ve of v) {\n      this.pushByte(ve);\n    }\n  }\n\n  pushNByte(v) {\n    checkNum(v, 'pushNByte', 'v');\n\n    // Low byte(s) first\n    if (typeof (v) !== 'number' || v < 0) {\n      throw Error(`Expected positive number in pushNByte, found ${v}`);\n    }\n\n    if (v < 128) {\n      this.pushByte(v + 128);\n    } else {\n      const modulo = v % 128;\n      this.pushByte(modulo);\n      this.pushNByte(v >> 7);\n    }\n  }\n\n  pushNBytes(vArray) {\n    for (const v of vArray) {\n      try {\n        this.pushNByte(v);\n      } catch (err) {\n        throw Error(`Error from pushNByte, called as pushNBytes(${JSON.stringify(vArray)})`);\n      }\n    }\n  }\n\n  nByte(n) {\n    checkNum(n, 'nByte', 'n');\n\n    if (n > this.length - 1) {\n      throw Error(`Attempt to read nByte ${n} of ByteArray of length ${this.length}`);\n    }\n\n    const v = this.byteArray[n];\n\n    if (v > 127) {\n      return v - 128;\n    } else {\n      return v + (128 * this.nByte(n + 1));\n    }\n  }\n\n  nBytes(n, nValues) {\n    checkNum(n, 'nBytes', 'n');\n    checkNum(nValues, 'nBytes', 'nValues');\n    const ret = [];\n\n    while (nValues > 0) {\n      let done = false;\n      let currentValue = 0;\n      let multiplier = 1;\n\n      do {\n        if (n > this.length - 1) {\n          throw Error(`Attempt to read nByte ${n} of ByteArray of length ${this.length} in nBytes(${n}, ${nValues})`);\n        }\n\n        const v = this.byteArray[n];\n\n        if (v > 127) {\n          currentValue += ((v - 128) * multiplier);\n          ret.push(currentValue);\n          currentValue = 0;\n          done = true;\n        } else {\n          currentValue += (v * multiplier);\n          multiplier *= 128;\n        }\n        n++;\n      } while (!done);\n      nValues--;\n    }\n    return ret;\n  }\n\n  nByteLength(v) {\n    checkNum(v, 'nByteLength', 'v');\n\n    if (v >= 128 ** 4) {\n      throw new Error('> 4 bytes found in nByteLength');\n    }\n\n    let ret = 1;\n\n    while (v > 127) {\n      v = v >> 7;\n      ret += 1;\n    }\n    return ret;\n  }\n\n  pushCountedString(s) {\n    const sA = stringToUtf8ByteArray(s);\n    this.pushByte(sA.length);\n    this.pushBytes(sA);\n  }\n\n  countedString(n) {\n    checkNum(n, 'countedString', 'n');\n    const sLength = this.byte(n);\n    return utf8ByteArrayToString(this.bytes(n + 1, sLength));\n  }\n\n  clear() {\n    this.byteArray.fill(0);\n    this.length = 0;\n  }\n\n  base64() {\n    return base64.fromByteArray(this.byteArray);\n  }\n\n  fromBase64(s) {\n    this.byteArray = base64.toByteArray(s);\n    this.length = this.byteArray.length;\n  }\n\n  deleteItem(n) {\n    checkNum(n, 'deleteItem', 'n');\n    const itemLength = this.byte(n) & 0x0000003F;\n    this.length -= itemLength;\n\n    if (this.length > n) {\n      const remainingBytes = this.byteArray.slice(n + itemLength);\n      this.byteArray.set(remainingBytes, n);\n    }\n  }\n\n  insert(n, iba) {\n    checkNum(n, 'insert', 'n');\n    const insertLength = iba.length;\n    const newLength = this.length + insertLength;\n\n    if (newLength >= (this.byteArray.length + insertLength)) {\n      this.grow(newLength);\n    }\n\n    if (n < newLength) {\n      const displacedBytes = this.byteArray.slice(n, this.length);\n      this.byteArray.set(displacedBytes, n + insertLength);\n    }\n    this.byteArray.set(iba.byteArray.slice(0, iba.length), n);\n    this.length = newLength;\n  }\n}\n\nmodule.exports = ByteArray;\n", "const ptBookArray = [\n  { code: 'GEN', categories:['ot', 'pentateuch'] },\n  { code: 'EXO', categories:['ot', 'pentateuch'] },\n  { code: 'LEV', categories:['ot', 'pentateuch'] },\n  { code: 'NUM', categories:['ot', 'pentateuch'] },\n  { code: 'DEU', categories:['ot', 'pentateuch'] },\n  { code: 'JOS', categories:['ot', 'history'] },\n  { code: 'JDG', categories:['ot', 'history'] },\n  { code: 'RUT', categories:['ot', 'history'] },\n  { code: '1SA', categories:['ot', 'history'] },\n  { code: '2SA', categories:['ot', 'history'] },\n  { code: '1KI', categories:['ot', 'history'] },\n  { code: '2KI', categories:['ot', 'history'] },\n  { code: '1CH', categories:['ot', 'history'] },\n  { code: '2CH', categories:['ot', 'history'] },\n  { code: 'EZR', categories:['ot', 'history'] },\n  { code: 'NEH', categories:['ot', 'history'] },\n  { code: 'EST', categories:['ot', 'history'] },\n  { code: 'JOB', categories:['ot', 'wisdom'] },\n  { code: 'PSA', categories:['ot', 'wisdom'] },\n  { code: 'PRO', categories:['ot', 'wisdom'] },\n  { code: 'ECC', categories:['ot', 'wisdom'] },\n  { code: 'SNG', categories:['ot', 'wisdom'] },\n  { code: 'ISA', categories:['ot', 'prophecy'] },\n  { code: 'JER', categories:['ot', 'prophecy'] },\n  { code: 'LAM', categories:['ot', 'prophecy'] },\n  { code: 'EZK', categories:['ot', 'prophecy'] },\n  { code: 'DAN', categories:['ot', 'prophecy'] },\n  { code: 'HOS', categories:['ot', 'prophecy'] },\n  { code: 'JOL', categories:['ot', 'prophecy'] },\n  { code: 'AMO', categories:['ot', 'prophecy'] },\n  { code: 'OBA', categories:['ot', 'prophecy'] },\n  { code: 'JON', categories:['ot', 'prophecy'] },\n  { code: 'MIC', categories:['ot', 'prophecy'] },\n  { code: 'NAM', categories:['ot', 'prophecy'] },\n  { code: 'HAB', categories:['ot', 'prophecy'] },\n  { code: 'ZEP', categories:['ot', 'prophecy'] },\n  { code: 'HAG', categories:['ot', 'prophecy'] },\n  { code: 'ZEC', categories:['ot', 'prophecy'] },\n  { code: 'MAL', categories:['ot', 'prophecy'] },\n  { code: 'MAT', categories:['nt', 'gospel', 'synoptic'] },\n  { code: 'MRK', categories:['nt', 'gospel', 'synoptic'] },\n  { code: 'LUK', categories:['nt', 'gospel', 'synoptic'] },\n  { code: 'JHN', categories:['nt', 'gospel'] },\n  { code: 'ACT', categories:['nt', 'gospel'] },\n  { code: 'ROM', categories:['nt', 'epistle'] },\n  { code: '1CO', categories:['nt', 'epistle'] },\n  { code: '2CO', categories:['nt', 'epistle'] },\n  { code: 'GAL', categories:['nt', 'epistle'] },\n  { code: 'EPH', categories:['nt', 'epistle'] },\n  { code: 'PHP', categories:['nt', 'epistle'] },\n  { code: 'COL', categories:['nt', 'epistle'] },\n  { code: '1TH', categories:['nt', 'epistle'] },\n  { code: '2TH', categories:['nt', 'epistle'] },\n  { code: '1TI', categories:['nt', 'epistle'] },\n  { code: '2TI', categories:['nt', 'epistle'] },\n  { code: 'TIT', categories:['nt', 'epistle'] },\n  { code: 'PHM', categories:['nt', 'epistle'] },\n  { code: 'HEB', categories:['nt', 'epistle'] },\n  { code: 'JAS', categories:['nt', 'epistle'] },\n  { code: '1PE', categories:['nt', 'epistle'] },\n  { code: '2PE', categories:['nt', 'epistle'] },\n  { code: '1JN', categories:['nt', 'epistle'] },\n  { code: '2JN', categories:['nt', 'epistle'] },\n  { code: '3JN', categories:['nt', 'epistle'] },\n  { code: 'JUD', categories:['nt', 'epistle'] },\n  { code: 'REV', categories:['nt', 'epistle'] },\n  { code: 'TOB', categories:['dc'] },\n  { code: 'JDT', categories:['dc'] },\n  { code: 'ESG', categories:['dc', 'history'] },\n  { code: 'WIS', categories:['dc', 'wisdom'] },\n  { code: 'SIR', categories:['dc', 'wisdom'] },\n  { code: 'BAR', categories:['dc', 'prophecy'] },\n  { code: 'LJE', categories:['dc'] },\n  { code: 'S3Y', categories:['dc'] },\n  { code: 'SUS', categories:['dc'] },\n  { code: 'BEL', categories:['dc'] },\n  { code: '1MA', categories:['dc'] },\n  { code: '2MA', categories:['dc'] },\n  { code: '3MA', categories:['dc'] },\n  { code: '4MA', categories:['dc'] },\n  { code: '1ES', categories:['dc'] },\n  { code: '2ES', categories:['dc'] },\n  { code: 'MAN', categories:['dc'] },\n  { code: 'PS2', categories:['dc'] },\n  { code: 'ODA', categories:['dc'] },\n  { code: 'PSS', categories:['dc'] },\n  { code: 'JSA', categories:['dc'] },\n  { code: 'JDB', categories:['dc'] },\n  { code: 'TBS', categories:['dc'] },\n  { code: 'SST', categories:['dc'] },\n  { code: 'DNT', categories:['dc'] },\n  { code: 'BLT', categories:['dc'] },\n  { code: 'EZA', categories:['dc'] },\n  { code: '5EZ', categories:['dc'] },\n  { code: '6EZ', categories:['dc'] },\n  { code: 'DAG', categories:['dc'] },\n  { code: 'PS3', categories:['dc'] },\n  { code: '2BA', categories:['dc'] },\n  { code: 'LBA', categories:['dc'] },\n  { code: 'JUB', categories:['dc'] },\n  { code: 'ENO', categories:['dc'] },\n  { code: '1MQ', categories:['dc'] },\n  { code: '2MQ', categories:['dc'] },\n  { code: '3MQ', categories:['dc'] },\n  { code: 'REP', categories:['dc'] },\n  { code: '4BA', categories:['dc'] },\n  { code: 'LAO', categories:['dc'] },\n];\n\nlet ptBooks = {};\n\nfor (const br of ptBookArray.entries()) {\n  ptBooks[br[1].code] = { ...br[1], position: br[0] };\n}\n\nmodule.exports = { ptBookArray, ptBooks };\n", "const xre = require('xregexp');\n\nconst enumStringIndex = (enumSuccinct, str) => {\n  let pos = 0;\n  let count = 0;\n\n  while (pos < enumSuccinct.length) {\n    const stringLength = enumSuccinct.byte(pos);\n    const enumString = enumSuccinct.countedString(pos);\n\n    if (enumString === str) {\n      return count;\n    }\n    pos += (stringLength + 1);\n    count += 1;\n  }\n  return -1;\n};\n\nconst enumRegexIndexTuples = (enumSuccinct, regex) => {\n  let pos = 0;\n  let count = 0;\n  const ret = [];\n\n  while (pos < enumSuccinct.length) {\n    const stringLength = enumSuccinct.byte(pos);\n    const enumString = enumSuccinct.countedString(pos);\n\n    if (xre.exec(enumString, xre(regex, 'i'))) {\n      ret.push([count, enumString]);\n    }\n    pos += (stringLength + 1);\n    count += 1;\n  }\n  return ret;\n};\n\nmodule.exports = {\n  enumStringIndex,\n  enumRegexIndexTuples,\n};\n", "/*!\n**  Pure-UUID -- Pure JavaScript Based Universally Unique Identifier (UUID)\n**  Copyright (c) 2004-2021 Dr. Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Universal Module Definition (UMD)  */\n(function (root, name, factory) {\n    /* global define: false */\n    if (typeof define === \"function\" && typeof define.amd !== \"undefined\")\n        /*  AMD environment  */\n        define(function () { return factory(root); });\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        /*  CommonJS environment  */\n        module.exports = factory(root);\n        module.exports.default = module.exports;\n    }\n    else\n        /*  Browser environment  */\n        root[name] = factory(root);\n}(this, \"UUID\", function (/* root */) {\n    /*  array to hex-string conversion  */\n    var a2hs = function (bytes, begin, end, uppercase, str, pos) {\n        var mkNum = function (num, uppercase) {\n            var base16 = num.toString(16);\n            if (base16.length < 2)\n                base16 = \"0\" + base16;\n            if (uppercase)\n                base16 = base16.toUpperCase();\n            return base16;\n        };\n        for (var i = begin; i <= end; i++)\n            str[pos++] = mkNum(bytes[i], uppercase);\n        return str;\n    };\n\n    /*  hex-string to array conversion  */\n    var hs2a = function (str, begin, end, bytes, pos) {\n        for (var i = begin; i <= end; i += 2)\n            bytes[pos++] = parseInt(str.substr(i, 2), 16);\n    };\n\n    /*  This library provides Z85: ZeroMQ's Base-85 encoding/decoding\n        (see http://rfc.zeromq.org/spec:32 for details)  */\n\n    var z85_encoder = (\n        \"0123456789\" +\n         \"abcdefghijklmnopqrstuvwxyz\" +\n         \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n         \".-:+=^!/*?&<>()[]{}@%$#\"\n    ).split(\"\");\n    var z85_decoder = [\n        0x00, 0x44, 0x00, 0x54, 0x53, 0x52, 0x48, 0x00,\n        0x4B, 0x4C, 0x46, 0x41, 0x00, 0x3F, 0x3E, 0x45,\n        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,\n        0x08, 0x09, 0x40, 0x00, 0x49, 0x42, 0x4A, 0x47,\n        0x51, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A,\n        0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 0x30, 0x31, 0x32,\n        0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A,\n        0x3B, 0x3C, 0x3D, 0x4D, 0x00, 0x4E, 0x43, 0x00,\n        0x00, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10,\n        0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18,\n        0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20,\n        0x21, 0x22, 0x23, 0x4F, 0x00, 0x50, 0x00, 0x00\n    ];\n    var z85_encode = function (data, size) {\n        if ((size % 4) !== 0)\n            throw new Error(\"z85_encode: invalid input length (multiple of 4 expected)\");\n        var str = \"\";\n        var i = 0;\n        var value = 0;\n        while (i < size) {\n            value = (value * 256) + data[i++];\n            if ((i % 4) === 0) {\n                var divisor = 85 * 85 * 85 * 85;\n                while (divisor >= 1) {\n                    var idx = Math.floor(value / divisor) % 85;\n                    str += z85_encoder[idx];\n                    divisor /= 85;\n                }\n                value = 0;\n            }\n        }\n        return str;\n    };\n    var z85_decode = function (str, dest) {\n        var l = str.length;\n        if ((l % 5) !== 0)\n            throw new Error(\"z85_decode: invalid input length (multiple of 5 expected)\");\n        if (typeof dest === \"undefined\")\n            dest = new Array(l * 4 / 5);\n        var i = 0;\n        var j = 0;\n        var value = 0;\n        while (i < l) {\n            var idx = str.charCodeAt(i++) - 32;\n            if (idx < 0 || idx >= z85_decoder.length)\n                break;\n            value = (value * 85) + z85_decoder[idx];\n            if ((i % 5) === 0) {\n                var divisor = 256 * 256 * 256;\n                while (divisor >= 1) {\n                    dest[j++] = Math.trunc((value / divisor) % 256);\n                    divisor /= 256;\n                }\n                value = 0;\n            }\n        }\n        return dest;\n    };\n\n    /*  This library provides conversions between 8/16/32-bit character\n        strings and 8/16/32-bit big/little-endian word arrays.  */\n\n    /*  string to array conversion  */\n    var s2a = function (s, _options) {\n        /*  determine options  */\n        var options = { ibits: 8, obits: 8, obigendian: true };\n        for (var opt in _options)\n            if (typeof options[opt] !== \"undefined\")\n                options[opt] = _options[opt];\n\n        /*  convert string to array  */\n        var a = [];\n        var i = 0;\n        var c, C;\n        var ck = 0;\n        var w;\n        var wk = 0;\n        var sl = s.length;\n        for (;;) {\n            /*  fetch next octet from string  */\n            if (ck === 0)\n                C = s.charCodeAt(i++);\n            c = (C >> (options.ibits - (ck + 8))) & 0xFF;\n            ck = (ck + 8) % options.ibits;\n\n            /*  place next word into array  */\n            if (options.obigendian) {\n                if (wk === 0) w  = (c <<  (options.obits - 8));\n                else          w |= (c << ((options.obits - 8) - wk));\n            }\n            else {\n                if (wk === 0) w  = c;\n                else          w |= (c << wk);\n            }\n            wk = (wk + 8) % options.obits;\n            if (wk === 0) {\n                a.push(w);\n                if (i >= sl)\n                    break;\n            }\n        }\n        return a;\n    };\n\n    /*  array to string conversion  */\n    var a2s = function (a, _options) {\n        /*  determine options  */\n        var options = { ibits: 32, ibigendian: true };\n        for (var opt in _options)\n            if (typeof options[opt] !== \"undefined\")\n                options[opt] = _options[opt];\n\n        /* convert array to string */\n        var s = \"\";\n        var imask = 0xFFFFFFFF;\n        if (options.ibits < 32)\n            imask = (1 << options.ibits) - 1;\n        var al = a.length;\n        for (var i = 0; i < al; i++) {\n            /* fetch next word from array */\n            var w = a[i] & imask;\n\n            /* place next octet into string */\n            for (var j = 0; j < options.ibits; j += 8) {\n                if (options.ibigendian)\n                    s += String.fromCharCode((w >> ((options.ibits - 8) - j)) & 0xFF);\n                else\n                    s += String.fromCharCode((w >> j) & 0xFF);\n            }\n        }\n        return s;\n    };\n\n    /*  this is just a really minimal UI64 functionality,\n        just sufficient enough for the UUID v1 generator and PCG PRNG!  */\n\n    /*  UI64 constants  */\n    var UI64_DIGITS     = 8;    /* number of digits */\n    var UI64_DIGIT_BITS = 8;    /* number of bits in a digit */\n    var UI64_DIGIT_BASE = 256;  /* the numerical base of a digit */\n\n    /*  convert between individual digits and the UI64 representation  */\n    var ui64_d2i = function (d7, d6, d5, d4, d3, d2, d1, d0) {\n        return [ d0, d1, d2, d3, d4, d5, d6, d7 ];\n    };\n\n    /*  the zero represented as an UI64  */\n    var ui64_zero = function () {\n        return ui64_d2i(0, 0, 0, 0, 0, 0, 0, 0);\n    };\n\n    /*  clone the UI64  */\n    var ui64_clone = function (x) {\n        return x.slice(0);\n    };\n\n    /*  convert between number and UI64 representation  */\n    var ui64_n2i = function (n) {\n        var ui64 = ui64_zero();\n        for (var i = 0; i < UI64_DIGITS; i++) {\n            ui64[i] = Math.floor(n % UI64_DIGIT_BASE);\n            n /= UI64_DIGIT_BASE;\n        }\n        return ui64;\n    };\n\n    /*  convert between UI64 representation and number  */\n    var ui64_i2n = function (x) {\n        var n = 0;\n        for (var i = UI64_DIGITS - 1; i >= 0; i--) {\n            n *= UI64_DIGIT_BASE;\n            n += x[i];\n        }\n        return Math.floor(n);\n    };\n\n    /*  add UI64 (y) to UI64 (x) and return overflow/carry as number  */\n    var ui64_add = function (x, y) {\n        var carry = 0;\n        for (var i = 0; i < UI64_DIGITS; i++) {\n            carry += x[i] + y[i];\n            x[i]   = Math.floor(carry % UI64_DIGIT_BASE);\n            carry  = Math.floor(carry / UI64_DIGIT_BASE);\n        }\n        return carry;\n    };\n\n    /*  multiply number (n) to UI64 (x) and return overflow/carry as number  */\n    var ui64_muln = function (x, n) {\n        var carry = 0;\n        for (var i = 0; i < UI64_DIGITS; i++) {\n            carry += x[i] * n;\n            x[i]   = Math.floor(carry % UI64_DIGIT_BASE);\n            carry  = Math.floor(carry / UI64_DIGIT_BASE);\n        }\n        return carry;\n    };\n\n    /*  multiply UI64 (y) to UI64 (x) and return overflow/carry as UI64  */\n    var ui64_mul = function (x, y) {\n        var i, j;\n\n        /*  clear temporary result buffer zx  */\n        var zx = new Array(UI64_DIGITS + UI64_DIGITS);\n        for (i = 0; i < (UI64_DIGITS + UI64_DIGITS); i++)\n            zx[i] = 0;\n\n        /*  perform multiplication operation  */\n        var carry;\n        for (i = 0; i < UI64_DIGITS; i++) {\n            /*  calculate partial product and immediately add to zx  */\n            carry = 0;\n            for (j = 0; j < UI64_DIGITS; j++) {\n                carry += (x[i] * y[j]) + zx[i + j];\n                zx[i + j] = (carry % UI64_DIGIT_BASE);\n                carry /= UI64_DIGIT_BASE;\n            }\n\n            /*  add carry to remaining digits in zx  */\n            for ( ; j < UI64_DIGITS + UI64_DIGITS - i; j++) {\n                carry += zx[i + j];\n                zx[i + j] = (carry % UI64_DIGIT_BASE);\n                carry /= UI64_DIGIT_BASE;\n            }\n        }\n\n        /*  provide result by splitting zx into x and ov  */\n        for (i = 0; i < UI64_DIGITS; i++)\n            x[i] = zx[i];\n        return zx.slice(UI64_DIGITS, UI64_DIGITS);\n    };\n\n    /*  AND operation: UI64 (x) &= UI64 (y)  */\n    var ui64_and = function (x, y) {\n        for (var i = 0; i < UI64_DIGITS; i++)\n            x[i] &= y[i];\n        return x;\n    };\n\n    /*  OR operation: UI64 (x) |= UI64 (y)  */\n    var ui64_or = function (x, y) {\n        for (var i = 0; i < UI64_DIGITS; i++)\n            x[i] |= y[i];\n        return x;\n    };\n\n    /*  rotate right UI64 (x) by a \"s\" bits and return overflow/carry as number  */\n    var ui64_rorn = function (x, s) {\n        var ov = ui64_zero();\n        if ((s % UI64_DIGIT_BITS) !== 0)\n            throw new Error(\"ui64_rorn: only bit rotations supported with a multiple of digit bits\");\n        var k = Math.floor(s / UI64_DIGIT_BITS);\n        for (var i = 0; i < k; i++) {\n            for (var j = UI64_DIGITS - 1 - 1; j >= 0; j--)\n                ov[j + 1] = ov[j];\n            ov[0] = x[0];\n            for (j = 0; j < UI64_DIGITS - 1; j++)\n                x[j] = x[j + 1];\n            x[j] = 0;\n        }\n        return ui64_i2n(ov);\n    };\n\n    /*  rotate right UI64 (x) by a \"s\" bits and return overflow/carry as number  */\n    var ui64_ror = function (x, s) {\n        /*  sanity check shifting  */\n        if (s > (UI64_DIGITS * UI64_DIGIT_BITS))\n            throw new Error(\"ui64_ror: invalid number of bits to shift\");\n\n        /*  prepare temporary buffer zx  */\n        var zx = new Array(UI64_DIGITS + UI64_DIGITS);\n        var i;\n        for (i = 0; i < UI64_DIGITS; i++) {\n            zx[i + UI64_DIGITS] = x[i];\n            zx[i] = 0;\n        }\n\n        /*  shift bits inside zx  */\n        var k1 = Math.floor(s / UI64_DIGIT_BITS);\n        var k2 = s % UI64_DIGIT_BITS;\n        for (i = k1; i < UI64_DIGITS + UI64_DIGITS - 1; i++) {\n            zx[i - k1] =\n                ((zx[i] >>> k2) |\n                 (zx[i + 1] << (UI64_DIGIT_BITS - k2))) &\n                ((1 << UI64_DIGIT_BITS) - 1);\n        }\n        zx[UI64_DIGITS + UI64_DIGITS - 1 - k1] =\n            (zx[UI64_DIGITS + UI64_DIGITS - 1] >>> k2) &\n            ((1 << UI64_DIGIT_BITS) - 1);\n        for (i = UI64_DIGITS + UI64_DIGITS - 1 - k1 + 1; i < UI64_DIGITS + UI64_DIGITS; i++)\n            zx[i] = 0;\n\n        /*  provide result by splitting zx into x and ov  */\n        for (i = 0; i < UI64_DIGITS; i++)\n            x[i] = zx[i + UI64_DIGITS];\n        return zx.slice(0, UI64_DIGITS);\n    };\n\n    /*  rotate left UI64 (x) by a \"s\" bits and return overflow/carry as UI64  */\n    var ui64_rol = function (x, s) {\n        /*  sanity check shifting  */\n        if (s > (UI64_DIGITS * UI64_DIGIT_BITS))\n            throw new Error(\"ui64_rol: invalid number of bits to shift\");\n\n        /*  prepare temporary buffer zx  */\n        var zx = new Array(UI64_DIGITS + UI64_DIGITS);\n        var i;\n        for (i = 0; i < UI64_DIGITS; i++) {\n            zx[i + UI64_DIGITS] = 0;\n            zx[i] = x[i];\n        }\n\n        /*  shift bits inside zx  */\n        var k1 = Math.floor(s / UI64_DIGIT_BITS);\n        var k2 = s % UI64_DIGIT_BITS;\n        for (i = UI64_DIGITS - 1 - k1; i > 0; i--) {\n            zx[i + k1] =\n                ((zx[i] << k2) |\n                 (zx[i - 1] >>> (UI64_DIGIT_BITS - k2))) &\n                ((1 << UI64_DIGIT_BITS) - 1);\n        }\n        zx[0 + k1] = (zx[0] << k2) & ((1 << UI64_DIGIT_BITS) - 1);\n        for (i = 0 + k1 - 1; i >= 0; i--)\n            zx[i] = 0;\n\n        /*  provide result by splitting zx into x and ov  */\n        for (i = 0; i < UI64_DIGITS; i++)\n            x[i] = zx[i];\n        return zx.slice(UI64_DIGITS, UI64_DIGITS);\n    };\n\n    /*  XOR UI64 (y) onto UI64 (x) and return x  */\n    var ui64_xor = function (x, y) {\n        for (var i = 0; i < UI64_DIGITS; i++)\n            x[i] ^= y[i];\n    };\n\n    /*  this is just a really minimal UI32 functionality,\n        just sufficient enough for the MD5 and SHA1 digests!  */\n\n    /*  safely add two integers (with wrapping at 2^32)  */\n    var ui32_add = function (x, y) {\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xFFFF);\n    };\n\n    /*  bitwise rotate 32-bit number to the left  */\n    var ui32_rol = function (num, cnt) {\n        return (\n            ((num <<        cnt ) & 0xFFFFFFFF) |\n            ((num >>> (32 - cnt)) & 0xFFFFFFFF)\n        );\n    };\n\n    /*  calculate the SHA-1 of an array of big-endian words, and a bit length  */\n    var sha1_core = function (x, len) {\n        /*  perform the appropriate triplet combination function for the current iteration  */\n        function sha1_ft (t, b, c, d) {\n            if (t < 20) return (b & c) | ((~b) & d);\n            if (t < 40) return b ^ c ^ d;\n            if (t < 60) return (b & c) | (b & d) | (c & d);\n            return b ^ c ^ d;\n        }\n\n        /*  determine the appropriate additive constant for the current iteration  */\n        function sha1_kt (t) {\n            /* eslint indent: off */\n            return (\n                (t < 20) ?  1518500249 :\n                (t < 40) ?  1859775393 :\n                (t < 60) ? -1894007588 :\n                            -899497514\n            );\n        }\n\n        /*  append padding  */\n        x[len >> 5] |= 0x80 << (24 - len % 32);\n        x[((len + 64 >> 9) << 4) + 15] = len;\n\n        var w = Array(80);\n        var a =  1732584193;\n        var b =  -271733879;\n        var c = -1732584194;\n        var d =   271733878;\n        var e = -1009589776;\n\n        for (var i = 0; i < x.length; i += 16) {\n            var olda = a;\n            var oldb = b;\n            var oldc = c;\n            var oldd = d;\n            var olde = e;\n            for (var j = 0; j < 80; j++) {\n                if (j < 16)\n                    w[j] = x[i + j];\n                else\n                    w[j] = ui32_rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1);\n                var t = ui32_add(\n                    ui32_add(ui32_rol(a, 5), sha1_ft(j, b, c, d)),\n                    ui32_add(ui32_add(e, w[j]), sha1_kt(j))\n                );\n                e = d;\n                d = c;\n                c = ui32_rol(b, 30);\n                b = a;\n                a = t;\n            }\n            a = ui32_add(a, olda);\n            b = ui32_add(b, oldb);\n            c = ui32_add(c, oldc);\n            d = ui32_add(d, oldd);\n            e = ui32_add(e, olde);\n        }\n        return [ a, b, c, d, e ];\n    };\n\n    /*  calculate the SHA-1 of an octet string  */\n    var sha1 = function (s) {\n        return a2s(\n            sha1_core(\n                s2a(s, { ibits: 8, obits: 32, obigendian: true }),\n                s.length * 8),\n            { ibits: 32, ibigendian: true });\n    };\n\n    /*  calculate the MD5 of an array of little-endian words, and a bit length  */\n    var md5_core = function (x, len) {\n        /*  basic operations the algorithm uses  */\n        function md5_cmn (q, a, b, x, s, t) {\n            return ui32_add(ui32_rol(ui32_add(ui32_add(a, q), ui32_add(x, t)), s), b);\n        }\n        function md5_ff (a, b, c, d, x, s, t) {\n            return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n        }\n        function md5_gg (a, b, c, d, x, s, t) {\n            return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n        }\n        function md5_hh (a, b, c, d, x, s, t) {\n            return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n        }\n        function md5_ii (a, b, c, d, x, s, t) {\n            return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n        }\n\n        /*  append padding  */\n        x[len >> 5] |= 0x80 << ((len) % 32);\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n        var a =  1732584193;\n        var b =  -271733879;\n        var c = -1732584194;\n        var d =   271733878;\n\n        for (var i = 0; i < x.length; i += 16) {\n            var olda = a;\n            var oldb = b;\n            var oldc = c;\n            var oldd = d;\n\n            a = md5_ff(a, b, c, d, x[i+ 0],  7,  -680876936);\n            d = md5_ff(d, a, b, c, x[i+ 1], 12,  -389564586);\n            c = md5_ff(c, d, a, b, x[i+ 2], 17,   606105819);\n            b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n            a = md5_ff(a, b, c, d, x[i+ 4],  7,  -176418897);\n            d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n            c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n            b = md5_ff(b, c, d, a, x[i+ 7], 22,   -45705983);\n            a = md5_ff(a, b, c, d, x[i+ 8],  7,  1770035416);\n            d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n            c = md5_ff(c, d, a, b, x[i+10], 17,      -42063);\n            b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n            a = md5_ff(a, b, c, d, x[i+12],  7,  1804603682);\n            d = md5_ff(d, a, b, c, x[i+13], 12,   -40341101);\n            c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n            b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n            a = md5_gg(a, b, c, d, x[i+ 1],  5,  -165796510);\n            d = md5_gg(d, a, b, c, x[i+ 6],  9, -1069501632);\n            c = md5_gg(c, d, a, b, x[i+11], 14,   643717713);\n            b = md5_gg(b, c, d, a, x[i+ 0], 20,  -373897302);\n            a = md5_gg(a, b, c, d, x[i+ 5],  5,  -701558691);\n            d = md5_gg(d, a, b, c, x[i+10],  9,    38016083);\n            c = md5_gg(c, d, a, b, x[i+15], 14,  -660478335);\n            b = md5_gg(b, c, d, a, x[i+ 4], 20,  -405537848);\n            a = md5_gg(a, b, c, d, x[i+ 9],  5,   568446438);\n            d = md5_gg(d, a, b, c, x[i+14],  9, -1019803690);\n            c = md5_gg(c, d, a, b, x[i+ 3], 14,  -187363961);\n            b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n            a = md5_gg(a, b, c, d, x[i+13],  5, -1444681467);\n            d = md5_gg(d, a, b, c, x[i+ 2],  9,   -51403784);\n            c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n            b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n            a = md5_hh(a, b, c, d, x[i+ 5],  4,     -378558);\n            d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n            c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n            b = md5_hh(b, c, d, a, x[i+14], 23,   -35309556);\n            a = md5_hh(a, b, c, d, x[i+ 1],  4, -1530992060);\n            d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n            c = md5_hh(c, d, a, b, x[i+ 7], 16,  -155497632);\n            b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n            a = md5_hh(a, b, c, d, x[i+13],  4,   681279174);\n            d = md5_hh(d, a, b, c, x[i+ 0], 11,  -358537222);\n            c = md5_hh(c, d, a, b, x[i+ 3], 16,  -722521979);\n            b = md5_hh(b, c, d, a, x[i+ 6], 23,    76029189);\n            a = md5_hh(a, b, c, d, x[i+ 9],  4,  -640364487);\n            d = md5_hh(d, a, b, c, x[i+12], 11,  -421815835);\n            c = md5_hh(c, d, a, b, x[i+15], 16,   530742520);\n            b = md5_hh(b, c, d, a, x[i+ 2], 23,  -995338651);\n\n            a = md5_ii(a, b, c, d, x[i+ 0],  6,  -198630844);\n            d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n            c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n            b = md5_ii(b, c, d, a, x[i+ 5], 21,   -57434055);\n            a = md5_ii(a, b, c, d, x[i+12],  6,  1700485571);\n            d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n            c = md5_ii(c, d, a, b, x[i+10], 15,    -1051523);\n            b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n            a = md5_ii(a, b, c, d, x[i+ 8],  6,  1873313359);\n            d = md5_ii(d, a, b, c, x[i+15], 10,   -30611744);\n            c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n            b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n            a = md5_ii(a, b, c, d, x[i+ 4],  6,  -145523070);\n            d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n            c = md5_ii(c, d, a, b, x[i+ 2], 15,   718787259);\n            b = md5_ii(b, c, d, a, x[i+ 9], 21,  -343485551);\n\n            a = ui32_add(a, olda);\n            b = ui32_add(b, oldb);\n            c = ui32_add(c, oldc);\n            d = ui32_add(d, oldd);\n        }\n        return [ a, b, c, d ];\n    };\n\n    /*  calculate the MD5 of an octet string  */\n    var md5 = function (s) {\n        return a2s(\n            md5_core(\n                s2a(s, { ibits: 8, obits: 32, obigendian: false }),\n                s.length * 8),\n            { ibits: 32, ibigendian: false });\n    };\n\n    /*  PCG Pseudo-Random-Number-Generator (PRNG)\n        http://www.pcg-random.org/pdf/hmc-cs-2014-0905.pdf\n        This is the PCG-XSH-RR variant (\"xorshift high (bits), random rotation\"),\n        based on 32-bit output, 64-bit internal state and the formulas:\n        state = state * MUL + INC\n        output = rotate32((state ^ (state >> 18)) >> 27, state >> 59)  */\n\n    var PCG = function (seed) {\n        /*  pre-load some \"magic\" constants  */\n        this.mul   = ui64_d2i(0x58, 0x51, 0xf4, 0x2d, 0x4c, 0x95, 0x7f, 0x2d);\n        this.inc   = ui64_d2i(0x14, 0x05, 0x7b, 0x7e, 0xf7, 0x67, 0x81, 0x4f);\n        this.mask  = ui64_d2i(0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff);\n\n        /*  generate an initial internal state  */\n        this.state = ui64_clone(this.inc);\n        this.next();\n        ui64_and(this.state, this.mask);\n        seed = ui64_n2i(seed !== undefined ?\n            (seed >>> 0) : ((Math.random() * 0xffffffff) >>> 0));\n        ui64_or(this.state, seed);\n        this.next();\n    };\n    PCG.prototype.next = function () {\n        /*  save current state  */\n        var state = ui64_clone(this.state);\n\n        /*  advance internal state  */\n        ui64_mul(this.state, this.mul);\n        ui64_add(this.state, this.inc);\n\n        /*  calculate: (state ^ (state >> 18)) >> 27  */\n        var output = ui64_clone(state);\n        ui64_ror(output, 18);\n        ui64_xor(output, state);\n        ui64_ror(output, 27);\n\n        /*  calculate: state >> 59  */\n        var rot = ui64_clone(state);\n        ui64_ror(rot, 59);\n\n        /*  calculate: rotate32(xorshifted, rot)  */\n        ui64_and(output, this.mask);\n        var k = ui64_i2n(rot);\n        var output2 = ui64_clone(output);\n        ui64_rol(output2, 32 - k);\n        ui64_ror(output, k);\n        ui64_xor(output, output2);\n\n        /*  return pseudo-random number  */\n        return ui64_i2n(output);\n    };\n    var pcg = new PCG();\n\n    /*  utility function: simple Pseudo Random Number Generator (PRNG)  */\n    var prng = function (len, radix) {\n        var bytes = [];\n        for (var i = 0; i < len; i++)\n            bytes[i] = (pcg.next() % radix);\n        return bytes;\n    };\n\n    /*  internal state  */\n    var time_last = 0;\n    var time_seq  = 0;\n\n    /*  the API constructor  */\n    var UUID = function () {\n        if (arguments.length === 1 && typeof arguments[0] === \"string\")\n            this.parse.apply(this, arguments);\n        else if (arguments.length >= 1 && typeof arguments[0] === \"number\")\n            this.make.apply(this, arguments);\n        else if (arguments.length >= 1)\n            throw new Error(\"UUID: constructor: invalid arguments\");\n        else\n            for (var i = 0; i < 16; i++)\n                this[i] = 0x00;\n    };\n\n    /*  inherit from a standard class which provides the\n        best UUID representation in the particular environment  */\n    /* global Uint8Array: false */\n    if (typeof Uint8Array !== \"undefined\")\n        /*  HTML5 TypedArray (browser environments: IE10, FF, CH, SF, OP)\n            (http://caniuse.com/#feat=typedarrays)  */\n        UUID.prototype = new Uint8Array(16);\n    else if (Buffer)\n        /*  Node Buffer (server environments: Node.js, IO.js)  */\n        UUID.prototype = Buffer.alloc(16);\n    else\n        /*  JavaScript (any environment)  */\n        UUID.prototype = new Array(16);\n    UUID.prototype.constructor = UUID;\n\n    /*  API method: generate a particular UUID  */\n    UUID.prototype.make = function (version) {\n        var i;\n        var uuid = this;\n        if (version === 1) {\n            /*  generate UUID version 1 (time and node based)  */\n\n            /*  determine current time and time sequence counter  */\n            var date = new Date();\n            var time_now = date.getTime();\n            if (time_now !== time_last)\n                time_seq = 0;\n            else\n                time_seq++;\n            time_last = time_now;\n\n            /*  convert time to 100*nsec  */\n            var t = ui64_n2i(time_now);\n            ui64_muln(t, 1000 * 10);\n\n            /*  adjust for offset between UUID and Unix Epoch time  */\n            ui64_add(t, ui64_d2i(0x01, 0xB2, 0x1D, 0xD2, 0x13, 0x81, 0x40, 0x00));\n\n            /*  compensate for low resolution system clock by adding\n                the time/tick sequence counter  */\n            if (time_seq > 0)\n                ui64_add(t, ui64_n2i(time_seq));\n\n            /*  store the 60 LSB of the time in the UUID  */\n            var ov;\n            ov = ui64_rorn(t, 8); uuid[3] = (ov & 0xFF);\n            ov = ui64_rorn(t, 8); uuid[2] = (ov & 0xFF);\n            ov = ui64_rorn(t, 8); uuid[1] = (ov & 0xFF);\n            ov = ui64_rorn(t, 8); uuid[0] = (ov & 0xFF);\n            ov = ui64_rorn(t, 8); uuid[5] = (ov & 0xFF);\n            ov = ui64_rorn(t, 8); uuid[4] = (ov & 0xFF);\n            ov = ui64_rorn(t, 8); uuid[7] = (ov & 0xFF);\n            ov = ui64_rorn(t, 8); uuid[6] = (ov & 0x0F);\n\n            /*  generate a random clock sequence  */\n            var clock = prng(2, 255);\n            uuid[8] = clock[0];\n            uuid[9] = clock[1];\n\n            /*  generate a random local multicast node address  */\n            var node = prng(6, 255);\n            node[0] |= 0x01;\n            node[0] |= 0x02;\n            for (i = 0; i < 6; i++)\n                uuid[10 + i] = node[i];\n        }\n        else if (version === 4) {\n            /*  generate UUID version 4 (random data based)  */\n            var data = prng(16, 255);\n            for (i = 0; i < 16; i++)\n                 this[i] = data[i];\n        }\n        else if (version === 3 || version === 5) {\n            /*  generate UUID version 3/5 (MD5/SHA-1 based)  */\n            var input = \"\";\n            var nsUUID = (\n                typeof arguments[1] === \"object\" && arguments[1] instanceof UUID ?\n                arguments[1] : new UUID().parse(arguments[1])\n            );\n            for (i = 0; i < 16; i++)\n                 input += String.fromCharCode(nsUUID[i]);\n            input += arguments[2];\n            var s = version === 3 ? md5(input) : sha1(input);\n            for (i = 0; i < 16; i++)\n                 uuid[i] = s.charCodeAt(i);\n        }\n        else\n            throw new Error(\"UUID: make: invalid version\");\n\n        /*  brand with particular UUID version  */\n        uuid[6] &= 0x0F;\n        uuid[6] |= (version << 4);\n\n        /*  brand as UUID variant 2 (DCE 1.1)  */\n        uuid[8] &= 0x3F;\n        uuid[8] |= (0x02 << 6);\n\n        return uuid;\n    };\n\n    /*  API method: format UUID into usual textual representation  */\n    UUID.prototype.format = function (type) {\n        var str, arr;\n        if (type === \"z85\")\n            str = z85_encode(this, 16);\n        else if (type === \"b16\") {\n            arr = Array(32);\n            a2hs(this, 0, 15, true, arr, 0);\n            str = arr.join(\"\");\n        }\n        else if (type === undefined || type === \"std\") {\n            arr = new Array(36);\n            a2hs(this,  0,  3, false, arr,  0); arr[ 8] = \"-\";\n            a2hs(this,  4,  5, false, arr,  9); arr[13] = \"-\";\n            a2hs(this,  6,  7, false, arr, 14); arr[18] = \"-\";\n            a2hs(this,  8,  9, false, arr, 19); arr[23] = \"-\";\n            a2hs(this, 10, 15, false, arr, 24);\n            str = arr.join(\"\");\n        }\n        return str;\n    };\n\n    /*  API method: format UUID into usual textual representation  */\n    UUID.prototype.toString = function (type) {\n        return this.format(type);\n    };\n\n    /*  API method: overrides JSON serialization with usual text representation  */\n    UUID.prototype.toJSON = function () {\n        return this.format(\"std\");\n    };\n\n    /*  API method: parse UUID from usual textual representation  */\n    UUID.prototype.parse = function (str, type) {\n        if (typeof str !== \"string\")\n            throw new Error(\"UUID: parse: invalid argument (type string expected)\");\n        if (type === \"z85\")\n            z85_decode(str, this);\n        else if (type === \"b16\")\n            hs2a(str, 0, 35, this, 0);\n        else if (type === undefined || type === \"std\") {\n            var map = {\n                \"nil\":     \"00000000-0000-0000-0000-000000000000\",\n                \"ns:DNS\":  \"6ba7b810-9dad-11d1-80b4-00c04fd430c8\",\n                \"ns:URL\":  \"6ba7b811-9dad-11d1-80b4-00c04fd430c8\",\n                \"ns:OID\":  \"6ba7b812-9dad-11d1-80b4-00c04fd430c8\",\n                \"ns:X500\": \"6ba7b814-9dad-11d1-80b4-00c04fd430c8\"\n            };\n            if (map[str] !== undefined)\n                str = map[str];\n            else if (!str.match(/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/))\n                throw new Error(\"UUID: parse: invalid string representation \" +\n                    \"(expected \\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\")\");\n            hs2a(str,  0,  7, this,  0);\n            hs2a(str,  9, 12, this,  4);\n            hs2a(str, 14, 17, this,  6);\n            hs2a(str, 19, 22, this,  8);\n            hs2a(str, 24, 35, this, 10);\n        }\n        return this;\n    };\n\n    /*  API method: export UUID into standard array of numbers  */\n    UUID.prototype.export = function () {\n        var arr = Array(16);\n        for (var i = 0; i < 16; i++)\n            arr[i] = this[i];\n        return arr;\n    };\n\n    /*  API method: import UUID from standard array of numbers  */\n    UUID.prototype.import = function (arr) {\n        if (!(typeof arr === \"object\" && arr instanceof Array))\n            throw new Error(\"UUID: import: invalid argument (type Array expected)\");\n        if (arr.length !== 16)\n            throw new Error(\"UUID: import: invalid argument (Array of length 16 expected)\");\n        for (var i = 0; i < 16; i++) {\n            if (typeof arr[i] !== \"number\")\n                throw new Error(\"UUID: import: invalid array element #\" + i +\n                    \" (type Number expected)\");\n            if (!(isFinite(arr[i]) && Math.floor(arr[i]) === arr[i]))\n                throw new Error(\"UUID: import: invalid array element #\" + i +\n                    \" (Number with integer value expected)\");\n            if (!(arr[i] >= 0 && arr[i] <= 255))\n                throw new Error(\"UUID: import: invalid array element #\" + i +\n                    \" (Number with integer value in range 0...255 expected)\");\n            this[i] = arr[i];\n        }\n        return this;\n    };\n\n    /*  API method: compare UUID against another one  */\n    UUID.prototype.compare = function (other) {\n        if (typeof other !== \"object\")\n            throw new Error(\"UUID: compare: invalid argument (type UUID expected)\");\n        if (!(other instanceof UUID))\n            throw new Error(\"UUID: compare: invalid argument (type UUID expected)\");\n        for (var i = 0; i < 16; i++) {\n            if (this[i] < other[i])\n                return -1;\n            else if (this[i] > other[i])\n                return +1;\n        }\n        return 0;\n    };\n\n    /*  API method: check whether UUID is equal another one  */\n    UUID.prototype.equal = function (other) {\n        return this.compare(other) === 0;\n    };\n\n    /*  API method: hash UUID by XOR-folding it k times  */\n    UUID.prototype.fold = function (k) {\n        if (typeof k === \"undefined\")\n            throw new Error(\"UUID: fold: invalid argument (number of fold operations expected)\");\n        if (k < 1 || k > 4)\n            throw new Error(\"UUID: fold: invalid argument (1-4 fold operations expected)\");\n        var n = 16 / Math.pow(2, k);\n        var hash = new Array(n);\n        for (var i = 0; i < n; i++) {\n            var h = 0;\n            for (var j = 0; i + j < 16; j += n)\n                h ^= this[i + j];\n            hash[i] = h;\n        }\n        return hash;\n    };\n\n    UUID.PCG = PCG;\n\n    /*  export API  */\n    return UUID;\n}));\n\n", "(function () {\n  \"use strict\";\n\n  function btoa(str) {\n    var buffer;\n\n    if (str instanceof Buffer) {\n      buffer = str;\n    } else {\n      buffer = Buffer.from(str.toString(), 'binary');\n    }\n\n    return buffer.toString('base64');\n  }\n\n  module.exports = btoa;\n}());\n", "const UUID = require('pure-uuid');\nconst btoa = require('btoa');\n\nconst generateId = () => btoa(new UUID(4)).substring(0, 12);\n\nmodule.exports = { generateId };\n", "const graftLocation = {\n  heading: 'block',\n  title: 'block',\n  endTitle: 'block',\n  remark: 'block',\n  footnote: 'inline',\n  xref: 'inline',\n  noteCaller: 'inline',\n  esbCat: 'inline',\n  table: 'block',\n  tree: 'block',\n  kv: 'block',\n};\n\nmodule.exports = { graftLocation };\n", "const tokenEnum = {\n  wordLike: 0,\n  punctuation: 1,\n  lineSpace: 2,\n  eol: 3,\n  softLineBreak: 4,\n  noBreakSpace: 5,\n  bareSlash: 6,\n  unknown: 7,\n};\n\nconst tokenEnumLabels = Object.entries(tokenEnum).sort((a, b) => a[1] - b[1]).map(kv => kv[0]);\n\nconst tokenCategory = {\n  wordLike: 'wordLike',\n  punctuation: 'notWordLike',\n  lineSpace: 'notWordLike',\n  eol: 'notWordLike',\n  softLineBreak: 'notWordLike',\n  noBreakSpace: 'notWordLike',\n  bareSlash: 'notWordLike',\n  unknown: 'notWordLike',\n};\n\nmodule.exports = {\n  tokenEnum, tokenEnumLabels, tokenCategory,\n};\n", "const xre = require('xregexp');\n\nconst scopeEnum = {\n  'blockTag': 0,\n  'inline': 1,\n  'chapter': 2,\n  'pubChapter': 3,\n  'altChapter': 4,\n  'verses': 5,\n  'verse': 6,\n  'pubVerse': 7,\n  'altVerse': 8,\n  'esbCat': 9,\n  'span': 10,\n  'table': 11,\n  'cell': 12,\n  'milestone': 13,\n  'spanWithAtts': 14,\n  'attribute': 15,\n  'hangingGraft': 16,\n  'orphanTokens': 17,\n  'tTableRow': 18,\n  'tTableCol': 19,\n  'tTreeNode': 20,\n  'tTreeParent': 21,\n  'tTreeChild': 22,\n  'tTreeContent': 23,\n  'kvPrimary': 24,\n  'kvSecondary': 25,\n  'kvField': 26,\n};\n\nconst scopeEnumLabels = Object.entries(scopeEnum).sort((a, b) => a[1] - b[1]).map(kv => kv[0]);\n\nconst splitTagNumber = fullTagName => {\n  const tagBits = xre.exec(fullTagName, xre('([^1-9]+)(.*)'));\n  const tagName = tagBits[1];\n  const tagNo = tagBits[2].length > 0 ? tagBits[2] : '1';\n  return [tagName, tagNo];\n};\n\nconst cellScope = fullTagName => {\n  const tagProps = {\n    'th': {\n      type: 'colHeading',\n      align: 'left',\n    },\n    'thr': {\n      type: 'colHeading',\n      align: 'right',\n    },\n    'tc': {\n      type: 'body',\n      align: 'left',\n    },\n    'tcr': {\n      type: 'body',\n      align: 'right',\n    },\n  };\n  const [tagName, tagNo] = splitTagNumber(fullTagName);\n  let tagField = '1';\n\n  if (tagNo.includes('-')) {\n    const [fromN, toN] = tagNo.split('-');\n    tagField = `${(parseInt(toN) - parseInt(fromN)) + 1}`;\n  }\n  return `cell/${tagProps[tagName].type}/${tagProps[tagName].align}/${tagField}`;\n};\n\nconst labelForScope = (scopeType, scopeFields) => {\n  switch (scopeType) {\n  case 'blockTag':\n    return `blockTag/${scopeFields[0]}`;\n  case 'inline':\n    return `inline/${scopeFields[0]}`;\n  case 'chapter':\n    return `chapter/${scopeFields[0]}`;\n  case 'verses':\n    return `verses/${scopeFields[0]}`;\n  case 'verse':\n    return `verse/${scopeFields[0]}`;\n  case 'span':\n    return `span/${scopeFields[0]}`;\n  case 'table':\n    return 'table';\n  case 'cell':\n    return cellScope(scopeFields[0]);\n  case 'milestone':\n    return `milestone/${scopeFields[0]}`;\n  case 'spanWithAtts':\n    return `spanWithAtts/${scopeFields[0]}`;\n  case 'attribute':\n    return `attribute/${scopeFields[0]}/${scopeFields[1]}/${scopeFields[2]}/${scopeFields[3]}`;\n  case 'orphanTokens':\n    return `orphanTokens`;\n  case 'hangingGraft':\n    return `hangingGraft`;\n  case 'pubChapter':\n    return `pubChapter/${scopeFields[0]}`;\n  case 'pubVerse':\n    return `pubVerse/${scopeFields[0]}`;\n  case 'altChapter':\n    return `altChapter/${scopeFields[0]}`;\n  case 'altVerse':\n    return `altVerse/${scopeFields[0]}`;\n  case 'esbCat':\n    return `esbCat/${scopeFields[0]}`;\n  case 'tTableRow':\n    return `tTableRow/${scopeFields[0]}`;\n  case 'tTableCol':\n    return `tTableCol/${scopeFields[0]}`;\n  case 'tTreeNode':\n    return `tTreeNode/${scopeFields[0]}`;\n  case 'tTreeParent':\n    return `tTreeParent/${scopeFields[0]}`;\n  case 'tTreeChild':\n    return `tTreeChild/${scopeFields[0]}/${scopeFields[1]}`;\n  case 'tTreeContent':\n    return `tTreeContent/${scopeFields[0]}`;\n  case 'kvPrimary':\n    return `kvPrimary/${scopeFields[0]}`;\n  case 'kvSecondary':\n    return `kvSecondary/${scopeFields[0]}/${scopeFields[1]}`;\n  case 'kvField':\n    return `kvField/${scopeFields[0]}`;\n  default:\n    throw new Error(`Unknown scope type '${scopeType}' in labelForScope`);\n  }\n};\n\nconst nComponentsForScope = (scopeType) => {\n  switch (scopeType) {\n  case 'orphanTokens':\n  case 'hangingGraft':\n  case 'table':\n    return 1;\n  case 'blockTag':\n  case 'inline':\n  case 'chapter':\n  case 'verses':\n  case 'verse':\n  case 'span':\n  case 'milestone':\n  case 'spanWithAtts':\n  case 'pubChapter':\n  case 'altChapter':\n  case 'pubVerse':\n  case 'altVerse':\n  case 'esbCat':\n  case 'tTableRow':\n  case 'tTableCol':\n  case 'tTreeNode':\n  case 'tTreeParent':\n  case 'tTreeContent':\n  case 'kvPrimary':\n  case 'kvField':\n    return 2;\n  case 'tTreeChild':\n  case 'kvSecondary':\n    return 3;\n  case 'cell':\n    return 4;\n  case 'attribute':\n    return 6;\n  default:\n    throw new Error(`Unknown scope type '${scopeType}' in nComponentsForScope`);\n  }\n};\n\nmodule.exports = {\n  scopeEnum, scopeEnumLabels, labelForScope, nComponentsForScope,\n};\n", "const itemEnum = {\n  token: 0,\n  graft: 1,\n  startScope: 2,\n  endScope: 3,\n};\n\nconst itemEnumLabels = Object.entries(itemEnum).sort((a, b) => a[1] - b[1]).map(kv => kv[0]);\n\nconst itemArray2Object = a => ({\n  type: a[0],\n  subType: a[1],\n  payload: a[2],\n});\n\nconst itemObject2Array = ob => [\n  ob.type,\n  ob.subType,\n  ob.payload,\n];\n\nconst itemArrays2Objects = aa => aa.map(a => itemArray2Object(a));\n\nconst itemObjects2Arrays = obs => obs.map(ob => itemObject2Array(ob));\n\nmodule.exports = {\n  itemEnum,\n  itemEnumLabels,\n  itemArray2Object,\n  itemObject2Array,\n  itemArrays2Objects,\n  itemObjects2Arrays,\n};\n", "const tokenDefs = require('./tokenDefs.cjs');\nconst scopeDefs = require('./scopeDefs.cjs');\nconst itemDefs = require('./itemDefs.cjs');\n\nconst headerBytes = (succinct, pos) =>{\n  const headerByte = succinct.byte(pos);\n  const itemType = headerByte >> 6;\n  const itemLength = headerByte & 0x0000003F;\n  const itemSubtype = succinct.byte(pos + 1);\n  return [itemLength, itemType, itemSubtype];\n};\n\nconst succinctTokenChars = (enums, enumIndexes, succinct, itemSubtype, pos) => {\n  const itemCategory = tokenDefs.tokenCategory[tokenDefs.tokenEnumLabels[itemSubtype]];\n  const itemIndex = enumIndexes[itemCategory][succinct.nByte(pos + 2)];\n  return enums[itemCategory].countedString(itemIndex);\n};\n\nconst succinctScopeLabel = (enums, enumIndexes, succinct, itemSubtype, pos) => {\n  const scopeType = scopeDefs.scopeEnumLabels[itemSubtype];\n  let nScopeBits = scopeDefs.nComponentsForScope(scopeType);\n  let offset = 2;\n  let scopeBits = '';\n\n  while (nScopeBits > 1) {\n    const itemIndexIndex = succinct.nByte(pos + offset);\n    const itemIndex = enumIndexes.scopeBits[itemIndexIndex];\n    const scopeBitString = enums.scopeBits.countedString(itemIndex);\n    scopeBits += `/${scopeBitString}`;\n    offset += succinct.nByteLength(itemIndexIndex);\n    nScopeBits--;\n  }\n  return `${scopeType}${scopeBits}`;\n};\n\nconst succinctGraftName = (enums, enumIndexes, itemSubtype) => {\n  const graftIndex = enumIndexes.graftTypes[itemSubtype];\n  return enums.graftTypes.countedString(graftIndex);\n};\n\nconst succinctGraftSeqId = (enums, enumIndexes, succinct, pos) => {\n  const seqIndex = enumIndexes.ids[succinct.nByte(pos + 2)];\n  return enums.ids.countedString(seqIndex);\n};\n\nconst enumIndexes = (enums) => {\n  const ret = {};\n\n  for (const [category, succinct] of Object.entries(enums)) {\n    ret[category] = enumIndex(category, succinct);\n  }\n  return ret;\n};\n\nconst enumIndex = (category, enumSuccinct) => {\n  const indexSuccinct = new Uint32Array(enumSuccinct.length);\n  let pos = 0;\n  let count = 0;\n\n  while (pos < enumSuccinct.length) {\n    indexSuccinct[count] = pos;\n    const stringLength = enumSuccinct.byte(pos);\n    pos += (stringLength + 1);\n    count += 1;\n  }\n  return indexSuccinct;\n};\n\nconst unpackEnum = (succinct, includeIndex) => {\n  if (!includeIndex) {\n    includeIndex = false;\n  }\n\n  let pos = 0;\n  let count = 0;\n  const ret = [];\n\n  while (pos < succinct.length) {\n    const stringLength = succinct.byte(pos);\n    const unpacked = succinct.countedString(pos);\n    ret.push(includeIndex ? [count, unpacked] : unpacked);\n    pos += stringLength + 1;\n    count++;\n  }\n  return ret;\n};\n\nconst undefinedArgError = (func, field) => {\n  throw new Error(`Undefined or null argument '${field}' in '${func}'`);\n};\n\nconst pushSuccinctTokenBytes = (bA, tokenEnumIndex, charsEnumIndex) => {\n  if (tokenEnumIndex === undefined || tokenEnumIndex === null) {\n    undefinedArgError('pushSuccinctTokenBytes', 'tokenEnumIndex');\n  }\n\n  if (charsEnumIndex === undefined || charsEnumIndex === null) {\n    undefinedArgError('pushSuccinctTokenBytes', 'charsEnumIndex');\n  }\n\n  const lengthPos = bA.length;\n  bA.pushByte(0);\n  bA.pushByte(tokenEnumIndex);\n  bA.pushNByte(charsEnumIndex);\n  bA.setByte(lengthPos, (bA.length - lengthPos) | itemDefs.itemEnum.token << 6);\n};\n\nconst pushSuccinctGraftBytes = (bA, graftTypeEnumIndex, seqEnumIndex) => {\n  if (graftTypeEnumIndex === undefined || graftTypeEnumIndex === null) {\n    undefinedArgError('pushSuccinctGraftBytes', 'graftTypeEnumIndex');\n  }\n\n  if (seqEnumIndex === undefined || seqEnumIndex === null) {\n    undefinedArgError('pushSuccinctGraftBytes', 'seqEnumIndex');\n  }\n\n  const lengthPos = bA.length;\n  bA.pushByte(0);\n  bA.pushByte(graftTypeEnumIndex);\n  bA.pushNByte(seqEnumIndex);\n  bA.setByte(lengthPos, (bA.length - lengthPos) | itemDefs.itemEnum.graft << 6);\n};\n\nconst pushSuccinctScopeBytes = (bA, itemTypeByte, scopeTypeByte, scopeBitBytes) => {\n  if (itemTypeByte === undefined || itemTypeByte === null) {\n    undefinedArgError('pushSuccinctScopeBytes', 'itemTypeByte');\n  }\n\n  if (scopeTypeByte === undefined || scopeTypeByte === null) {\n    undefinedArgError('pushSuccinctScopeBytes', 'scopeTypeByte');\n  }\n\n  if (scopeBitBytes === undefined || scopeBitBytes === null) {\n    undefinedArgError('pushSuccinctScopeBytes', 'scopeBitBytes');\n  }\n\n  const lengthPos = bA.length;\n  bA.pushByte(0);\n  bA.pushByte(scopeTypeByte);\n\n  for (const sbb of scopeBitBytes) {\n    bA.pushNByte(sbb);\n  }\n  bA.setByte(lengthPos, (bA.length - lengthPos) | itemTypeByte << 6);\n};\n\nmodule.exports = {\n  enumIndex,\n  enumIndexes,\n  headerBytes,\n  pushSuccinctTokenBytes,\n  pushSuccinctGraftBytes,\n  pushSuccinctScopeBytes,\n  succinctTokenChars,\n  succinctScopeLabel,\n  succinctGraftName,\n  succinctGraftSeqId,\n  unpackEnum,\n};\n", "const ByteArray = require('./byteArray.cjs');\nconst succinct = require('./succinct.cjs');\nconst itemDefs = require('./itemDefs.cjs');\nconst tokenDefs = require('./tokenDefs.cjs');\nconst scopeDefs = require('./scopeDefs.cjs');\n\nconst inspectEnum = enumString => {\n  const ba = new ByteArray();\n  ba.fromBase64(enumString);\n  const ret = [];\n  ret.push(`* Char length ${ba.length} *`);\n\n  for (const [count, text] of succinct.unpackEnum(ba, true)) {\n    ret.push(`${count}\\t\"${text}\"`);\n  }\n  return ret.join('\\n');\n};\n\nconst inspectSuccinct = (succinctdoc, enumStrings) => {\n  const ba = new ByteArray();\n  ba.fromBase64(succinctdoc);\n  const enums = {};\n\n  for (const [category, enumString] of Object.entries(enumStrings)) {\n    enums[category] = new ByteArray();\n    enums[category].fromBase64(enumString);\n  }\n\n  const indexes = succinct.enumIndexes(enums);\n  const ret = [];\n  ret.push(`* Char length ${ba.length} *`);\n  let pos = 0;\n\n  while (pos < ba.length) {\n    const [itemLength, itemType, itemSubtype] = succinct.headerBytes(ba, pos);\n    let subtypeLabel = itemSubtype;\n    let extra = '';\n\n    switch (itemDefs.itemEnumLabels[itemType]) {\n    case 'token':\n      subtypeLabel = tokenDefs.tokenEnumLabels[itemSubtype];\n      extra = `\"${succinct.succinctTokenChars(enums, indexes, ba, itemSubtype, pos)}\"`;\n      break;\n    case 'startScope':\n    case 'endScope':\n      subtypeLabel = scopeDefs.scopeEnumLabels[itemSubtype];\n      extra = succinct.succinctScopeLabel(enums, indexes, ba, itemSubtype, pos);\n      break;\n    case 'graft':\n      subtypeLabel = succinct.succinctGraftName(enums, indexes, itemSubtype);\n      extra = succinct.succinctGraftSeqId(enums, indexes, ba, pos);\n    }\n    ret.push(`${itemDefs.itemEnumLabels[itemType]}\\t${subtypeLabel}\\t(${itemLength})\\t${extra}`);\n    pos += itemLength;\n  }\n  return ret.join('\\n');\n};\n\nmodule.exports = { inspectEnum, inspectSuccinct };\n", "module.exports = {\n  usfm: {\n    baseSequenceTypes: {\n      main: '1',\n      introduction: '*',\n      introTitle: '?',\n      introEndTitle: '?',\n      title: '?',\n      endTitle: '?',\n      heading: '*',\n      header: '*',\n      remark: '*',\n      sidebar: '*',\n      table: '*',\n      tree: '*',\n      kv: '*',\n    },\n    inlineSequenceTypes: {\n      footnote: '*',\n      noteCaller: '*',\n      xref: '*',\n      pubNumber: '*',\n      altNumber: '*',\n      esbCat: '*',\n      fig: '*',\n      temp: '?',\n    },\n  },\n};\n\n", "const xre = require('xregexp');\n\nconst validateTags = tags => {\n  for (const tag of tags) {\n    validateTag(tag);\n  }\n};\n\nconst validateTag = tag => {\n  if (!xre.exec(tag, /^[a-z][A-za-z0-9]*(:.+)?$/)) {\n    throw new Error(`Tag '${tag}' is not valid (should be [a-z][A-za-z0-9]*(:.+)?)`);\n  }\n};\n\nconst addTag = (tags, tag) => {\n  validateTag(tag);\n  tags.add(tag);\n};\n\nconst removeTag = (tags, tag) => {\n  validateTag(tag);\n  tags.delete(tag);\n};\n\nmodule.exports = {\n  validateTags, validateTag, addTag, removeTag,\n};\n\n", "const xre = require('xregexp');\n\nconst ByteArray = require('./byteArray.cjs');\n\nconst cvMappingType = 2;\nconst bcvMappingType = 3;\n\nconst bookCodes = [ // From Paratext via Scripture Burrito\n  'GEN',\n  'EXO',\n  'LEV',\n  'NUM',\n  'DEU',\n  'JOS',\n  'JDG',\n  'RUT',\n  '1SA',\n  '2SA',\n  '1KI',\n  '2KI',\n  '1CH',\n  '2CH',\n  'EZR',\n  'NEH',\n  'EST',\n  'JOB',\n  'PSA',\n  'PRO',\n  'ECC',\n  'SNG',\n  'ISA',\n  'JER',\n  'LAM',\n  'EZK',\n  'DAN',\n  'HOS',\n  'JOL',\n  'AMO',\n  'OBA',\n  'JON',\n  'MIC',\n  'NAM',\n  'HAB',\n  'ZEP',\n  'HAG',\n  'ZEC',\n  'MAL',\n  'MAT',\n  'MRK',\n  'LUK',\n  'JHN',\n  'ACT',\n  'ROM',\n  '1CO',\n  '2CO',\n  'GAL',\n  'EPH',\n  'PHP',\n  'COL',\n  '1TH',\n  '2TH',\n  '1TI',\n  '2TI',\n  'TIT',\n  'PHM',\n  'HEB',\n  'JAS',\n  '1PE',\n  '2PE',\n  '1JN',\n  '2JN',\n  '3JN',\n  'JUD',\n  'REV',\n  'TOB',\n  'JDT',\n  'ESG',\n  'WIS',\n  'SIR',\n  'BAR',\n  'LJE',\n  'S3Y',\n  'SUS',\n  'BEL',\n  '1MA',\n  '2MA',\n  '3MA',\n  '4MA',\n  '1ES',\n  '2ES',\n  'MAN',\n  'PS2',\n  'ODA',\n  'PSS',\n  'JSA',\n  'JDB',\n  'TBS',\n  'SST',\n  'DNT',\n  'BLT',\n  'EZA',\n  '5EZ',\n  '6EZ',\n  'DAG',\n  'PS3',\n  '2BA',\n  'LBA',\n  'JUB',\n  'ENO',\n  '1MQ',\n  '2MQ',\n  '3MQ',\n  'REP',\n  '4BA',\n  'LAO',\n];\n\nconst bookCodeIndex = () => {\n  const ret = {};\n\n  for (const [bookN, book] of Object.entries(bookCodes)) {\n    ret[book] = parseInt(bookN);\n  }\n  return ret;\n};\n\nconst vrs2json = vrsString => {\n  const ret = {};\n\n  for (\n    const vrsLineBits of\n    vrsString\n      .split(/[\\n\\r]+/)\n      .map(l => l.trim())\n      .map(l => xre.exec(l, xre('^([A-Z1-6]{3} [0-9]+:[0-9]+(-[0-9]+)?) = ([A-Z1-6]{3} [0-9]+:[0-9]+[a-z]?(-[0-9]+)?)$')))\n  ) {\n    if (!vrsLineBits) {\n      continue;\n    }\n\n    if (!(vrsLineBits[1] in ret)) {\n      ret[vrsLineBits[1]] = [];\n    }\n    ret[vrsLineBits[1]].push(vrsLineBits[3]);\n  }\n  return { mappedVerses: ret };\n};\n\nconst reverseVersification = vrsJson => {\n  // Assumes each verse is only mapped from once\n  const ret = {};\n\n  for (const [fromSpec, toSpecs] of Object.entries(vrsJson.mappedVerses)) {\n    for (const toSpec of toSpecs) {\n      if (toSpec in ret) {\n        ret[toSpec].push(fromSpec);\n      } else {\n        ret[toSpec] = [fromSpec];\n      }\n    }\n  }\n  return { reverseMappedVerses: ret };\n};\n\nconst preSuccinctVerseMapping = mappingJson => {\n  const ret = {};\n\n  for (let [fromSpec, toSpecs] of Object.entries(mappingJson)) {\n    if (typeof toSpecs === 'string') {\n      toSpecs = [toSpecs];\n    }\n\n    const [fromBook, fromCVV] = fromSpec.split(' ');\n    const toBook = toSpecs[0].split(' ')[0];\n    const record = toBook === fromBook ? ['cv'] : ['bcv'];\n    let [fromCh, fromV] = fromCVV.split(':');\n    let toV = fromV;\n\n    if (fromV.includes('-')) {\n      const vBits = fromV.split('-');\n      fromV = vBits[0];\n      toV = vBits[1];\n    }\n    record.push([parseInt(fromV), parseInt(toV)]);\n    record.push([]);\n\n    for (const toCVV of toSpecs.map(ts => ts.split(' ')[1])) {\n      let [toCh, fromV] = toCVV.split(':');\n      let toV = fromV;\n\n      if (fromV.includes('-')) {\n        const vBits = fromV.split('-');\n        fromV = vBits[0];\n        toV = vBits[1];\n      }\n\n      if (record[0] === 'cv') {\n        record[2].push([parseInt(toCh), parseInt(fromV), parseInt(toV)]);\n      } else {\n        record[2].push([parseInt(toCh), parseInt(fromV), parseInt(toV), toBook]);\n      }\n    }\n\n    if (!(fromBook in ret)) {\n      ret[fromBook] = {};\n    }\n\n    if (!(fromCh in ret[fromBook])) {\n      ret[fromBook][fromCh] = [];\n    }\n    ret[fromBook][fromCh].push(record);\n  }\n  return ret;\n};\n\nconst succinctifyVerseMappings = preSuccinct => {\n  const ret = {};\n  const bci = bookCodeIndex();\n\n  for (const [book, chapters] of Object.entries(preSuccinctVerseMapping(preSuccinct))) {\n    ret[book] = {};\n\n    for (const [chapter, mappings] of Object.entries(chapters)) {\n      ret[book][chapter] = succinctifyVerseMapping(mappings, bci);\n    }\n  }\n  return ret;\n};\n\nconst succinctifyVerseMapping = (preSuccinctBC, bci) => {\n  const makeMappingLengthByte = (recordType, length) =>\n    length + (recordType * 64);\n\n  const ret = new ByteArray(64);\n\n  for (const [recordTypeStr, [fromVerseStart, fromVerseEnd], mappings] of preSuccinctBC) {\n    const pos = ret.length;\n    const recordType = recordTypeStr === 'bcv' ? bcvMappingType : cvMappingType;\n    ret.pushNBytes([0, fromVerseStart, fromVerseEnd]);\n\n    if (recordType === bcvMappingType) {\n      const bookIndex = bci[mappings[0][3]];\n      ret.pushNByte(bookIndex);\n    }\n    ret.pushNByte(mappings.length);\n\n    for (const [ch, fromV] of mappings) {\n      ret.pushNBytes([ch, fromV]);\n    }\n\n    const recordLength = ret.length - pos;\n\n    if (recordLength > 63) {\n      throw new Error(`Mapping in succinctifyVerseMapping ${JSON.stringify(mappings)} is too long (${recordLength} bytes)`);\n    }\n    ret.setByte(pos, makeMappingLengthByte(recordType, recordLength));\n  }\n  ret.trim();\n  return ret;\n};\n\nconst mappingLengthByte = (succinct, pos) => {\n  const sByte = succinct.byte(pos);\n  return [\n    sByte >> 6,\n    sByte % 64,\n  ];\n};\n\n// eslint-disable-next-line no-unused-vars\nconst unsuccinctifyVerseMapping = (succinctBC, fromBookCode, bci) => {\n  const ret = [];\n  let pos = 0;\n\n  while (pos < succinctBC.length) {\n    let recordPos = pos;\n    const unsuccinctRecord = {};\n    const [recordType, recordLength] = mappingLengthByte(succinctBC, pos);\n    recordPos++;\n    unsuccinctRecord.fromVerseStart = succinctBC.nByte(recordPos);\n    recordPos += succinctBC.nByteLength(unsuccinctRecord.fromVerseStart);\n    unsuccinctRecord.fromVerseEnd = succinctBC.nByte(recordPos);\n    recordPos += succinctBC.nByteLength(unsuccinctRecord.fromVerseEnd);\n    unsuccinctRecord.bookCode = fromBookCode;\n\n    if (recordType === bcvMappingType) {\n      const bookIndex = succinctBC.nByte(recordPos);\n      unsuccinctRecord.bookCode = bookCodes[bookIndex];\n      recordPos += succinctBC.nByteLength(bookIndex);\n    }\n\n    const nMappings = succinctBC.nByte(recordPos);\n    recordPos += succinctBC.nByteLength(nMappings);\n    const mappings = [];\n\n    while (mappings.length < nMappings) {\n      const mapping = {};\n      mapping.ch = succinctBC.nByte(recordPos);\n      recordPos += succinctBC.nByteLength(mapping.ch);\n      mapping.verseStart = succinctBC.nByte(recordPos);\n      recordPos += succinctBC.nByteLength(mapping.verseStart);\n      mappings.push(mapping);\n    }\n    unsuccinctRecord.mapping = mappings;\n    ret.push(unsuccinctRecord);\n    pos += recordLength;\n  }\n  return ret;\n};\n\nconst mapVerse = (succinct, b, c, v) => {\n  // Succinct for one chapter.\n  // Pass book and chapter to provide complete response in each case.\n  let ret = null;\n  let pos = 0;\n\n  while (pos < succinct.length) {\n    let recordPos = pos;\n    const [recordType, recordLength] = mappingLengthByte(succinct, pos);\n    recordPos++;\n    const fromVerseStart = succinct.nByte(recordPos);\n    recordPos += succinct.nByteLength(fromVerseStart);\n    const fromVerseEnd = succinct.nByte(recordPos);\n    recordPos += succinct.nByteLength(fromVerseEnd);\n\n    if (v < fromVerseStart || v > fromVerseEnd) {\n      pos += recordLength;\n      continue;\n    }\n\n    let bookCode = b;\n\n    if (recordType === bcvMappingType) {\n      const bookIndex = succinct.nByte(recordPos);\n      bookCode = bookCodes[bookIndex];\n      recordPos += succinct.nByteLength(bookIndex);\n    }\n    ret = [bookCode, []];\n    const nMappings = succinct.nByte(recordPos);\n    recordPos += succinct.nByteLength(nMappings);\n\n    while (ret[1].length < nMappings) {\n      const ch = succinct.nByte(recordPos);\n      recordPos += succinct.nByteLength(ch);\n      const verseStart = succinct.nByte(recordPos);\n      recordPos += succinct.nByteLength(verseStart);\n      ret[1].push([ch, (v - fromVerseStart) + verseStart]);\n    }\n    break;\n  }\n  return ret || [b, [[c, v]]];\n};\n\nmodule.exports = {\n  vrs2json,\n  reverseVersification,\n  preSuccinctVerseMapping,\n  bookCodes,\n  succinctifyVerseMapping,\n  succinctifyVerseMappings,\n  unsuccinctifyVerseMapping,\n  bookCodeIndex,\n  mapVerse,\n};\n", "const ByteArray = require('./byteArray.cjs');\nconst canons = require('./canons.cjs');\nconst enums = require('./enums.cjs');\nconst { generateId } = require('./generateId.cjs');\nconst graftDefs = require('./graftDefs.cjs');\nconst inspect = require('./inspectSuccinct.cjs');\nconst itemDefs = require('./itemDefs.cjs');\nconst parserConstants = require('./parserConstantDefs.cjs');\nconst scopeDefs = require('./scopeDefs.cjs');\nconst succinct = require('./succinct.cjs');\nconst tags = require('./tags.cjs');\nconst tokenDefs = require('./tokenDefs.cjs');\nconst versification = require('./versification.cjs');\n\nmodule.exports = {\n  ByteArray,\n  canons,\n  enums,\n  generateId,\n  graftDefs,\n  inspect,\n  itemDefs,\n  parserConstants,\n  scopeDefs,\n  succinct,\n  tags,\n  tokenDefs,\n  versification,\n};\n", "const xre = require('xregexp');\n\nconst validateSelectors = (docSet, selectors) => {\n  if (typeof selectors !== 'object') {\n    throw new Error(`DocSet constructor expects selectors to be object, found ${typeof docSet.selectors}`);\n  }\n\n  const expectedSelectors = {};\n\n  for (const selector of docSet.processor.selectors) {\n    expectedSelectors[selector.name] = selector;\n  }\n\n  for (const [name, value] of Object.entries(selectors)) {\n    if (!(name in expectedSelectors)) {\n      throw new Error(`Unexpected selector '${name}' (expected one of [${Object.keys(expectedSelectors).join(', ')}])`);\n    }\n\n    if (\n      (typeof value === 'string' && expectedSelectors[name].type !== 'string') ||\n      (typeof value === 'number' && expectedSelectors[name].type !== 'integer')\n    ) {\n      throw new Error(`Selector '${name}' is of type ${typeof value} (expected ${expectedSelectors[name].type})`);\n    }\n\n    if (typeof value === 'number') {\n      if (!Number.isInteger(value)) {\n        throw new Error(`Value '${value}' of integer selector '${name}' is not an integer`);\n      }\n\n      if ('min' in expectedSelectors[name] && value < expectedSelectors[name].min) {\n        throw new Error(`Value '${value}' is less than ${expectedSelectors[name].min}`);\n      }\n\n      if ('max' in expectedSelectors[name] && value > expectedSelectors[name].max) {\n        throw new Error(`Value '${value}' is greater than ${expectedSelectors[name].max}`);\n      }\n    } else {\n      if ('regex' in expectedSelectors[name] && !xre.exec(value, xre(expectedSelectors[name].regex), 0)) {\n        throw new Error(`Value '${value}' does not match regex '${expectedSelectors[name].regex}'`);\n      }\n    }\n\n    if ('enum' in expectedSelectors[name] && !expectedSelectors[name].enum.includes(value)) {\n      throw new Error(`Value '${value}' of selector '${name}' is not in enum`);\n    }\n  }\n\n  for (const name of Object.keys(expectedSelectors)) {\n    if (!(name in selectors)) {\n      throw new Error(`Expected selector '${name}' not found`);\n    }\n  }\n  return selectors;\n};\n\nmodule.exports = { validateSelectors };\n\n", "const xre = require('xregexp');\nconst utils = require('../../util/index.cjs');\n\nconst blocksWithScriptureCV = (docSet, blocks, cv) => {\n  const hasMiddleChapter = (b, fromC, toC) => {\n    const blockChapterScopes = [\n      ...docSet.unsuccinctifyScopes(b.os).map(s => s[2]),\n      ...docSet.unsuccinctifyScopes(b.is).map(s => s[2]),\n    ].filter(s => s.startsWith('chapter/'));\n    return blockChapterScopes.map(s => parseInt(s.split('/')[1])).filter(n => n > fromC && n < toC).length > 0;\n  };\n\n  const hasFirstChapter = (b, fromC, fromV) => {\n    const hasFirstChapterScope = [\n      ...docSet.unsuccinctifyScopes(b.os).map(s => s[2]),\n      ...docSet.unsuccinctifyScopes(b.is).map(s => s[2]),\n    ].includes(`chapter/${fromC}`);\n    return hasFirstChapterScope &&\n      docSet.blockHasMatchingItem(\n        b,\n        (item, openScopes) => {\n          if (!openScopes.has(`chapter/${fromC}`)) {\n            return false;\n          }\n          return (\n            Array.from(openScopes)\n              .filter(s => s.startsWith('verse/'))\n              .filter(s => parseInt(s.split('/')[1]) >= fromV).length\n            > 0\n            ||\n            (\n              fromV === 0 &&\n              item[0] === 'token' &&\n              item[2] &&\n              Array.from(openScopes)\n                .filter(s => s.startsWith('verse'))\n                .length === 0\n            )\n          );\n        },\n        {},\n      );\n  };\n\n  const hasLastChapter = (b, toC, toV) => {\n    const hasLastChapterScope = [\n      ...docSet.unsuccinctifyScopes(b.os).map(s => s[2]),\n      ...docSet.unsuccinctifyScopes(b.is).map(s => s[2]),\n    ].includes(`chapter/${toC}`);\n    return hasLastChapterScope &&\n      docSet.blockHasMatchingItem(\n        b,\n        (item, openScopes) => {\n          if (!openScopes.has(`chapter/${toC}`)) {\n            return false;\n          }\n          return (\n            Array.from(openScopes)\n              .filter(s => s.startsWith('verse/'))\n              .filter(s => parseInt(s.split('/')[1]) <= toV).length\n            > 0\n            ||\n            (\n              toV === 0 &&\n              item[0] === 'token' &&\n              item[2] &&\n              Array.from(openScopes)\n                .filter(s => s.startsWith('verse'))\n                .length === 0\n            )\n\n          );\n        },\n        {},\n      );\n  };\n\n  if (xre.exec(cv, xre('^[1-9][0-9]*$'))) {\n    const scopes = [`chapter/${cv}`];\n    return blocks.filter(b => docSet.allScopesInBlock(b, scopes));\n  } else if (xre.exec(cv, xre('^[1-9][0-9]*-[1-9][0-9]*$'))) {\n    const [fromC, toC] = cv.split('-').map(v => parseInt(v));\n\n    if (fromC > toC) {\n      throw new Error(`Chapter range must be from min to max, not '${cv}'`);\n    }\n\n    const scopes = [...Array((toC - fromC) + 1).keys()].map(n => `chapter/${n + fromC}`);\n    return blocks.filter(b => docSet.anyScopeInBlock(b, scopes));\n  } else if (xre.exec(cv, xre('^[1-9][0-9]*:[0-9]+$'))) {\n    const [fromC, fromV] = cv.split(':').map(v => parseInt(v));\n\n    if (fromV === 0) {\n      const scopes = [`chapter/${fromC}`];\n      return blocks\n        .filter(b => docSet.allScopesInBlock(b, scopes))\n        .filter(\n          b =>\n            [...docSet.allBlockScopes(b)]\n              .filter(s => s.startsWith('verse')).length === 0,\n        );\n    } else {\n      const scopes = [`chapter/${fromC}`, `verse/${fromV}`];\n      return blocks.filter(b => docSet.allScopesInBlock(b, scopes));\n    }\n  } else if (xre.exec(cv, xre('^[1-9][0-9]*:[0-9]+-[1-9][0-9]*$'))) {\n    const [fromC, vs] = cv.split(':');\n    const [fromV, toV] = vs.split('-').map(v => parseInt(v));\n\n    if (fromV > toV) {\n      throw new Error(`Verse range must be from min to max, not '${vs}'`);\n    }\n\n    const chapterScopes = [`chapter/${fromC}`];\n    const verseScopes = [...Array((toV - fromV) + 1).keys()].map(n => `verse/${n + fromV}`);\n    return blocks\n      .filter(b => docSet.allScopesInBlock(b, chapterScopes))\n      .filter(\n        b =>\n          docSet.anyScopeInBlock(b, verseScopes) ||\n          (\n            fromV === 0 &&\n            [...docSet.allBlockScopes(b)]\n              .filter(s => s.startsWith('verse')).length === 0\n          ),\n      );\n  } else if (xre.exec(cv, xre('^[1-9][0-9]*:[0-9]+-[1-9][0-9]*:[0-9]+$'))) {\n    const [fromCV, toCV] = cv.split('-');\n    const [fromC, fromV] = fromCV.split(':').map(c => parseInt(c));\n    const [toC, toV] = toCV.split(':').map(v => parseInt(v));\n\n    if (fromC > toC) {\n      throw new Error(`Chapter range must be from min to max, not '${fromC}-${toV}'`);\n    }\n\n    const chapterScopes = [...Array((toC - fromC) + 1).keys()].map(n => `chapter/${n + fromC}`);\n    const chapterBlocks = blocks.filter(b => docSet.anyScopeInBlock(b, chapterScopes));\n    return chapterBlocks.filter(b => hasMiddleChapter(b, fromC, toC) || hasFirstChapter(b, fromC, fromV) || hasLastChapter(b, toC, toV));\n  } else {\n    throw new Error(`Bad cv reference '${cv}'`);\n  }\n};\n\nconst allBlockScopes = (docSet, block) => {\n  const [itemLength, itemType, itemSubtype] = utils.succinct.headerBytes(block.bs, 0);\n  const blockScope = docSet.unsuccinctifyScope(block.bs, itemType, itemSubtype, 0);\n  return new Set([\n    ...docSet.unsuccinctifyScopes(block.os).map(s => s[2]),\n    ...docSet.unsuccinctifyScopes(block.is).map(s => s[2]),\n    blockScope[2],\n  ],\n  );\n};\n\nconst allScopesInBlock = (docSet, block, scopes) => {\n  const allBlockScopes = docSet.allBlockScopes(block);\n\n  for (const scope of scopes) {\n    if (!allBlockScopes.has(scope)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst anyScopeInBlock = (docSet, block, scopes) => {\n  const allBlockScopes = docSet.allBlockScopes(block);\n\n  for (const scope of scopes) {\n    if (allBlockScopes.has(scope)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst blockHasBlockScope = (docSet, block, scope) => {\n  const [itemLength, itemType, itemSubtype] = utils.succinct.headerBytes(block.bs, 0);\n  const blockScope = docSet.unsuccinctifyScope(block.bs, itemType, itemSubtype, 0);\n  return (blockScope[2] === scope);\n};\n\nconst blockHasChars = (docSet, block, charsIndexes) => {\n  let ret = false;\n  let pos = 0;\n  const succinct = block.c;\n\n  if (charsIndexes.includes(-1)) {\n    return false;\n  }\n\n  while (!ret && (pos < succinct.length)) {\n    const [itemLength, itemType] = utils.succinct.headerBytes(succinct, pos);\n\n    if (itemType === utils.itemDefs.itemEnum['token']) {\n      if (charsIndexes.includes(succinct.nByte(pos + 2))) {\n        ret = true;\n      }\n    }\n    pos += itemLength;\n  }\n  return ret;\n};\n\nconst blockHasMatchingItem = (docSet, block, testFunction, options) => {\n  const openScopes = new Set(docSet.unsuccinctifyScopes(block.os).map(ri => ri[2]));\n\n  for (const item of docSet.unsuccinctifyItems(block.c, options, 0)) {\n    if (item[0] === 'scope' && item[1] === 'start') {\n      openScopes.add(item[2]);\n    }\n\n    if (testFunction(item, openScopes)) {\n      return true;\n    }\n\n    if (item[0] === 'scope' && item[1] === 'end') {\n      openScopes.delete(item[2]);\n    }\n  }\n  return false;\n};\n\nmodule.exports = {\n  blocksWithScriptureCV,\n  allBlockScopes,\n  anyScopeInBlock,\n  allScopesInBlock,\n  blockHasBlockScope,\n  blockHasChars,\n  blockHasMatchingItem,\n};\n", "const xre = require('xregexp');\nconst utils = require('../../util/index.cjs');\n\nconst unsuccinctifyBlock = (docSet, block, options) => {\n  docSet.maybeBuildEnumIndexes();\n  const succinctBlockScope = block.bs;\n  const [itemLength, itemType, itemSubtype] = utils.succinct.headerBytes(succinctBlockScope, 0);\n  const blockScope = docSet.unsuccinctifyScope(succinctBlockScope, itemType, itemSubtype, 0);\n  const blockGrafts = docSet.unsuccinctifyGrafts(block.bg);\n  const openScopes = docSet.unsuccinctifyScopes(block.os);\n  const includedScopes = docSet.unsuccinctifyScopes(block.is);\n  const nextToken = block.nt.nByte(0);\n  const blockItems = docSet.unsuccinctifyItems(block.c, options || {}, nextToken);\n  return {\n    bs: blockScope,\n    bg: blockGrafts,\n    c: blockItems,\n    os: openScopes,\n    is: includedScopes,\n    nt: nextToken,\n  };\n};\n\nconst unsuccinctifyItems = (docSet, succinct, options, nextToken, openScopes) => {\n  if (nextToken === undefined) {\n    throw new Error('nextToken (previously includeContext) must now be provided to unsuccinctifyItems');\n  }\n\n  if (nextToken !== null && typeof nextToken !== 'number') {\n    throw new Error(`nextToken (previously includeContext) must be null or an integer, not ${typeof nextToken} '${JSON.stringify(nextToken)}' in unsuccinctifyItems`);\n  }\n\n  const ret = [];\n  let pos = 0;\n  let tokenCount = nextToken || 0;\n  const scopes = new Set(openScopes || []);\n\n  while (pos < succinct.length) {\n    const [item, itemLength] = docSet.unsuccinctifyItem(succinct, pos, {});\n\n    if (item[0] === 'token') {\n      if ((Object.keys(options).length === 0) || options.tokens) {\n        if (nextToken !== null) {\n          item.push(item[0] === 'token' && item[1] === 'wordLike' ? tokenCount++ : null);\n          item.push([...scopes]);\n        }\n        ret.push(item);\n      }\n    } else if (item[0] === 'scope' && item[1] === 'start') {\n      scopes.add(item[2]);\n\n      if ((Object.keys(options).length === 0) || options.scopes) {\n        ret.push(item);\n      }\n    } else if (item[0] === 'scope' && item[1] === 'end') {\n      scopes.delete(item[2]);\n\n      if ((Object.keys(options).length === 0) || options.scopes) {\n        ret.push(item);\n      }\n    } else if (item[0] === 'graft') {\n      if ((Object.keys(options).length === 0) || options.grafts) {\n        ret.push(item);\n      }\n    }\n    pos += itemLength;\n  }\n  return ret;\n};\n\nconst unsuccinctifyItem = (docSet, succinct, pos, options) => {\n  let item = null;\n  const [itemLength, itemType, itemSubtype] = utils.succinct.headerBytes(succinct, pos);\n\n  switch (itemType) {\n  case utils.itemDefs.itemEnum.token:\n    if (Object.keys(options).length === 0 || options.tokens) {\n      item = docSet.unsuccinctifyToken(succinct, itemSubtype, pos);\n    }\n    break;\n  case utils.itemDefs.itemEnum.startScope:\n  case utils.itemDefs.itemEnum.endScope:\n    if (Object.keys(options).length === 0 || options.scopes) {\n      item = docSet.unsuccinctifyScope(succinct, itemType, itemSubtype, pos);\n    }\n    break;\n  case utils.itemDefs.itemEnum.graft:\n    if (Object.keys(options).length === 0 || options.grafts) {\n      item = docSet.unsuccinctifyGraft(succinct, itemSubtype, pos);\n    }\n    break;\n  }\n  return [item, itemLength];\n};\n\nconst unsuccinctifyPrunedItems = (docSet, block, options) => {\n  const openScopes = new Set(docSet.unsuccinctifyScopes(block.os).map(ri => ri[2]));\n  const requiredScopes = options.requiredScopes || [];\n  const anyScope = options.anyScope || false;\n\n  const allScopesInItem = () => {\n    for (const scope of requiredScopes) {\n      if (!openScopes.has(scope)) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const anyScopeInItem = () => {\n    for (const scope of requiredScopes) {\n      if (openScopes.has(scope)) {\n        return true;\n      }\n    }\n    return (requiredScopes.length === 0);\n  };\n\n  const scopeTest = anyScope ? anyScopeInItem : allScopesInItem;\n  const charsTest = (item) =>\n    !options.withChars ||\n    options.withChars.length === 0 ||\n    (item[0] === 'token' && options.withChars.includes(item[2]));\n  const ret = [];\n\n  for (const item of docSet.unsuccinctifyItems(block.c, options, block.nt.nByte(0), openScopes)) {\n    if (item[0] === 'scope' && item[1] === 'start') {\n      openScopes.add(item[2]);\n    }\n\n    if (scopeTest() && charsTest(item)) {\n      ret.push(item);\n    }\n\n    if (item[0] === 'scope' && item[1] === 'end') {\n      openScopes.delete(item[2]);\n    }\n  }\n  return ret;\n};\n\nconst unsuccinctifyItemsWithScriptureCV = (docSet, block, cv, options) => {\n  options = options || {};\n  const openScopes = new Set(docSet.unsuccinctifyScopes(block.os).map(ri => ri[2]));\n\n  const cvMatchFunction = () => {\n    if (xre.exec(cv, xre('^[1-9][0-9]*$'))) {\n      return () => openScopes.has(`chapter/${cv}`);\n    } else if (xre.exec(cv, xre('^[1-9][0-9]*-[1-9][0-9]*$'))) {\n      return () => {\n        const [fromC, toC] = cv.split('-').map(v => parseInt(v));\n\n        if (fromC > toC) {\n          throw new Error(`Chapter range must be from min to max, not '${cv}'`);\n        }\n\n        for (const scope of [...Array((toC - fromC) + 1).keys()].map(n => `chapter/${n + fromC}`)) {\n          if (openScopes.has(scope)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    } else if (xre.exec(cv, xre('^[1-9][0-9]*:[0-9]+$'))) {\n      return () => {\n        const [fromC, fromV] = cv.split(':').map(v => parseInt(v));\n\n        if (fromV === 0) {\n          return (\n            openScopes.has(`chapter/${fromC}`) &&\n            [...openScopes].filter(s => s.startsWith('verse')).length === 0\n          );\n        } else {\n          for (const scope of [`chapter/${fromC}`, `verse/${fromV}`]) {\n            if (!openScopes.has(scope)) {\n              return false;\n            }\n          }\n          return true;\n        }\n      };\n    } else if (xre.exec(cv, xre('^[1-9][0-9]*:[0-9]+-[1-9][0-9]*$'))) {\n      return () => {\n        const [fromC, vs] = cv.split(':');\n        const [fromV, toV] = vs.split('-').map(v => parseInt(v));\n\n        if (fromV > toV) {\n          throw new Error(`Verse range must be from min to max, not '${vs}'`);\n        }\n\n        const chapterScope = `chapter/${fromC}`;\n        const verseScopes = [...Array((toV - fromV) + 1).keys()].map(n => `verse/${n + fromV}`);\n\n        if (!openScopes.has(chapterScope)) {\n          return false;\n        }\n\n        for (const scope of verseScopes) {\n          if (openScopes.has(scope)) {\n            return true;\n          }\n        }\n        return fromV === 0 && [...openScopes].filter(s => s.startsWith('verse')).length === 0;\n      };\n    } else if (xre.exec(cv, xre('^[1-9][0-9]*:[0-9]+-[1-9][0-9]*:[0-9]+$'))) {\n      return () => {\n        const [fromCV, toCV] = cv.split('-');\n        const [fromC, fromV] = fromCV.split(':').map(c => parseInt(c));\n        const [toC, toV] = toCV.split(':').map(v => parseInt(v));\n\n        if (fromC > toC) {\n          throw new Error(`Chapter range must be from min to max, not '${fromC}-${toV}'`);\n        }\n\n        const scopeArray = [...openScopes];\n        const chapterScopes = scopeArray.filter(s => s.startsWith('chapter/'));\n\n        if (chapterScopes.length > 1) {\n          throw new Error(`Expected zero or one chapter for item, found ${chapterScopes.length}`);\n        }\n\n        const chapterNo = parseInt(chapterScopes[0].split('/')[1]);\n\n        if ((chapterNo < fromC) || (chapterNo > toC)) {\n          return false;\n        } else if (chapterNo === fromC) {\n          return scopeArray.filter(\n            s =>\n              s.startsWith('verse/') &&\n              parseInt(s.split('/')[1]) >= fromV,\n          ).length > 0 ||\n            (fromV === 0 && scopeArray.filter(s => s.startsWith('verse')).length === 0);\n        } else if (chapterNo === toC) {\n          return scopeArray.filter(\n            s =>\n              s.startsWith('verse/') &&\n              parseInt(s.split('/')[1]) <= toV,\n          ).length > 0 ||\n            (toV === 0 && scopeArray.filter(s => s.startsWith('verse')).length === 0);\n        } else {\n          return true;\n        }\n      };\n    } else {\n      throw new Error(`Bad cv reference '${cv}'`);\n    }\n  };\n\n  const itemMatchesCV = cvMatchFunction();\n\n  const itemInOptions = (item) => {\n    if (!options || Object.keys(options).length === 0) {\n      return true;\n    } else {\n      const itemType = item[0];\n      return (\n        (itemType === 'token' && 'tokens' in options) ||\n        (itemType === 'graft' && 'grafts' in options) ||\n        (itemType === 'scope' && 'scopes' in options)\n      );\n    }\n  };\n\n  const ret = [];\n\n  for (const item of docSet.unsuccinctifyItems(block.c, {}, block.nt.nByte(0))) {\n    if (item[0] === 'scope' && item[1] === 'start') {\n      openScopes.add(item[2]);\n    }\n\n    if (itemMatchesCV() && itemInOptions(item)) {\n      ret.push(item);\n    }\n\n    if (item[0] === 'scope' && item[1] === 'end') {\n      openScopes.delete(item[2]);\n    }\n  }\n  return ret;\n};\n\nmodule.exports = {\n  unsuccinctifyBlock,\n  unsuccinctifyItem,\n  unsuccinctifyItems,\n  unsuccinctifyItemsWithScriptureCV,\n  unsuccinctifyPrunedItems,\n};\n", "const buildPreEnum = (docSet, succinct) => {\n  const ret = new Map();\n  let pos = 0;\n  let enumCount = 0;\n\n  while (pos < succinct.length) {\n    ret.set(\n      succinct.countedString(pos),\n      {\n        'enum': enumCount++,\n        'frequency': 0,\n      },\n    );\n    pos += succinct.byte(pos) + 1;\n  }\n\n  return ret;\n};\n\nconst recordPreEnum = (docSet, category, value) => {\n  if (!(category in docSet.preEnums)) {\n    throw new Error(`Unknown category ${category} in recordPreEnum. Maybe call buildPreEnums()?`);\n  }\n\n  if (value.length > 255) {\n    console.log('Value length of', value.length, 'in recordPreEnum');\n  }\n\n  if (!docSet.preEnums[category].has(value)) {\n    docSet.preEnums[category].set(\n      value,\n      {\n        'enum': docSet.preEnums[category].size,\n        'frequency': 1,\n      },\n    );\n  } else {\n    docSet.preEnums[category].get(value).frequency++;\n  }\n};\n\nconst buildEnum = (docSet, category, preEnumOb) => {\n  const sortedPreEnums = new Map([...preEnumOb.entries()]);\n\n  for (const enumText of sortedPreEnums.keys()) {\n    if (enumText.length > 255) {\n      console.log('enum text for', category, 'has length', enumText.length, 'in buildEnum - truncating');\n    }\n    docSet.enums[category].pushCountedString(enumText.substring(0, 255));\n  }\n  docSet.enums[category].trim();\n};\n\nconst enumForCategoryValue = (docSet, category, value, addUnknown) => {\n  if (!addUnknown) {\n    addUnknown = false;\n  }\n\n  if (!(category in docSet.preEnums)) {\n    throw new Error(`Unknown category ${category} in preEnums. Maybe call buildPreEnums()?`);\n  }\n\n  if (docSet.preEnums[category].has(value)) {\n    return docSet.preEnums[category].get(value).enum;\n  } else if (addUnknown) {\n    docSet.preEnums[category].set(\n      value,\n      {\n        'enum': docSet.preEnums[category].size,\n        'frequency': 1,\n      },\n    );\n    docSet.enums[category].pushCountedString(value);\n    docSet.buildEnumIndex(category);\n    return docSet.preEnums[category].get(value).enum;\n  } else {\n    throw new Error(`Unknown value '${value}' for category ${category} in enumForCategoryValue. Maybe call buildPreEnums()?`);\n  }\n};\n\n\nmodule.exports = {\n  buildPreEnum,\n  recordPreEnum,\n  buildEnum,\n  enumForCategoryValue,\n};\n", "const utils = require('../../util/index.cjs');\n\nconst countItems = (docSet, succinct) => {\n  let count = 0;\n  let pos = 0;\n\n  while (pos < succinct.length) {\n    count++;\n    const headerByte = succinct.byte(pos);\n    const itemLength = headerByte & 0x0000003F;\n    pos += itemLength;\n  }\n  return count;\n};\n\nconst itemsByIndex = (docSet, mainSequence, index, includeContext) => {\n  let ret = [];\n\n  if (!index) {\n    return ret;\n  }\n\n  let currentBlock = index.startBlock;\n  let nextToken = index.nextToken;\n\n  while (currentBlock <= index.endBlock) {\n    let blockItems = docSet.unsuccinctifyItems(mainSequence.blocks[currentBlock].c, {}, nextToken);\n    const blockScope = docSet.unsuccinctifyScopes(mainSequence.blocks[currentBlock].bs)[0];\n    const blockGrafts = docSet.unsuccinctifyGrafts(mainSequence.blocks[currentBlock].bg);\n\n    if (currentBlock === index.startBlock && currentBlock === index.endBlock) {\n      blockItems = blockItems.slice(index.startItem, index.endItem + 1);\n    } else if (currentBlock === index.startBlock) {\n      blockItems = blockItems.slice(index.startItem);\n    } else if (currentBlock === index.endBlock) {\n      blockItems = blockItems.slice(0, index.endItem + 1);\n    }\n\n    if (includeContext) {\n      let extendedBlockItems = [];\n\n      for (const bi of blockItems) {\n        extendedBlockItems.push(bi.concat([bi[0] === 'token' && bi[1] === 'wordLike' ? nextToken++ : null]));\n      }\n      blockItems = extendedBlockItems;\n    }\n    ret.push([...blockGrafts, ['scope', 'start', blockScope[2]], ...blockItems, ['scope', 'end', blockScope[2]]]);\n    currentBlock++;\n  }\n  return ret;\n};\n\nconst sequenceItemsByScopes = (docSet, blocks, byScopes) => {\n  // Return array of [scopes, items]\n  // Scan block items, track scopes\n  // If all scopes found:\n  //   - turn found scopes into string\n  //   - if that scope string doesn't exist, add to lookup table and push array\n  //   - add item to array matching scope string\n  let allBlockScopes = [];\n\n  const allScopesPresent = () => {\n    for (const requiredScope of byScopes) {\n      if (!matchingScope(requiredScope)) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const matchingScope = (scopeToMatch) => {\n    for (const blockScope of allBlockScopes) {\n      if (blockScope.startsWith(scopeToMatch)) {\n        return blockScope;\n      }\n    }\n    return null;\n  };\n\n  docSet.maybeBuildEnumIndexes();\n  const ret = [];\n  let waitingScopes = new Set([]);\n  let scopeMatchEnded = true; // Always start new itemGroup the first time\n\n  for (const [blockN, block] of blocks.entries()) {\n    const [itemLength, itemType, itemSubtype] = utils.succinct.headerBytes(block.bs, 0);\n    const blockScope = docSet.unsuccinctifyScope(block.bs, itemType, itemSubtype, 0)[2];\n    const startBlockScope = ['scope', 'start', blockScope];\n    const endBlockScope = ['scope', 'end', blockScope];\n    const blockGrafts = docSet.unsuccinctifyGrafts(block.bg);\n\n    allBlockScopes = new Set(docSet.unsuccinctifyScopes(block.os)\n      .map(s => s[2])\n      .concat([blockScope]),\n    );\n\n    for (\n      const item of blockGrafts.concat(\n        [\n          startBlockScope,\n          ...docSet.unsuccinctifyItems(block.c, {}, block.nt.nByte(0), allBlockScopes),\n          endBlockScope,\n        ],\n      ).concat(\n        (blockN !== blocks.length - 1) ? [['token', 'lineSpace', ' ']] : [],\n      )\n    ) {\n      if (item[0] === 'scope' && item[1] === 'start') {\n        waitingScopes.add(item[2]);\n      }\n\n      if (item[0] === 'token' && waitingScopes.size > 0) {\n        for (const waiting of Array.from(waitingScopes)) {\n          allBlockScopes.add(waiting);\n        }\n        waitingScopes.clear();\n      }\n\n      if (allScopesPresent()) {\n        if (scopeMatchEnded) {\n          ret.push([[...allBlockScopes], []]);\n        }\n        ret[ret.length - 1][1].push(item);\n        scopeMatchEnded = false;\n      } else {\n        scopeMatchEnded = true;\n      }\n\n      if (item[0] === 'scope' && item[1] === 'end') {\n        allBlockScopes.delete(item[2]);\n        waitingScopes.delete(item[2]);\n      }\n    }\n  }\n  return ret;\n};\n\nconst sequenceItemsByMilestones = (docSet, blocks, byMilestones) => {\n  // Return array of [scopes, items]\n  // Scan block items\n  // If milestone found:\n  //   - add array\n  // push item to last array\n  let allBlockScopes = new Set([]);\n  const milestoneFound = (item) => item[0] === 'scope' && item[1] === 'start' && byMilestones.includes(item[2]);\n\n  docSet.maybeBuildEnumIndexes();\n  const ret = [[[], []]];\n\n  for (const block of blocks) {\n    const [itemLength, itemType, itemSubtype] = utils.succinct.headerBytes(block.bs, 0);\n    const blockScope = docSet.unsuccinctifyScope(block.bs, itemType, itemSubtype, 0)[2];\n    const blockGrafts = docSet.unsuccinctifyGrafts(block.bg);\n    allBlockScopes.add(blockScope);\n    docSet.unsuccinctifyScopes(block.os).forEach(s => allBlockScopes.add(s[2]));\n    const items = blockGrafts.concat(\n      [blockScope].concat(\n        docSet.unsuccinctifyItems(block.c, {}, block.nt.nByte(0)),\n      ),\n    );\n\n    for (const item of items) {\n      if (item[0] === 'scope' && item[1] === 'start') {\n        allBlockScopes.add(item[2]);\n      }\n\n      if (milestoneFound(item)) {\n        ret[ret.length - 1][0] = [...allBlockScopes].sort();\n        ret.push([[], []]);\n\n        for (\n          const bs of [...allBlockScopes]\n            .filter(\n              s => {\n                const excludes = ['blockTag', 'verse', 'verses', 'chapter'];\n                return excludes.includes(s.split('/')[0]) || byMilestones.includes(s);\n              },\n            )\n        ) {\n          allBlockScopes.delete(bs);\n        }\n        allBlockScopes.add(blockScope);\n      }\n      ret[ret.length - 1][1].push(item);\n    }\n    ret[ret.length - 1][1].push(['scope', 'end', blockScope]);\n    ret[ret.length - 1][1].push(['token', 'punctuation', '\\n']);\n  }\n  ret[ret.length - 1][0] = [...allBlockScopes].sort();\n  return ret;\n};\n\nmodule.exports = {\n  countItems,\n  itemsByIndex,\n  sequenceItemsByMilestones,\n  sequenceItemsByScopes,\n};\n", "const rehash = docSet => {\n  docSet.preEnums = {};\n\n  for (const category of Object.keys(docSet.enums)) {\n    docSet.preEnums[category] = new Map();\n  }\n  docSet.maybeBuildEnumIndexes();\n\n  for (const document of docSet.documents()) {\n    for (const sequence of Object.values(document.sequences)) {\n      document.rerecordPreEnums(docSet, sequence);\n    }\n  }\n  docSet.sortPreEnums();\n  const oldToNew = docSet.makeRehashEnumMap();\n\n  for (const document of docSet.documents()) {\n    for (const sequence of Object.values(document.sequences)) {\n      document.rewriteSequenceBlocks(sequence.id, oldToNew);\n    }\n  }\n  docSet.buildEnums();\n  docSet.buildEnumIndexes();\n  return true;\n};\n\nconst makeRehashEnumMap = docSet => {\n  const ret = {};\n\n  for (const [category, enumSuccinct] of Object.entries(docSet.enums)) {\n    ret[category] = [];\n    let pos = 0;\n\n    while (pos < enumSuccinct.length) {\n      const stringLength = enumSuccinct.byte(pos);\n      const enumString = enumSuccinct.countedString(pos);\n\n      if (docSet.preEnums[category].has(enumString)) {\n        ret[category].push(docSet.preEnums[category].get(enumString).enum);\n      } else {\n        ret[category].push(null);\n      }\n\n      pos += stringLength + 1;\n    }\n  }\n  return ret;\n};\n\nmodule.exports = {\n  rehash,\n  makeRehashEnumMap,\n};\n", "const utils = require('../../util/index.cjs');\nconst ByteArray = utils.ByteArray;\nconst {\n  pushSuccinctGraftBytes,\n  pushSuccinctScopeBytes,\n  pushSuccinctTokenBytes,\n} = utils.succinct;\nconst { itemEnum } = utils.itemDefs;\nconst { scopeEnum } = utils.scopeDefs;\nconst { tokenCategory, tokenEnum } = utils.tokenDefs;\n\nconst updateItems1 = (\n  docSet,\n  documentId,\n  sequenceId,\n  blockPosition,\n  typedArrayName,\n  itemObjects) => {\n  const document = docSet.processor.documents[documentId];\n\n  if (!document) {\n    throw new Error(`Document '${documentId}' not found`);\n  }\n\n  let sequence;\n\n  if (sequenceId) {\n    sequence = document.sequences[sequenceId];\n\n    if (!sequence) {\n      throw new Error(`Sequence '${sequenceId}' not found`);\n    }\n  } else {\n    sequence = document.sequences[document.mainId];\n  }\n\n  if (sequence.blocks.length <= blockPosition) {\n    throw new Error(`Could not find block ${blockPosition} (length=${sequence.blocks.length})`);\n  }\n\n  const block = sequence.blocks[blockPosition];\n  const newItemsBA = new ByteArray(itemObjects.length);\n  docSet.maybeBuildPreEnums();\n\n  let nextToken = 0;\n\n  if (blockPosition < 0) {\n    nextToken = sequence.blocks[blockPosition - 1].nt.nByte(0);\n  }\n\n  let charsEnumIndex, graftTypeEnumIndex, seqEnumIndex, scopeBits, scopeTypeByte, scopeBitBytes = null;\n\n  for (const item of itemObjects) {\n    switch (item.type) {\n    case 'token':\n      charsEnumIndex = docSet.enumForCategoryValue(tokenCategory[item.subType], item.payload, true);\n      pushSuccinctTokenBytes(newItemsBA, tokenEnum[item.subType], charsEnumIndex);\n      nextToken++;\n      break;\n    case 'graft':\n      graftTypeEnumIndex = docSet.enumForCategoryValue('graftTypes', item.subType, true);\n      seqEnumIndex = docSet.enumForCategoryValue('ids', item.payload, true);\n      pushSuccinctGraftBytes(newItemsBA, graftTypeEnumIndex, seqEnumIndex);\n      break;\n    case 'scope':\n      scopeBits = item.payload.split('/');\n      scopeTypeByte = scopeEnum[scopeBits[0]];\n\n      if (!scopeTypeByte && scopeTypeByte !== 0) {\n        throw new Error(`\"${scopeBits[0]}\" is not a scope type`);\n      }\n\n      scopeBitBytes = scopeBits.slice(1).map(b => docSet.enumForCategoryValue('scopeBits', b, true));\n      pushSuccinctScopeBytes(newItemsBA, itemEnum[`${item.subType}Scope`], scopeTypeByte, scopeBitBytes);\n      break;\n    }\n  }\n  newItemsBA.trim();\n  block[typedArrayName] = newItemsBA;\n\n  if (typedArrayName === 'c') {\n    block.nt.clear();\n    block.nt.pushNByte(nextToken);\n    // document.buildChapterVerseIndex();\n  }\n  return true;\n};\n\nconst updateItems = (\n  docSet,\n  documentId,\n  sequenceId,\n  blockPosition,\n  itemObjects) =>\n  updateItems1(\n    docSet,\n    documentId,\n    sequenceId,\n    blockPosition,\n    'c',\n    itemObjects,\n  );\n\nconst updateBlockGrafts = (\n  docSet,\n  documentId,\n  sequenceId,\n  blockPosition,\n  itemObjects) =>\n  updateItems1(\n    docSet,\n    documentId,\n    sequenceId,\n    blockPosition,\n    'bg',\n    itemObjects,\n  );\n\nconst updateBlockScope = (\n  docSet,\n  documentId,\n  sequenceId,\n  blockPosition,\n  bsObject) =>\n  updateItems1(\n    docSet,\n    documentId,\n    sequenceId,\n    blockPosition,\n    'bs',\n    [bsObject],\n  );\n\nconst updateOpenScopes = (\n  docSet,\n  documentId,\n  sequenceId,\n  blockPosition,\n  osObjects) =>\n  updateItems1(\n    docSet,\n    documentId,\n    sequenceId,\n    blockPosition,\n    'os',\n    osObjects,\n  );\n\nconst updateIncludedScopes = (\n  docSet,\n  documentId,\n  sequenceId,\n  blockPosition,\n  isObjects) =>\n  updateItems1(\n    docSet,\n    documentId,\n    sequenceId,\n    blockPosition,\n    'is',\n    isObjects,\n  );\n\nconst updateBlockIndexesAfterEdit = (docSet, sequence, blockPosition) => {\n  const labelsMatch = (firstA, secondA) => {\n    for (const first of Array.from(firstA)) {\n      if (!secondA.has(first)) {\n        return false;\n      }\n    }\n\n    for (const second of Array.from(secondA)) {\n      if (!firstA.has(second)) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const addSuccinctScope = (docSet, succinct, scopeLabel) => {\n    const scopeBits = scopeLabel.split('/');\n    const scopeTypeByte = scopeEnum[scopeBits[0]];\n\n    if (!scopeTypeByte && scopeTypeByte !== 0) {\n      throw new Error(`\"${scopeBits[0]}\" is not a scope type`);\n    }\n\n    const scopeBitBytes = scopeBits.slice(1).map(b => docSet.enumForCategoryValue('scopeBits', b, true));\n    pushSuccinctScopeBytes(succinct, itemEnum[`startScope`], scopeTypeByte, scopeBitBytes);\n  };\n\n  const block = sequence.blocks[blockPosition];\n  const includedScopeLabels = new Set();\n  const openScopeLabels = new Set();\n\n  for (const openScope of docSet.unsuccinctifyScopes(block.os)) {\n    openScopeLabels.add(openScope[2]);\n  }\n\n  for (const scope of docSet.unsuccinctifyItems(block.c, { scopes: true }, null)) {\n    if (scope[1] === 'start') {\n      includedScopeLabels.add(scope[2]);\n      openScopeLabels.add(scope[2]);\n    } else {\n      openScopeLabels.delete(scope[2]);\n    }\n  }\n\n  const isArray = Array.from(includedScopeLabels);\n  const isBA = new ByteArray(isArray.length);\n\n  for (const scopeLabel of isArray) {\n    addSuccinctScope(docSet, isBA, scopeLabel);\n  }\n  isBA.trim();\n  block.is = isBA;\n\n  if (blockPosition < (sequence.blocks.length - 1)) {\n    const nextOsBlock = sequence.blocks[blockPosition + 1];\n    const nextOsBA = nextOsBlock.os;\n    const nextOSLabels = new Set(docSet.unsuccinctifyScopes(nextOsBA).map(s => s[2]));\n\n    if (!labelsMatch(openScopeLabels, nextOSLabels)) {\n      const osBA = new ByteArray(nextOSLabels.length);\n\n      for (const scopeLabel of Array.from(openScopeLabels)) {\n        addSuccinctScope(docSet, osBA, scopeLabel);\n      }\n      osBA.trim();\n      nextOsBlock.os = osBA;\n      docSet.updateBlockIndexesAfterEdit(sequence, blockPosition + 1);\n    }\n  }\n};\n\nconst updateBlockIndexesAfterFilter = (docSet, sequence) => {\n  const addSuccinctScope = (docSet, succinct, scopeLabel) => {\n    const scopeBits = scopeLabel.split('/');\n    const scopeTypeByte = scopeEnum[scopeBits[0]];\n\n    if (!scopeTypeByte && scopeTypeByte !== 0) {\n      throw new Error(`\"${scopeBits[0]}\" is not a scope type`);\n    }\n\n    const scopeBitBytes = scopeBits.slice(1).map(b => docSet.enumForCategoryValue('scopeBits', b, true));\n    pushSuccinctScopeBytes(succinct, itemEnum[`startScope`], scopeTypeByte, scopeBitBytes);\n  };\n\n  const openScopeLabels = new Set();\n\n  for (const block of sequence.blocks) {\n    const osArray = Array.from(openScopeLabels);\n    const osBA = new ByteArray(osArray.length);\n\n    for (const scopeLabel of osArray) {\n      addSuccinctScope(docSet, osBA, scopeLabel);\n    }\n    osBA.trim();\n    block.os = osBA;\n    const includedScopeLabels = new Set();\n\n    for (const scope of docSet.unsuccinctifyItems(block.c, { scopes: true }, null)) {\n      if (scope[1] === 'start') {\n        includedScopeLabels.add(scope[2]);\n        openScopeLabels.add(scope[2]);\n      } else {\n        openScopeLabels.delete(scope[2]);\n      }\n    }\n\n    const isArray = Array.from(includedScopeLabels);\n    const isBA = new ByteArray(isArray.length);\n\n    for (const scopeLabel of isArray) {\n      addSuccinctScope(docSet, isBA, scopeLabel);\n    }\n    isBA.trim();\n    block.is = isBA;\n  }\n};\n\nmodule.exports = {\n  updateItems,\n  updateBlockGrafts,\n  updateBlockScope,\n  updateOpenScopes,\n  updateIncludedScopes,\n  updateBlockIndexesAfterEdit,\n  updateBlockIndexesAfterFilter,\n};\n", "const serializeSuccinct = docSet => {\n  const ret = {\n    id: docSet.id,\n    metadata: { selectors: docSet.selectors },\n    enums: {},\n    docs: {},\n    tags: Array.from(docSet.tags),\n  };\n\n  for (const [eK, eV] of Object.entries(docSet.enums)) {\n    eV.trim();\n    ret.enums[eK] = eV.base64();\n  }\n  ret.docs = {};\n\n  for (const docId of docSet.docIds) {\n    ret.docs[docId] = docSet.processor.documents[docId].serializeSuccinct();\n  }\n  return ret;\n};\n\nmodule.exports = { serializeSuccinct };\n", "/* eslint-disable no-unused-vars */\nconst checksum = require('checksum');\nconst utils = require('../util/index.cjs');\nconst ByteArray = utils.ByteArray;\nconst {\n  addTag, removeTag, validateTags,\n} = utils.tags;\nconst {\n  succinctGraftName,\n  succinctGraftSeqId,\n  succinctScopeLabel,\n  succinctTokenChars,\n  headerBytes,\n  enumIndex,\n  enumIndexes,\n} = utils.succinct;\nconst { itemEnum } = utils.itemDefs;\nconst { tokenEnumLabels } = utils.tokenDefs;\nconst { validateSelectors } = require('./doc_set_helpers/selectors.cjs');\nconst {\n  blocksWithScriptureCV,\n  allBlockScopes,\n  anyScopeInBlock,\n  allScopesInBlock,\n  blockHasBlockScope,\n  blockHasChars,\n  blockHasMatchingItem,\n} = require('./doc_set_helpers/block.cjs');\nconst {\n  unsuccinctifyBlock,\n  unsuccinctifyItems,\n  unsuccinctifyItem,\n  unsuccinctifyPrunedItems,\n  unsuccinctifyItemsWithScriptureCV,\n} = require('./doc_set_helpers/unsuccinctify.cjs');\nconst {\n  buildPreEnum,\n  recordPreEnum,\n  buildEnum,\n  enumForCategoryValue,\n} = require('./doc_set_helpers/enum.cjs');\nconst {\n  countItems,\n  itemsByIndex,\n  sequenceItemsByScopes,\n  sequenceItemsByMilestones,\n} = require('./doc_set_helpers/item.cjs');\nconst {\n  rehash,\n  makeRehashEnumMap,\n} = require('./doc_set_helpers/rehash.cjs');\nconst {\n  updateItems,\n  updateBlockGrafts,\n  updateBlockScope,\n  updateOpenScopes,\n  updateIncludedScopes,\n  updateBlockIndexesAfterEdit,\n  updateBlockIndexesAfterFilter,\n} = require('./doc_set_helpers/update.cjs');\nconst { serializeSuccinct } = require('./doc_set_helpers/serialize.cjs');\nclass DocSet {\n  constructor(processor, selectors, tags, succinctJson) {\n    this.processor = processor;\n    this.preEnums = {};\n    this.enumIndexes = {};\n    this.docIds = [];\n\n    if (succinctJson) {\n      this.fromSuccinct(processor, succinctJson);\n    } else {\n      this.fromScratch(processor, selectors, tags);\n    }\n    validateTags(this.tags);\n  }\n\n  fromScratch(processor, selectors, tags) {\n    const defaultedSelectors = selectors || processor.selectors;\n    this.selectors = validateSelectors(this, defaultedSelectors);\n    this.id = this.selectorString();\n    this.tags = new Set(tags || []);\n    this.enums = {\n      ids: new ByteArray(512),\n      wordLike: new ByteArray(8192),\n      notWordLike: new ByteArray(256),\n      scopeBits: new ByteArray(256),\n      graftTypes: new ByteArray(10),\n    };\n  }\n\n  fromSuccinct(processor, succinctJson) {\n    const populatedByteArray = (succinct) => {\n      const ret = new ByteArray(256);\n      ret.fromBase64(succinct);\n      ret.trim();\n      return ret;\n    };\n\n    this.id = succinctJson.id;\n    this.selectors = validateSelectors(this, succinctJson.metadata.selectors);\n    this.tags = new Set(succinctJson.tags);\n    validateTags(this.tags);\n    this.preEnums = {};\n    this.enums = {\n      ids: populatedByteArray(succinctJson.enums.ids),\n      wordLike: populatedByteArray(succinctJson.enums.wordLike),\n      notWordLike: populatedByteArray(succinctJson.enums.notWordLike),\n      scopeBits: populatedByteArray(succinctJson.enums.scopeBits),\n      graftTypes: populatedByteArray(succinctJson.enums.graftTypes),\n    };\n    this.enumIndexes = {};\n    this.docIds = [];\n  }\n\n  addTag(tag) {\n    addTag(this.tags, tag);\n  }\n\n  removeTag(tag) {\n    removeTag(this.tags, tag);\n  }\n\n  selectorString() {\n    return this.processor.selectorString(this.selectors);\n  }\n\n  documents() {\n    return this.docIds.map(did => this.processor.documents[did]);\n  }\n\n  documentWithBook(bookCode) {\n    const docsWithBook = Object.values(this.documents()).filter(doc => 'bookCode' in doc.headers && doc.headers['bookCode'] === bookCode);\n    return docsWithBook.length === 1 ? docsWithBook[0] : null;\n  }\n\n  maybeBuildPreEnums() {\n    if (Object.keys(this.preEnums).length === 0) {\n      this.buildPreEnums();\n    }\n  }\n\n  buildPreEnums() {\n    for (const [category, succinct] of Object.entries(this.enums)) {\n      this.preEnums[category] = buildPreEnum(this, succinct);\n    }\n  }\n\n  recordPreEnum(category, value) {\n    recordPreEnum(this, category, value);\n  }\n\n  sortPreEnums() {\n    for (const catKey of Object.keys(this.preEnums)) {\n      this.preEnums[catKey] = new Map([...this.preEnums[catKey].entries()].sort((a, b) => b[1].frequency - a[1].frequency));\n\n      let count = 0;\n\n      for (const [k, v] of this.preEnums[catKey]) {\n        v.enum = count++;\n      }\n    }\n  }\n\n  enumForCategoryValue(category, value, addUnknown) {\n    return enumForCategoryValue(this, category, value, addUnknown);\n  }\n\n  buildEnums() {\n    for (const [category, catOb] of Object.entries(this.preEnums)) {\n      this.enums[category].clear();\n      this.buildEnum(category, catOb);\n    }\n  }\n\n  buildEnum(category, preEnumOb) {\n    buildEnum(this, category, preEnumOb);\n  }\n\n  maybeBuildEnumIndexes() {\n    if (Object.keys(this.enumIndexes).length === 0) {\n      this.buildEnumIndexes();\n    }\n  }\n\n  buildEnumIndexes() {\n    this.enumIndexes = enumIndexes(this.enums);\n  }\n\n  buildEnumIndex(category) {\n    this.enumIndexes[category] = enumIndex(category, this.enums[category]);\n  }\n\n  unsuccinctifyBlock(block, options) {\n    return unsuccinctifyBlock(this, block, options);\n  }\n\n  unsuccinctifyItems(succinct, options, nextToken, openScopes) {\n    return unsuccinctifyItems(this, succinct, options, nextToken, openScopes);\n  }\n\n  unsuccinctifyItem(succinct, pos, options) {\n    return unsuccinctifyItem(this, succinct, pos, options);\n  }\n\n  unsuccinctifyPrunedItems(block, options) {\n    return unsuccinctifyPrunedItems(this, block, options);\n  }\n\n  unsuccinctifyScopes(succinct) {\n    const ret = [];\n    let pos = 0;\n\n    while (pos < succinct.length) {\n      const [itemLength, itemType, itemSubtype] = headerBytes(succinct, pos);\n      ret.push(this.unsuccinctifyScope(succinct, itemType, itemSubtype, pos));\n      pos += itemLength;\n    }\n    return ret;\n  }\n\n  unsuccinctifyGrafts(succinct) {\n    const ret = [];\n    let pos = 0;\n\n    while (pos < succinct.length) {\n      const [itemLength, itemType, itemSubtype] = headerBytes(succinct, pos);\n      ret.push(this.unsuccinctifyGraft(succinct, itemSubtype, pos));\n      pos += itemLength;\n    }\n    return ret;\n  }\n\n  unsuccinctifyToken(succinct, itemSubtype, pos) {\n    try {\n      return [\n        'token',\n        tokenEnumLabels[itemSubtype],\n        this.succinctTokenChars(succinct, itemSubtype, pos),\n      ];\n    } catch (err) {\n      throw new Error(`Error from unsuccinctifyToken: ${err}`);\n    }\n  }\n\n  unsuccinctifyScope(succinct, itemType, itemSubtype, pos) {\n    try {\n      return [\n        'scope',\n        (itemType === itemEnum.startScope) ? 'start' : 'end',\n        this.succinctScopeLabel(succinct, itemSubtype, pos),\n      ];\n    } catch (err) {\n      throw new Error(`Error from unsuccinctifyScope: ${err}`);\n    }\n  }\n\n  unsuccinctifyGraft(succinct, itemSubtype, pos) {\n    try {\n      return [\n        'graft',\n        this.succinctGraftName(itemSubtype),\n        this.succinctGraftSeqId(succinct, pos),\n      ];\n    } catch (err) {\n      throw new Error(`Error from unsuccinctifyGraft: ${err}`);\n    }\n  }\n\n  unsuccinctifyBlockScopeLabelsSet(block) {\n    const [itemLength, itemType, itemSubtype] = headerBytes(block.bs, 0);\n    const blockScope = this.unsuccinctifyScope(block.bs, itemType, itemSubtype, 0);\n    return new Set(\n      this.unsuccinctifyScopes(block.os).concat(\n        this.unsuccinctifyScopes(block.is),\n      ).concat([blockScope])\n        .map(ri => ri[2]));\n  }\n\n  unsuccinctifyItemsWithScriptureCV(block, cv, options) {\n    return unsuccinctifyItemsWithScriptureCV(this, block, cv, options);\n  }\n\n  succinctTokenChars(succinct, itemSubtype, pos) {\n    return succinctTokenChars(this.enums, this.enumIndexes, succinct, itemSubtype, pos);\n  }\n\n  succinctScopeLabel(succinct, itemSubtype, pos) {\n    return succinctScopeLabel(this.enums, this.enumIndexes, succinct, itemSubtype, pos);\n  }\n\n  succinctGraftName(itemSubtype) {\n    return succinctGraftName(this.enums, this.enumIndexes, itemSubtype);\n  }\n\n  succinctGraftSeqId(succinct, pos) {\n    return succinctGraftSeqId(this.enums, this.enumIndexes, succinct, pos);\n  }\n\n  countItems(succinct) {\n    return countItems(this, succinct);\n  }\n\n  itemsByIndex(mainSequence, index, includeContext) {\n    return itemsByIndex(this, mainSequence, index, includeContext);\n  }\n\n  blocksWithScriptureCV(blocks, cv) {\n    return blocksWithScriptureCV(this, blocks, cv);\n  }\n\n  allBlockScopes(block) {\n    return allBlockScopes(this, block);\n  }\n\n  allScopesInBlock(block, scopes) {\n    return allScopesInBlock(this, block, scopes);\n  }\n\n  anyScopeInBlock(block, scopes) {\n    return anyScopeInBlock(this, block, scopes);\n  }\n\n  blockHasBlockScope(block, scope) {\n    return blockHasBlockScope(this, block, scope);\n  }\n\n  blockHasChars(block, charsIndexes) {\n    return blockHasChars(this, block, charsIndexes);\n  }\n\n  blockHasMatchingItem(block, testFunction, options) {\n    return blockHasMatchingItem(this, block, testFunction, options);\n  }\n\n  sequenceItemsByScopes(blocks, byScopes) {\n    return sequenceItemsByScopes(this, blocks, byScopes);\n  }\n\n  sequenceItemsByMilestones(blocks, byMilestones) {\n    return sequenceItemsByMilestones(this, blocks, byMilestones);\n  }\n\n  rehash() {\n    return rehash(this);\n  }\n\n  makeRehashEnumMap() {\n    return makeRehashEnumMap(this);\n  }\n\n  updateItems(documentId, sequenceId, blockPosition, itemObjects) {\n    return updateItems(this, documentId, sequenceId, blockPosition, itemObjects);\n  }\n\n  updateBlockGrafts(documentId, sequenceId, blockPosition, itemObjects) {\n    return updateBlockGrafts(this, documentId, sequenceId, blockPosition, itemObjects);\n  }\n\n  updateBlockScope(documentId, sequenceId, blockPosition, bsObject) {\n    return updateBlockScope(this, documentId, sequenceId, blockPosition, bsObject);\n  }\n\n  updateOpenScopes(documentId, sequenceId, blockPosition, osObjects) {\n    return updateOpenScopes(this, documentId, sequenceId, blockPosition, osObjects);\n  }\n\n  updateIncludedScopes(documentId, sequenceId, blockPosition, isObjects) {\n    return updateIncludedScopes(this, documentId, sequenceId, blockPosition, isObjects);\n  }\n\n  updateBlockIndexesAfterEdit(sequence, blockPosition) {\n    updateBlockIndexesAfterEdit(this, sequence, blockPosition);\n  }\n\n  updateBlockIndexesAfterFilter(sequence) {\n    updateBlockIndexesAfterFilter(this, sequence);\n  }\n\n  serializeSuccinct() {\n    return serializeSuccinct(this);\n  }\n\n  checksum() {\n    const docIdsString = [...this.docIds].sort().join(' ');\n    return checksum(docIdsString);\n  }\n}\n\nmodule.exports = { DocSet };\n", "export abstract class _CodeOrName {\n  abstract readonly str: string\n  abstract readonly names: UsedNames\n  abstract toString(): string\n  abstract emptyStr(): boolean\n}\n\nexport const IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i\n\nexport class Name extends _CodeOrName {\n  readonly str: string\n  constructor(s: string) {\n    super()\n    if (!IDENTIFIER.test(s)) throw new Error(\"CodeGen: name must be a valid identifier\")\n    this.str = s\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    return false\n  }\n\n  get names(): UsedNames {\n    return {[this.str]: 1}\n  }\n}\n\nexport class _Code extends _CodeOrName {\n  readonly _items: readonly CodeItem[]\n  private _str?: string\n  private _names?: UsedNames\n\n  constructor(code: string | readonly CodeItem[]) {\n    super()\n    this._items = typeof code === \"string\" ? [code] : code\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    if (this._items.length > 1) return false\n    const item = this._items[0]\n    return item === \"\" || item === '\"\"'\n  }\n\n  get str(): string {\n    return (this._str ??= this._items.reduce((s: string, c: CodeItem) => `${s}${c}`, \"\"))\n  }\n\n  get names(): UsedNames {\n    return (this._names ??= this._items.reduce((names: UsedNames, c) => {\n      if (c instanceof Name) names[c.str] = (names[c.str] || 0) + 1\n      return names\n    }, {}))\n  }\n}\n\nexport type CodeItem = Name | string | number | boolean | null\n\nexport type UsedNames = Record<string, number | undefined>\n\nexport type Code = _Code | Name\n\nexport type SafeExpr = Code | number | boolean | null\n\nexport const nil = new _Code(\"\")\n\ntype CodeArg = SafeExpr | string | undefined\n\nexport function _(strs: TemplateStringsArray, ...args: CodeArg[]): _Code {\n  const code: CodeItem[] = [strs[0]]\n  let i = 0\n  while (i < args.length) {\n    addCodeArg(code, args[i])\n    code.push(strs[++i])\n  }\n  return new _Code(code)\n}\n\nconst plus = new _Code(\"+\")\n\nexport function str(strs: TemplateStringsArray, ...args: (CodeArg | string[])[]): _Code {\n  const expr: CodeItem[] = [safeStringify(strs[0])]\n  let i = 0\n  while (i < args.length) {\n    expr.push(plus)\n    addCodeArg(expr, args[i])\n    expr.push(plus, safeStringify(strs[++i]))\n  }\n  optimize(expr)\n  return new _Code(expr)\n}\n\nexport function addCodeArg(code: CodeItem[], arg: CodeArg | string[]): void {\n  if (arg instanceof _Code) code.push(...arg._items)\n  else if (arg instanceof Name) code.push(arg)\n  else code.push(interpolate(arg))\n}\n\nfunction optimize(expr: CodeItem[]): void {\n  let i = 1\n  while (i < expr.length - 1) {\n    if (expr[i] === plus) {\n      const res = mergeExprItems(expr[i - 1], expr[i + 1])\n      if (res !== undefined) {\n        expr.splice(i - 1, 3, res)\n        continue\n      }\n      expr[i++] = \"+\"\n    }\n    i++\n  }\n}\n\nfunction mergeExprItems(a: CodeItem, b: CodeItem): CodeItem | undefined {\n  if (b === '\"\"') return a\n  if (a === '\"\"') return b\n  if (typeof a == \"string\") {\n    if (b instanceof Name || a[a.length - 1] !== '\"') return\n    if (typeof b != \"string\") return `${a.slice(0, -1)}${b}\"`\n    if (b[0] === '\"') return a.slice(0, -1) + b.slice(1)\n    return\n  }\n  if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name)) return `\"${a}${b.slice(1)}`\n  return\n}\n\nexport function strConcat(c1: Code, c2: Code): Code {\n  return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str`${c1}${c2}`\n}\n\n// TODO do not allow arrays here\nfunction interpolate(x?: string | string[] | number | boolean | null): SafeExpr | string {\n  return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n    ? x\n    : safeStringify(Array.isArray(x) ? x.join(\",\") : x)\n}\n\nexport function stringify(x: unknown): Code {\n  return new _Code(safeStringify(x))\n}\n\nexport function safeStringify(x: unknown): string {\n  return JSON.stringify(x)\n    .replace(/\\u2028/g, \"\\\\u2028\")\n    .replace(/\\u2029/g, \"\\\\u2029\")\n}\n\nexport function getProperty(key: Code | string | number): Code {\n  return typeof key == \"string\" && IDENTIFIER.test(key) ? new _Code(`.${key}`) : _`[${key}]`\n}\n\n//Does best effort to format the name properly\nexport function getEsmExportName(key: Code | string | number): Code {\n  if (typeof key == \"string\" && IDENTIFIER.test(key)) {\n    return new _Code(`${key}`)\n  }\n  throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`)\n}\n\nexport function regexpCode(rx: RegExp): Code {\n  return new _Code(rx.toString())\n}\n", "import {_, nil, Code, Name} from \"./code\"\n\ninterface NameGroup {\n  prefix: string\n  index: number\n}\n\nexport interface NameValue {\n  ref: ValueReference // this is the reference to any value that can be referred to from generated code via `globals` var in the closure\n  key?: unknown // any key to identify a global to avoid duplicates, if not passed ref is used\n  code?: Code // this is the code creating the value needed for standalone code wit_out closure - can be a primitive value, function or import (`require`)\n}\n\nexport type ValueReference = unknown // possibly make CodeGen parameterized type on this type\n\nclass ValueError extends Error {\n  readonly value?: NameValue\n  constructor(name: ValueScopeName) {\n    super(`CodeGen: \"code\" for ${name} not defined`)\n    this.value = name.value\n  }\n}\n\ninterface ScopeOptions {\n  prefixes?: Set<string>\n  parent?: Scope\n}\n\ninterface ValueScopeOptions extends ScopeOptions {\n  scope: ScopeStore\n  es5?: boolean\n  lines?: boolean\n}\n\nexport type ScopeStore = Record<string, ValueReference[] | undefined>\n\ntype ScopeValues = {\n  [Prefix in string]?: Map<unknown, ValueScopeName>\n}\n\nexport type ScopeValueSets = {\n  [Prefix in string]?: Set<ValueScopeName>\n}\n\nexport enum UsedValueState {\n  Started,\n  Completed,\n}\n\nexport type UsedScopeValues = {\n  [Prefix in string]?: Map<ValueScopeName, UsedValueState | undefined>\n}\n\nexport const varKinds = {\n  const: new Name(\"const\"),\n  let: new Name(\"let\"),\n  var: new Name(\"var\"),\n}\n\nexport class Scope {\n  protected readonly _names: {[Prefix in string]?: NameGroup} = {}\n  protected readonly _prefixes?: Set<string>\n  protected readonly _parent?: Scope\n\n  constructor({prefixes, parent}: ScopeOptions = {}) {\n    this._prefixes = prefixes\n    this._parent = parent\n  }\n\n  toName(nameOrPrefix: Name | string): Name {\n    return nameOrPrefix instanceof Name ? nameOrPrefix : this.name(nameOrPrefix)\n  }\n\n  name(prefix: string): Name {\n    return new Name(this._newName(prefix))\n  }\n\n  protected _newName(prefix: string): string {\n    const ng = this._names[prefix] || this._nameGroup(prefix)\n    return `${prefix}${ng.index++}`\n  }\n\n  private _nameGroup(prefix: string): NameGroup {\n    if (this._parent?._prefixes?.has(prefix) || (this._prefixes && !this._prefixes.has(prefix))) {\n      throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`)\n    }\n    return (this._names[prefix] = {prefix, index: 0})\n  }\n}\n\ninterface ScopePath {\n  property: string\n  itemIndex: number\n}\n\nexport class ValueScopeName extends Name {\n  readonly prefix: string\n  value?: NameValue\n  scopePath?: Code\n\n  constructor(prefix: string, nameStr: string) {\n    super(nameStr)\n    this.prefix = prefix\n  }\n\n  setValue(value: NameValue, {property, itemIndex}: ScopePath): void {\n    this.value = value\n    this.scopePath = _`.${new Name(property)}[${itemIndex}]`\n  }\n}\n\ninterface VSOptions extends ValueScopeOptions {\n  _n: Code\n}\n\nconst line = _`\\n`\n\nexport class ValueScope extends Scope {\n  protected readonly _values: ScopeValues = {}\n  protected readonly _scope: ScopeStore\n  readonly opts: VSOptions\n\n  constructor(opts: ValueScopeOptions) {\n    super(opts)\n    this._scope = opts.scope\n    this.opts = {...opts, _n: opts.lines ? line : nil}\n  }\n\n  get(): ScopeStore {\n    return this._scope\n  }\n\n  name(prefix: string): ValueScopeName {\n    return new ValueScopeName(prefix, this._newName(prefix))\n  }\n\n  value(nameOrPrefix: ValueScopeName | string, value: NameValue): ValueScopeName {\n    if (value.ref === undefined) throw new Error(\"CodeGen: ref must be passed in value\")\n    const name = this.toName(nameOrPrefix) as ValueScopeName\n    const {prefix} = name\n    const valueKey = value.key ?? value.ref\n    let vs = this._values[prefix]\n    if (vs) {\n      const _name = vs.get(valueKey)\n      if (_name) return _name\n    } else {\n      vs = this._values[prefix] = new Map()\n    }\n    vs.set(valueKey, name)\n\n    const s = this._scope[prefix] || (this._scope[prefix] = [])\n    const itemIndex = s.length\n    s[itemIndex] = value.ref\n    name.setValue(value, {property: prefix, itemIndex})\n    return name\n  }\n\n  getValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    const vs = this._values[prefix]\n    if (!vs) return\n    return vs.get(keyOrRef)\n  }\n\n  scopeRefs(scopeName: Name, values: ScopeValues | ScopeValueSets = this._values): Code {\n    return this._reduceValues(values, (name: ValueScopeName) => {\n      if (name.scopePath === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n      return _`${scopeName}${name.scopePath}`\n    })\n  }\n\n  scopeCode(\n    values: ScopeValues | ScopeValueSets = this._values,\n    usedValues?: UsedScopeValues,\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    return this._reduceValues(\n      values,\n      (name: ValueScopeName) => {\n        if (name.value === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n        return name.value.code\n      },\n      usedValues,\n      getCode\n    )\n  }\n\n  private _reduceValues(\n    values: ScopeValues | ScopeValueSets,\n    valueCode: (n: ValueScopeName) => Code | undefined,\n    usedValues: UsedScopeValues = {},\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    let code: Code = nil\n    for (const prefix in values) {\n      const vs = values[prefix]\n      if (!vs) continue\n      const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map())\n      vs.forEach((name: ValueScopeName) => {\n        if (nameSet.has(name)) return\n        nameSet.set(name, UsedValueState.Started)\n        let c = valueCode(name)\n        if (c) {\n          const def = this.opts.es5 ? varKinds.var : varKinds.const\n          code = _`${code}${def} ${name} = ${c};${this.opts._n}`\n        } else if ((c = getCode?.(name))) {\n          code = _`${code}${c}${this.opts._n}`\n        } else {\n          throw new ValueError(name)\n        }\n        nameSet.set(name, UsedValueState.Completed)\n      })\n    }\n    return code\n  }\n}\n", "import type {ScopeValueSets, NameValue, ValueScope, ValueScopeName} from \"./scope\"\nimport {_, nil, _Code, Code, Name, UsedNames, CodeItem, addCodeArg, _CodeOrName} from \"./code\"\nimport {Scope, varKinds} from \"./scope\"\n\nexport {_, str, strConcat, nil, getProperty, stringify, regexpCode, Name, Code} from \"./code\"\nexport {Scope, ScopeStore, ValueScope, ValueScopeName, ScopeValueSets, varKinds} from \"./scope\"\n\n// type for expressions that can be safely inserted in code without quotes\nexport type SafeExpr = Code | number | boolean | null\n\n// type that is either Code of function that adds code to CodeGen instance using its methods\nexport type Block = Code | (() => void)\n\nexport const operators = {\n  GT: new _Code(\">\"),\n  GTE: new _Code(\">=\"),\n  LT: new _Code(\"<\"),\n  LTE: new _Code(\"<=\"),\n  EQ: new _Code(\"===\"),\n  NEQ: new _Code(\"!==\"),\n  NOT: new _Code(\"!\"),\n  OR: new _Code(\"||\"),\n  AND: new _Code(\"&&\"),\n  ADD: new _Code(\"+\"),\n}\n\nabstract class Node {\n  abstract readonly names: UsedNames\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    return this\n  }\n\n  optimizeNames(_names: UsedNames, _constants: Constants): this | undefined {\n    return this\n  }\n\n  // get count(): number {\n  //   return 1\n  // }\n}\n\nclass Def extends Node {\n  constructor(private readonly varKind: Name, private readonly name: Name, private rhs?: SafeExpr) {\n    super()\n  }\n\n  render({es5, _n}: CGOptions): string {\n    const varKind = es5 ? varKinds.var : this.varKind\n    const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`\n    return `${varKind} ${this.name}${rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!names[this.name.str]) return\n    if (this.rhs) this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.rhs instanceof _CodeOrName ? this.rhs.names : {}\n  }\n}\n\nclass Assign extends Node {\n  constructor(readonly lhs: Code, public rhs: SafeExpr, private readonly sideEffects?: boolean) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} = ${this.rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (this.lhs instanceof Name && !names[this.lhs.str] && !this.sideEffects) return\n    this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = this.lhs instanceof Name ? {} : {...this.lhs.names}\n    return addExprNames(names, this.rhs)\n  }\n}\n\nclass AssignOp extends Assign {\n  constructor(lhs: Code, private readonly op: Code, rhs: SafeExpr, sideEffects?: boolean) {\n    super(lhs, rhs, sideEffects)\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} ${this.op}= ${this.rhs};` + _n\n  }\n}\n\nclass Label extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label: Name) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.label}:` + _n\n  }\n}\n\nclass Break extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label?: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    const label = this.label ? ` ${this.label}` : \"\"\n    return `break${label};` + _n\n  }\n}\n\nclass Throw extends Node {\n  constructor(readonly error: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `throw ${this.error};` + _n\n  }\n\n  get names(): UsedNames {\n    return this.error.names\n  }\n}\n\nclass AnyCode extends Node {\n  constructor(private code: SafeExpr) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.code};` + _n\n  }\n\n  optimizeNodes(): this | undefined {\n    return `${this.code}` ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    this.code = optimizeExpr(this.code, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.code instanceof _CodeOrName ? this.code.names : {}\n  }\n}\n\nabstract class ParentNode extends Node {\n  constructor(readonly nodes: ChildNode[] = []) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return this.nodes.reduce((code, n) => code + n.render(opts), \"\")\n  }\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      const n = nodes[i].optimizeNodes()\n      if (Array.isArray(n)) nodes.splice(i, 1, ...n)\n      else if (n) nodes[i] = n\n      else nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      // iterating backwards improves 1-pass optimization\n      const n = nodes[i]\n      if (n.optimizeNames(names, constants)) continue\n      subtractNames(names, n.names)\n      nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  get names(): UsedNames {\n    return this.nodes.reduce((names: UsedNames, n) => addNames(names, n.names), {})\n  }\n\n  // get count(): number {\n  //   return this.nodes.reduce((c, n) => c + n.count, 1)\n  // }\n}\n\nabstract class BlockNode extends ParentNode {\n  render(opts: CGOptions): string {\n    return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n\n  }\n}\n\nclass Root extends ParentNode {}\n\nclass Else extends BlockNode {\n  static readonly kind = \"else\"\n}\n\nclass If extends BlockNode {\n  static readonly kind = \"if\"\n  else?: If | Else\n  constructor(private condition: Code | boolean, nodes?: ChildNode[]) {\n    super(nodes)\n  }\n\n  render(opts: CGOptions): string {\n    let code = `if(${this.condition})` + super.render(opts)\n    if (this.else) code += \"else \" + this.else.render(opts)\n    return code\n  }\n\n  optimizeNodes(): If | ChildNode[] | undefined {\n    super.optimizeNodes()\n    const cond = this.condition\n    if (cond === true) return this.nodes // else is ignored here\n    let e = this.else\n    if (e) {\n      const ns = e.optimizeNodes()\n      e = this.else = Array.isArray(ns) ? new Else(ns) : (ns as Else | undefined)\n    }\n    if (e) {\n      if (cond === false) return e instanceof If ? e : e.nodes\n      if (this.nodes.length) return this\n      return new If(not(cond), e instanceof If ? [e] : e.nodes)\n    }\n    if (cond === false || !this.nodes.length) return undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    this.else = this.else?.optimizeNames(names, constants)\n    if (!(super.optimizeNames(names, constants) || this.else)) return\n    this.condition = optimizeExpr(this.condition, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    addExprNames(names, this.condition)\n    if (this.else) addNames(names, this.else.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.else?.count || 0)\n  // }\n}\n\nabstract class For extends BlockNode {\n  static readonly kind = \"for\"\n}\n\nclass ForLoop extends For {\n  constructor(private iteration: Code) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.iteration})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iteration = optimizeExpr(this.iteration, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iteration.names)\n  }\n}\n\nclass ForRange extends For {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private readonly from: SafeExpr,\n    private readonly to: SafeExpr\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const varKind = opts.es5 ? varKinds.var : this.varKind\n    const {name, from, to} = this\n    return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts)\n  }\n\n  get names(): UsedNames {\n    const names = addExprNames(super.names, this.from)\n    return addExprNames(names, this.to)\n  }\n}\n\nclass ForIter extends For {\n  constructor(\n    private readonly loop: \"of\" | \"in\",\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private iterable: Code\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iterable = optimizeExpr(this.iterable, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iterable.names)\n  }\n}\n\nclass Func extends BlockNode {\n  static readonly kind = \"func\"\n  constructor(public name: Name, public args: Code, public async?: boolean) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const _async = this.async ? \"async \" : \"\"\n    return `${_async}function ${this.name}(${this.args})` + super.render(opts)\n  }\n}\n\nclass Return extends ParentNode {\n  static readonly kind = \"return\"\n\n  render(opts: CGOptions): string {\n    return \"return \" + super.render(opts)\n  }\n}\n\nclass Try extends BlockNode {\n  catch?: Catch\n  finally?: Finally\n\n  render(opts: CGOptions): string {\n    let code = \"try\" + super.render(opts)\n    if (this.catch) code += this.catch.render(opts)\n    if (this.finally) code += this.finally.render(opts)\n    return code\n  }\n\n  optimizeNodes(): this {\n    super.optimizeNodes()\n    this.catch?.optimizeNodes() as Catch | undefined\n    this.finally?.optimizeNodes() as Finally | undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    super.optimizeNames(names, constants)\n    this.catch?.optimizeNames(names, constants)\n    this.finally?.optimizeNames(names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    if (this.catch) addNames(names, this.catch.names)\n    if (this.finally) addNames(names, this.finally.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.catch?.count || 0) + (this.finally?.count || 0)\n  // }\n}\n\nclass Catch extends BlockNode {\n  static readonly kind = \"catch\"\n  constructor(readonly error: Name) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `catch(${this.error})` + super.render(opts)\n  }\n}\n\nclass Finally extends BlockNode {\n  static readonly kind = \"finally\"\n  render(opts: CGOptions): string {\n    return \"finally\" + super.render(opts)\n  }\n}\n\ntype StartBlockNode = If | For | Func | Return | Try\n\ntype LeafNode = Def | Assign | Label | Break | Throw | AnyCode\n\ntype ChildNode = StartBlockNode | LeafNode\n\ntype EndBlockNodeType =\n  | typeof If\n  | typeof Else\n  | typeof For\n  | typeof Func\n  | typeof Return\n  | typeof Catch\n  | typeof Finally\n\ntype Constants = Record<string, SafeExpr | undefined>\n\nexport interface CodeGenOptions {\n  es5?: boolean\n  lines?: boolean\n  ownProperties?: boolean\n}\n\ninterface CGOptions extends CodeGenOptions {\n  _n: \"\\n\" | \"\"\n}\n\nexport class CodeGen {\n  readonly _scope: Scope\n  readonly _extScope: ValueScope\n  readonly _values: ScopeValueSets = {}\n  private readonly _nodes: ParentNode[]\n  private readonly _blockStarts: number[] = []\n  private readonly _constants: Constants = {}\n  private readonly opts: CGOptions\n\n  constructor(extScope: ValueScope, opts: CodeGenOptions = {}) {\n    this.opts = {...opts, _n: opts.lines ? \"\\n\" : \"\"}\n    this._extScope = extScope\n    this._scope = new Scope({parent: extScope})\n    this._nodes = [new Root()]\n  }\n\n  toString(): string {\n    return this._root.render(this.opts)\n  }\n\n  // returns unique name in the internal scope\n  name(prefix: string): Name {\n    return this._scope.name(prefix)\n  }\n\n  // reserves unique name in the external scope\n  scopeName(prefix: string): ValueScopeName {\n    return this._extScope.name(prefix)\n  }\n\n  // reserves unique name in the external scope and assigns value to it\n  scopeValue(prefixOrName: ValueScopeName | string, value: NameValue): Name {\n    const name = this._extScope.value(prefixOrName, value)\n    const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set())\n    vs.add(name)\n    return name\n  }\n\n  getScopeValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    return this._extScope.getValue(prefix, keyOrRef)\n  }\n\n  // return code that assigns values in the external scope to the names that are used internally\n  // (same names that were returned by gen.scopeName or gen.scopeValue)\n  scopeRefs(scopeName: Name): Code {\n    return this._extScope.scopeRefs(scopeName, this._values)\n  }\n\n  scopeCode(): Code {\n    return this._extScope.scopeCode(this._values)\n  }\n\n  private _def(\n    varKind: Name,\n    nameOrPrefix: Name | string,\n    rhs?: SafeExpr,\n    constant?: boolean\n  ): Name {\n    const name = this._scope.toName(nameOrPrefix)\n    if (rhs !== undefined && constant) this._constants[name.str] = rhs\n    this._leafNode(new Def(varKind, name, rhs))\n    return name\n  }\n\n  // `const` declaration (`var` in es5 mode)\n  const(nameOrPrefix: Name | string, rhs: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.const, nameOrPrefix, rhs, _constant)\n  }\n\n  // `let` declaration with optional assignment (`var` in es5 mode)\n  let(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.let, nameOrPrefix, rhs, _constant)\n  }\n\n  // `var` declaration with optional assignment\n  var(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.var, nameOrPrefix, rhs, _constant)\n  }\n\n  // assignment code\n  assign(lhs: Code, rhs: SafeExpr, sideEffects?: boolean): CodeGen {\n    return this._leafNode(new Assign(lhs, rhs, sideEffects))\n  }\n\n  // `+=` code\n  add(lhs: Code, rhs: SafeExpr): CodeGen {\n    return this._leafNode(new AssignOp(lhs, operators.ADD, rhs))\n  }\n\n  // appends passed SafeExpr to code or executes Block\n  code(c: Block | SafeExpr): CodeGen {\n    if (typeof c == \"function\") c()\n    else if (c !== nil) this._leafNode(new AnyCode(c))\n    return this\n  }\n\n  // returns code for object literal for the passed argument list of key-value pairs\n  object(...keyValues: [Name | string, SafeExpr | string][]): _Code {\n    const code: CodeItem[] = [\"{\"]\n    for (const [key, value] of keyValues) {\n      if (code.length > 1) code.push(\",\")\n      code.push(key)\n      if (key !== value || this.opts.es5) {\n        code.push(\":\")\n        addCodeArg(code, value)\n      }\n    }\n    code.push(\"}\")\n    return new _Code(code)\n  }\n\n  // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n  if(condition: Code | boolean, thenBody?: Block, elseBody?: Block): CodeGen {\n    this._blockNode(new If(condition))\n\n    if (thenBody && elseBody) {\n      this.code(thenBody).else().code(elseBody).endIf()\n    } else if (thenBody) {\n      this.code(thenBody).endIf()\n    } else if (elseBody) {\n      throw new Error('CodeGen: \"else\" body without \"then\" body')\n    }\n    return this\n  }\n\n  // `else if` clause - invalid without `if` or after `else` clauses\n  elseIf(condition: Code | boolean): CodeGen {\n    return this._elseNode(new If(condition))\n  }\n\n  // `else` clause - only valid after `if` or `else if` clauses\n  else(): CodeGen {\n    return this._elseNode(new Else())\n  }\n\n  // end `if` statement (needed if gen.if was used only with condition)\n  endIf(): CodeGen {\n    return this._endBlockNode(If, Else)\n  }\n\n  private _for(node: For, forBody?: Block): CodeGen {\n    this._blockNode(node)\n    if (forBody) this.code(forBody).endFor()\n    return this\n  }\n\n  // a generic `for` clause (or statement if `forBody` is passed)\n  for(iteration: Code, forBody?: Block): CodeGen {\n    return this._for(new ForLoop(iteration), forBody)\n  }\n\n  // `for` statement for a range of values\n  forRange(\n    nameOrPrefix: Name | string,\n    from: SafeExpr,\n    to: SafeExpr,\n    forBody: (index: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.let\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForRange(varKind, name, from, to), () => forBody(name))\n  }\n\n  // `for-of` statement (in es5 mode replace with a normal for loop)\n  forOf(\n    nameOrPrefix: Name | string,\n    iterable: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = varKinds.const\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    if (this.opts.es5) {\n      const arr = iterable instanceof Name ? iterable : this.var(\"_arr\", iterable)\n      return this.forRange(\"_i\", 0, _`${arr}.length`, (i) => {\n        this.var(name, _`${arr}[${i}]`)\n        forBody(name)\n      })\n    }\n    return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name))\n  }\n\n  // `for-in` statement.\n  // With option `ownProperties` replaced with a `for-of` loop for object keys\n  forIn(\n    nameOrPrefix: Name | string,\n    obj: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.const\n  ): CodeGen {\n    if (this.opts.ownProperties) {\n      return this.forOf(nameOrPrefix, _`Object.keys(${obj})`, forBody)\n    }\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name))\n  }\n\n  // end `for` loop\n  endFor(): CodeGen {\n    return this._endBlockNode(For)\n  }\n\n  // `label` statement\n  label(label: Name): CodeGen {\n    return this._leafNode(new Label(label))\n  }\n\n  // `break` statement\n  break(label?: Code): CodeGen {\n    return this._leafNode(new Break(label))\n  }\n\n  // `return` statement\n  return(value: Block | SafeExpr): CodeGen {\n    const node = new Return()\n    this._blockNode(node)\n    this.code(value)\n    if (node.nodes.length !== 1) throw new Error('CodeGen: \"return\" should have one node')\n    return this._endBlockNode(Return)\n  }\n\n  // `try` statement\n  try(tryBody: Block, catchCode?: (e: Name) => void, finallyCode?: Block): CodeGen {\n    if (!catchCode && !finallyCode) throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"')\n    const node = new Try()\n    this._blockNode(node)\n    this.code(tryBody)\n    if (catchCode) {\n      const error = this.name(\"e\")\n      this._currNode = node.catch = new Catch(error)\n      catchCode(error)\n    }\n    if (finallyCode) {\n      this._currNode = node.finally = new Finally()\n      this.code(finallyCode)\n    }\n    return this._endBlockNode(Catch, Finally)\n  }\n\n  // `throw` statement\n  throw(error: Code): CodeGen {\n    return this._leafNode(new Throw(error))\n  }\n\n  // start self-balancing block\n  block(body?: Block, nodeCount?: number): CodeGen {\n    this._blockStarts.push(this._nodes.length)\n    if (body) this.code(body).endBlock(nodeCount)\n    return this\n  }\n\n  // end the current self-balancing block\n  endBlock(nodeCount?: number): CodeGen {\n    const len = this._blockStarts.pop()\n    if (len === undefined) throw new Error(\"CodeGen: not in self-balancing block\")\n    const toClose = this._nodes.length - len\n    if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n      throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`)\n    }\n    this._nodes.length = len\n    return this\n  }\n\n  // `function` heading (or definition if funcBody is passed)\n  func(name: Name, args: Code = nil, async?: boolean, funcBody?: Block): CodeGen {\n    this._blockNode(new Func(name, args, async))\n    if (funcBody) this.code(funcBody).endFunc()\n    return this\n  }\n\n  // end function definition\n  endFunc(): CodeGen {\n    return this._endBlockNode(Func)\n  }\n\n  optimize(n = 1): void {\n    while (n-- > 0) {\n      this._root.optimizeNodes()\n      this._root.optimizeNames(this._root.names, this._constants)\n    }\n  }\n\n  private _leafNode(node: LeafNode): CodeGen {\n    this._currNode.nodes.push(node)\n    return this\n  }\n\n  private _blockNode(node: StartBlockNode): void {\n    this._currNode.nodes.push(node)\n    this._nodes.push(node)\n  }\n\n  private _endBlockNode(N1: EndBlockNodeType, N2?: EndBlockNodeType): CodeGen {\n    const n = this._currNode\n    if (n instanceof N1 || (N2 && n instanceof N2)) {\n      this._nodes.pop()\n      return this\n    }\n    throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`)\n  }\n\n  private _elseNode(node: If | Else): CodeGen {\n    const n = this._currNode\n    if (!(n instanceof If)) {\n      throw new Error('CodeGen: \"else\" without \"if\"')\n    }\n    this._currNode = n.else = node\n    return this\n  }\n\n  private get _root(): Root {\n    return this._nodes[0] as Root\n  }\n\n  private get _currNode(): ParentNode {\n    const ns = this._nodes\n    return ns[ns.length - 1]\n  }\n\n  private set _currNode(node: ParentNode) {\n    const ns = this._nodes\n    ns[ns.length - 1] = node\n  }\n\n  // get nodeCount(): number {\n  //   return this._root.count\n  // }\n}\n\nfunction addNames(names: UsedNames, from: UsedNames): UsedNames {\n  for (const n in from) names[n] = (names[n] || 0) + (from[n] || 0)\n  return names\n}\n\nfunction addExprNames(names: UsedNames, from: SafeExpr): UsedNames {\n  return from instanceof _CodeOrName ? addNames(names, from.names) : names\n}\n\nfunction optimizeExpr<T extends SafeExpr | Code>(expr: T, names: UsedNames, constants: Constants): T\nfunction optimizeExpr(expr: SafeExpr, names: UsedNames, constants: Constants): SafeExpr {\n  if (expr instanceof Name) return replaceName(expr)\n  if (!canOptimize(expr)) return expr\n  return new _Code(\n    expr._items.reduce((items: CodeItem[], c: SafeExpr | string) => {\n      if (c instanceof Name) c = replaceName(c)\n      if (c instanceof _Code) items.push(...c._items)\n      else items.push(c)\n      return items\n    }, [])\n  )\n\n  function replaceName(n: Name): SafeExpr {\n    const c = constants[n.str]\n    if (c === undefined || names[n.str] !== 1) return n\n    delete names[n.str]\n    return c\n  }\n\n  function canOptimize(e: SafeExpr): e is _Code {\n    return (\n      e instanceof _Code &&\n      e._items.some(\n        (c) => c instanceof Name && names[c.str] === 1 && constants[c.str] !== undefined\n      )\n    )\n  }\n}\n\nfunction subtractNames(names: UsedNames, from: UsedNames): void {\n  for (const n in from) names[n] = (names[n] || 0) - (from[n] || 0)\n}\n\nexport function not<T extends Code | SafeExpr>(x: T): T\nexport function not(x: Code | SafeExpr): Code | SafeExpr {\n  return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : _`!${par(x)}`\n}\n\nconst andCode = mappend(operators.AND)\n\n// boolean AND (&&) expression with the passed arguments\nexport function and(...args: Code[]): Code {\n  return args.reduce(andCode)\n}\n\nconst orCode = mappend(operators.OR)\n\n// boolean OR (||) expression with the passed arguments\nexport function or(...args: Code[]): Code {\n  return args.reduce(orCode)\n}\n\ntype MAppend = (x: Code, y: Code) => Code\n\nfunction mappend(op: Code): MAppend {\n  return (x, y) => (x === nil ? y : y === nil ? x : _`${par(x)} ${op} ${par(y)}`)\n}\n\nfunction par(x: Code): Code {\n  return x instanceof Name ? x : _`(${x})`\n}\n", "import type {AnySchema, EvaluatedProperties, EvaluatedItems} from \"../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \".\"\nimport {_, getProperty, Code, Name, CodeGen} from \"./codegen\"\nimport {_Code} from \"./codegen/code\"\nimport type {Rule, ValidationRules} from \"./rules\"\n\n// TODO refactor to use Set\nexport function toHash<T extends string = string>(arr: T[]): {[K in T]?: true} {\n  const hash: {[K in T]?: true} = {}\n  for (const item of arr) hash[item] = true\n  return hash\n}\n\nexport function alwaysValidSchema(it: SchemaCxt, schema: AnySchema): boolean | void {\n  if (typeof schema == \"boolean\") return schema\n  if (Object.keys(schema).length === 0) return true\n  checkUnknownRules(it, schema)\n  return !schemaHasRules(schema, it.self.RULES.all)\n}\n\nexport function checkUnknownRules(it: SchemaCxt, schema: AnySchema = it.schema): void {\n  const {opts, self} = it\n  if (!opts.strictSchema) return\n  if (typeof schema === \"boolean\") return\n  const rules = self.RULES.keywords\n  for (const key in schema) {\n    if (!rules[key]) checkStrictMode(it, `unknown keyword: \"${key}\"`)\n  }\n}\n\nexport function schemaHasRules(\n  schema: AnySchema,\n  rules: {[Key in string]?: boolean | Rule}\n): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (rules[key]) return true\n  return false\n}\n\nexport function schemaHasRulesButRef(schema: AnySchema, RULES: ValidationRules): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (key !== \"$ref\" && RULES.all[key]) return true\n  return false\n}\n\nexport function schemaRefOrVal(\n  {topSchemaRef, schemaPath}: SchemaObjCxt,\n  schema: unknown,\n  keyword: string,\n  $data?: string | false\n): Code | number | boolean {\n  if (!$data) {\n    if (typeof schema == \"number\" || typeof schema == \"boolean\") return schema\n    if (typeof schema == \"string\") return _`${schema}`\n  }\n  return _`${topSchemaRef}${schemaPath}${getProperty(keyword)}`\n}\n\nexport function unescapeFragment(str: string): string {\n  return unescapeJsonPointer(decodeURIComponent(str))\n}\n\nexport function escapeFragment(str: string | number): string {\n  return encodeURIComponent(escapeJsonPointer(str))\n}\n\nexport function escapeJsonPointer(str: string | number): string {\n  if (typeof str == \"number\") return `${str}`\n  return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\")\n}\n\nexport function unescapeJsonPointer(str: string): string {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\")\n}\n\nexport function eachItem<T>(xs: T | T[], f: (x: T) => void): void {\n  if (Array.isArray(xs)) {\n    for (const x of xs) f(x)\n  } else {\n    f(xs)\n  }\n}\n\ntype SomeEvaluated = EvaluatedProperties | EvaluatedItems\n\ntype MergeEvaluatedFunc<T extends SomeEvaluated> = (\n  gen: CodeGen,\n  from: Name | T,\n  to: Name | Exclude<T, true> | undefined,\n  toName?: typeof Name\n) => Name | T\n\ninterface MakeMergeFuncArgs<T extends SomeEvaluated> {\n  mergeNames: (gen: CodeGen, from: Name, to: Name) => void\n  mergeToName: (gen: CodeGen, from: T, to: Name) => void\n  mergeValues: (from: T, to: Exclude<T, true>) => T\n  resultToName: (gen: CodeGen, res?: T) => Name\n}\n\nfunction makeMergeEvaluated<T extends SomeEvaluated>({\n  mergeNames,\n  mergeToName,\n  mergeValues,\n  resultToName,\n}: MakeMergeFuncArgs<T>): MergeEvaluatedFunc<T> {\n  return (gen, from, to, toName) => {\n    const res =\n      to === undefined\n        ? from\n        : to instanceof Name\n        ? (from instanceof Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n        : from instanceof Name\n        ? (mergeToName(gen, to, from), from)\n        : mergeValues(from, to)\n    return toName === Name && !(res instanceof Name) ? resultToName(gen, res) : res\n  }\n}\n\ninterface MergeEvaluated {\n  props: MergeEvaluatedFunc<EvaluatedProperties>\n  items: MergeEvaluatedFunc<EvaluatedItems>\n}\n\nexport const mergeEvaluated: MergeEvaluated = {\n  props: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () => {\n        gen.if(\n          _`${from} === true`,\n          () => gen.assign(to, true),\n          () => gen.assign(to, _`${to} || {}`).code(_`Object.assign(${to}, ${from})`)\n        )\n      }),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () => {\n        if (from === true) {\n          gen.assign(to, true)\n        } else {\n          gen.assign(to, _`${to} || {}`)\n          setEvaluated(gen, to, from)\n        }\n      }),\n    mergeValues: (from, to) => (from === true ? true : {...from, ...to}),\n    resultToName: evaluatedPropsToName,\n  }),\n  items: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () =>\n        gen.assign(to, _`${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () =>\n        gen.assign(to, from === true ? true : _`${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n    resultToName: (gen, items) => gen.var(\"items\", items),\n  }),\n}\n\nexport function evaluatedPropsToName(gen: CodeGen, ps?: EvaluatedProperties): Name {\n  if (ps === true) return gen.var(\"props\", true)\n  const props = gen.var(\"props\", _`{}`)\n  if (ps !== undefined) setEvaluated(gen, props, ps)\n  return props\n}\n\nexport function setEvaluated(gen: CodeGen, props: Name, ps: {[K in string]?: true}): void {\n  Object.keys(ps).forEach((p) => gen.assign(_`${props}${getProperty(p)}`, true))\n}\n\nconst snippets: {[S in string]?: _Code} = {}\n\nexport function useFunc(gen: CodeGen, f: {code: string}): Name {\n  return gen.scopeValue(\"func\", {\n    ref: f,\n    code: snippets[f.code] || (snippets[f.code] = new _Code(f.code)),\n  })\n}\n\nexport enum Type {\n  Num,\n  Str,\n}\n\nexport function getErrorPath(\n  dataProp: Name | string | number,\n  dataPropType?: Type,\n  jsPropertySyntax?: boolean\n): Code | string {\n  // let path\n  if (dataProp instanceof Name) {\n    const isNumber = dataPropType === Type.Num\n    return jsPropertySyntax\n      ? isNumber\n        ? _`\"[\" + ${dataProp} + \"]\"`\n        : _`\"['\" + ${dataProp} + \"']\"`\n      : isNumber\n      ? _`\"/\" + ${dataProp}`\n      : _`\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")` // TODO maybe use global escapePointer\n  }\n  return jsPropertySyntax ? getProperty(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp)\n}\n\nexport function checkStrictMode(\n  it: SchemaCxt,\n  msg: string,\n  mode: boolean | \"log\" = it.opts.strictSchema\n): void {\n  if (!mode) return\n  msg = `strict mode: ${msg}`\n  if (mode === true) throw new Error(msg)\n  it.self.logger.warn(msg)\n}\n", "import {Name} from \"./codegen\"\n\nconst names = {\n  // validation function arguments\n  data: new Name(\"data\"), // data passed to validation function\n  // args passed from referencing schema\n  valCxt: new Name(\"valCxt\"), // validation/data context - should not be used directly, it is destructured to the names below\n  instancePath: new Name(\"instancePath\"),\n  parentData: new Name(\"parentData\"),\n  parentDataProperty: new Name(\"parentDataProperty\"),\n  rootData: new Name(\"rootData\"), // root data - same as the data passed to the first/top validation function\n  dynamicAnchors: new Name(\"dynamicAnchors\"), // used to support recursiveRef and dynamicRef\n  // function scoped variables\n  vErrors: new Name(\"vErrors\"), // null or array of validation errors\n  errors: new Name(\"errors\"), // counter of validation errors\n  this: new Name(\"this\"),\n  // \"globals\"\n  self: new Name(\"self\"),\n  scope: new Name(\"scope\"),\n  // JTD serialize/parse name for JSON string and position\n  json: new Name(\"json\"),\n  jsonPos: new Name(\"jsonPos\"),\n  jsonLen: new Name(\"jsonLen\"),\n  jsonPart: new Name(\"jsonPart\"),\n}\n\nexport default names\n", "import type {KeywordErrorCxt, KeywordErrorDefinition} from \"../types\"\nimport type {SchemaCxt} from \"./index\"\nimport {CodeGen, _, str, strConcat, Code, Name} from \"./codegen\"\nimport {SafeExpr} from \"./codegen/code\"\nimport {getErrorPath, Type} from \"./util\"\nimport N from \"./names\"\n\nexport const keywordError: KeywordErrorDefinition = {\n  message: ({keyword}) => str`must pass \"${keyword}\" keyword validation`,\n}\n\nexport const keyword$DataError: KeywordErrorDefinition = {\n  message: ({keyword, schemaType}) =>\n    schemaType\n      ? str`\"${keyword}\" keyword must be ${schemaType} ($data)`\n      : str`\"${keyword}\" keyword is invalid ($data)`,\n}\n\nexport interface ErrorPaths {\n  instancePath?: Code\n  schemaPath?: string\n  parentSchema?: boolean\n}\n\nexport function reportError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths,\n  overrideAllErrors?: boolean\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  if (overrideAllErrors ?? (compositeRule || allErrors)) {\n    addError(gen, errObj)\n  } else {\n    returnErrors(it, _`[${errObj}]`)\n  }\n}\n\nexport function reportExtraError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  addError(gen, errObj)\n  if (!(compositeRule || allErrors)) {\n    returnErrors(it, N.vErrors)\n  }\n}\n\nexport function resetErrorsCount(gen: CodeGen, errsCount: Name): void {\n  gen.assign(N.errors, errsCount)\n  gen.if(_`${N.vErrors} !== null`, () =>\n    gen.if(\n      errsCount,\n      () => gen.assign(_`${N.vErrors}.length`, errsCount),\n      () => gen.assign(N.vErrors, null)\n    )\n  )\n}\n\nexport function extendErrors({\n  gen,\n  keyword,\n  schemaValue,\n  data,\n  errsCount,\n  it,\n}: KeywordErrorCxt): void {\n  /* istanbul ignore if */\n  if (errsCount === undefined) throw new Error(\"ajv implementation error\")\n  const err = gen.name(\"err\")\n  gen.forRange(\"i\", errsCount, N.errors, (i) => {\n    gen.const(err, _`${N.vErrors}[${i}]`)\n    gen.if(_`${err}.instancePath === undefined`, () =>\n      gen.assign(_`${err}.instancePath`, strConcat(N.instancePath, it.errorPath))\n    )\n    gen.assign(_`${err}.schemaPath`, str`${it.errSchemaPath}/${keyword}`)\n    if (it.opts.verbose) {\n      gen.assign(_`${err}.schema`, schemaValue)\n      gen.assign(_`${err}.data`, data)\n    }\n  })\n}\n\nfunction addError(gen: CodeGen, errObj: Code): void {\n  const err = gen.const(\"err\", errObj)\n  gen.if(\n    _`${N.vErrors} === null`,\n    () => gen.assign(N.vErrors, _`[${err}]`),\n    _`${N.vErrors}.push(${err})`\n  )\n  gen.code(_`${N.errors}++`)\n}\n\nfunction returnErrors(it: SchemaCxt, errs: Code): void {\n  const {gen, validateName, schemaEnv} = it\n  if (schemaEnv.$async) {\n    gen.throw(_`new ${it.ValidationError as Name}(${errs})`)\n  } else {\n    gen.assign(_`${validateName}.errors`, errs)\n    gen.return(false)\n  }\n}\n\nconst E = {\n  keyword: new Name(\"keyword\"),\n  schemaPath: new Name(\"schemaPath\"), // also used in JTD errors\n  params: new Name(\"params\"),\n  propertyName: new Name(\"propertyName\"),\n  message: new Name(\"message\"),\n  schema: new Name(\"schema\"),\n  parentSchema: new Name(\"parentSchema\"),\n}\n\nfunction errorObjectCode(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths?: ErrorPaths\n): Code {\n  const {createErrors} = cxt.it\n  if (createErrors === false) return _`{}`\n  return errorObject(cxt, error, errorPaths)\n}\n\nfunction errorObject(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths: ErrorPaths = {}\n): Code {\n  const {gen, it} = cxt\n  const keyValues: [Name, SafeExpr | string][] = [\n    errorInstancePath(it, errorPaths),\n    errorSchemaPath(cxt, errorPaths),\n  ]\n  extraErrorProps(cxt, error, keyValues)\n  return gen.object(...keyValues)\n}\n\nfunction errorInstancePath({errorPath}: SchemaCxt, {instancePath}: ErrorPaths): [Name, Code] {\n  const instPath = instancePath\n    ? str`${errorPath}${getErrorPath(instancePath, Type.Str)}`\n    : errorPath\n  return [N.instancePath, strConcat(N.instancePath, instPath)]\n}\n\nfunction errorSchemaPath(\n  {keyword, it: {errSchemaPath}}: KeywordErrorCxt,\n  {schemaPath, parentSchema}: ErrorPaths\n): [Name, string | Code] {\n  let schPath = parentSchema ? errSchemaPath : str`${errSchemaPath}/${keyword}`\n  if (schemaPath) {\n    schPath = str`${schPath}${getErrorPath(schemaPath, Type.Str)}`\n  }\n  return [E.schemaPath, schPath]\n}\n\nfunction extraErrorProps(\n  cxt: KeywordErrorCxt,\n  {params, message}: KeywordErrorDefinition,\n  keyValues: [Name, SafeExpr | string][]\n): void {\n  const {keyword, data, schemaValue, it} = cxt\n  const {opts, propertyName, topSchemaRef, schemaPath} = it\n  keyValues.push(\n    [E.keyword, keyword],\n    [E.params, typeof params == \"function\" ? params(cxt) : params || _`{}`]\n  )\n  if (opts.messages) {\n    keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message])\n  }\n  if (opts.verbose) {\n    keyValues.push(\n      [E.schema, schemaValue],\n      [E.parentSchema, _`${topSchemaRef}${schemaPath}`],\n      [N.data, data]\n    )\n  }\n  if (propertyName) keyValues.push([E.propertyName, propertyName])\n}\n", "import type {KeywordErrorDefinition, KeywordErrorCxt} from \"../../types\"\nimport type {SchemaCxt} from \"..\"\nimport {reportError} from \"../errors\"\nimport {_, Name} from \"../codegen\"\nimport N from \"../names\"\n\nconst boolError: KeywordErrorDefinition = {\n  message: \"boolean schema is false\",\n}\n\nexport function topBoolOrEmptySchema(it: SchemaCxt): void {\n  const {gen, schema, validateName} = it\n  if (schema === false) {\n    falseSchemaError(it, false)\n  } else if (typeof schema == \"object\" && schema.$async === true) {\n    gen.return(N.data)\n  } else {\n    gen.assign(_`${validateName}.errors`, null)\n    gen.return(true)\n  }\n}\n\nexport function boolOrEmptySchema(it: SchemaCxt, valid: Name): void {\n  const {gen, schema} = it\n  if (schema === false) {\n    gen.var(valid, false) // TODO var\n    falseSchemaError(it)\n  } else {\n    gen.var(valid, true) // TODO var\n  }\n}\n\nfunction falseSchemaError(it: SchemaCxt, overrideAllErrors?: boolean): void {\n  const {gen, data} = it\n  // TODO maybe some other interface should be used for non-keyword validation errors...\n  const cxt: KeywordErrorCxt = {\n    gen,\n    keyword: \"false schema\",\n    data,\n    schema: false,\n    schemaCode: false,\n    schemaValue: false,\n    params: {},\n    it,\n  }\n  reportError(cxt, boolError, undefined, overrideAllErrors)\n}\n", "import type {AddedKeywordDefinition} from \"../types\"\n\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"] as const\n\nexport type JSONType = typeof _jsonTypes[number]\n\nconst jsonTypes: Set<string> = new Set(_jsonTypes)\n\nexport function isJSONType(x: unknown): x is JSONType {\n  return typeof x == \"string\" && jsonTypes.has(x)\n}\n\ntype ValidationTypes = {\n  [K in JSONType]: boolean | RuleGroup | undefined\n}\n\nexport interface ValidationRules {\n  rules: RuleGroup[]\n  post: RuleGroup\n  all: {[Key in string]?: boolean | Rule} // rules that have to be validated\n  keywords: {[Key in string]?: boolean} // all known keywords (superset of \"all\")\n  types: ValidationTypes\n}\n\nexport interface RuleGroup {\n  type?: JSONType\n  rules: Rule[]\n}\n\n// This interface wraps KeywordDefinition because definition can have multiple keywords\nexport interface Rule {\n  keyword: string\n  definition: AddedKeywordDefinition\n}\n\nexport function getRules(): ValidationRules {\n  const groups: Record<\"number\" | \"string\" | \"array\" | \"object\", RuleGroup> = {\n    number: {type: \"number\", rules: []},\n    string: {type: \"string\", rules: []},\n    array: {type: \"array\", rules: []},\n    object: {type: \"object\", rules: []},\n  }\n  return {\n    types: {...groups, integer: true, boolean: true, null: true},\n    rules: [{rules: []}, groups.number, groups.string, groups.array, groups.object],\n    post: {rules: []},\n    all: {},\n    keywords: {},\n  }\n}\n", "import type {AnySchemaObject} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport type {JSONType, RuleGroup, Rule} from \"../rules\"\n\nexport function schemaHasRulesForType(\n  {schema, self}: SchemaObjCxt,\n  type: JSONType\n): boolean | undefined {\n  const group = self.RULES.types[type]\n  return group && group !== true && shouldUseGroup(schema, group)\n}\n\nexport function shouldUseGroup(schema: AnySchemaObject, group: RuleGroup): boolean {\n  return group.rules.some((rule) => shouldUseRule(schema, rule))\n}\n\nexport function shouldUseRule(schema: AnySchemaObject, rule: Rule): boolean | undefined {\n  return (\n    schema[rule.keyword] !== undefined ||\n    rule.definition.implements?.some((kwd) => schema[kwd] !== undefined)\n  )\n}\n", "import type {\n  KeywordErrorDefinition,\n  KeywordErrorCxt,\n  ErrorObject,\n  AnySchemaObject,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {isJSONType, JSONType} from \"../rules\"\nimport {schemaHasRulesForType} from \"./applicability\"\nimport {reportError} from \"../errors\"\nimport {_, nil, and, not, operators, Code, Name} from \"../codegen\"\nimport {toHash, schemaRefOrVal} from \"../util\"\n\nexport enum DataType {\n  Correct,\n  Wrong,\n}\n\nexport function getSchemaTypes(schema: AnySchemaObject): JSONType[] {\n  const types = getJSONTypes(schema.type)\n  const hasNull = types.includes(\"null\")\n  if (hasNull) {\n    if (schema.nullable === false) throw new Error(\"type: null contradicts nullable: false\")\n  } else {\n    if (!types.length && schema.nullable !== undefined) {\n      throw new Error('\"nullable\" cannot be used without \"type\"')\n    }\n    if (schema.nullable === true) types.push(\"null\")\n  }\n  return types\n}\n\nexport function getJSONTypes(ts: unknown | unknown[]): JSONType[] {\n  const types: unknown[] = Array.isArray(ts) ? ts : ts ? [ts] : []\n  if (types.every(isJSONType)) return types\n  throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"))\n}\n\nexport function coerceAndCheckDataType(it: SchemaObjCxt, types: JSONType[]): boolean {\n  const {gen, data, opts} = it\n  const coerceTo = coerceToTypes(types, opts.coerceTypes)\n  const checkTypes =\n    types.length > 0 &&\n    !(coerceTo.length === 0 && types.length === 1 && schemaHasRulesForType(it, types[0]))\n  if (checkTypes) {\n    const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong)\n    gen.if(wrongType, () => {\n      if (coerceTo.length) coerceData(it, types, coerceTo)\n      else reportTypeError(it)\n    })\n  }\n  return checkTypes\n}\n\nconst COERCIBLE: Set<JSONType> = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"])\nfunction coerceToTypes(types: JSONType[], coerceTypes?: boolean | \"array\"): JSONType[] {\n  return coerceTypes\n    ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n    : []\n}\n\nfunction coerceData(it: SchemaObjCxt, types: JSONType[], coerceTo: JSONType[]): void {\n  const {gen, data, opts} = it\n  const dataType = gen.let(\"dataType\", _`typeof ${data}`)\n  const coerced = gen.let(\"coerced\", _`undefined`)\n  if (opts.coerceTypes === \"array\") {\n    gen.if(_`${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () =>\n      gen\n        .assign(data, _`${data}[0]`)\n        .assign(dataType, _`typeof ${data}`)\n        .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data))\n    )\n  }\n  gen.if(_`${coerced} !== undefined`)\n  for (const t of coerceTo) {\n    if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n      coerceSpecificType(t)\n    }\n  }\n  gen.else()\n  reportTypeError(it)\n  gen.endIf()\n\n  gen.if(_`${coerced} !== undefined`, () => {\n    gen.assign(data, coerced)\n    assignParentData(it, coerced)\n  })\n\n  function coerceSpecificType(t: string): void {\n    switch (t) {\n      case \"string\":\n        gen\n          .elseIf(_`${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n          .assign(coerced, _`\"\" + ${data}`)\n          .elseIf(_`${data} === null`)\n          .assign(coerced, _`\"\"`)\n        return\n      case \"number\":\n        gen\n          .elseIf(\n            _`${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"integer\":\n        gen\n          .elseIf(\n            _`${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"boolean\":\n        gen\n          .elseIf(_`${data} === \"false\" || ${data} === 0 || ${data} === null`)\n          .assign(coerced, false)\n          .elseIf(_`${data} === \"true\" || ${data} === 1`)\n          .assign(coerced, true)\n        return\n      case \"null\":\n        gen.elseIf(_`${data} === \"\" || ${data} === 0 || ${data} === false`)\n        gen.assign(coerced, null)\n        return\n\n      case \"array\":\n        gen\n          .elseIf(\n            _`${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`\n          )\n          .assign(coerced, _`[${data}]`)\n    }\n  }\n}\n\nfunction assignParentData({gen, parentData, parentDataProperty}: SchemaObjCxt, expr: Name): void {\n  // TODO use gen.property\n  gen.if(_`${parentData} !== undefined`, () =>\n    gen.assign(_`${parentData}[${parentDataProperty}]`, expr)\n  )\n}\n\nexport function checkDataType(\n  dataType: JSONType,\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct = DataType.Correct\n): Code {\n  const EQ = correct === DataType.Correct ? operators.EQ : operators.NEQ\n  let cond: Code\n  switch (dataType) {\n    case \"null\":\n      return _`${data} ${EQ} null`\n    case \"array\":\n      cond = _`Array.isArray(${data})`\n      break\n    case \"object\":\n      cond = _`${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`\n      break\n    case \"integer\":\n      cond = numCond(_`!(${data} % 1) && !isNaN(${data})`)\n      break\n    case \"number\":\n      cond = numCond()\n      break\n    default:\n      return _`typeof ${data} ${EQ} ${dataType}`\n  }\n  return correct === DataType.Correct ? cond : not(cond)\n\n  function numCond(_cond: Code = nil): Code {\n    return and(_`typeof ${data} == \"number\"`, _cond, strictNums ? _`isFinite(${data})` : nil)\n  }\n}\n\nexport function checkDataTypes(\n  dataTypes: JSONType[],\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct?: DataType\n): Code {\n  if (dataTypes.length === 1) {\n    return checkDataType(dataTypes[0], data, strictNums, correct)\n  }\n  let cond: Code\n  const types = toHash(dataTypes)\n  if (types.array && types.object) {\n    const notObj = _`typeof ${data} != \"object\"`\n    cond = types.null ? notObj : _`!${data} || ${notObj}`\n    delete types.null\n    delete types.array\n    delete types.object\n  } else {\n    cond = nil\n  }\n  if (types.number) delete types.integer\n  for (const t in types) cond = and(cond, checkDataType(t as JSONType, data, strictNums, correct))\n  return cond\n}\n\nexport type TypeError = ErrorObject<\"type\", {type: string}>\n\nconst typeError: KeywordErrorDefinition = {\n  message: ({schema}) => `must be ${schema}`,\n  params: ({schema, schemaValue}) =>\n    typeof schema == \"string\" ? _`{type: ${schema}}` : _`{type: ${schemaValue}}`,\n}\n\nexport function reportTypeError(it: SchemaObjCxt): void {\n  const cxt = getTypeErrorContext(it)\n  reportError(cxt, typeError)\n}\n\nfunction getTypeErrorContext(it: SchemaObjCxt): KeywordErrorCxt {\n  const {gen, data, schema} = it\n  const schemaCode = schemaRefOrVal(it, schema, \"type\")\n  return {\n    gen,\n    keyword: \"type\",\n    data,\n    schema: schema.type,\n    schemaCode,\n    schemaValue: schemaCode,\n    parentSchema: schema,\n    params: {},\n    it,\n  }\n}\n", "import type {SchemaObjCxt} from \"..\"\nimport {_, getProperty, stringify} from \"../codegen\"\nimport {checkStrictMode} from \"../util\"\n\nexport function assignDefaults(it: SchemaObjCxt, ty?: string): void {\n  const {properties, items} = it.schema\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default)\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i: number) => assignDefault(it, i, sch.default))\n  }\n}\n\nfunction assignDefault(it: SchemaObjCxt, prop: string | number, defaultValue: unknown): void {\n  const {gen, compositeRule, data, opts} = it\n  if (defaultValue === undefined) return\n  const childData = _`${data}${getProperty(prop)}`\n  if (compositeRule) {\n    checkStrictMode(it, `default is ignored for: ${childData}`)\n    return\n  }\n\n  let condition = _`${childData} === undefined`\n  if (opts.useDefaults === \"empty\") {\n    condition = _`${condition} || ${childData} === null || ${childData} === \"\"`\n  }\n  // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n  gen.if(condition, _`${childData} = ${stringify(defaultValue)}`)\n}\n", "import type {AnySchema, SchemaMap} from \"../types\"\nimport type {SchemaCxt} from \"../compile\"\nimport type {KeywordCxt} from \"../compile/validate\"\nimport {CodeGen, _, and, or, not, nil, strConcat, getProperty, Code, Name} from \"../compile/codegen\"\nimport {alwaysValidSchema, Type} from \"../compile/util\"\nimport N from \"../compile/names\"\nimport {useFunc} from \"../compile/util\"\nexport function checkReportMissingProp(cxt: KeywordCxt, prop: string): void {\n  const {gen, data, it} = cxt\n  gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n    cxt.setParams({missingProperty: _`${prop}`}, true)\n    cxt.error()\n  })\n}\n\nexport function checkMissingProp(\n  {gen, data, it: {opts}}: KeywordCxt,\n  properties: string[],\n  missing: Name\n): Code {\n  return or(\n    ...properties.map((prop) =>\n      and(noPropertyInData(gen, data, prop, opts.ownProperties), _`${missing} = ${prop}`)\n    )\n  )\n}\n\nexport function reportMissingProp(cxt: KeywordCxt, missing: Name): void {\n  cxt.setParams({missingProperty: missing}, true)\n  cxt.error()\n}\n\nexport function hasPropFunc(gen: CodeGen): Name {\n  return gen.scopeValue(\"func\", {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ref: Object.prototype.hasOwnProperty,\n    code: _`Object.prototype.hasOwnProperty`,\n  })\n}\n\nexport function isOwnProperty(gen: CodeGen, data: Name, property: Name | string): Code {\n  return _`${hasPropFunc(gen)}.call(${data}, ${property})`\n}\n\nexport function propertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} !== undefined`\n  return ownProperties ? _`${cond} && ${isOwnProperty(gen, data, property)}` : cond\n}\n\nexport function noPropertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} === undefined`\n  return ownProperties ? or(cond, not(isOwnProperty(gen, data, property))) : cond\n}\n\nexport function allSchemaProperties(schemaMap?: SchemaMap): string[] {\n  return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : []\n}\n\nexport function schemaProperties(it: SchemaCxt, schemaMap: SchemaMap): string[] {\n  return allSchemaProperties(schemaMap).filter(\n    (p) => !alwaysValidSchema(it, schemaMap[p] as AnySchema)\n  )\n}\n\nexport function callValidateCode(\n  {schemaCode, data, it: {gen, topSchemaRef, schemaPath, errorPath}, it}: KeywordCxt,\n  func: Code,\n  context: Code,\n  passSchema?: boolean\n): Code {\n  const dataAndSchema = passSchema ? _`${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data\n  const valCxt: [Name, Code | number][] = [\n    [N.instancePath, strConcat(N.instancePath, errorPath)],\n    [N.parentData, it.parentData],\n    [N.parentDataProperty, it.parentDataProperty],\n    [N.rootData, N.rootData],\n  ]\n  if (it.opts.dynamicRef) valCxt.push([N.dynamicAnchors, N.dynamicAnchors])\n  const args = _`${dataAndSchema}, ${gen.object(...valCxt)}`\n  return context !== nil ? _`${func}.call(${context}, ${args})` : _`${func}(${args})`\n}\n\nconst newRegExp = _`new RegExp`\n\nexport function usePattern({gen, it: {opts}}: KeywordCxt, pattern: string): Name {\n  const u = opts.unicodeRegExp ? \"u\" : \"\"\n  const {regExp} = opts.code\n  const rx = regExp(pattern, u)\n\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: _`${regExp.code === \"new RegExp\" ? newRegExp : useFunc(gen, regExp)}(${pattern}, ${u})`,\n  })\n}\n\nexport function validateArray(cxt: KeywordCxt): Name {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  if (it.allErrors) {\n    const validArr = gen.let(\"valid\", true)\n    validateItems(() => gen.assign(validArr, false))\n    return validArr\n  }\n  gen.var(valid, true)\n  validateItems(() => gen.break())\n  return valid\n\n  function validateItems(notValid: () => void): void {\n    const len = gen.const(\"len\", _`${data}.length`)\n    gen.forRange(\"i\", 0, len, (i) => {\n      cxt.subschema(\n        {\n          keyword,\n          dataProp: i,\n          dataPropType: Type.Num,\n        },\n        valid\n      )\n      gen.if(not(valid), notValid)\n    })\n  }\n}\n\nexport function validateUnion(cxt: KeywordCxt): void {\n  const {gen, schema, keyword, it} = cxt\n  /* istanbul ignore if */\n  if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n  const alwaysValid = schema.some((sch: AnySchema) => alwaysValidSchema(it, sch))\n  if (alwaysValid && !it.opts.unevaluated) return\n\n  const valid = gen.let(\"valid\", false)\n  const schValid = gen.name(\"_valid\")\n\n  gen.block(() =>\n    schema.forEach((_sch: AnySchema, i: number) => {\n      const schCxt = cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          compositeRule: true,\n        },\n        schValid\n      )\n      gen.assign(valid, _`${valid} || ${schValid}`)\n      const merged = cxt.mergeValidEvaluated(schCxt, schValid)\n      // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n      // or if all properties and items were evaluated (it.props === true && it.items === true)\n      if (!merged) gen.if(not(valid))\n    })\n  )\n\n  cxt.result(\n    valid,\n    () => cxt.reset(),\n    () => cxt.error(true)\n  )\n}\n", "import type {KeywordCxt} from \".\"\nimport type {\n  AnySchema,\n  SchemaValidateFunction,\n  AnyValidateFunction,\n  AddedKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, nil, not, stringify, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport type {JSONType} from \"../rules\"\nimport {callValidateCode} from \"../../vocabularies/code\"\nimport {extendErrors} from \"../errors\"\n\ntype KeywordCompilationResult = AnySchema | SchemaValidateFunction | AnyValidateFunction\n\nexport function macroKeywordCode(cxt: KeywordCxt, def: MacroKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, it} = cxt\n  const macroSchema = def.macro.call(it.self, schema, parentSchema, it)\n  const schemaRef = useKeyword(gen, keyword, macroSchema)\n  if (it.opts.validateSchema !== false) it.self.validateSchema(macroSchema, true)\n\n  const valid = gen.name(\"valid\")\n  cxt.subschema(\n    {\n      schema: macroSchema,\n      schemaPath: nil,\n      errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n      topSchemaRef: schemaRef,\n      compositeRule: true,\n    },\n    valid\n  )\n  cxt.pass(valid, () => cxt.error(true))\n}\n\nexport function funcKeywordCode(cxt: KeywordCxt, def: FuncKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, $data, it} = cxt\n  checkAsyncKeyword(it, def)\n  const validate =\n    !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate\n  const validateRef = useKeyword(gen, keyword, validate)\n  const valid = gen.let(\"valid\")\n  cxt.block$data(valid, validateKeyword)\n  cxt.ok(def.valid ?? valid)\n\n  function validateKeyword(): void {\n    if (def.errors === false) {\n      assignValid()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => cxt.error())\n    } else {\n      const ruleErrs = def.async ? validateAsync() : validateSync()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => addErrs(cxt, ruleErrs))\n    }\n  }\n\n  function validateAsync(): Name {\n    const ruleErrs = gen.let(\"ruleErrs\", null)\n    gen.try(\n      () => assignValid(_`await `),\n      (e) =>\n        gen.assign(valid, false).if(\n          _`${e} instanceof ${it.ValidationError as Name}`,\n          () => gen.assign(ruleErrs, _`${e}.errors`),\n          () => gen.throw(e)\n        )\n    )\n    return ruleErrs\n  }\n\n  function validateSync(): Code {\n    const validateErrs = _`${validateRef}.errors`\n    gen.assign(validateErrs, null)\n    assignValid(nil)\n    return validateErrs\n  }\n\n  function assignValid(_await: Code = def.async ? _`await ` : nil): void {\n    const passCxt = it.opts.passContext ? N.this : N.self\n    const passSchema = !((\"compile\" in def && !$data) || def.schema === false)\n    gen.assign(\n      valid,\n      _`${_await}${callValidateCode(cxt, validateRef, passCxt, passSchema)}`,\n      def.modifying\n    )\n  }\n\n  function reportErrs(errors: () => void): void {\n    gen.if(not(def.valid ?? valid), errors)\n  }\n}\n\nfunction modifyData(cxt: KeywordCxt): void {\n  const {gen, data, it} = cxt\n  gen.if(it.parentData, () => gen.assign(data, _`${it.parentData}[${it.parentDataProperty}]`))\n}\n\nfunction addErrs(cxt: KeywordCxt, errs: Code): void {\n  const {gen} = cxt\n  gen.if(\n    _`Array.isArray(${errs})`,\n    () => {\n      gen\n        .assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`)\n        .assign(N.errors, _`${N.vErrors}.length`)\n      extendErrors(cxt)\n    },\n    () => cxt.error()\n  )\n}\n\nfunction checkAsyncKeyword({schemaEnv}: SchemaObjCxt, def: FuncKeywordDefinition): void {\n  if (def.async && !schemaEnv.$async) throw new Error(\"async keyword in sync schema\")\n}\n\nfunction useKeyword(gen: CodeGen, keyword: string, result?: KeywordCompilationResult): Name {\n  if (result === undefined) throw new Error(`keyword \"${keyword}\" failed to compile`)\n  return gen.scopeValue(\n    \"keyword\",\n    typeof result == \"function\" ? {ref: result} : {ref: result, code: stringify(result)}\n  )\n}\n\nexport function validSchemaType(\n  schema: unknown,\n  schemaType: JSONType[],\n  allowUndefined = false\n): boolean {\n  // TODO add tests\n  return (\n    !schemaType.length ||\n    schemaType.some((st) =>\n      st === \"array\"\n        ? Array.isArray(schema)\n        : st === \"object\"\n        ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n        : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")\n    )\n  )\n}\n\nexport function validateKeywordUsage(\n  {schema, opts, self, errSchemaPath}: SchemaObjCxt,\n  def: AddedKeywordDefinition,\n  keyword: string\n): void {\n  /* istanbul ignore if */\n  if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n    throw new Error(\"ajv implementation error\")\n  }\n\n  const deps = def.dependencies\n  if (deps?.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n    throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`)\n  }\n\n  if (def.validateSchema) {\n    const valid = def.validateSchema(schema[keyword])\n    if (!valid) {\n      const msg =\n        `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n        self.errorsText(def.validateSchema.errors)\n      if (opts.validateSchema === \"log\") self.logger.error(msg)\n      else throw new Error(msg)\n    }\n  }\n}\n", "import type {AnySchema} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, str, getProperty, Code, Name} from \"../codegen\"\nimport {escapeFragment, getErrorPath, Type} from \"../util\"\nimport type {JSONType} from \"../rules\"\n\nexport interface SubschemaContext {\n  // TODO use Optional? align with SchemCxt property types\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef?: Code\n  errorPath?: Code\n  dataLevel?: number\n  dataTypes?: JSONType[]\n  data?: Name\n  parentData?: Name\n  parentDataProperty?: Code | number\n  dataNames?: Name[]\n  dataPathArr?: (Code | number)[]\n  propertyName?: Name\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  compositeRule?: true\n  createErrors?: boolean\n  allErrors?: boolean\n}\n\nexport type SubschemaArgs = Partial<{\n  keyword: string\n  schemaProp: string | number\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef: Code\n  data: Name | Code\n  dataProp: Code | string | number\n  dataTypes: JSONType[]\n  definedProperties: Set<string>\n  propertyName: Name\n  dataPropType: Type\n  jtdDiscriminator: string\n  jtdMetadata: boolean\n  compositeRule: true\n  createErrors: boolean\n  allErrors: boolean\n}>\n\nexport function getSubschema(\n  it: SchemaObjCxt,\n  {keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef}: SubschemaArgs\n): SubschemaContext {\n  if (keyword !== undefined && schema !== undefined) {\n    throw new Error('both \"keyword\" and \"schema\" passed, only one allowed')\n  }\n\n  if (keyword !== undefined) {\n    const sch = it.schema[keyword]\n    return schemaProp === undefined\n      ? {\n          schema: sch,\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        }\n      : {\n          schema: sch[schemaProp],\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}${getProperty(schemaProp)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}/${escapeFragment(schemaProp)}`,\n        }\n  }\n\n  if (schema !== undefined) {\n    if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n      throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"')\n    }\n    return {\n      schema,\n      schemaPath,\n      topSchemaRef,\n      errSchemaPath,\n    }\n  }\n\n  throw new Error('either \"keyword\" or \"schema\" must be passed')\n}\n\nexport function extendSubschemaData(\n  subschema: SubschemaContext,\n  it: SchemaObjCxt,\n  {dataProp, dataPropType: dpType, data, dataTypes, propertyName}: SubschemaArgs\n): void {\n  if (data !== undefined && dataProp !== undefined) {\n    throw new Error('both \"data\" and \"dataProp\" passed, only one allowed')\n  }\n\n  const {gen} = it\n\n  if (dataProp !== undefined) {\n    const {errorPath, dataPathArr, opts} = it\n    const nextData = gen.let(\"data\", _`${it.data}${getProperty(dataProp)}`, true)\n    dataContextProps(nextData)\n    subschema.errorPath = str`${errorPath}${getErrorPath(dataProp, dpType, opts.jsPropertySyntax)}`\n    subschema.parentDataProperty = _`${dataProp}`\n    subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty]\n  }\n\n  if (data !== undefined) {\n    const nextData = data instanceof Name ? data : gen.let(\"data\", data, true) // replaceable if used once?\n    dataContextProps(nextData)\n    if (propertyName !== undefined) subschema.propertyName = propertyName\n    // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n  }\n\n  if (dataTypes) subschema.dataTypes = dataTypes\n\n  function dataContextProps(_nextData: Name): void {\n    subschema.data = _nextData\n    subschema.dataLevel = it.dataLevel + 1\n    subschema.dataTypes = []\n    it.definedProperties = new Set<string>()\n    subschema.parentData = it.data\n    subschema.dataNames = [...it.dataNames, _nextData]\n  }\n}\n\nexport function extendSubschemaMode(\n  subschema: SubschemaContext,\n  {jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors}: SubschemaArgs\n): void {\n  if (compositeRule !== undefined) subschema.compositeRule = compositeRule\n  if (createErrors !== undefined) subschema.createErrors = createErrors\n  if (allErrors !== undefined) subschema.allErrors = allErrors\n  subschema.jtdDiscriminator = jtdDiscriminator // not inherited\n  subschema.jtdMetadata = jtdMetadata // not inherited\n}\n", "'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true,\n  if: true,\n  then: true,\n  else: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  $defs: true,\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n", "import type {AnySchema, AnySchemaObject, UriResolver} from \"../types\"\nimport type Ajv from \"../ajv\"\nimport type {URIComponents} from \"uri-js\"\nimport {eachItem} from \"./util\"\nimport * as equal from \"fast-deep-equal\"\nimport * as traverse from \"json-schema-traverse\"\n\n// the hash of local references inside the schema (created by getSchemaRefs), used for inline resolution\nexport type LocalRefs = {[Ref in string]?: AnySchemaObject}\n\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n  \"type\",\n  \"format\",\n  \"pattern\",\n  \"maxLength\",\n  \"minLength\",\n  \"maxProperties\",\n  \"minProperties\",\n  \"maxItems\",\n  \"minItems\",\n  \"maximum\",\n  \"minimum\",\n  \"uniqueItems\",\n  \"multipleOf\",\n  \"required\",\n  \"enum\",\n  \"const\",\n])\n\nexport function inlineRef(schema: AnySchema, limit: boolean | number = true): boolean {\n  if (typeof schema == \"boolean\") return true\n  if (limit === true) return !hasRef(schema)\n  if (!limit) return false\n  return countKeys(schema) <= limit\n}\n\nconst REF_KEYWORDS = new Set([\n  \"$ref\",\n  \"$recursiveRef\",\n  \"$recursiveAnchor\",\n  \"$dynamicRef\",\n  \"$dynamicAnchor\",\n])\n\nfunction hasRef(schema: AnySchemaObject): boolean {\n  for (const key in schema) {\n    if (REF_KEYWORDS.has(key)) return true\n    const sch = schema[key]\n    if (Array.isArray(sch) && sch.some(hasRef)) return true\n    if (typeof sch == \"object\" && hasRef(sch)) return true\n  }\n  return false\n}\n\nfunction countKeys(schema: AnySchemaObject): number {\n  let count = 0\n  for (const key in schema) {\n    if (key === \"$ref\") return Infinity\n    count++\n    if (SIMPLE_INLINED.has(key)) continue\n    if (typeof schema[key] == \"object\") {\n      eachItem(schema[key], (sch) => (count += countKeys(sch)))\n    }\n    if (count === Infinity) return Infinity\n  }\n  return count\n}\n\nexport function getFullPath(resolver: UriResolver, id = \"\", normalize?: boolean): string {\n  if (normalize !== false) id = normalizeId(id)\n  const p = resolver.parse(id)\n  return _getFullPath(resolver, p)\n}\n\nexport function _getFullPath(resolver: UriResolver, p: URIComponents): string {\n  const serialized = resolver.serialize(p)\n  return serialized.split(\"#\")[0] + \"#\"\n}\n\nconst TRAILING_SLASH_HASH = /#\\/?$/\nexport function normalizeId(id: string | undefined): string {\n  return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\"\n}\n\nexport function resolveUrl(resolver: UriResolver, baseId: string, id: string): string {\n  id = normalizeId(id)\n  return resolver.resolve(baseId, id)\n}\n\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i\n\nexport function getSchemaRefs(this: Ajv, schema: AnySchema, baseId: string): LocalRefs {\n  if (typeof schema == \"boolean\") return {}\n  const {schemaId, uriResolver} = this.opts\n  const schId = normalizeId(schema[schemaId] || baseId)\n  const baseIds: {[JsonPtr in string]?: string} = {\"\": schId}\n  const pathPrefix = getFullPath(uriResolver, schId, false)\n  const localRefs: LocalRefs = {}\n  const schemaRefs: Set<string> = new Set()\n\n  traverse(schema, {allKeys: true}, (sch, jsonPtr, _, parentJsonPtr) => {\n    if (parentJsonPtr === undefined) return\n    const fullPath = pathPrefix + jsonPtr\n    let baseId = baseIds[parentJsonPtr]\n    if (typeof sch[schemaId] == \"string\") baseId = addRef.call(this, sch[schemaId])\n    addAnchor.call(this, sch.$anchor)\n    addAnchor.call(this, sch.$dynamicAnchor)\n    baseIds[jsonPtr] = baseId\n\n    function addRef(this: Ajv, ref: string): string {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const _resolve = this.opts.uriResolver.resolve\n      ref = normalizeId(baseId ? _resolve(baseId, ref) : ref)\n      if (schemaRefs.has(ref)) throw ambiguos(ref)\n      schemaRefs.add(ref)\n      let schOrRef = this.refs[ref]\n      if (typeof schOrRef == \"string\") schOrRef = this.refs[schOrRef]\n      if (typeof schOrRef == \"object\") {\n        checkAmbiguosRef(sch, schOrRef.schema, ref)\n      } else if (ref !== normalizeId(fullPath)) {\n        if (ref[0] === \"#\") {\n          checkAmbiguosRef(sch, localRefs[ref], ref)\n          localRefs[ref] = sch\n        } else {\n          this.refs[ref] = fullPath\n        }\n      }\n      return ref\n    }\n\n    function addAnchor(this: Ajv, anchor: unknown): void {\n      if (typeof anchor == \"string\") {\n        if (!ANCHOR.test(anchor)) throw new Error(`invalid anchor \"${anchor}\"`)\n        addRef.call(this, `#${anchor}`)\n      }\n    }\n  })\n\n  return localRefs\n\n  function checkAmbiguosRef(sch1: AnySchema, sch2: AnySchema | undefined, ref: string): void {\n    if (sch2 !== undefined && !equal(sch1, sch2)) throw ambiguos(ref)\n  }\n\n  function ambiguos(ref: string): Error {\n    return new Error(`reference \"${ref}\" resolves to more than one schema`)\n  }\n}\n", "import type {\n  AddedKeywordDefinition,\n  AnySchema,\n  AnySchemaObject,\n  KeywordErrorCxt,\n  KeywordCxtParams,\n} from \"../../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \"..\"\nimport type {InstanceOptions} from \"../../core\"\nimport {boolOrEmptySchema, topBoolOrEmptySchema} from \"./boolSchema\"\nimport {coerceAndCheckDataType, getSchemaTypes} from \"./dataType\"\nimport {shouldUseGroup, shouldUseRule} from \"./applicability\"\nimport {checkDataType, checkDataTypes, reportTypeError, DataType} from \"./dataType\"\nimport {assignDefaults} from \"./defaults\"\nimport {funcKeywordCode, macroKeywordCode, validateKeywordUsage, validSchemaType} from \"./keyword\"\nimport {getSubschema, extendSubschemaData, SubschemaArgs, extendSubschemaMode} from \"./subschema\"\nimport {_, nil, str, or, not, getProperty, Block, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport {resolveUrl} from \"../resolve\"\nimport {\n  schemaRefOrVal,\n  schemaHasRulesButRef,\n  checkUnknownRules,\n  checkStrictMode,\n  unescapeJsonPointer,\n  mergeEvaluated,\n} from \"../util\"\nimport type {JSONType, Rule, RuleGroup} from \"../rules\"\nimport {\n  ErrorPaths,\n  reportError,\n  reportExtraError,\n  resetErrorsCount,\n  keyword$DataError,\n} from \"../errors\"\n\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nexport function validateFunctionCode(it: SchemaCxt): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      topSchemaObjCode(it)\n      return\n    }\n  }\n  validateFunction(it, () => topBoolOrEmptySchema(it))\n}\n\nfunction validateFunction(\n  {gen, validateName, schema, schemaEnv, opts}: SchemaCxt,\n  body: Block\n): void {\n  if (opts.code.es5) {\n    gen.func(validateName, _`${N.data}, ${N.valCxt}`, schemaEnv.$async, () => {\n      gen.code(_`\"use strict\"; ${funcSourceUrl(schema, opts)}`)\n      destructureValCxtES5(gen, opts)\n      gen.code(body)\n    })\n  } else {\n    gen.func(validateName, _`${N.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () =>\n      gen.code(funcSourceUrl(schema, opts)).code(body)\n    )\n  }\n}\n\nfunction destructureValCxt(opts: InstanceOptions): Code {\n  return _`{${N.instancePath}=\"\", ${N.parentData}, ${N.parentDataProperty}, ${N.rootData}=${\n    N.data\n  }${opts.dynamicRef ? _`, ${N.dynamicAnchors}={}` : nil}}={}`\n}\n\nfunction destructureValCxtES5(gen: CodeGen, opts: InstanceOptions): void {\n  gen.if(\n    N.valCxt,\n    () => {\n      gen.var(N.instancePath, _`${N.valCxt}.${N.instancePath}`)\n      gen.var(N.parentData, _`${N.valCxt}.${N.parentData}`)\n      gen.var(N.parentDataProperty, _`${N.valCxt}.${N.parentDataProperty}`)\n      gen.var(N.rootData, _`${N.valCxt}.${N.rootData}`)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`${N.valCxt}.${N.dynamicAnchors}`)\n    },\n    () => {\n      gen.var(N.instancePath, _`\"\"`)\n      gen.var(N.parentData, _`undefined`)\n      gen.var(N.parentDataProperty, _`undefined`)\n      gen.var(N.rootData, N.data)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`{}`)\n    }\n  )\n}\n\nfunction topSchemaObjCode(it: SchemaObjCxt): void {\n  const {schema, opts, gen} = it\n  validateFunction(it, () => {\n    if (opts.$comment && schema.$comment) commentKeyword(it)\n    checkNoDefault(it)\n    gen.let(N.vErrors, null)\n    gen.let(N.errors, 0)\n    if (opts.unevaluated) resetEvaluated(it)\n    typeAndKeywords(it)\n    returnResults(it)\n  })\n  return\n}\n\nfunction resetEvaluated(it: SchemaObjCxt): void {\n  // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n  const {gen, validateName} = it\n  it.evaluated = gen.const(\"evaluated\", _`${validateName}.evaluated`)\n  gen.if(_`${it.evaluated}.dynamicProps`, () => gen.assign(_`${it.evaluated}.props`, _`undefined`))\n  gen.if(_`${it.evaluated}.dynamicItems`, () => gen.assign(_`${it.evaluated}.items`, _`undefined`))\n}\n\nfunction funcSourceUrl(schema: AnySchema, opts: InstanceOptions): Code {\n  const schId = typeof schema == \"object\" && schema[opts.schemaId]\n  return schId && (opts.code.source || opts.code.process) ? _`/*# sourceURL=${schId} */` : nil\n}\n\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it: SchemaCxt, valid: Name): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      subSchemaObjCode(it, valid)\n      return\n    }\n  }\n  boolOrEmptySchema(it, valid)\n}\n\nfunction schemaCxtHasRules({schema, self}: SchemaCxt): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (self.RULES.all[key]) return true\n  return false\n}\n\nfunction isSchemaObj(it: SchemaCxt): it is SchemaObjCxt {\n  return typeof it.schema != \"boolean\"\n}\n\nfunction subSchemaObjCode(it: SchemaObjCxt, valid: Name): void {\n  const {schema, gen, opts} = it\n  if (opts.$comment && schema.$comment) commentKeyword(it)\n  updateContext(it)\n  checkAsyncSchema(it)\n  const errsCount = gen.const(\"_errs\", N.errors)\n  typeAndKeywords(it, errsCount)\n  // TODO var\n  gen.var(valid, _`${errsCount} === ${N.errors}`)\n}\n\nfunction checkKeywords(it: SchemaObjCxt): void {\n  checkUnknownRules(it)\n  checkRefsAndKeywords(it)\n}\n\nfunction typeAndKeywords(it: SchemaObjCxt, errsCount?: Name): void {\n  if (it.opts.jtd) return schemaKeywords(it, [], false, errsCount)\n  const types = getSchemaTypes(it.schema)\n  const checkedTypes = coerceAndCheckDataType(it, types)\n  schemaKeywords(it, types, !checkedTypes, errsCount)\n}\n\nfunction checkRefsAndKeywords(it: SchemaObjCxt): void {\n  const {schema, errSchemaPath, opts, self} = it\n  if (schema.$ref && opts.ignoreKeywordsWithRef && schemaHasRulesButRef(schema, self.RULES)) {\n    self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`)\n  }\n}\n\nfunction checkNoDefault(it: SchemaObjCxt): void {\n  const {schema, opts} = it\n  if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n    checkStrictMode(it, \"default is ignored in the schema root\")\n  }\n}\n\nfunction updateContext(it: SchemaObjCxt): void {\n  const schId = it.schema[it.opts.schemaId]\n  if (schId) it.baseId = resolveUrl(it.opts.uriResolver, it.baseId, schId)\n}\n\nfunction checkAsyncSchema(it: SchemaObjCxt): void {\n  if (it.schema.$async && !it.schemaEnv.$async) throw new Error(\"async schema in sync schema\")\n}\n\nfunction commentKeyword({gen, schemaEnv, schema, errSchemaPath, opts}: SchemaObjCxt): void {\n  const msg = schema.$comment\n  if (opts.$comment === true) {\n    gen.code(_`${N.self}.logger.log(${msg})`)\n  } else if (typeof opts.$comment == \"function\") {\n    const schemaPath = str`${errSchemaPath}/$comment`\n    const rootName = gen.scopeValue(\"root\", {ref: schemaEnv.root})\n    gen.code(_`${N.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`)\n  }\n}\n\nfunction returnResults(it: SchemaCxt): void {\n  const {gen, schemaEnv, validateName, ValidationError, opts} = it\n  if (schemaEnv.$async) {\n    // TODO assign unevaluated\n    gen.if(\n      _`${N.errors} === 0`,\n      () => gen.return(N.data),\n      () => gen.throw(_`new ${ValidationError as Name}(${N.vErrors})`)\n    )\n  } else {\n    gen.assign(_`${validateName}.errors`, N.vErrors)\n    if (opts.unevaluated) assignEvaluated(it)\n    gen.return(_`${N.errors} === 0`)\n  }\n}\n\nfunction assignEvaluated({gen, evaluated, props, items}: SchemaCxt): void {\n  if (props instanceof Name) gen.assign(_`${evaluated}.props`, props)\n  if (items instanceof Name) gen.assign(_`${evaluated}.items`, items)\n}\n\nfunction schemaKeywords(\n  it: SchemaObjCxt,\n  types: JSONType[],\n  typeErrors: boolean,\n  errsCount?: Name\n): void {\n  const {gen, schema, data, allErrors, opts, self} = it\n  const {RULES} = self\n  if (schema.$ref && (opts.ignoreKeywordsWithRef || !schemaHasRulesButRef(schema, RULES))) {\n    gen.block(() => keywordCode(it, \"$ref\", (RULES.all.$ref as Rule).definition)) // TODO typecast\n    return\n  }\n  if (!opts.jtd) checkStrictTypes(it, types)\n  gen.block(() => {\n    for (const group of RULES.rules) groupKeywords(group)\n    groupKeywords(RULES.post)\n  })\n\n  function groupKeywords(group: RuleGroup): void {\n    if (!shouldUseGroup(schema, group)) return\n    if (group.type) {\n      gen.if(checkDataType(group.type, data, opts.strictNumbers))\n      iterateKeywords(it, group)\n      if (types.length === 1 && types[0] === group.type && typeErrors) {\n        gen.else()\n        reportTypeError(it)\n      }\n      gen.endIf()\n    } else {\n      iterateKeywords(it, group)\n    }\n    // TODO make it \"ok\" call?\n    if (!allErrors) gen.if(_`${N.errors} === ${errsCount || 0}`)\n  }\n}\n\nfunction iterateKeywords(it: SchemaObjCxt, group: RuleGroup): void {\n  const {\n    gen,\n    schema,\n    opts: {useDefaults},\n  } = it\n  if (useDefaults) assignDefaults(it, group.type)\n  gen.block(() => {\n    for (const rule of group.rules) {\n      if (shouldUseRule(schema, rule)) {\n        keywordCode(it, rule.keyword, rule.definition, group.type)\n      }\n    }\n  })\n}\n\nfunction checkStrictTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (it.schemaEnv.meta || !it.opts.strictTypes) return\n  checkContextTypes(it, types)\n  if (!it.opts.allowUnionTypes) checkMultipleTypes(it, types)\n  checkKeywordTypes(it, it.dataTypes)\n}\n\nfunction checkContextTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (!types.length) return\n  if (!it.dataTypes.length) {\n    it.dataTypes = types\n    return\n  }\n  types.forEach((t) => {\n    if (!includesType(it.dataTypes, t)) {\n      strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`)\n    }\n  })\n  narrowSchemaTypes(it, types)\n}\n\nfunction checkMultipleTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n    strictTypesError(it, \"use allowUnionTypes to allow union type keyword\")\n  }\n}\n\nfunction checkKeywordTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  const rules = it.self.RULES.all\n  for (const keyword in rules) {\n    const rule = rules[keyword]\n    if (typeof rule == \"object\" && shouldUseRule(it.schema, rule)) {\n      const {type} = rule.definition\n      if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n        strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`)\n      }\n    }\n  }\n}\n\nfunction hasApplicableType(schTs: JSONType[], kwdT: JSONType): boolean {\n  return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"))\n}\n\nfunction includesType(ts: JSONType[], t: JSONType): boolean {\n  return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"))\n}\n\nfunction narrowSchemaTypes(it: SchemaObjCxt, withTypes: JSONType[]): void {\n  const ts: JSONType[] = []\n  for (const t of it.dataTypes) {\n    if (includesType(withTypes, t)) ts.push(t)\n    else if (withTypes.includes(\"integer\") && t === \"number\") ts.push(\"integer\")\n  }\n  it.dataTypes = ts\n}\n\nfunction strictTypesError(it: SchemaObjCxt, msg: string): void {\n  const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n  msg += ` at \"${schemaPath}\" (strictTypes)`\n  checkStrictMode(it, msg, it.opts.strictTypes)\n}\n\nexport class KeywordCxt implements KeywordErrorCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean\n  readonly keyword: string\n  readonly data: Name // Name referencing the current level of the data instance\n  readonly $data?: string | false\n  schema: any // keyword value in the schema\n  readonly schemaValue: Code | number | boolean // Code reference to keyword schema value or primitive value\n  readonly schemaCode: Code | number | boolean // Code reference to resolved schema value (different if schema is $data)\n  readonly schemaType: JSONType[] // allowed type(s) of keyword value in the schema\n  readonly parentSchema: AnySchemaObject\n  readonly errsCount?: Name // Name reference to the number of validation errors collected before this keyword,\n  // requires option trackErrors in keyword definition\n  params: KeywordCxtParams // object to pass parameters to error messages from keyword code\n  readonly it: SchemaObjCxt // schema compilation context (schema is guaranteed to be an object, not boolean)\n  readonly def: AddedKeywordDefinition\n\n  constructor(it: SchemaObjCxt, def: AddedKeywordDefinition, keyword: string) {\n    validateKeywordUsage(it, def, keyword)\n    this.gen = it.gen\n    this.allErrors = it.allErrors\n    this.keyword = keyword\n    this.data = it.data\n    this.schema = it.schema[keyword]\n    this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data\n    this.schemaValue = schemaRefOrVal(it, this.schema, keyword, this.$data)\n    this.schemaType = def.schemaType\n    this.parentSchema = it.schema\n    this.params = {}\n    this.it = it\n    this.def = def\n\n    if (this.$data) {\n      this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it))\n    } else {\n      this.schemaCode = this.schemaValue\n      if (!validSchemaType(this.schema, def.schemaType, def.allowUndefined)) {\n        throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`)\n      }\n    }\n\n    if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n      this.errsCount = it.gen.const(\"_errs\", N.errors)\n    }\n  }\n\n  result(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.failResult(not(condition), successAction, failAction)\n  }\n\n  failResult(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.gen.if(condition)\n    if (failAction) failAction()\n    else this.error()\n    if (successAction) {\n      this.gen.else()\n      successAction()\n      if (this.allErrors) this.gen.endIf()\n    } else {\n      if (this.allErrors) this.gen.endIf()\n      else this.gen.else()\n    }\n  }\n\n  pass(condition: Code, failAction?: () => void): void {\n    this.failResult(not(condition), undefined, failAction)\n  }\n\n  fail(condition?: Code): void {\n    if (condition === undefined) {\n      this.error()\n      if (!this.allErrors) this.gen.if(false) // this branch will be removed by gen.optimize\n      return\n    }\n    this.gen.if(condition)\n    this.error()\n    if (this.allErrors) this.gen.endIf()\n    else this.gen.else()\n  }\n\n  fail$data(condition: Code): void {\n    if (!this.$data) return this.fail(condition)\n    const {schemaCode} = this\n    this.fail(_`${schemaCode} !== undefined && (${or(this.invalid$data(), condition)})`)\n  }\n\n  error(append?: boolean, errorParams?: KeywordCxtParams, errorPaths?: ErrorPaths): void {\n    if (errorParams) {\n      this.setParams(errorParams)\n      this._error(append, errorPaths)\n      this.setParams({})\n      return\n    }\n    this._error(append, errorPaths)\n  }\n\n  private _error(append?: boolean, errorPaths?: ErrorPaths): void {\n    ;(append ? reportExtraError : reportError)(this, this.def.error, errorPaths)\n  }\n\n  $dataError(): void {\n    reportError(this, this.def.$dataError || keyword$DataError)\n  }\n\n  reset(): void {\n    if (this.errsCount === undefined) throw new Error('add \"trackErrors\" to keyword definition')\n    resetErrorsCount(this.gen, this.errsCount)\n  }\n\n  ok(cond: Code | boolean): void {\n    if (!this.allErrors) this.gen.if(cond)\n  }\n\n  setParams(obj: KeywordCxtParams, assign?: true): void {\n    if (assign) Object.assign(this.params, obj)\n    else this.params = obj\n  }\n\n  block$data(valid: Name, codeBlock: () => void, $dataValid: Code = nil): void {\n    this.gen.block(() => {\n      this.check$data(valid, $dataValid)\n      codeBlock()\n    })\n  }\n\n  check$data(valid: Name = nil, $dataValid: Code = nil): void {\n    if (!this.$data) return\n    const {gen, schemaCode, schemaType, def} = this\n    gen.if(or(_`${schemaCode} === undefined`, $dataValid))\n    if (valid !== nil) gen.assign(valid, true)\n    if (schemaType.length || def.validateSchema) {\n      gen.elseIf(this.invalid$data())\n      this.$dataError()\n      if (valid !== nil) gen.assign(valid, false)\n    }\n    gen.else()\n  }\n\n  invalid$data(): Code {\n    const {gen, schemaCode, schemaType, def, it} = this\n    return or(wrong$DataType(), invalid$DataSchema())\n\n    function wrong$DataType(): Code {\n      if (schemaType.length) {\n        /* istanbul ignore if */\n        if (!(schemaCode instanceof Name)) throw new Error(\"ajv implementation error\")\n        const st = Array.isArray(schemaType) ? schemaType : [schemaType]\n        return _`${checkDataTypes(st, schemaCode, it.opts.strictNumbers, DataType.Wrong)}`\n      }\n      return nil\n    }\n\n    function invalid$DataSchema(): Code {\n      if (def.validateSchema) {\n        const validateSchemaRef = gen.scopeValue(\"validate$data\", {ref: def.validateSchema}) // TODO value.code for standalone\n        return _`!${validateSchemaRef}(${schemaCode})`\n      }\n      return nil\n    }\n  }\n\n  subschema(appl: SubschemaArgs, valid: Name): SchemaCxt {\n    const subschema = getSubschema(this.it, appl)\n    extendSubschemaData(subschema, this.it, appl)\n    extendSubschemaMode(subschema, appl)\n    const nextContext = {...this.it, ...subschema, items: undefined, props: undefined}\n    subschemaCode(nextContext, valid)\n    return nextContext\n  }\n\n  mergeEvaluated(schemaCxt: SchemaCxt, toName?: typeof Name): void {\n    const {it, gen} = this\n    if (!it.opts.unevaluated) return\n    if (it.props !== true && schemaCxt.props !== undefined) {\n      it.props = mergeEvaluated.props(gen, schemaCxt.props, it.props, toName)\n    }\n    if (it.items !== true && schemaCxt.items !== undefined) {\n      it.items = mergeEvaluated.items(gen, schemaCxt.items, it.items, toName)\n    }\n  }\n\n  mergeValidEvaluated(schemaCxt: SchemaCxt, valid: Name): boolean | void {\n    const {it, gen} = this\n    if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n      gen.if(valid, () => this.mergeEvaluated(schemaCxt, Name))\n      return true\n    }\n  }\n}\n\nfunction keywordCode(\n  it: SchemaObjCxt,\n  keyword: string,\n  def: AddedKeywordDefinition,\n  ruleType?: JSONType\n): void {\n  const cxt = new KeywordCxt(it, def, keyword)\n  if (\"code\" in def) {\n    def.code(cxt, ruleType)\n  } else if (cxt.$data && def.validate) {\n    funcKeywordCode(cxt, def)\n  } else if (\"macro\" in def) {\n    macroKeywordCode(cxt, def)\n  } else if (def.compile || def.validate) {\n    funcKeywordCode(cxt, def)\n  }\n}\n\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/\nexport function getData(\n  $data: string,\n  {dataLevel, dataNames, dataPathArr}: SchemaCxt\n): Code | number {\n  let jsonPointer\n  let data: Code\n  if ($data === \"\") return N.rootData\n  if ($data[0] === \"/\") {\n    if (!JSON_POINTER.test($data)) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    jsonPointer = $data\n    data = N.rootData\n  } else {\n    const matches = RELATIVE_JSON_POINTER.exec($data)\n    if (!matches) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    const up: number = +matches[1]\n    jsonPointer = matches[2]\n    if (jsonPointer === \"#\") {\n      if (up >= dataLevel) throw new Error(errorMsg(\"property/index\", up))\n      return dataPathArr[dataLevel - up]\n    }\n    if (up > dataLevel) throw new Error(errorMsg(\"data\", up))\n    data = dataNames[dataLevel - up]\n    if (!jsonPointer) return data\n  }\n\n  let expr = data\n  const segments = jsonPointer.split(\"/\")\n  for (const segment of segments) {\n    if (segment) {\n      data = _`${data}${getProperty(unescapeJsonPointer(segment))}`\n      expr = _`${expr} && ${data}`\n    }\n  }\n  return expr\n\n  function errorMsg(pointerType: string, up: number): string {\n    return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`\n  }\n}\n", "import type {ErrorObject} from \"../types\"\n\nexport default class ValidationError extends Error {\n  readonly errors: Partial<ErrorObject>[]\n  readonly ajv: true\n  readonly validation: true\n\n  constructor(errors: Partial<ErrorObject>[]) {\n    super(\"validation failed\")\n    this.errors = errors\n    this.ajv = this.validation = true\n  }\n}\n", "import {resolveUrl, normalizeId, getFullPath} from \"./resolve\"\nimport type {UriResolver} from \"../types\"\n\nexport default class MissingRefError extends Error {\n  readonly missingRef: string\n  readonly missingSchema: string\n\n  constructor(resolver: UriResolver, baseId: string, ref: string, msg?: string) {\n    super(msg || `can't resolve reference ${ref} from id ${baseId}`)\n    this.missingRef = resolveUrl(resolver, baseId, ref)\n    this.missingSchema = normalizeId(getFullPath(resolver, this.missingRef))\n  }\n}\n", "import type {\n  AnySchema,\n  AnySchemaObject,\n  AnyValidateFunction,\n  AsyncValidateFunction,\n  EvaluatedProperties,\n  EvaluatedItems,\n} from \"../types\"\nimport type Ajv from \"../core\"\nimport type {InstanceOptions} from \"../core\"\nimport {CodeGen, _, nil, stringify, Name, Code, ValueScopeName} from \"./codegen\"\nimport ValidationError from \"../runtime/validation_error\"\nimport N from \"./names\"\nimport {LocalRefs, getFullPath, _getFullPath, inlineRef, normalizeId, resolveUrl} from \"./resolve\"\nimport {schemaHasRulesButRef, unescapeFragment} from \"./util\"\nimport {validateFunctionCode} from \"./validate\"\nimport * as URI from \"uri-js\"\nimport {JSONType} from \"./rules\"\n\nexport type SchemaRefs = {\n  [Ref in string]?: SchemaEnv | AnySchema\n}\n\nexport interface SchemaCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean // validation mode - whether to collect all errors or break on error\n  readonly data: Name // Name with reference to the current part of data instance\n  readonly parentData: Name // should be used in keywords modifying data\n  readonly parentDataProperty: Code | number // should be used in keywords modifying data\n  readonly dataNames: Name[]\n  readonly dataPathArr: (Code | number)[]\n  readonly dataLevel: number // the level of the currently validated data,\n  // it can be used to access both the property names and the data on all levels from the top.\n  dataTypes: JSONType[] // data types applied to the current part of data instance\n  definedProperties: Set<string> // set of properties to keep track of for required checks\n  readonly topSchemaRef: Code\n  readonly validateName: Name\n  evaluated?: Name\n  readonly ValidationError?: Name\n  readonly schema: AnySchema // current schema object - equal to parentSchema passed via KeywordCxt\n  readonly schemaEnv: SchemaEnv\n  readonly rootId: string\n  baseId: string // the current schema base URI that should be used as the base for resolving URIs in references (\\$ref)\n  readonly schemaPath: Code // the run-time expression that evaluates to the property name of the current schema\n  readonly errSchemaPath: string // this is actual string, should not be changed to Code\n  readonly errorPath: Code\n  readonly propertyName?: Name\n  readonly compositeRule?: boolean // true indicates that the current schema is inside the compound keyword,\n  // where failing some rule doesn't mean validation failure (`anyOf`, `oneOf`, `not`, `if`).\n  // This flag is used to determine whether you can return validation result immediately after any error in case the option `allErrors` is not `true.\n  // You only need to use it if you have many steps in your keywords and potentially can define multiple errors.\n  props?: EvaluatedProperties | Name // properties evaluated by this schema - used by parent schema or assigned to validation function\n  items?: EvaluatedItems | Name // last item evaluated by this schema - used by parent schema or assigned to validation function\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  readonly createErrors?: boolean\n  readonly opts: InstanceOptions // Ajv instance option.\n  readonly self: Ajv // current Ajv instance\n}\n\nexport interface SchemaObjCxt extends SchemaCxt {\n  readonly schema: AnySchemaObject\n}\ninterface SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root?: SchemaEnv\n  readonly baseId?: string\n  readonly schemaPath?: string\n  readonly localRefs?: LocalRefs\n  readonly meta?: boolean\n}\n\nexport class SchemaEnv implements SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root: SchemaEnv\n  baseId: string // TODO possibly, it should be readonly\n  schemaPath?: string\n  localRefs?: LocalRefs\n  readonly meta?: boolean\n  readonly $async?: boolean // true if the current schema is asynchronous.\n  readonly refs: SchemaRefs = {}\n  readonly dynamicAnchors: {[Ref in string]?: true} = {}\n  validate?: AnyValidateFunction\n  validateName?: ValueScopeName\n  serialize?: (data: unknown) => string\n  serializeName?: ValueScopeName\n  parse?: (data: string) => unknown\n  parseName?: ValueScopeName\n\n  constructor(env: SchemaEnvArgs) {\n    let schema: AnySchemaObject | undefined\n    if (typeof env.schema == \"object\") schema = env.schema\n    this.schema = env.schema\n    this.schemaId = env.schemaId\n    this.root = env.root || this\n    this.baseId = env.baseId ?? normalizeId(schema?.[env.schemaId || \"$id\"])\n    this.schemaPath = env.schemaPath\n    this.localRefs = env.localRefs\n    this.meta = env.meta\n    this.$async = schema?.$async\n    this.refs = {}\n  }\n}\n\n// let codeSize = 0\n// let nodeCount = 0\n\n// Compiles schema in SchemaEnv\nexport function compileSchema(this: Ajv, sch: SchemaEnv): SchemaEnv {\n  // TODO refactor - remove compilations\n  const _sch = getCompilingSchema.call(this, sch)\n  if (_sch) return _sch\n  const rootId = getFullPath(this.opts.uriResolver, sch.root.baseId) // TODO if getFullPath removed 1 tests fails\n  const {es5, lines} = this.opts.code\n  const {ownProperties} = this.opts\n  const gen = new CodeGen(this.scope, {es5, lines, ownProperties})\n  let _ValidationError\n  if (sch.$async) {\n    _ValidationError = gen.scopeValue(\"Error\", {\n      ref: ValidationError,\n      code: _`require(\"ajv/dist/runtime/validation_error\").default`,\n    })\n  }\n\n  const validateName = gen.scopeName(\"validate\")\n  sch.validateName = validateName\n\n  const schemaCxt: SchemaCxt = {\n    gen,\n    allErrors: this.opts.allErrors,\n    data: N.data,\n    parentData: N.parentData,\n    parentDataProperty: N.parentDataProperty,\n    dataNames: [N.data],\n    dataPathArr: [nil], // TODO can its length be used as dataLevel if nil is removed?\n    dataLevel: 0,\n    dataTypes: [],\n    definedProperties: new Set<string>(),\n    topSchemaRef: gen.scopeValue(\n      \"schema\",\n      this.opts.code.source === true\n        ? {ref: sch.schema, code: stringify(sch.schema)}\n        : {ref: sch.schema}\n    ),\n    validateName,\n    ValidationError: _ValidationError,\n    schema: sch.schema,\n    schemaEnv: sch,\n    rootId,\n    baseId: sch.baseId || rootId,\n    schemaPath: nil,\n    errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n    errorPath: _`\"\"`,\n    opts: this.opts,\n    self: this,\n  }\n\n  let sourceCode: string | undefined\n  try {\n    this._compilations.add(sch)\n    validateFunctionCode(schemaCxt)\n    gen.optimize(this.opts.code.optimize)\n    // gen.optimize(1)\n    const validateCode = gen.toString()\n    sourceCode = `${gen.scopeRefs(N.scope)}return ${validateCode}`\n    // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n    if (this.opts.code.process) sourceCode = this.opts.code.process(sourceCode, sch)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n    const makeValidate = new Function(`${N.self}`, `${N.scope}`, sourceCode)\n    const validate: AnyValidateFunction = makeValidate(this, this.scope.get())\n    this.scope.value(validateName, {ref: validate})\n\n    validate.errors = null\n    validate.schema = sch.schema\n    validate.schemaEnv = sch\n    if (sch.$async) (validate as AsyncValidateFunction).$async = true\n    if (this.opts.code.source === true) {\n      validate.source = {validateName, validateCode, scopeValues: gen._values}\n    }\n    if (this.opts.unevaluated) {\n      const {props, items} = schemaCxt\n      validate.evaluated = {\n        props: props instanceof Name ? undefined : props,\n        items: items instanceof Name ? undefined : items,\n        dynamicProps: props instanceof Name,\n        dynamicItems: items instanceof Name,\n      }\n      if (validate.source) validate.source.evaluated = stringify(validate.evaluated)\n    }\n    sch.validate = validate\n    return sch\n  } catch (e) {\n    delete sch.validate\n    delete sch.validateName\n    if (sourceCode) this.logger.error(\"Error compiling schema, function code:\", sourceCode)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n    throw e\n  } finally {\n    this._compilations.delete(sch)\n  }\n}\n\nexport function resolveRef(\n  this: Ajv,\n  root: SchemaEnv,\n  baseId: string,\n  ref: string\n): AnySchema | SchemaEnv | undefined {\n  ref = resolveUrl(this.opts.uriResolver, baseId, ref)\n  const schOrFunc = root.refs[ref]\n  if (schOrFunc) return schOrFunc\n\n  let _sch = resolve.call(this, root, ref)\n  if (_sch === undefined) {\n    const schema = root.localRefs?.[ref] // TODO maybe localRefs should hold SchemaEnv\n    const {schemaId} = this.opts\n    if (schema) _sch = new SchemaEnv({schema, schemaId, root, baseId})\n  }\n\n  if (_sch === undefined) return\n  return (root.refs[ref] = inlineOrCompile.call(this, _sch))\n}\n\nfunction inlineOrCompile(this: Ajv, sch: SchemaEnv): AnySchema | SchemaEnv {\n  if (inlineRef(sch.schema, this.opts.inlineRefs)) return sch.schema\n  return sch.validate ? sch : compileSchema.call(this, sch)\n}\n\n// Index of schema compilation in the currently compiled list\nexport function getCompilingSchema(this: Ajv, schEnv: SchemaEnv): SchemaEnv | void {\n  for (const sch of this._compilations) {\n    if (sameSchemaEnv(sch, schEnv)) return sch\n  }\n}\n\nfunction sameSchemaEnv(s1: SchemaEnv, s2: SchemaEnv): boolean {\n  return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId\n}\n\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(\n  this: Ajv,\n  root: SchemaEnv, // information about the root schema for the current schema\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  let sch\n  while (typeof (sch = this.refs[ref]) == \"string\") ref = sch\n  return sch || this.schemas[ref] || resolveSchema.call(this, root, ref)\n}\n\n// Resolve schema, its root and baseId\nexport function resolveSchema(\n  this: Ajv,\n  root: SchemaEnv, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  const p = this.opts.uriResolver.parse(ref)\n  const refPath = _getFullPath(this.opts.uriResolver, p)\n  let baseId = getFullPath(this.opts.uriResolver, root.baseId, undefined)\n  // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n  if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n    return getJsonPointer.call(this, p, root)\n  }\n\n  const id = normalizeId(refPath)\n  const schOrRef = this.refs[id] || this.schemas[id]\n  if (typeof schOrRef == \"string\") {\n    const sch = resolveSchema.call(this, root, schOrRef)\n    if (typeof sch?.schema !== \"object\") return\n    return getJsonPointer.call(this, p, sch)\n  }\n\n  if (typeof schOrRef?.schema !== \"object\") return\n  if (!schOrRef.validate) compileSchema.call(this, schOrRef)\n  if (id === normalizeId(ref)) {\n    const {schema} = schOrRef\n    const {schemaId} = this.opts\n    const schId = schema[schemaId]\n    if (schId) baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    return new SchemaEnv({schema, schemaId, root, baseId})\n  }\n  return getJsonPointer.call(this, p, schOrRef)\n}\n\nconst PREVENT_SCOPE_CHANGE = new Set([\n  \"properties\",\n  \"patternProperties\",\n  \"enum\",\n  \"dependencies\",\n  \"definitions\",\n])\n\nfunction getJsonPointer(\n  this: Ajv,\n  parsedRef: URI.URIComponents,\n  {baseId, schema, root}: SchemaEnv\n): SchemaEnv | undefined {\n  if (parsedRef.fragment?.[0] !== \"/\") return\n  for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n    if (typeof schema === \"boolean\") return\n    const partSchema = schema[unescapeFragment(part)]\n    if (partSchema === undefined) return\n    schema = partSchema\n    // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n    const schId = typeof schema === \"object\" && schema[this.opts.schemaId]\n    if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n      baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    }\n  }\n  let env: SchemaEnv | undefined\n  if (typeof schema != \"boolean\" && schema.$ref && !schemaHasRulesButRef(schema, this.RULES)) {\n    const $ref = resolveUrl(this.opts.uriResolver, baseId, schema.$ref)\n    env = resolveSchema.call(this, root, $ref)\n  }\n  // even though resolution failed we need to return SchemaEnv to throw exception\n  // so that compileAsync loads missing schema.\n  const {schemaId} = this.opts\n  env = env || new SchemaEnv({schema, schemaId, root, baseId})\n  if (env.schema !== env.root.schema) return env\n  return undefined\n}\n", "{\n  \"$id\": \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n  \"description\": \"Meta-schema for $data reference (JSON AnySchema extension proposal)\",\n  \"type\": \"object\",\n  \"required\": [\"$data\"],\n  \"properties\": {\n    \"$data\": {\n      \"type\": \"string\",\n      \"anyOf\": [{\"format\": \"relative-json-pointer\"}, {\"format\": \"json-pointer\"}]\n    }\n  },\n  \"additionalProperties\": false\n}\n", "import * as uri from \"uri-js\"\n\ntype URI = typeof uri & {code: string}\n;(uri as URI).code = 'require(\"ajv/dist/runtime/uri\").default'\n\nexport default uri as URI\n", "export {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  AnyValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport interface Plugin<Opts> {\n  (ajv: Ajv, options?: Opts): Ajv\n  [prop: string]: any\n}\n\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\n\nimport type {\n  Schema,\n  AnySchema,\n  AnySchemaObject,\n  SchemaObject,\n  AsyncSchema,\n  Vocabulary,\n  KeywordDefinition,\n  AddedKeywordDefinition,\n  AnyValidateFunction,\n  ValidateFunction,\n  AsyncValidateFunction,\n  ErrorObject,\n  Format,\n  AddedFormat,\n  RegExpEngine,\n  UriResolver,\n} from \"./types\"\nimport type {JSONSchemaType} from \"./types/json-schema\"\nimport type {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nimport ValidationError from \"./runtime/validation_error\"\nimport MissingRefError from \"./compile/ref_error\"\nimport {getRules, ValidationRules, Rule, RuleGroup, JSONType} from \"./compile/rules\"\nimport {SchemaEnv, compileSchema, resolveSchema} from \"./compile\"\nimport {Code, ValueScope} from \"./compile/codegen\"\nimport {normalizeId, getSchemaRefs} from \"./compile/resolve\"\nimport {getJSONTypes} from \"./compile/validate/dataType\"\nimport {eachItem} from \"./compile/util\"\nimport * as $dataRefSchema from \"./refs/data.json\"\n\nimport DefaultUriResolver from \"./runtime/uri\"\n\nconst defaultRegExp: RegExpEngine = (str, flags) => new RegExp(str, flags)\ndefaultRegExp.code = \"new RegExp\"\n\nconst META_IGNORE_OPTIONS: (keyof Options)[] = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"]\nconst EXT_SCOPE_NAMES = new Set([\n  \"validate\",\n  \"serialize\",\n  \"parse\",\n  \"wrapper\",\n  \"root\",\n  \"schema\",\n  \"keyword\",\n  \"pattern\",\n  \"formats\",\n  \"validate$data\",\n  \"func\",\n  \"obj\",\n  \"Error\",\n])\n\nexport type Options = CurrentOptions & DeprecatedOptions\n\nexport interface CurrentOptions {\n  // strict mode options (NEW)\n  strict?: boolean | \"log\"\n  strictSchema?: boolean | \"log\"\n  strictNumbers?: boolean | \"log\"\n  strictTypes?: boolean | \"log\"\n  strictTuples?: boolean | \"log\"\n  strictRequired?: boolean | \"log\"\n  allowMatchingProperties?: boolean // disables a strict mode restriction\n  allowUnionTypes?: boolean\n  validateFormats?: boolean\n  // validation and reporting options:\n  $data?: boolean\n  allErrors?: boolean\n  verbose?: boolean\n  discriminator?: boolean\n  unicodeRegExp?: boolean\n  timestamp?: \"string\" | \"date\" // JTD only\n  parseDate?: boolean // JTD only\n  allowDate?: boolean // JTD only\n  $comment?:\n    | true\n    | ((comment: string, schemaPath?: string, rootSchema?: AnySchemaObject) => unknown)\n  formats?: {[Name in string]?: Format}\n  keywords?: Vocabulary\n  schemas?: AnySchema[] | {[Key in string]?: AnySchema}\n  logger?: Logger | false\n  loadSchema?: (uri: string) => Promise<AnySchemaObject>\n  // options to modify validated data:\n  removeAdditional?: boolean | \"all\" | \"failing\"\n  useDefaults?: boolean | \"empty\"\n  coerceTypes?: boolean | \"array\"\n  // advanced options:\n  next?: boolean // NEW\n  unevaluated?: boolean // NEW\n  dynamicRef?: boolean // NEW\n  schemaId?: \"id\" | \"$id\"\n  jtd?: boolean // NEW\n  meta?: SchemaObject | boolean\n  defaultMeta?: string | AnySchemaObject\n  validateSchema?: boolean | \"log\"\n  addUsedSchema?: boolean\n  inlineRefs?: boolean | number\n  passContext?: boolean\n  loopRequired?: number\n  loopEnum?: number // NEW\n  ownProperties?: boolean\n  multipleOfPrecision?: number\n  int32range?: boolean // JTD only\n  messages?: boolean\n  code?: CodeOptions // NEW\n  uriResolver?: UriResolver\n}\n\nexport interface CodeOptions {\n  es5?: boolean\n  esm?: boolean\n  lines?: boolean\n  optimize?: boolean | number\n  formats?: Code // code to require (or construct) map of available formats - for standalone code\n  source?: boolean\n  process?: (code: string, schema?: SchemaEnv) => string\n  regExp?: RegExpEngine\n}\n\ninterface InstanceCodeOptions extends CodeOptions {\n  regExp: RegExpEngine\n  optimize: number\n}\n\ninterface DeprecatedOptions {\n  /** @deprecated */\n  ignoreKeywordsWithRef?: boolean\n  /** @deprecated */\n  jsPropertySyntax?: boolean // added instead of jsonPointers\n  /** @deprecated */\n  unicode?: boolean\n}\n\ninterface RemovedOptions {\n  format?: boolean\n  errorDataPath?: \"object\" | \"property\"\n  nullable?: boolean // \"nullable\" keyword is supported by default\n  jsonPointers?: boolean\n  extendRefs?: true | \"ignore\" | \"fail\"\n  missingRefs?: true | \"ignore\" | \"fail\"\n  processCode?: (code: string, schema?: SchemaEnv) => string\n  sourceCode?: boolean\n  strictDefaults?: boolean\n  strictKeywords?: boolean\n  uniqueItems?: boolean\n  unknownFormats?: true | string[] | \"ignore\"\n  cache?: any\n  serialize?: (schema: AnySchema) => unknown\n  ajvErrors?: boolean\n}\n\ntype OptionsInfo<T extends RemovedOptions | DeprecatedOptions> = {\n  [K in keyof T]-?: string | undefined\n}\n\nconst removedOptions: OptionsInfo<RemovedOptions> = {\n  errorDataPath: \"\",\n  format: \"`validateFormats: false` can be used instead.\",\n  nullable: '\"nullable\" keyword is supported by default.',\n  jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n  extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n  missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n  processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n  sourceCode: \"Use option `code: {source: true}`\",\n  strictDefaults: \"It is default now, see option `strict`.\",\n  strictKeywords: \"It is default now, see option `strict`.\",\n  uniqueItems: '\"uniqueItems\" keyword is always validated.',\n  unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n  cache: \"Map is used as cache, schema object as key.\",\n  serialize: \"Map is used as cache, schema object as key.\",\n  ajvErrors: \"It is default now.\",\n}\n\nconst deprecatedOptions: OptionsInfo<DeprecatedOptions> = {\n  ignoreKeywordsWithRef: \"\",\n  jsPropertySyntax: \"\",\n  unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n}\n\ntype RequiredInstanceOptions = {\n  [K in\n    | \"strictSchema\"\n    | \"strictNumbers\"\n    | \"strictTypes\"\n    | \"strictTuples\"\n    | \"strictRequired\"\n    | \"inlineRefs\"\n    | \"loopRequired\"\n    | \"loopEnum\"\n    | \"meta\"\n    | \"messages\"\n    | \"schemaId\"\n    | \"addUsedSchema\"\n    | \"validateSchema\"\n    | \"validateFormats\"\n    | \"int32range\"\n    | \"unicodeRegExp\"\n    | \"uriResolver\"]: NonNullable<Options[K]>\n} & {code: InstanceCodeOptions}\n\nexport type InstanceOptions = Options & RequiredInstanceOptions\n\nconst MAX_EXPRESSION = 200\n\n// eslint-disable-next-line complexity\nfunction requiredOptions(o: Options): RequiredInstanceOptions {\n  const s = o.strict\n  const _optz = o.code?.optimize\n  const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0\n  const regExp = o.code?.regExp ?? defaultRegExp\n  const uriResolver = o.uriResolver ?? DefaultUriResolver\n  return {\n    strictSchema: o.strictSchema ?? s ?? true,\n    strictNumbers: o.strictNumbers ?? s ?? true,\n    strictTypes: o.strictTypes ?? s ?? \"log\",\n    strictTuples: o.strictTuples ?? s ?? \"log\",\n    strictRequired: o.strictRequired ?? s ?? false,\n    code: o.code ? {...o.code, optimize, regExp} : {optimize, regExp},\n    loopRequired: o.loopRequired ?? MAX_EXPRESSION,\n    loopEnum: o.loopEnum ?? MAX_EXPRESSION,\n    meta: o.meta ?? true,\n    messages: o.messages ?? true,\n    inlineRefs: o.inlineRefs ?? true,\n    schemaId: o.schemaId ?? \"$id\",\n    addUsedSchema: o.addUsedSchema ?? true,\n    validateSchema: o.validateSchema ?? true,\n    validateFormats: o.validateFormats ?? true,\n    unicodeRegExp: o.unicodeRegExp ?? true,\n    int32range: o.int32range ?? true,\n    uriResolver: uriResolver,\n  }\n}\n\nexport interface Logger {\n  log(...args: unknown[]): unknown\n  warn(...args: unknown[]): unknown\n  error(...args: unknown[]): unknown\n}\n\nexport default class Ajv {\n  opts: InstanceOptions\n  errors?: ErrorObject[] | null // errors from the last validation\n  logger: Logger\n  // shared external scope values for compiled functions\n  readonly scope: ValueScope\n  readonly schemas: {[Key in string]?: SchemaEnv} = {}\n  readonly refs: {[Ref in string]?: SchemaEnv | string} = {}\n  readonly formats: {[Name in string]?: AddedFormat} = {}\n  readonly RULES: ValidationRules\n  readonly _compilations: Set<SchemaEnv> = new Set()\n  private readonly _loading: {[Ref in string]?: Promise<AnySchemaObject>} = {}\n  private readonly _cache: Map<AnySchema, SchemaEnv> = new Map()\n  private readonly _metaOpts: InstanceOptions\n\n  static ValidationError = ValidationError\n  static MissingRefError = MissingRefError\n\n  constructor(opts: Options = {}) {\n    opts = this.opts = {...opts, ...requiredOptions(opts)}\n    const {es5, lines} = this.opts.code\n\n    this.scope = new ValueScope({scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines})\n    this.logger = getLogger(opts.logger)\n    const formatOpt = opts.validateFormats\n    opts.validateFormats = false\n\n    this.RULES = getRules()\n    checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\")\n    checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\")\n    this._metaOpts = getMetaSchemaOptions.call(this)\n\n    if (opts.formats) addInitialFormats.call(this)\n    this._addVocabularies()\n    this._addDefaultMetaSchema()\n    if (opts.keywords) addInitialKeywords.call(this, opts.keywords)\n    if (typeof opts.meta == \"object\") this.addMetaSchema(opts.meta)\n    addInitialSchemas.call(this)\n    opts.validateFormats = formatOpt\n  }\n\n  _addVocabularies(): void {\n    this.addKeyword(\"$async\")\n  }\n\n  _addDefaultMetaSchema(): void {\n    const {$data, meta, schemaId} = this.opts\n    let _dataRefSchema: SchemaObject = $dataRefSchema\n    if (schemaId === \"id\") {\n      _dataRefSchema = {...$dataRefSchema}\n      _dataRefSchema.id = _dataRefSchema.$id\n      delete _dataRefSchema.$id\n    }\n    if (meta && $data) this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false)\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    const {meta, schemaId} = this.opts\n    return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined)\n  }\n\n  // Validate data using schema\n  // AnySchema will be compiled and cached using schema itself as a key for Map\n  validate(schema: Schema | string, data: unknown): boolean\n  validate(schemaKeyRef: AnySchema | string, data: unknown): boolean | Promise<unknown>\n  validate<T>(schema: Schema | JSONSchemaType<T> | string, data: unknown): data is T\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  validate<T>(schema: JTDSchemaType<T>, data: unknown): data is T\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  validate<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    data: unknown\n  ): data is JTDDataType<T>\n  validate<T>(schema: AsyncSchema, data: unknown | T): Promise<T>\n  validate<T>(schemaKeyRef: AnySchema | string, data: unknown): data is T | Promise<T>\n  validate<T>(\n    schemaKeyRef: AnySchema | string, // key, ref or schema object\n    data: unknown | T // to be validated\n  ): boolean | Promise<T> {\n    let v: AnyValidateFunction | undefined\n    if (typeof schemaKeyRef == \"string\") {\n      v = this.getSchema<T>(schemaKeyRef)\n      if (!v) throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`)\n    } else {\n      v = this.compile<T>(schemaKeyRef)\n    }\n\n    const valid = v(data)\n    if (!(\"$async\" in v)) this.errors = v.errors\n    return valid\n  }\n\n  // Create validation function for passed schema\n  // _meta: true if schema is a meta-schema. Used internally to compile meta schemas of user-defined keywords.\n  compile<T = unknown>(schema: Schema | JSONSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compile<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  compile<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    _meta?: boolean\n  ): ValidateFunction<JTDDataType<T>>\n  compile<T = unknown>(schema: AsyncSchema, _meta?: boolean): AsyncValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T> {\n    const sch = this._addSchema(schema, _meta)\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T>\n  }\n\n  // Creates validating function for passed schema with asynchronous loading of missing schemas.\n  // `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n  // TODO allow passing schema URI\n  // meta - optional true to compile meta-schema\n  compileAsync<T = unknown>(\n    schema: SchemaObject | JSONSchemaType<T>,\n    _meta?: boolean\n  ): Promise<ValidateFunction<T>>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): Promise<ValidateFunction<T>>\n  compileAsync<T = unknown>(schema: AsyncSchema, meta?: boolean): Promise<AsyncValidateFunction<T>>\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>>\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>> {\n    if (typeof this.opts.loadSchema != \"function\") {\n      throw new Error(\"options.loadSchema should be a function\")\n    }\n    const {loadSchema} = this.opts\n    return runCompileAsync.call(this, schema, meta)\n\n    async function runCompileAsync(\n      this: Ajv,\n      _schema: AnySchemaObject,\n      _meta?: boolean\n    ): Promise<AnyValidateFunction> {\n      await loadMetaSchema.call(this, _schema.$schema)\n      const sch = this._addSchema(_schema, _meta)\n      return sch.validate || _compileAsync.call(this, sch)\n    }\n\n    async function loadMetaSchema(this: Ajv, $ref?: string): Promise<void> {\n      if ($ref && !this.getSchema($ref)) {\n        await runCompileAsync.call(this, {$ref}, true)\n      }\n    }\n\n    async function _compileAsync(this: Ajv, sch: SchemaEnv): Promise<AnyValidateFunction> {\n      try {\n        return this._compileSchemaEnv(sch)\n      } catch (e) {\n        if (!(e instanceof MissingRefError)) throw e\n        checkLoaded.call(this, e)\n        await loadMissingSchema.call(this, e.missingSchema)\n        return _compileAsync.call(this, sch)\n      }\n    }\n\n    function checkLoaded(this: Ajv, {missingSchema: ref, missingRef}: MissingRefError): void {\n      if (this.refs[ref]) {\n        throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`)\n      }\n    }\n\n    async function loadMissingSchema(this: Ajv, ref: string): Promise<void> {\n      const _schema = await _loadSchema.call(this, ref)\n      if (!this.refs[ref]) await loadMetaSchema.call(this, _schema.$schema)\n      if (!this.refs[ref]) this.addSchema(_schema, ref, meta)\n    }\n\n    async function _loadSchema(this: Ajv, ref: string): Promise<AnySchemaObject> {\n      const p = this._loading[ref]\n      if (p) return p\n      try {\n        return await (this._loading[ref] = loadSchema(ref))\n      } finally {\n        delete this._loading[ref]\n      }\n    }\n  }\n\n  // Adds schema to the instance\n  addSchema(\n    schema: AnySchema | AnySchema[], // If array is passed, `key` will be ignored\n    key?: string, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta?: boolean, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n  ): Ajv {\n    if (Array.isArray(schema)) {\n      for (const sch of schema) this.addSchema(sch, undefined, _meta, _validateSchema)\n      return this\n    }\n    let id: string | undefined\n    if (typeof schema === \"object\") {\n      const {schemaId} = this.opts\n      id = schema[schemaId]\n      if (id !== undefined && typeof id != \"string\") {\n        throw new Error(`schema ${schemaId} must be string`)\n      }\n    }\n    key = normalizeId(key || id)\n    this._checkUnique(key)\n    this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true)\n    return this\n  }\n\n  // Add schema that will be used to validate other schemas\n  // options in META_IGNORE_OPTIONS are alway set to false\n  addMetaSchema(\n    schema: AnySchemaObject,\n    key?: string, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n  ): Ajv {\n    this.addSchema(schema, key, true, _validateSchema)\n    return this\n  }\n\n  //  Validate schema against its meta-schema\n  validateSchema(schema: AnySchema, throwOrLogError?: boolean): boolean | Promise<unknown> {\n    if (typeof schema == \"boolean\") return true\n    let $schema: string | AnySchemaObject | undefined\n    $schema = schema.$schema\n    if ($schema !== undefined && typeof $schema != \"string\") {\n      throw new Error(\"$schema must be a string\")\n    }\n    $schema = $schema || this.opts.defaultMeta || this.defaultMeta()\n    if (!$schema) {\n      this.logger.warn(\"meta-schema not available\")\n      this.errors = null\n      return true\n    }\n    const valid = this.validate($schema, schema)\n    if (!valid && throwOrLogError) {\n      const message = \"schema is invalid: \" + this.errorsText()\n      if (this.opts.validateSchema === \"log\") this.logger.error(message)\n      else throw new Error(message)\n    }\n    return valid\n  }\n\n  // Get compiled schema by `key` or `ref`.\n  // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n  getSchema<T = unknown>(keyRef: string): AnyValidateFunction<T> | undefined {\n    let sch\n    while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\") keyRef = sch\n    if (sch === undefined) {\n      const {schemaId} = this.opts\n      const root = new SchemaEnv({schema: {}, schemaId})\n      sch = resolveSchema.call(this, root, keyRef)\n      if (!sch) return\n      this.refs[keyRef] = sch\n    }\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T> | undefined\n  }\n\n  // Remove cached schema(s).\n  // If no parameter is passed all schemas but meta-schemas are removed.\n  // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n  // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n  removeSchema(schemaKeyRef?: AnySchema | string | RegExp): Ajv {\n    if (schemaKeyRef instanceof RegExp) {\n      this._removeAllSchemas(this.schemas, schemaKeyRef)\n      this._removeAllSchemas(this.refs, schemaKeyRef)\n      return this\n    }\n    switch (typeof schemaKeyRef) {\n      case \"undefined\":\n        this._removeAllSchemas(this.schemas)\n        this._removeAllSchemas(this.refs)\n        this._cache.clear()\n        return this\n      case \"string\": {\n        const sch = getSchEnv.call(this, schemaKeyRef)\n        if (typeof sch == \"object\") this._cache.delete(sch.schema)\n        delete this.schemas[schemaKeyRef]\n        delete this.refs[schemaKeyRef]\n        return this\n      }\n      case \"object\": {\n        const cacheKey = schemaKeyRef\n        this._cache.delete(cacheKey)\n        let id = schemaKeyRef[this.opts.schemaId]\n        if (id) {\n          id = normalizeId(id)\n          delete this.schemas[id]\n          delete this.refs[id]\n        }\n        return this\n      }\n      default:\n        throw new Error(\"ajv.removeSchema: invalid parameter\")\n    }\n  }\n\n  // add \"vocabulary\" - a collection of keywords\n  addVocabulary(definitions: Vocabulary): Ajv {\n    for (const def of definitions) this.addKeyword(def)\n    return this\n  }\n\n  addKeyword(\n    kwdOrDef: string | KeywordDefinition,\n    def?: KeywordDefinition // deprecated\n  ): Ajv {\n    let keyword: string | string[]\n    if (typeof kwdOrDef == \"string\") {\n      keyword = kwdOrDef\n      if (typeof def == \"object\") {\n        this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\")\n        def.keyword = keyword\n      }\n    } else if (typeof kwdOrDef == \"object\" && def === undefined) {\n      def = kwdOrDef\n      keyword = def.keyword\n      if (Array.isArray(keyword) && !keyword.length) {\n        throw new Error(\"addKeywords: keyword must be string or non-empty array\")\n      }\n    } else {\n      throw new Error(\"invalid addKeywords parameters\")\n    }\n\n    checkKeyword.call(this, keyword, def)\n    if (!def) {\n      eachItem(keyword, (kwd) => addRule.call(this, kwd))\n      return this\n    }\n    keywordMetaschema.call(this, def)\n    const definition: AddedKeywordDefinition = {\n      ...def,\n      type: getJSONTypes(def.type),\n      schemaType: getJSONTypes(def.schemaType),\n    }\n    eachItem(\n      keyword,\n      definition.type.length === 0\n        ? (k) => addRule.call(this, k, definition)\n        : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t))\n    )\n    return this\n  }\n\n  getKeyword(keyword: string): AddedKeywordDefinition | boolean {\n    const rule = this.RULES.all[keyword]\n    return typeof rule == \"object\" ? rule.definition : !!rule\n  }\n\n  // Remove keyword\n  removeKeyword(keyword: string): Ajv {\n    // TODO return type should be Ajv\n    const {RULES} = this\n    delete RULES.keywords[keyword]\n    delete RULES.all[keyword]\n    for (const group of RULES.rules) {\n      const i = group.rules.findIndex((rule) => rule.keyword === keyword)\n      if (i >= 0) group.rules.splice(i, 1)\n    }\n    return this\n  }\n\n  // Add format\n  addFormat(name: string, format: Format): Ajv {\n    if (typeof format == \"string\") format = new RegExp(format)\n    this.formats[name] = format\n    return this\n  }\n\n  errorsText(\n    errors: ErrorObject[] | null | undefined = this.errors, // optional array of validation errors\n    {separator = \", \", dataVar = \"data\"}: ErrorsTextOptions = {} // optional options with properties `separator` and `dataVar`\n  ): string {\n    if (!errors || errors.length === 0) return \"No errors\"\n    return errors\n      .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n      .reduce((text, msg) => text + separator + msg)\n  }\n\n  $dataMetaSchema(metaSchema: AnySchemaObject, keywordsJsonPointers: string[]): AnySchemaObject {\n    const rules = this.RULES.all\n    metaSchema = JSON.parse(JSON.stringify(metaSchema))\n    for (const jsonPointer of keywordsJsonPointers) {\n      const segments = jsonPointer.split(\"/\").slice(1) // first segment is an empty string\n      let keywords = metaSchema\n      for (const seg of segments) keywords = keywords[seg] as AnySchemaObject\n\n      for (const key in rules) {\n        const rule = rules[key]\n        if (typeof rule != \"object\") continue\n        const {$data} = rule.definition\n        const schema = keywords[key] as AnySchemaObject | undefined\n        if ($data && schema) keywords[key] = schemaOrData(schema)\n      }\n    }\n\n    return metaSchema\n  }\n\n  private _removeAllSchemas(schemas: {[Ref in string]?: SchemaEnv | string}, regex?: RegExp): void {\n    for (const keyRef in schemas) {\n      const sch = schemas[keyRef]\n      if (!regex || regex.test(keyRef)) {\n        if (typeof sch == \"string\") {\n          delete schemas[keyRef]\n        } else if (sch && !sch.meta) {\n          this._cache.delete(sch.schema)\n          delete schemas[keyRef]\n        }\n      }\n    }\n  }\n\n  _addSchema(\n    schema: AnySchema,\n    meta?: boolean,\n    baseId?: string,\n    validateSchema = this.opts.validateSchema,\n    addSchema = this.opts.addUsedSchema\n  ): SchemaEnv {\n    let id: string | undefined\n    const {schemaId} = this.opts\n    if (typeof schema == \"object\") {\n      id = schema[schemaId]\n    } else {\n      if (this.opts.jtd) throw new Error(\"schema must be object\")\n      else if (typeof schema != \"boolean\") throw new Error(\"schema must be object or boolean\")\n    }\n    let sch = this._cache.get(schema)\n    if (sch !== undefined) return sch\n\n    baseId = normalizeId(id || baseId)\n    const localRefs = getSchemaRefs.call(this, schema, baseId)\n    sch = new SchemaEnv({schema, schemaId, meta, baseId, localRefs})\n    this._cache.set(sch.schema, sch)\n    if (addSchema && !baseId.startsWith(\"#\")) {\n      // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n      if (baseId) this._checkUnique(baseId)\n      this.refs[baseId] = sch\n    }\n    if (validateSchema) this.validateSchema(schema, true)\n    return sch\n  }\n\n  private _checkUnique(id: string): void {\n    if (this.schemas[id] || this.refs[id]) {\n      throw new Error(`schema with key or id \"${id}\" already exists`)\n    }\n  }\n\n  private _compileSchemaEnv(sch: SchemaEnv): AnyValidateFunction {\n    if (sch.meta) this._compileMetaSchema(sch)\n    else compileSchema.call(this, sch)\n\n    /* istanbul ignore if */\n    if (!sch.validate) throw new Error(\"ajv implementation error\")\n    return sch.validate\n  }\n\n  private _compileMetaSchema(sch: SchemaEnv): void {\n    const currentOpts = this.opts\n    this.opts = this._metaOpts\n    try {\n      compileSchema.call(this, sch)\n    } finally {\n      this.opts = currentOpts\n    }\n  }\n}\n\nexport interface ErrorsTextOptions {\n  separator?: string\n  dataVar?: string\n}\n\nfunction checkOptions(\n  this: Ajv,\n  checkOpts: OptionsInfo<RemovedOptions | DeprecatedOptions>,\n  options: Options & RemovedOptions,\n  msg: string,\n  log: \"warn\" | \"error\" = \"error\"\n): void {\n  for (const key in checkOpts) {\n    const opt = key as keyof typeof checkOpts\n    if (opt in options) this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`)\n  }\n}\n\nfunction getSchEnv(this: Ajv, keyRef: string): SchemaEnv | string | undefined {\n  keyRef = normalizeId(keyRef) // TODO tests fail without this line\n  return this.schemas[keyRef] || this.refs[keyRef]\n}\n\nfunction addInitialSchemas(this: Ajv): void {\n  const optsSchemas = this.opts.schemas\n  if (!optsSchemas) return\n  if (Array.isArray(optsSchemas)) this.addSchema(optsSchemas)\n  else for (const key in optsSchemas) this.addSchema(optsSchemas[key] as AnySchema, key)\n}\n\nfunction addInitialFormats(this: Ajv): void {\n  for (const name in this.opts.formats) {\n    const format = this.opts.formats[name]\n    if (format) this.addFormat(name, format)\n  }\n}\n\nfunction addInitialKeywords(\n  this: Ajv,\n  defs: Vocabulary | {[K in string]?: KeywordDefinition}\n): void {\n  if (Array.isArray(defs)) {\n    this.addVocabulary(defs)\n    return\n  }\n  this.logger.warn(\"keywords option as map is deprecated, pass array\")\n  for (const keyword in defs) {\n    const def = defs[keyword] as KeywordDefinition\n    if (!def.keyword) def.keyword = keyword\n    this.addKeyword(def)\n  }\n}\n\nfunction getMetaSchemaOptions(this: Ajv): InstanceOptions {\n  const metaOpts = {...this.opts}\n  for (const opt of META_IGNORE_OPTIONS) delete metaOpts[opt]\n  return metaOpts\n}\n\nconst noLogs = {log() {}, warn() {}, error() {}}\n\nfunction getLogger(logger?: Partial<Logger> | false): Logger {\n  if (logger === false) return noLogs\n  if (logger === undefined) return console\n  if (logger.log && logger.warn && logger.error) return logger as Logger\n  throw new Error(\"logger must implement log, warn and error methods\")\n}\n\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i\n\nfunction checkKeyword(this: Ajv, keyword: string | string[], def?: KeywordDefinition): void {\n  const {RULES} = this\n  eachItem(keyword, (kwd) => {\n    if (RULES.keywords[kwd]) throw new Error(`Keyword ${kwd} is already defined`)\n    if (!KEYWORD_NAME.test(kwd)) throw new Error(`Keyword ${kwd} has invalid name`)\n  })\n  if (!def) return\n  if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n    throw new Error('$data keyword must have \"code\" or \"validate\" function')\n  }\n}\n\nfunction addRule(\n  this: Ajv,\n  keyword: string,\n  definition?: AddedKeywordDefinition,\n  dataType?: JSONType\n): void {\n  const post = definition?.post\n  if (dataType && post) throw new Error('keyword with \"post\" flag cannot have \"type\"')\n  const {RULES} = this\n  let ruleGroup = post ? RULES.post : RULES.rules.find(({type: t}) => t === dataType)\n  if (!ruleGroup) {\n    ruleGroup = {type: dataType, rules: []}\n    RULES.rules.push(ruleGroup)\n  }\n  RULES.keywords[keyword] = true\n  if (!definition) return\n\n  const rule: Rule = {\n    keyword,\n    definition: {\n      ...definition,\n      type: getJSONTypes(definition.type),\n      schemaType: getJSONTypes(definition.schemaType),\n    },\n  }\n  if (definition.before) addBeforeRule.call(this, ruleGroup, rule, definition.before)\n  else ruleGroup.rules.push(rule)\n  RULES.all[keyword] = rule\n  definition.implements?.forEach((kwd) => this.addKeyword(kwd))\n}\n\nfunction addBeforeRule(this: Ajv, ruleGroup: RuleGroup, rule: Rule, before: string): void {\n  const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before)\n  if (i >= 0) {\n    ruleGroup.rules.splice(i, 0, rule)\n  } else {\n    ruleGroup.rules.push(rule)\n    this.logger.warn(`rule ${before} is not defined`)\n  }\n}\n\nfunction keywordMetaschema(this: Ajv, def: KeywordDefinition): void {\n  let {metaSchema} = def\n  if (metaSchema === undefined) return\n  if (def.$data && this.opts.$data) metaSchema = schemaOrData(metaSchema)\n  def.validateSchema = this.compile(metaSchema, true)\n}\n\nconst $dataRef = {\n  $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n}\n\nfunction schemaOrData(schema: AnySchema): AnySchemaObject {\n  return {anyOf: [schema, $dataRef]}\n}\n", "import type {CodeKeywordDefinition} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"id\",\n  code() {\n    throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID')\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {callValidateCode} from \"../code\"\nimport {_, nil, stringify, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport {SchemaEnv, resolveRef} from \"../../compile\"\nimport {mergeEvaluated} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$ref\",\n  schemaType: \"string\",\n  code(cxt: KeywordCxt): void {\n    const {gen, schema: $ref, it} = cxt\n    const {baseId, schemaEnv: env, validateName, opts, self} = it\n    const {root} = env\n    if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId) return callRootRef()\n    const schOrEnv = resolveRef.call(self, root, baseId, $ref)\n    if (schOrEnv === undefined) throw new MissingRefError(it.opts.uriResolver, baseId, $ref)\n    if (schOrEnv instanceof SchemaEnv) return callValidate(schOrEnv)\n    return inlineRefSchema(schOrEnv)\n\n    function callRootRef(): void {\n      if (env === root) return callRef(cxt, validateName, env, env.$async)\n      const rootName = gen.scopeValue(\"root\", {ref: root})\n      return callRef(cxt, _`${rootName}.validate`, root, root.$async)\n    }\n\n    function callValidate(sch: SchemaEnv): void {\n      const v = getValidate(cxt, sch)\n      callRef(cxt, v, sch, sch.$async)\n    }\n\n    function inlineRefSchema(sch: AnySchema): void {\n      const schName = gen.scopeValue(\n        \"schema\",\n        opts.code.source === true ? {ref: sch, code: stringify(sch)} : {ref: sch}\n      )\n      const valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema(\n        {\n          schema: sch,\n          dataTypes: [],\n          schemaPath: nil,\n          topSchemaRef: schName,\n          errSchemaPath: $ref,\n        },\n        valid\n      )\n      cxt.mergeEvaluated(schCxt)\n      cxt.ok(valid)\n    }\n  },\n}\n\nexport function getValidate(cxt: KeywordCxt, sch: SchemaEnv): Code {\n  const {gen} = cxt\n  return sch.validate\n    ? gen.scopeValue(\"validate\", {ref: sch.validate})\n    : _`${gen.scopeValue(\"wrapper\", {ref: sch})}.validate`\n}\n\nexport function callRef(cxt: KeywordCxt, v: Code, sch?: SchemaEnv, $async?: boolean): void {\n  const {gen, it} = cxt\n  const {allErrors, schemaEnv: env, opts} = it\n  const passCxt = opts.passContext ? N.this : nil\n  if ($async) callAsyncRef()\n  else callSyncRef()\n\n  function callAsyncRef(): void {\n    if (!env.$async) throw new Error(\"async schema referenced by sync schema\")\n    const valid = gen.let(\"valid\")\n    gen.try(\n      () => {\n        gen.code(_`await ${callValidateCode(cxt, v, passCxt)}`)\n        addEvaluatedFrom(v) // TODO will not work with async, it has to be returned with the result\n        if (!allErrors) gen.assign(valid, true)\n      },\n      (e) => {\n        gen.if(_`!(${e} instanceof ${it.ValidationError as Name})`, () => gen.throw(e))\n        addErrorsFrom(e)\n        if (!allErrors) gen.assign(valid, false)\n      }\n    )\n    cxt.ok(valid)\n  }\n\n  function callSyncRef(): void {\n    cxt.result(\n      callValidateCode(cxt, v, passCxt),\n      () => addEvaluatedFrom(v),\n      () => addErrorsFrom(v)\n    )\n  }\n\n  function addErrorsFrom(source: Code): void {\n    const errs = _`${source}.errors`\n    gen.assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`) // TODO tagged\n    gen.assign(N.errors, _`${N.vErrors}.length`)\n  }\n\n  function addEvaluatedFrom(source: Code): void {\n    if (!it.opts.unevaluated) return\n    const schEvaluated = sch?.validate?.evaluated\n    // TODO refactor\n    if (it.props !== true) {\n      if (schEvaluated && !schEvaluated.dynamicProps) {\n        if (schEvaluated.props !== undefined) {\n          it.props = mergeEvaluated.props(gen, schEvaluated.props, it.props)\n        }\n      } else {\n        const props = gen.var(\"props\", _`${source}.evaluated.props`)\n        it.props = mergeEvaluated.props(gen, props, it.props, Name)\n      }\n    }\n    if (it.items !== true) {\n      if (schEvaluated && !schEvaluated.dynamicItems) {\n        if (schEvaluated.items !== undefined) {\n          it.items = mergeEvaluated.items(gen, schEvaluated.items, it.items)\n        }\n      } else {\n        const items = gen.var(\"items\", _`${source}.evaluated.items`)\n        it.items = mergeEvaluated.items(gen, items, it.items, Name)\n      }\n    }\n  }\n}\n\nexport default def\n", "import type {Vocabulary} from \"../../types\"\nimport idKeyword from \"./id\"\nimport refKeyword from \"./ref\"\n\nconst core: Vocabulary = [\n  \"$schema\",\n  \"$id\",\n  \"$defs\",\n  \"$vocabulary\",\n  {keyword: \"$comment\"},\n  \"definitions\",\n  idKeyword,\n  refKeyword,\n]\n\nexport default core\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators, Code} from \"../../compile/codegen\"\n\nconst ops = operators\n\ntype Kwd = \"maximum\" | \"minimum\" | \"exclusiveMaximum\" | \"exclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\nconst KWDs: {[K in Kwd]: {okStr: Comparison; ok: Code; fail: Code}} = {\n  maximum: {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n  minimum: {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n  exclusiveMaximum: {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n  exclusiveMinimum: {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n}\n\nexport type LimitNumberError = ErrorObject<\n  Kwd,\n  {limit: number; comparison: Comparison},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({keyword, schemaCode}) => str`must be ${KWDs[keyword as Kwd].okStr} ${schemaCode}`,\n  params: ({keyword, schemaCode}) =>\n    _`{comparison: ${KWDs[keyword as Kwd].okStr}, limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    cxt.fail$data(_`${data} ${KWDs[keyword as Kwd].fail} ${schemaCode} || isNaN(${data})`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type MultipleOfError = ErrorObject<\n  \"multipleOf\",\n  {multipleOf: number},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must be multiple of ${schemaCode}`,\n  params: ({schemaCode}) => _`{multipleOf: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"multipleOf\",\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schemaCode, it} = cxt\n    // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n    const prec = it.opts.multipleOfPrecision\n    const res = gen.let(\"res\")\n    const invalid = prec\n      ? _`Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n      : _`${res} !== parseInt(${res})`\n    cxt.fail$data(_`(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`)\n  },\n}\n\nexport default def\n", "// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nexport default function ucs2length(str: string): number {\n  const len = str.length\n  let length = 0\n  let pos = 0\n  let value: number\n  while (pos < len) {\n    length++\n    value = str.charCodeAt(pos++)\n    if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos)\n      if ((value & 0xfc00) === 0xdc00) pos++ // low surrogate\n    }\n  }\n  return length\n}\n\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default'\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport ucs2length from \"../../runtime/ucs2length\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} characters`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode, it} = cxt\n    const op = keyword === \"maxLength\" ? operators.GT : operators.LT\n    const len =\n      it.opts.unicode === false ? _`${data}.length` : _`${useFunc(cxt.gen, ucs2length)}(${data})`\n    cxt.fail$data(_`${len} ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {usePattern} from \"../code\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type PatternError = ErrorObject<\"pattern\", {pattern: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match pattern \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{pattern: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"pattern\",\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {data, $data, schema, schemaCode, it} = cxt\n    // TODO regexp should be wrapped in try/catchs\n    const u = it.opts.unicodeRegExp ? \"u\" : \"\"\n    const regExp = $data ? _`(new RegExp(${schemaCode}, ${u}))` : usePattern(cxt, schema)\n    cxt.fail$data(_`!${regExp}.test(${data})`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} properties`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxProperties\", \"minProperties\"],\n  type: \"object\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxProperties\" ? operators.GT : operators.LT\n    cxt.fail$data(_`Object.keys(${data}).length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {\n  checkReportMissingProp,\n  checkMissingProp,\n  reportMissingProp,\n  propertyInData,\n  noPropertyInData,\n} from \"../code\"\nimport {_, str, nil, not, Name, Code} from \"../../compile/codegen\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nexport type RequiredError = ErrorObject<\n  \"required\",\n  {missingProperty: string},\n  string[] | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {missingProperty}}) => str`must have required property '${missingProperty}'`,\n  params: ({params: {missingProperty}}) => _`{missingProperty: ${missingProperty}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"required\",\n  type: \"object\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, schemaCode, data, $data, it} = cxt\n    const {opts} = it\n    if (!$data && schema.length === 0) return\n    const useLoop = schema.length >= opts.loopRequired\n    if (it.allErrors) allErrorsMode()\n    else exitOnErrorMode()\n\n    if (opts.strictRequired) {\n      const props = cxt.parentSchema.properties\n      const {definedProperties} = cxt.it\n      for (const requiredKey of schema) {\n        if (props?.[requiredKey] === undefined && !definedProperties.has(requiredKey)) {\n          const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n          const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`\n          checkStrictMode(it, msg, it.opts.strictRequired)\n        }\n      }\n    }\n\n    function allErrorsMode(): void {\n      if (useLoop || $data) {\n        cxt.block$data(nil, loopAllRequired)\n      } else {\n        for (const prop of schema) {\n          checkReportMissingProp(cxt, prop)\n        }\n      }\n    }\n\n    function exitOnErrorMode(): void {\n      const missing = gen.let(\"missing\")\n      if (useLoop || $data) {\n        const valid = gen.let(\"valid\", true)\n        cxt.block$data(valid, () => loopUntilMissing(missing, valid))\n        cxt.ok(valid)\n      } else {\n        gen.if(checkMissingProp(cxt, schema, missing))\n        reportMissingProp(cxt, missing)\n        gen.else()\n      }\n    }\n\n    function loopAllRequired(): void {\n      gen.forOf(\"prop\", schemaCode as Code, (prop) => {\n        cxt.setParams({missingProperty: prop})\n        gen.if(noPropertyInData(gen, data, prop, opts.ownProperties), () => cxt.error())\n      })\n    }\n\n    function loopUntilMissing(missing: Name, valid: Name): void {\n      cxt.setParams({missingProperty: missing})\n      gen.forOf(\n        missing,\n        schemaCode as Code,\n        () => {\n          gen.assign(valid, propertyInData(gen, data, missing, opts.ownProperties))\n          gen.if(not(valid), () => {\n            cxt.error()\n            gen.break()\n          })\n        },\n        nil\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} items`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxItems\", \"minItems\"],\n  type: \"array\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxItems\" ? operators.GT : operators.LT\n    cxt.fail$data(_`${data}.length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "// https://github.com/ajv-validator/ajv/issues/889\nimport * as equal from \"fast-deep-equal\"\n\ntype Equal = typeof equal & {code: string}\n;(equal as Equal).code = 'require(\"ajv/dist/runtime/equal\").default'\n\nexport default equal as Equal\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkDataTypes, getSchemaTypes, DataType} from \"../../compile/validate/dataType\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type UniqueItemsError = ErrorObject<\n  \"uniqueItems\",\n  {i: number; j: number},\n  boolean | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {i, j}}) =>\n    str`must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n  params: ({params: {i, j}}) => _`{i: ${i}, j: ${j}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"uniqueItems\",\n  type: \"array\",\n  schemaType: \"boolean\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, parentSchema, schemaCode, it} = cxt\n    if (!$data && !schema) return\n    const valid = gen.let(\"valid\")\n    const itemTypes = parentSchema.items ? getSchemaTypes(parentSchema.items) : []\n    cxt.block$data(valid, validateUniqueItems, _`${schemaCode} === false`)\n    cxt.ok(valid)\n\n    function validateUniqueItems(): void {\n      const i = gen.let(\"i\", _`${data}.length`)\n      const j = gen.let(\"j\")\n      cxt.setParams({i, j})\n      gen.assign(valid, true)\n      gen.if(_`${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j))\n    }\n\n    function canOptimize(): boolean {\n      return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\")\n    }\n\n    function loopN(i: Name, j: Name): void {\n      const item = gen.name(\"item\")\n      const wrongType = checkDataTypes(itemTypes, item, it.opts.strictNumbers, DataType.Wrong)\n      const indices = gen.const(\"indices\", _`{}`)\n      gen.for(_`;${i}--;`, () => {\n        gen.let(item, _`${data}[${i}]`)\n        gen.if(wrongType, _`continue`)\n        if (itemTypes.length > 1) gen.if(_`typeof ${item} == \"string\"`, _`${item} += \"_\"`)\n        gen\n          .if(_`typeof ${indices}[${item}] == \"number\"`, () => {\n            gen.assign(j, _`${indices}[${item}]`)\n            cxt.error()\n            gen.assign(valid, false).break()\n          })\n          .code(_`${indices}[${item}] = ${i}`)\n      })\n    }\n\n    function loopN2(i: Name, j: Name): void {\n      const eql = useFunc(gen, equal)\n      const outer = gen.name(\"outer\")\n      gen.label(outer).for(_`;${i}--;`, () =>\n        gen.for(_`${j} = ${i}; ${j}--;`, () =>\n          gen.if(_`${eql}(${data}[${i}], ${data}[${j}])`, () => {\n            cxt.error()\n            gen.assign(valid, false).break(outer)\n          })\n        )\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type ConstError = ErrorObject<\"const\", {allowedValue: any}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to constant\",\n  params: ({schemaCode}) => _`{allowedValue: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"const\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schemaCode, schema} = cxt\n    if ($data || (schema && typeof schema == \"object\")) {\n      cxt.fail$data(_`!${useFunc(gen, equal)}(${data}, ${schemaCode})`)\n    } else {\n      cxt.fail(_`${schema} !== ${data}`)\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, or, Name, Code} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type EnumError = ErrorObject<\"enum\", {allowedValues: any[]}, any[] | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to one of the allowed values\",\n  params: ({schemaCode}) => _`{allowedValues: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"enum\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    if (!$data && schema.length === 0) throw new Error(\"enum must have non-empty array\")\n    const useLoop = schema.length >= it.opts.loopEnum\n    let eql: Name | undefined\n    const getEql = (): Name => (eql ??= useFunc(gen, equal))\n\n    let valid: Code\n    if (useLoop || $data) {\n      valid = gen.let(\"valid\")\n      cxt.block$data(valid, loopEnum)\n    } else {\n      /* istanbul ignore if */\n      if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n      const vSchema = gen.const(\"vSchema\", schemaCode)\n      valid = or(...schema.map((_x: unknown, i: number) => equalCode(vSchema, i)))\n    }\n    cxt.pass(valid)\n\n    function loopEnum(): void {\n      gen.assign(valid, false)\n      gen.forOf(\"v\", schemaCode as Code, (v) =>\n        gen.if(_`${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break())\n      )\n    }\n\n    function equalCode(vSchema: Name, i: number): Code {\n      const sch = schema[i]\n      return typeof sch === \"object\" && sch !== null\n        ? _`${getEql()}(${data}, ${vSchema}[${i}])`\n        : _`${data} === ${sch}`\n    }\n  },\n}\n\nexport default def\n", "import type {ErrorObject, Vocabulary} from \"../../types\"\nimport limitNumber, {LimitNumberError} from \"./limitNumber\"\nimport multipleOf, {MultipleOfError} from \"./multipleOf\"\nimport limitLength from \"./limitLength\"\nimport pattern, {PatternError} from \"./pattern\"\nimport limitProperties from \"./limitProperties\"\nimport required, {RequiredError} from \"./required\"\nimport limitItems from \"./limitItems\"\nimport uniqueItems, {UniqueItemsError} from \"./uniqueItems\"\nimport constKeyword, {ConstError} from \"./const\"\nimport enumKeyword, {EnumError} from \"./enum\"\n\nconst validation: Vocabulary = [\n  // number\n  limitNumber,\n  multipleOf,\n  // string\n  limitLength,\n  pattern,\n  // object\n  limitProperties,\n  required,\n  // array\n  limitItems,\n  uniqueItems,\n  // any\n  {keyword: \"type\", schemaType: [\"string\", \"array\"]},\n  {keyword: \"nullable\", schemaType: \"boolean\"},\n  constKeyword,\n  enumKeyword,\n]\n\nexport default validation\n\ntype LimitError = ErrorObject<\n  \"maxItems\" | \"minItems\" | \"minProperties\" | \"maxProperties\" | \"minLength\" | \"maxLength\",\n  {limit: number},\n  number | {$data: string}\n>\n\nexport type ValidationKeywordError =\n  | LimitError\n  | LimitNumberError\n  | MultipleOfError\n  | PatternError\n  | RequiredError\n  | UniqueItemsError\n  | ConstError\n  | EnumError\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type AdditionalItemsError = ErrorObject<\"additionalItems\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"additionalItems\" as const,\n  type: \"array\",\n  schemaType: [\"boolean\", \"object\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {parentSchema, it} = cxt\n    const {items} = parentSchema\n    if (!Array.isArray(items)) {\n      checkStrictMode(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas')\n      return\n    }\n    validateAdditionalItems(cxt, items)\n  },\n}\n\nexport function validateAdditionalItems(cxt: KeywordCxt, items: AnySchema[]): void {\n  const {gen, schema, data, keyword, it} = cxt\n  it.items = true\n  const len = gen.const(\"len\", _`${data}.length`)\n  if (schema === false) {\n    cxt.setParams({len: items.length})\n    cxt.pass(_`${len} <= ${items.length}`)\n  } else if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n    const valid = gen.var(\"valid\", _`${len} <= ${items.length}`) // TODO var\n    gen.if(not(valid), () => validateItems(valid))\n    cxt.ok(valid)\n  }\n\n  function validateItems(valid: Name): void {\n    gen.forRange(\"i\", items.length, len, (i) => {\n      cxt.subschema({keyword, dataProp: i, dataPropType: Type.Num}, valid)\n      if (!it.allErrors) gen.if(not(valid), () => gen.break())\n    })\n  }\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema, AnySchemaObject} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {alwaysValidSchema, mergeEvaluated, checkStrictMode} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"array\", \"boolean\"],\n  before: \"uniqueItems\",\n  code(cxt: KeywordCxt) {\n    const {schema, it} = cxt\n    if (Array.isArray(schema)) return validateTuple(cxt, \"additionalItems\", schema)\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    cxt.ok(validateArray(cxt))\n  },\n}\n\nexport function validateTuple(\n  cxt: KeywordCxt,\n  extraItems: string,\n  schArr: AnySchema[] = cxt.schema\n): void {\n  const {gen, parentSchema, data, keyword, it} = cxt\n  checkStrictTuple(parentSchema)\n  if (it.opts.unevaluated && schArr.length && it.items !== true) {\n    it.items = mergeEvaluated.items(gen, schArr.length, it.items)\n  }\n  const valid = gen.name(\"valid\")\n  const len = gen.const(\"len\", _`${data}.length`)\n  schArr.forEach((sch: AnySchema, i: number) => {\n    if (alwaysValidSchema(it, sch)) return\n    gen.if(_`${len} > ${i}`, () =>\n      cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          dataProp: i,\n        },\n        valid\n      )\n    )\n    cxt.ok(valid)\n  })\n\n  function checkStrictTuple(sch: AnySchemaObject): void {\n    const {opts, errSchemaPath} = it\n    const l = schArr.length\n    const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false)\n    if (opts.strictTuples && !fullTuple) {\n      const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`\n      checkStrictMode(it, msg, opts.strictTuples)\n    }\n  }\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport {validateTuple} from \"./items\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"prefixItems\",\n  type: \"array\",\n  schemaType: [\"array\"],\n  before: \"uniqueItems\",\n  code: (cxt) => validateTuple(cxt, \"items\"),\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\nimport {validateAdditionalItems} from \"./additionalItems\"\n\nexport type ItemsError = ErrorObject<\"items\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {schema, parentSchema, it} = cxt\n    const {prefixItems} = parentSchema\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    if (prefixItems) validateAdditionalItems(cxt, prefixItems)\n    else cxt.ok(validateArray(cxt))\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type ContainsError = ErrorObject<\n  \"contains\",\n  {minContains: number; maxContains?: number},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {min, max}}) =>\n    max === undefined\n      ? str`must contain at least ${min} valid item(s)`\n      : str`must contain at least ${min} and no more than ${max} valid item(s)`,\n  params: ({params: {min, max}}) =>\n    max === undefined ? _`{minContains: ${min}}` : _`{minContains: ${min}, maxContains: ${max}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"contains\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    let min: number\n    let max: number | undefined\n    const {minContains, maxContains} = parentSchema\n    if (it.opts.next) {\n      min = minContains === undefined ? 1 : minContains\n      max = maxContains\n    } else {\n      min = 1\n    }\n    const len = gen.const(\"len\", _`${data}.length`)\n    cxt.setParams({min, max})\n    if (max === undefined && min === 0) {\n      checkStrictMode(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`)\n      return\n    }\n    if (max !== undefined && min > max) {\n      checkStrictMode(it, `\"minContains\" > \"maxContains\" is always invalid`)\n      cxt.fail()\n      return\n    }\n    if (alwaysValidSchema(it, schema)) {\n      let cond = _`${len} >= ${min}`\n      if (max !== undefined) cond = _`${cond} && ${len} <= ${max}`\n      cxt.pass(cond)\n      return\n    }\n\n    it.items = true\n    const valid = gen.name(\"valid\")\n    if (max === undefined && min === 1) {\n      validateItems(valid, () => gen.if(valid, () => gen.break()))\n    } else if (min === 0) {\n      gen.let(valid, true)\n      if (max !== undefined) gen.if(_`${data}.length > 0`, validateItemsWithCount)\n    } else {\n      gen.let(valid, false)\n      validateItemsWithCount()\n    }\n    cxt.result(valid, () => cxt.reset())\n\n    function validateItemsWithCount(): void {\n      const schValid = gen.name(\"_valid\")\n      const count = gen.let(\"count\", 0)\n      validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)))\n    }\n\n    function validateItems(_valid: Name, block: () => void): void {\n      gen.forRange(\"i\", 0, len, (i) => {\n        cxt.subschema(\n          {\n            keyword: \"contains\",\n            dataProp: i,\n            dataPropType: Type.Num,\n            compositeRule: true,\n          },\n          _valid\n        )\n        block()\n      })\n    }\n\n    function checkLimits(count: Name): void {\n      gen.code(_`${count}++`)\n      if (max === undefined) {\n        gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true).break())\n      } else {\n        gen.if(_`${count} > ${max}`, () => gen.assign(valid, false).break())\n        if (min === 1) gen.assign(valid, true)\n        else gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true))\n      }\n    }\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  SchemaMap,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {checkReportMissingProp, checkMissingProp, reportMissingProp, propertyInData} from \"../code\"\n\nexport type PropertyDependencies = {[K in string]?: string[]}\n\nexport interface DependenciesErrorParams {\n  property: string\n  missingProperty: string\n  depsCount: number\n  deps: string // TODO change to string[]\n}\n\ntype SchemaDependencies = SchemaMap\n\nexport type DependenciesError = ErrorObject<\n  \"dependencies\",\n  DependenciesErrorParams,\n  {[K in string]?: string[] | AnySchema}\n>\n\nexport const error: KeywordErrorDefinition = {\n  message: ({params: {property, depsCount, deps}}) => {\n    const property_ies = depsCount === 1 ? \"property\" : \"properties\"\n    return str`must have ${property_ies} ${deps} when property ${property} is present`\n  },\n  params: ({params: {property, depsCount, deps, missingProperty}}) =>\n    _`{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"dependencies\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const [propDeps, schDeps] = splitDependencies(cxt)\n    validatePropertyDeps(cxt, propDeps)\n    validateSchemaDeps(cxt, schDeps)\n  },\n}\n\nfunction splitDependencies({schema}: KeywordCxt): [PropertyDependencies, SchemaDependencies] {\n  const propertyDeps: PropertyDependencies = {}\n  const schemaDeps: SchemaDependencies = {}\n  for (const key in schema) {\n    if (key === \"__proto__\") continue\n    const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps\n    deps[key] = schema[key]\n  }\n  return [propertyDeps, schemaDeps]\n}\n\nexport function validatePropertyDeps(\n  cxt: KeywordCxt,\n  propertyDeps: {[K in string]?: string[]} = cxt.schema\n): void {\n  const {gen, data, it} = cxt\n  if (Object.keys(propertyDeps).length === 0) return\n  const missing = gen.let(\"missing\")\n  for (const prop in propertyDeps) {\n    const deps = propertyDeps[prop] as string[]\n    if (deps.length === 0) continue\n    const hasProperty = propertyInData(gen, data, prop, it.opts.ownProperties)\n    cxt.setParams({\n      property: prop,\n      depsCount: deps.length,\n      deps: deps.join(\", \"),\n    })\n    if (it.allErrors) {\n      gen.if(hasProperty, () => {\n        for (const depProp of deps) {\n          checkReportMissingProp(cxt, depProp)\n        }\n      })\n    } else {\n      gen.if(_`${hasProperty} && (${checkMissingProp(cxt, deps, missing)})`)\n      reportMissingProp(cxt, missing)\n      gen.else()\n    }\n  }\n}\n\nexport function validateSchemaDeps(cxt: KeywordCxt, schemaDeps: SchemaMap = cxt.schema): void {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  for (const prop in schemaDeps) {\n    if (alwaysValidSchema(it, schemaDeps[prop] as AnySchema)) continue\n    gen.if(\n      propertyInData(gen, data, prop, it.opts.ownProperties),\n      () => {\n        const schCxt = cxt.subschema({keyword, schemaProp: prop}, valid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n      },\n      () => gen.var(valid, true) // TODO var\n    )\n    cxt.ok(valid)\n  }\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, not} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type PropertyNamesError = ErrorObject<\"propertyNames\", {propertyName: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: \"property name must be valid\",\n  params: ({params}) => _`{propertyName: ${params.propertyName}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"propertyNames\",\n  type: \"object\",\n  schemaType: [\"object\", \"boolean\"],\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, it} = cxt\n    if (alwaysValidSchema(it, schema)) return\n    const valid = gen.name(\"valid\")\n\n    gen.forIn(\"key\", data, (key) => {\n      cxt.setParams({propertyName: key})\n      cxt.subschema(\n        {\n          keyword: \"propertyNames\",\n          data: key,\n          dataTypes: [\"string\"],\n          propertyName: key,\n          compositeRule: true,\n        },\n        valid\n      )\n      gen.if(not(valid), () => {\n        cxt.error(true)\n        if (!it.allErrors) gen.break()\n      })\n    })\n\n    cxt.ok(valid)\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  AddedKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport {allSchemaProperties, usePattern, isOwnProperty} from \"../code\"\nimport {_, nil, or, not, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport type {SubschemaArgs} from \"../../compile/validate/subschema\"\nimport {alwaysValidSchema, schemaRefOrVal, Type} from \"../../compile/util\"\n\nexport type AdditionalPropertiesError = ErrorObject<\n  \"additionalProperties\",\n  {additionalProperty: string},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must NOT have additional properties\",\n  params: ({params}) => _`{additionalProperty: ${params.additionalProperty}}`,\n}\n\nconst def: CodeKeywordDefinition & AddedKeywordDefinition = {\n  keyword: \"additionalProperties\",\n  type: [\"object\"],\n  schemaType: [\"boolean\", \"object\"],\n  allowUndefined: true,\n  trackErrors: true,\n  error,\n  code(cxt) {\n    const {gen, schema, parentSchema, data, errsCount, it} = cxt\n    /* istanbul ignore if */\n    if (!errsCount) throw new Error(\"ajv implementation error\")\n    const {allErrors, opts} = it\n    it.props = true\n    if (opts.removeAdditional !== \"all\" && alwaysValidSchema(it, schema)) return\n    const props = allSchemaProperties(parentSchema.properties)\n    const patProps = allSchemaProperties(parentSchema.patternProperties)\n    checkAdditionalProperties()\n    cxt.ok(_`${errsCount} === ${N.errors}`)\n\n    function checkAdditionalProperties(): void {\n      gen.forIn(\"key\", data, (key: Name) => {\n        if (!props.length && !patProps.length) additionalPropertyCode(key)\n        else gen.if(isAdditional(key), () => additionalPropertyCode(key))\n      })\n    }\n\n    function isAdditional(key: Name): Code {\n      let definedProp: Code\n      if (props.length > 8) {\n        // TODO maybe an option instead of hard-coded 8?\n        const propsSchema = schemaRefOrVal(it, parentSchema.properties, \"properties\")\n        definedProp = isOwnProperty(gen, propsSchema as Code, key)\n      } else if (props.length) {\n        definedProp = or(...props.map((p) => _`${key} === ${p}`))\n      } else {\n        definedProp = nil\n      }\n      if (patProps.length) {\n        definedProp = or(definedProp, ...patProps.map((p) => _`${usePattern(cxt, p)}.test(${key})`))\n      }\n      return not(definedProp)\n    }\n\n    function deleteAdditional(key: Name): void {\n      gen.code(_`delete ${data}[${key}]`)\n    }\n\n    function additionalPropertyCode(key: Name): void {\n      if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n        deleteAdditional(key)\n        return\n      }\n\n      if (schema === false) {\n        cxt.setParams({additionalProperty: key})\n        cxt.error()\n        if (!allErrors) gen.break()\n        return\n      }\n\n      if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n        const valid = gen.name(\"valid\")\n        if (opts.removeAdditional === \"failing\") {\n          applyAdditionalSchema(key, valid, false)\n          gen.if(not(valid), () => {\n            cxt.reset()\n            deleteAdditional(key)\n          })\n        } else {\n          applyAdditionalSchema(key, valid)\n          if (!allErrors) gen.if(not(valid), () => gen.break())\n        }\n      }\n    }\n\n    function applyAdditionalSchema(key: Name, valid: Name, errors?: false): void {\n      const subschema: SubschemaArgs = {\n        keyword: \"additionalProperties\",\n        dataProp: key,\n        dataPropType: Type.Str,\n      }\n      if (errors === false) {\n        Object.assign(subschema, {\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        })\n      }\n      cxt.subschema(subschema, valid)\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport {KeywordCxt} from \"../../compile/validate\"\nimport {propertyInData, allSchemaProperties} from \"../code\"\nimport {alwaysValidSchema, toHash, mergeEvaluated} from \"../../compile/util\"\nimport apDef from \"./additionalProperties\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"properties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n      apDef.code(new KeywordCxt(it, apDef, \"additionalProperties\"))\n    }\n    const allProps = allSchemaProperties(schema)\n    for (const prop of allProps) {\n      it.definedProperties.add(prop)\n    }\n    if (it.opts.unevaluated && allProps.length && it.props !== true) {\n      it.props = mergeEvaluated.props(gen, toHash(allProps), it.props)\n    }\n    const properties = allProps.filter((p) => !alwaysValidSchema(it, schema[p]))\n    if (properties.length === 0) return\n    const valid = gen.name(\"valid\")\n\n    for (const prop of properties) {\n      if (hasDefault(prop)) {\n        applyPropertySchema(prop)\n      } else {\n        gen.if(propertyInData(gen, data, prop, it.opts.ownProperties))\n        applyPropertySchema(prop)\n        if (!it.allErrors) gen.else().var(valid, true)\n        gen.endIf()\n      }\n      cxt.it.definedProperties.add(prop)\n      cxt.ok(valid)\n    }\n\n    function hasDefault(prop: string): boolean | undefined {\n      return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined\n    }\n\n    function applyPropertySchema(prop: string): void {\n      cxt.subschema(\n        {\n          keyword: \"properties\",\n          schemaProp: prop,\n          dataProp: prop,\n        },\n        valid\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {allSchemaProperties, usePattern} from \"../code\"\nimport {_, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\nimport {evaluatedPropsToName, Type} from \"../../compile/util\"\nimport {AnySchema} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"patternProperties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, parentSchema, it} = cxt\n    const {opts} = it\n    const patterns = allSchemaProperties(schema)\n    const alwaysValidPatterns = patterns.filter((p) =>\n      alwaysValidSchema(it, schema[p] as AnySchema)\n    )\n\n    if (\n      patterns.length === 0 ||\n      (alwaysValidPatterns.length === patterns.length &&\n        (!it.opts.unevaluated || it.props === true))\n    ) {\n      return\n    }\n\n    const checkProperties =\n      opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties\n    const valid = gen.name(\"valid\")\n    if (it.props !== true && !(it.props instanceof Name)) {\n      it.props = evaluatedPropsToName(gen, it.props)\n    }\n    const {props} = it\n    validatePatternProperties()\n\n    function validatePatternProperties(): void {\n      for (const pat of patterns) {\n        if (checkProperties) checkMatchingProperties(pat)\n        if (it.allErrors) {\n          validateProperties(pat)\n        } else {\n          gen.var(valid, true) // TODO var\n          validateProperties(pat)\n          gen.if(valid)\n        }\n      }\n    }\n\n    function checkMatchingProperties(pat: string): void {\n      for (const prop in checkProperties) {\n        if (new RegExp(pat).test(prop)) {\n          checkStrictMode(\n            it,\n            `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`\n          )\n        }\n      }\n    }\n\n    function validateProperties(pat: string): void {\n      gen.forIn(\"key\", data, (key) => {\n        gen.if(_`${usePattern(cxt, pat)}.test(${key})`, () => {\n          const alwaysValid = alwaysValidPatterns.includes(pat)\n          if (!alwaysValid) {\n            cxt.subschema(\n              {\n                keyword: \"patternProperties\",\n                schemaProp: pat,\n                dataProp: key,\n                dataPropType: Type.Str,\n              },\n              valid\n            )\n          }\n\n          if (it.opts.unevaluated && props !== true) {\n            gen.assign(_`${props}[${key}]`, true)\n          } else if (!alwaysValid && !it.allErrors) {\n            // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n            // or if all properties were evaluated (props === true)\n            gen.if(not(valid), () => gen.break())\n          }\n        })\n      })\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type NotKeywordError = ErrorNoParams<\"not\", AnySchema>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"not\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    if (alwaysValidSchema(it, schema)) {\n      cxt.fail()\n      return\n    }\n\n    const valid = gen.name(\"valid\")\n    cxt.subschema(\n      {\n        keyword: \"not\",\n        compositeRule: true,\n        createErrors: false,\n        allErrors: false,\n      },\n      valid\n    )\n\n    cxt.failResult(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error()\n    )\n  },\n  error: {message: \"must NOT be valid\"},\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport {validateUnion} from \"../code\"\n\nexport type AnyOfError = ErrorNoParams<\"anyOf\", AnySchema[]>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"anyOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  code: validateUnion,\n  error: {message: \"must match a schema in anyOf\"},\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {SchemaCxt} from \"../../compile\"\n\nexport type OneOfError = ErrorObject<\n  \"oneOf\",\n  {passingSchemas: [number, number] | null},\n  AnySchema[]\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must match exactly one schema in oneOf\",\n  params: ({params}) => _`{passingSchemas: ${params.passing}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"oneOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    if (it.opts.discriminator && parentSchema.discriminator) return\n    const schArr: AnySchema[] = schema\n    const valid = gen.let(\"valid\", false)\n    const passing = gen.let(\"passing\", null)\n    const schValid = gen.name(\"_valid\")\n    cxt.setParams({passing})\n    // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n\n    gen.block(validateOneOf)\n\n    cxt.result(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error(true)\n    )\n\n    function validateOneOf(): void {\n      schArr.forEach((sch: AnySchema, i: number) => {\n        let schCxt: SchemaCxt | undefined\n        if (alwaysValidSchema(it, sch)) {\n          gen.var(schValid, true)\n        } else {\n          schCxt = cxt.subschema(\n            {\n              keyword: \"oneOf\",\n              schemaProp: i,\n              compositeRule: true,\n            },\n            schValid\n          )\n        }\n\n        if (i > 0) {\n          gen\n            .if(_`${schValid} && ${valid}`)\n            .assign(valid, false)\n            .assign(passing, _`[${passing}, ${i}]`)\n            .else()\n        }\n\n        gen.if(schValid, () => {\n          gen.assign(valid, true)\n          gen.assign(passing, i)\n          if (schCxt) cxt.mergeEvaluated(schCxt, Name)\n        })\n      })\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"allOf\",\n  schemaType: \"array\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    const valid = gen.name(\"valid\")\n    schema.forEach((sch: AnySchema, i: number) => {\n      if (alwaysValidSchema(it, sch)) return\n      const schCxt = cxt.subschema({keyword: \"allOf\", schemaProp: i}, valid)\n      cxt.ok(valid)\n      cxt.mergeEvaluated(schCxt)\n    })\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"../../compile\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\n\nexport type IfKeywordError = ErrorObject<\"if\", {failingKeyword: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params}) => str`must match \"${params.ifClause}\" schema`,\n  params: ({params}) => _`{failingKeyword: ${params.ifClause}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"if\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, parentSchema, it} = cxt\n    if (parentSchema.then === undefined && parentSchema.else === undefined) {\n      checkStrictMode(it, '\"if\" without \"then\" and \"else\" is ignored')\n    }\n    const hasThen = hasSchema(it, \"then\")\n    const hasElse = hasSchema(it, \"else\")\n    if (!hasThen && !hasElse) return\n\n    const valid = gen.let(\"valid\", true)\n    const schValid = gen.name(\"_valid\")\n    validateIf()\n    cxt.reset()\n\n    if (hasThen && hasElse) {\n      const ifClause = gen.let(\"ifClause\")\n      cxt.setParams({ifClause})\n      gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause))\n    } else if (hasThen) {\n      gen.if(schValid, validateClause(\"then\"))\n    } else {\n      gen.if(not(schValid), validateClause(\"else\"))\n    }\n\n    cxt.pass(valid, () => cxt.error(true))\n\n    function validateIf(): void {\n      const schCxt = cxt.subschema(\n        {\n          keyword: \"if\",\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        },\n        schValid\n      )\n      cxt.mergeEvaluated(schCxt)\n    }\n\n    function validateClause(keyword: string, ifClause?: Name): () => void {\n      return () => {\n        const schCxt = cxt.subschema({keyword}, schValid)\n        gen.assign(valid, schValid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n        if (ifClause) gen.assign(ifClause, _`${keyword}`)\n        else cxt.setParams({ifClause: keyword})\n      }\n    }\n  },\n}\n\nfunction hasSchema(it: SchemaObjCxt, keyword: string): boolean {\n  const schema = it.schema[keyword]\n  return schema !== undefined && !alwaysValidSchema(it, schema)\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"then\", \"else\"],\n  schemaType: [\"object\", \"boolean\"],\n  code({keyword, parentSchema, it}: KeywordCxt) {\n    if (parentSchema.if === undefined) checkStrictMode(it, `\"${keyword}\" without \"if\" is ignored`)\n  },\n}\n\nexport default def\n", "import type {ErrorNoParams, Vocabulary} from \"../../types\"\nimport additionalItems, {AdditionalItemsError} from \"./additionalItems\"\nimport prefixItems from \"./prefixItems\"\nimport items from \"./items\"\nimport items2020, {ItemsError} from \"./items2020\"\nimport contains, {ContainsError} from \"./contains\"\nimport dependencies, {DependenciesError} from \"./dependencies\"\nimport propertyNames, {PropertyNamesError} from \"./propertyNames\"\nimport additionalProperties, {AdditionalPropertiesError} from \"./additionalProperties\"\nimport properties from \"./properties\"\nimport patternProperties from \"./patternProperties\"\nimport notKeyword, {NotKeywordError} from \"./not\"\nimport anyOf, {AnyOfError} from \"./anyOf\"\nimport oneOf, {OneOfError} from \"./oneOf\"\nimport allOf from \"./allOf\"\nimport ifKeyword, {IfKeywordError} from \"./if\"\nimport thenElse from \"./thenElse\"\n\nexport default function getApplicator(draft2020 = false): Vocabulary {\n  const applicator = [\n    // any\n    notKeyword,\n    anyOf,\n    oneOf,\n    allOf,\n    ifKeyword,\n    thenElse,\n    // object\n    propertyNames,\n    additionalProperties,\n    dependencies,\n    properties,\n    patternProperties,\n  ]\n  // array\n  if (draft2020) applicator.push(prefixItems, items2020)\n  else applicator.push(additionalItems, items)\n  applicator.push(contains)\n  return applicator\n}\n\nexport type ApplicatorKeywordError =\n  | ErrorNoParams<\"false schema\">\n  | AdditionalItemsError\n  | ItemsError\n  | ContainsError\n  | AdditionalPropertiesError\n  | DependenciesError\n  | IfKeywordError\n  | AnyOfError\n  | OneOfError\n  | NotKeywordError\n  | PropertyNamesError\n", "import type {\n  AddedFormat,\n  FormatValidator,\n  AsyncFormatValidator,\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, nil, or, Code, getProperty, regexpCode} from \"../../compile/codegen\"\n\ntype FormatValidate =\n  | FormatValidator<string>\n  | FormatValidator<number>\n  | AsyncFormatValidator<string>\n  | AsyncFormatValidator<number>\n  | RegExp\n  | string\n  | true\n\nexport type FormatError = ErrorObject<\"format\", {format: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match format \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{format: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"format\",\n  type: [\"number\", \"string\"],\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt, ruleType?: string) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    const {opts, errSchemaPath, schemaEnv, self} = it\n    if (!opts.validateFormats) return\n\n    if ($data) validate$DataFormat()\n    else validateFormat()\n\n    function validate$DataFormat(): void {\n      const fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats,\n      })\n      const fDef = gen.const(\"fDef\", _`${fmts}[${schemaCode}]`)\n      const fType = gen.let(\"fType\")\n      const format = gen.let(\"format\")\n      // TODO simplify\n      gen.if(\n        _`typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`,\n        () => gen.assign(fType, _`${fDef}.type || \"string\"`).assign(format, _`${fDef}.validate`),\n        () => gen.assign(fType, _`\"string\"`).assign(format, fDef)\n      )\n      cxt.fail$data(or(unknownFmt(), invalidFmt()))\n\n      function unknownFmt(): Code {\n        if (opts.strictSchema === false) return nil\n        return _`${schemaCode} && !${format}`\n      }\n\n      function invalidFmt(): Code {\n        const callFormat = schemaEnv.$async\n          ? _`(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n          : _`${format}(${data})`\n        const validData = _`(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`\n        return _`${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`\n      }\n    }\n\n    function validateFormat(): void {\n      const formatDef: AddedFormat | undefined = self.formats[schema]\n      if (!formatDef) {\n        unknownFormat()\n        return\n      }\n      if (formatDef === true) return\n      const [fmtType, format, fmtRef] = getFormat(formatDef)\n      if (fmtType === ruleType) cxt.pass(validCondition())\n\n      function unknownFormat(): void {\n        if (opts.strictSchema === false) {\n          self.logger.warn(unknownMsg())\n          return\n        }\n        throw new Error(unknownMsg())\n\n        function unknownMsg(): string {\n          return `unknown format \"${schema as string}\" ignored in schema at path \"${errSchemaPath}\"`\n        }\n      }\n\n      function getFormat(fmtDef: AddedFormat): [string, FormatValidate, Code] {\n        const code =\n          fmtDef instanceof RegExp\n            ? regexpCode(fmtDef)\n            : opts.code.formats\n            ? _`${opts.code.formats}${getProperty(schema)}`\n            : undefined\n        const fmt = gen.scopeValue(\"formats\", {key: schema, ref: fmtDef, code})\n        if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n          return [fmtDef.type || \"string\", fmtDef.validate, _`${fmt}.validate`]\n        }\n\n        return [\"string\", fmtDef, fmt]\n      }\n\n      function validCondition(): Code {\n        if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n          if (!schemaEnv.$async) throw new Error(\"async format in sync schema\")\n          return _`await ${fmtRef}(${data})`\n        }\n        return typeof format == \"function\" ? _`${fmtRef}(${data})` : _`${fmtRef}.test(${data})`\n      }\n    }\n  },\n}\n\nexport default def\n", "import type {Vocabulary} from \"../../types\"\nimport formatKeyword from \"./format\"\n\nconst format: Vocabulary = [formatKeyword]\n\nexport default format\n", "import type {Vocabulary} from \"../types\"\n\nexport const metadataVocabulary: Vocabulary = [\n  \"title\",\n  \"description\",\n  \"default\",\n  \"deprecated\",\n  \"readOnly\",\n  \"writeOnly\",\n  \"examples\",\n]\n\nexport const contentVocabulary: Vocabulary = [\n  \"contentMediaType\",\n  \"contentEncoding\",\n  \"contentSchema\",\n]\n", "import type {Vocabulary} from \"../types\"\nimport coreVocabulary from \"./core\"\nimport validationVocabulary from \"./validation\"\nimport getApplicatorVocabulary from \"./applicator\"\nimport formatVocabulary from \"./format\"\nimport {metadataVocabulary, contentVocabulary} from \"./metadata\"\n\nconst draft7Vocabularies: Vocabulary[] = [\n  coreVocabulary,\n  validationVocabulary,\n  getApplicatorVocabulary(),\n  formatVocabulary,\n  metadataVocabulary,\n  contentVocabulary,\n]\n\nexport default draft7Vocabularies\n", "import type {ErrorObject} from \"../../types\"\n\nexport enum DiscrError {\n  Tag = \"tag\",\n  Mapping = \"mapping\",\n}\n\nexport type DiscrErrorObj<E extends DiscrError> = ErrorObject<\n  \"discriminator\",\n  {error: E; tag: string; tagValue: unknown},\n  string\n>\n", "import type {CodeKeywordDefinition, AnySchemaObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, getProperty, Name} from \"../../compile/codegen\"\nimport {DiscrError, DiscrErrorObj} from \"../discriminator/types\"\nimport {resolveRef, SchemaEnv} from \"../../compile\"\nimport {schemaHasRulesButRef} from \"../../compile/util\"\n\nexport type DiscriminatorError = DiscrErrorObj<DiscrError.Tag> | DiscrErrorObj<DiscrError.Mapping>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {discrError, tagName}}) =>\n    discrError === DiscrError.Tag\n      ? `tag \"${tagName}\" must be string`\n      : `value of tag \"${tagName}\" must be in oneOf`,\n  params: ({params: {discrError, tag, tagName}}) =>\n    _`{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"discriminator\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schema, parentSchema, it} = cxt\n    const {oneOf} = parentSchema\n    if (!it.opts.discriminator) {\n      throw new Error(\"discriminator: requires discriminator option\")\n    }\n    const tagName = schema.propertyName\n    if (typeof tagName != \"string\") throw new Error(\"discriminator: requires propertyName\")\n    if (schema.mapping) throw new Error(\"discriminator: mapping is not supported\")\n    if (!oneOf) throw new Error(\"discriminator: requires oneOf keyword\")\n    const valid = gen.let(\"valid\", false)\n    const tag = gen.const(\"tag\", _`${data}${getProperty(tagName)}`)\n    gen.if(\n      _`typeof ${tag} == \"string\"`,\n      () => validateMapping(),\n      () => cxt.error(false, {discrError: DiscrError.Tag, tag, tagName})\n    )\n    cxt.ok(valid)\n\n    function validateMapping(): void {\n      const mapping = getMapping()\n      gen.if(false)\n      for (const tagValue in mapping) {\n        gen.elseIf(_`${tag} === ${tagValue}`)\n        gen.assign(valid, applyTagSchema(mapping[tagValue]))\n      }\n      gen.else()\n      cxt.error(false, {discrError: DiscrError.Mapping, tag, tagName})\n      gen.endIf()\n    }\n\n    function applyTagSchema(schemaProp?: number): Name {\n      const _valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema({keyword: \"oneOf\", schemaProp}, _valid)\n      cxt.mergeEvaluated(schCxt, Name)\n      return _valid\n    }\n\n    function getMapping(): {[T in string]?: number} {\n      const oneOfMapping: {[T in string]?: number} = {}\n      const topRequired = hasRequired(parentSchema)\n      let tagRequired = true\n      for (let i = 0; i < oneOf.length; i++) {\n        let sch = oneOf[i]\n        if (sch?.$ref && !schemaHasRulesButRef(sch, it.self.RULES)) {\n          sch = resolveRef.call(it.self, it.schemaEnv.root, it.baseId, sch?.$ref)\n          if (sch instanceof SchemaEnv) sch = sch.schema\n        }\n        const propSch = sch?.properties?.[tagName]\n        if (typeof propSch != \"object\") {\n          throw new Error(\n            `discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`\n          )\n        }\n        tagRequired = tagRequired && (topRequired || hasRequired(sch))\n        addMappings(propSch, i)\n      }\n      if (!tagRequired) throw new Error(`discriminator: \"${tagName}\" must be required`)\n      return oneOfMapping\n\n      function hasRequired({required}: AnySchemaObject): boolean {\n        return Array.isArray(required) && required.includes(tagName)\n      }\n\n      function addMappings(sch: AnySchemaObject, i: number): void {\n        if (sch.const) {\n          addMapping(sch.const, i)\n        } else if (sch.enum) {\n          for (const tagValue of sch.enum) {\n            addMapping(tagValue, i)\n          }\n        } else {\n          throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`)\n        }\n      }\n\n      function addMapping(tagValue: unknown, i: number): void {\n        if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n          throw new Error(`discriminator: \"${tagName}\" values must be unique strings`)\n        }\n        oneOfMapping[tagValue] = i\n      }\n    }\n  },\n}\n\nexport default def\n", "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Core schema meta-schema\",\n  \"definitions\": {\n    \"schemaArray\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"items\": {\"$ref\": \"#\"}\n    },\n    \"nonNegativeInteger\": {\n      \"type\": \"integer\",\n      \"minimum\": 0\n    },\n    \"nonNegativeIntegerDefault0\": {\n      \"allOf\": [{\"$ref\": \"#/definitions/nonNegativeInteger\"}, {\"default\": 0}]\n    },\n    \"simpleTypes\": {\n      \"enum\": [\"array\", \"boolean\", \"integer\", \"null\", \"number\", \"object\", \"string\"]\n    },\n    \"stringArray\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"uniqueItems\": true,\n      \"default\": []\n    }\n  },\n  \"type\": [\"object\", \"boolean\"],\n  \"properties\": {\n    \"$id\": {\n      \"type\": \"string\",\n      \"format\": \"uri-reference\"\n    },\n    \"$schema\": {\n      \"type\": \"string\",\n      \"format\": \"uri\"\n    },\n    \"$ref\": {\n      \"type\": \"string\",\n      \"format\": \"uri-reference\"\n    },\n    \"$comment\": {\n      \"type\": \"string\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"type\": \"string\"\n    },\n    \"default\": true,\n    \"readOnly\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"examples\": {\n      \"type\": \"array\",\n      \"items\": true\n    },\n    \"multipleOf\": {\n      \"type\": \"number\",\n      \"exclusiveMinimum\": 0\n    },\n    \"maximum\": {\n      \"type\": \"number\"\n    },\n    \"exclusiveMaximum\": {\n      \"type\": \"number\"\n    },\n    \"minimum\": {\n      \"type\": \"number\"\n    },\n    \"exclusiveMinimum\": {\n      \"type\": \"number\"\n    },\n    \"maxLength\": {\"$ref\": \"#/definitions/nonNegativeInteger\"},\n    \"minLength\": {\"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"},\n    \"pattern\": {\n      \"type\": \"string\",\n      \"format\": \"regex\"\n    },\n    \"additionalItems\": {\"$ref\": \"#\"},\n    \"items\": {\n      \"anyOf\": [{\"$ref\": \"#\"}, {\"$ref\": \"#/definitions/schemaArray\"}],\n      \"default\": true\n    },\n    \"maxItems\": {\"$ref\": \"#/definitions/nonNegativeInteger\"},\n    \"minItems\": {\"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"},\n    \"uniqueItems\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"contains\": {\"$ref\": \"#\"},\n    \"maxProperties\": {\"$ref\": \"#/definitions/nonNegativeInteger\"},\n    \"minProperties\": {\"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"},\n    \"required\": {\"$ref\": \"#/definitions/stringArray\"},\n    \"additionalProperties\": {\"$ref\": \"#\"},\n    \"definitions\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"default\": {}\n    },\n    \"properties\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"default\": {}\n    },\n    \"patternProperties\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"propertyNames\": {\"format\": \"regex\"},\n      \"default\": {}\n    },\n    \"dependencies\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"anyOf\": [{\"$ref\": \"#\"}, {\"$ref\": \"#/definitions/stringArray\"}]\n      }\n    },\n    \"propertyNames\": {\"$ref\": \"#\"},\n    \"const\": true,\n    \"enum\": {\n      \"type\": \"array\",\n      \"items\": true,\n      \"minItems\": 1,\n      \"uniqueItems\": true\n    },\n    \"type\": {\n      \"anyOf\": [\n        {\"$ref\": \"#/definitions/simpleTypes\"},\n        {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"#/definitions/simpleTypes\"},\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        }\n      ]\n    },\n    \"format\": {\"type\": \"string\"},\n    \"contentMediaType\": {\"type\": \"string\"},\n    \"contentEncoding\": {\"type\": \"string\"},\n    \"if\": {\"$ref\": \"#\"},\n    \"then\": {\"$ref\": \"#\"},\n    \"else\": {\"$ref\": \"#\"},\n    \"allOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"anyOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"oneOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"not\": {\"$ref\": \"#\"}\n  },\n  \"default\": true\n}\n", "import type {AnySchemaObject} from \"./types\"\nimport AjvCore from \"./core\"\nimport draft7Vocabularies from \"./vocabularies/draft7\"\nimport discriminator from \"./vocabularies/discriminator\"\nimport * as draft7MetaSchema from \"./refs/json-schema-draft-07.json\"\n\nconst META_SUPPORT_DATA = [\"/properties\"]\n\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\"\n\nclass Ajv extends AjvCore {\n  _addVocabularies(): void {\n    super._addVocabularies()\n    draft7Vocabularies.forEach((v) => this.addVocabulary(v))\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    if (!this.opts.meta) return\n    const metaSchema = this.opts.$data\n      ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n      : draft7MetaSchema\n    this.addMetaSchema(metaSchema, META_SCHEMA_ID, false)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  SchemaValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {Plugin, Options, CodeOptions, InstanceOptions, Logger, ErrorsTextOptions} from \"./core\"\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\nexport {default as ValidationError} from \"./runtime/validation_error\"\nexport {default as MissingRefError} from \"./compile/ref_error\"\n", "{\n  \"title\": \"Root\",\n  \"type\": \"object\",\n  \"description\": \"Root Element\",\n  \"definitions\": {\n    \"base64String\": {\n      \"type\": \"string\",\n      \"pattern\": \"^[A-Za-z0-9/+=]*$\"\n    },\n    \"tagString\": {\n      \"type\": \"string\",\n      \"pattern\": \"^[a-z][a-z0-9]*(:.+)?$\"\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"metadata\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"selectors\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"required\": [\n        \"selectors\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"tags\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"$ref\": \"#/definitions/tagString\"\n      }\n    },\n    \"enums\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"ids\": {\n          \"$ref\": \"#/definitions/base64String\"\n        },\n        \"wordLike\": {\n          \"$ref\": \"#/definitions/base64String\"\n        },\n        \"notWordLike\": {\n          \"$ref\": \"#/definitions/base64String\"\n        },\n        \"scopeBits\": {\n          \"$ref\": \"#/definitions/base64String\"\n        },\n        \"graftTypes\": {\n          \"$ref\": \"#/definitions/base64String\"\n        }\n      },\n      \"required\": [\n        \"ids\",\n        \"wordLike\",\n        \"notWordLike\",\n        \"scopeBits\",\n        \"graftTypes\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"docs\": {\n      \"type\": \"object\",\n      \"propertyNames\": {\n        \"type\": \"string\"\n      },\n      \"additionalProperties\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"sequences\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"type\": {\n                  \"type\": \"string\"\n                },\n                \"blocks\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"bs\": {\n                        \"type\": \"string\"\n                      },\n                      \"bg\": {\n                        \"type\": \"string\"\n                      },\n                      \"c\": {\n                        \"type\": \"string\"\n                      },\n                      \"is\": {\n                        \"type\": \"string\"\n                      },\n                      \"os\": {\n                        \"type\": \"string\"\n                      },\n                      \"nt\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"required\": [\n                      \"bs\",\n                      \"bg\",\n                      \"c\",\n                      \"is\",\n                      \"os\",\n                      \"nt\"\n                    ],\n                    \"additionalProperties\": false\n                  }\n                },\n                \"tags\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\",\n                    \"$ref\": \"#/definitions/tagString\"\n                  }\n                },\n                \"chapters\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"chapterVerses\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"tokensPresent\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\n                \"blocks\",\n                \"tags\"\n              ],\n              \"additionalProperties\": false\n            }\n          },\n          \"headers\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            }\n          },\n          \"mainId\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"$ref\": \"#/definitions/tagString\"\n            }\n          }\n        },\n        \"required\": [\n          \"sequences\",\n          \"headers\",\n          \"mainId\",\n          \"tags\"\n        ],\n        \"additionalProperties\": false\n      }\n    },\n    \"additionalProperties\": false\n  },\n  \"required\": [\n    \"id\",\n    \"enums\",\n    \"docs\",\n    \"tags\"\n  ],\n  \"additionalProperties\": false\n}\n", "{\n  \"$comment\": \"version 0.1.0\",\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/structure/0_2_1/document_structure.json\",\n  \"title\": \"Document (Structure)\",\n  \"description\": \"A document, typically corresponding to a single USFM or USX book\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"schema\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"structure\": {\n          \"description\": \"The basic 'shape' of the content\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"flat\",\n            \"nested\"\n          ]\n        },\n        \"structure_version\": {\n          \"description\": \"the semantic version of the structure schema\",\n          \"type\": \"string\"\n        },\n        \"constraints\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"perf\",\n                  \"sofria\"\n                ]\n              },\n              \"version\": {\n                \"description\": \"the semantic version of the constraint schema\",\n                \"type\": \"string\"\n              }\n            },\n            \"additionalProperties\": false,\n            \"required\": [\n              \"name\",\n              \"version\"\n            ]\n          }\n        }\n      },\n      \"required\": [\n        \"structure\",\n        \"structure_version\",\n        \"constraints\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"metadata\": {\n      \"description\": \"Metadata describing the document and the translation it belongs to\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"translation\": {\n          \"type\": \"object\",\n          \"description\": \"Metadata concerning the translation to which the document belongs\",\n          \"properties\": {\n            \"tags\": {\n              \"description\": \"Tags attached to the translation\",\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"properties\": {\n              \"type\": \"object\",\n              \"description\": \"Key/value properties attached to the translation\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              }\n            },\n            \"selectors\": {\n              \"type\": \"object\",\n              \"description\": \"Proskomma selectors for the translation that, together, provide a primary key in the translation store\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          },\n          \"required\": [\"id\"]\n        },\n        \"document\": {\n          \"type\": \"object\",\n          \"description\": \"Metadata concerning the document itself\",\n          \"properties\": {\n            \"tags\": {\n              \"type\": \"array\",\n              \"description\": \"Tags attached to the document\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"properties\": {\n              \"type\": \"object\",\n              \"description\": \"Key/value properties attached to the document\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              }\n            },\n            \"chapters\": {\n              \"type\": \"string\",\n              \"pattern\": \"^[1-9][0-9]*(-[1-9][0-9]*)?$\"\n            }\n          },\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"sequences\": {\n      \"type\": \"object\",\n      \"propertyNames\": {\n        \"pattern\": \"^\\\\S+$\"\n      },\n      \"additionalProperties\": {\n        \"$ref\": \"./sequence_structure.json\"\n      }\n    },\n    \"sequence\": {\n      \"$ref\": \"./sequence_structure.json\"\n    },\n    \"main_sequence_id\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"schema\",\n    \"metadata\"\n  ],\n  \"additionalProperties\": false,\n  \"if\": {\n    \"properties\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"structure\": {\n            \"enum\": [\n              \"flat\"\n            ]\n          }\n        }\n      }\n    }\n  },\n  \"then\": {\n    \"required\": [\n      \"sequences\",\n      \"main_sequence_id\"\n    ],\n    \"not\": {\n      \"required\": [\n        \"sequence\"\n      ]\n    }\n  },\n  \"else\": {\n    \"required\": [\n      \"sequence\"\n    ],\n    \"allOf\": [\n      {\n        \"not\": {\n          \"required\": [\n            \"sequences\"\n          ]\n        }\n      },\n      {\n        \"not\": {\n          \"required\": [\n            \"main_sequence_id\"\n          ]\n        }\n      }\n    ]\n  }\n}\n\n\n\n\n", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/structure/0_2_1/sequence_structure.json\",\n  \"title\": \"Sequence (Structure)\",\n  \"description\": \"A sequence contains a 'flow' of one or more blocks\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"description\": \"The type of sequence\",\n      \"type\": \"string\"\n    },\n    \"preview_text\": {\n      \"description\": \"An optional field to provide some kind of printable label\",\n      \"type\": \"string\"\n    },\n    \"blocks\": {\n      \"type\": \"array\",\n      \"description\": \"The blocks that, together, represent the 'flow' of the sequence\",\n      \"items\": {\n        \"$ref\": \"./block_structure.json\"\n      }\n    }\n  },\n  \"required\": [\n    \"type\"\n  ],\n  \"additionalProperties\": false\n}\n\n\n", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/structure/0_2_1/block_structure.json\",\n  \"title\": \"Block (Structure)\",\n  \"description\": \"A block, which represents either a paragraph of text or a graft\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"description\": \"The type of block\",\n      \"enum\": [\n        \"paragraph\",\n        \"graft\"\n      ]\n    },\n    \"subtype\": {\n      \"description\": \"A type-specific subtype\",\n      \"type\": \"string\"\n    },\n    \"target\": {\n      \"description\": \"The id of the sequence containing graft content\",\n      \"type\": \"string\"\n    },\n    \"sequence\": {\n      \"description\": \"The sequence containing graft content\",\n      \"$ref\": \"./sequence_structure.json\"\n    },\n    \"preview_text\": {\n      \"description\": \"An optional field to provide some kind of printable label for a graft\",\n      \"type\": \"string\"\n    },\n    \"new\": {\n      \"description\": \"If present and true, is interpreted as a request for the server to create a new graft\",\n      \"type\": \"boolean\"\n    },\n    \"atts\": {\n      \"type\": \"object\",\n      \"description\": \"An object containing USFM attributes or subtype-specific additional information (such as the number of a verse or chapter). The value may be a boolean, a string or an array of strings\",\n      \"additionalProperties\": {\n        \"oneOf\": [\n          {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"type\": \"boolean\"\n          }\n        ]\n      }\n    },\n    \"content\": {\n      \"type\": \"array\",\n      \"description\": \"The content of the block\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"./contentElement_structure.json\"\n          }\n        ]\n      }\n    }\n  },\n  \"required\": [\n    \"type\"\n  ],\n  \"additionalProperties\": false,\n  \"if\": {\n    \"properties\": {\n      \"type\": {\n        \"enum\": [\n          \"paragraph\"\n        ]\n      }\n    }\n  },\n  \"then\": {\n    \"required\": [\n      \"content\"\n    ],\n    \"allOf\": [\n      {\n        \"not\": {\n          \"required\": [\n            \"new\"\n          ]\n        }\n      },\n      {\n        \"not\": {\n          \"required\": [\n            \"preview_text\"\n          ]\n        }\n      },\n      {\n        \"not\": {\n          \"required\": [\n            \"target\"\n          ]\n        }\n      }\n    ]\n  },\n  \"else\": {\n    \"if\": {\n      \"required\": [\n        \"new\"\n      ],\n      \"properties\": {\n        \"new\": {\n          \"enum\": [\n            true\n          ]\n        }\n      }\n    },\n    \"then\": {\n      \"allOf\": [\n        {\n          \"oneOf\": [\n            {\n              \"required\": [\n                \"subtype\"\n              ]\n            },\n            {\n              \"required\": [\n                \"sequence\"\n              ]\n            }\n          ]\n        },\n        {\n          \"not\": {\n            \"required\": [\n              \"target\"\n            ]\n          }\n        },\n        {\n          \"not\": {\n            \"required\": [\n              \"preview_text\"\n            ]\n          }\n        },\n        {\n          \"not\": {\n            \"required\": [\n              \"content\"\n            ]\n          }\n        }\n      ]\n    },\n    \"else\": {\n      \"oneOf\": [\n        {\n          \"required\": [\n            \"target\"\n          ]\n        },\n        {\n          \"required\": [\n            \"sequence\"\n          ]\n        }\n      ]\n    }\n  }\n}\n", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/structure/0_2_1/contentElement_structure.json\",\n  \"title\": \"Content Element (Structure)\",\n  \"description\": \"A content element, ie some form of (possibly nested) markup\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"description\": \"The type of element\",\n      \"enum\": [\n        \"mark\",\n        \"wrapper\",\n        \"start_milestone\",\n        \"end_milestone\",\n        \"graft\"\n      ]\n    },\n    \"subtype\": {\n      \"description\": \"The subtype of the element, which is context-dependent\",\n      \"type\": \"string\"\n    },\n    \"atts\": {\n      \"type\": \"object\",\n      \"description\": \"An object containing USFM attributes or subtype-specific additional information (such as the number of a verse or chapter). The value may be a boolean, a string or an array of strings\",\n      \"additionalProperties\": {\n        \"oneOf\": [\n          {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"type\": \"boolean\"\n          }\n        ]\n      }\n    },\n    \"target\": {\n      \"type\": \"string\",\n      \"description\": \"The id of the sequence containing graft content\"\n    },\n    \"sequence\": {\n      \"description\": \"The sequence containing graft content\",\n      \"$ref\": \"./sequence_structure.json\"\n    },\n    \"preview_text\": {\n      \"description\": \"An optional field to provide some kind of printable label for a graft\",\n      \"type\": \"string\"\n    },\n    \"new\": {\n      \"type\": \"boolean\",\n      \"description\": \"If present and true, is interpreted as a request for the server to create a new graft\"\n    },\n    \"content\": {\n      \"type\": \"array\",\n      \"description\": \"Nested content within the content element\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"./contentElement_structure.json\"\n          }\n        ]\n      }\n    },\n    \"meta_content\": {\n      \"type\": \"array\",\n      \"description\": \"Non-Scripture content related to the content element, such as checking data or related resources\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"./contentElement_structure.json\"\n          }\n        ]\n      }\n    }\n  },\n  \"required\": [\n    \"type\"\n  ],\n  \"additionalProperties\": false\n}\n", "{\n  \"$comment\": \"version 0.2.0\",\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/constraint/0_2_1/perf_document_constraint.json\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"sequences\": {\n      \"type\": \"object\",\n      \"propertyNames\": {\n        \"pattern\": \"^\\\\S+$\"\n      },\n      \"additionalProperties\": {\n        \"$ref\": \"./perf_sequence_constraint.json\"\n      }\n    }\n  }\n}\n\n\n\n\n", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/constraint/0_2_1/perf_sequence_constraint.json\",\n\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"main\",\n        \"introduction\",\n        \"intro_title\",\n        \"intro_end_title\",\n        \"title\",\n        \"end_title\",\n        \"heading\",\n        \"remark\",\n        \"sidebar\",\n        \"table\",\n        \"tree\",\n        \"kv\",\n        \"footnote\",\n        \"note_caller\",\n        \"xref\",\n        \"pub_number\",\n        \"alt_number\",\n        \"esb_cat\",\n        \"fig\",\n        \"temp\"\n      ]\n    },\n    \"blocks\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"./perf_block_constraint.json\"\n      }\n    }\n  }\n\n}\n\n\n", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/constraint/0_2_1/perf_block_constraint.json\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"paragraph\",\n        \"graft\"\n      ]\n    },\n    \"content\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"./perf_contentElement_constraint.json\"\n          }\n        ]\n      }\n    },\n    \"meta_content\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"./perf_contentElement_constraint.json\"\n          }\n        ]\n      }\n    }\n  },\n  \"if\": {\n    \"properties\": {\n      \"type\": {\n        \"enum\": [\"graft\"]\n      }\n    }\n  },\n  \"then\": {\n    \"properties\": {\n      \"subtype\": {\n        \"enum\": [\n          \"introduction\",\n          \"intro_title\",\n          \"Intro_end_title\",\n          \"title\",\n          \"end_title\",\n          \"heading\",\n          \"remark\",\n          \"sidebar\",\n          \"table\",\n          \"tree\",\n          \"kv\"\n        ]\n      }\n    }\n  },\n  \"else\": {\n    \"properties\": {\n      \"subtype\": {\n        \"type\": \"string\",\n        \"pattern\": \"^usfm:\"\n      }\n    }\n  }\n}\n\n\n", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/constraint/0_2_1/perf_contentElement_constraint.json\",\n  \"type\": \"object\",\n  \"allOf\": [\n    {\n      \"properties\": {\n        \"content\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"./perf_contentElement_constraint.json\"\n              }\n            ]\n          }\n        },\n        \"meta_content\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"./perf_contentElement_constraint.json\"\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"graft\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"enum\": [\n              \"footnote\",\n              \"xref\",\n              \"note_caller\"\n            ]\n          }\n        },\n        \"allOf\": [\n          {\n            \"not\": {\n              \"required\": [\n                \"content\"\n              ]\n            }\n          },\n          {\n            \"not\": {\n              \"required\": [\n                \"meta_content\"\n              ]\n            }\n          }\n        ],\n        \"if\": {\n          \"required\": [\n            \"new\"\n          ],\n          \"properties\": {\n            \"new\": {\n              \"enum\": [\n                true\n              ]\n            }\n          }\n        },\n        \"then\": {\n          \"not\": {\n            \"anyOf\": [\n              {\n                \"required\": [\n                  \"target\"\n                ]\n              },\n              {\n                \"required\": [\n                  \"preview_text\"\n                ]\n              }\n            ]\n          }\n        },\n        \"else\": {\n          \"required\": [\n            \"target\"\n          ]\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"mark\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"type\": \"string\",\n            \"oneOf\": [\n              {\n                \"enum\": [\n                  \"chapter\",\n                  \"verses\"\n                ]\n              },\n              {\n                \"pattern\": \"^[A-Za-z][A-Za-z0-9]*:\\\\S+$\"\n              },\n              {\n                \"pattern\": \"^x-\\\\S+$\"\n              }\n            ]\n          }\n        },\n        \"if\": {\n          \"properties\": {\n            \"subtype\": {\n              \"enum\": [\n                \"chapter\",\n                \"verses\"\n              ]\n            }\n          }\n        },\n        \"then\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"atts\"\n          ],\n          \"properties\": {\n            \"atts\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"number\"\n              ],\n              \"maxProperties\": 1\n            }\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"wrapper\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"type\": \"string\",\n            \"oneOf\": [\n              {\n                \"enum\": [\n                  \"meta_content\"\n                ]\n              },\n              {\n                \"pattern\": \"^[A-Za-z][A-Za-z0-9]*:\\\\S+$\"\n              },\n              {\n                \"pattern\": \"^x-\\\\S+$\"\n              }\n            ]\n          }\n        },\n        \"if\": {\n          \"properties\": {\n            \"subtype\": {\n              \"enum\": [\"meta_content\"]\n            }\n          }\n        },\n        \"then\": {\n          \"not\": {\n            \"required\": [\"atts\"]\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"start_milestone\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"type\": \"string\",\n            \"oneOf\": [\n              {\n                \"pattern\": \"^[A-Za-z][A-Za-z0-9]*:\\\\S+$\"\n              },\n              {\n                \"pattern\": \"^x-\\\\S+$\"\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"end_milestone\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"type\": \"string\",\n            \"oneOf\": [\n              {\n                \"pattern\": \"^[A-Za-z][A-Za-z0-9]*:\\\\S+$\"\n              },\n              {\n                \"pattern\": \"^x-\\\\S+$\"\n              }\n            ]\n          }\n        },\n        \"not\": {\n          \"required\": [\n            \"atts\"\n          ]\n        }\n      }\n    }\n  ]\n}\n", "{\n  \"$comment\": \"version 0.2.0\",\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/constraint/0_2_1/sofria_document_constraint.json\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"sequences\": {\n      \"type\": \"object\",\n      \"propertyNames\": {\n        \"pattern\": \"^\\\\S+$\"\n      },\n      \"additionalProperties\": {\n        \"$ref\": \"./sofria_sequence_constraint.json\"\n      }\n    }\n  }\n}\n\n\n\n\n", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/constraint/0_2_1/sofria_sequence_constraint.json\",\n\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"main\",\n        \"introduction\",\n        \"intro_title\",\n        \"intro_end_title\",\n        \"title\",\n        \"end_title\",\n        \"heading\",\n        \"remark\",\n        \"sidebar\",\n        \"table\",\n        \"tree\",\n        \"kv\",\n        \"footnote\",\n        \"note_caller\",\n        \"xref\",\n        \"pub_number\",\n        \"alt_number\",\n        \"esb_cat\",\n        \"fig\",\n        \"temp\"\n      ]\n    },\n    \"blocks\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"./sofria_block_constraint.json\"\n      }\n    }\n  }\n\n}\n\n\n", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/constraint/0_2_1/sofria_block_constraint.json\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"paragraph\",\n        \"graft\"\n      ]\n    },\n    \"content\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"./sofria_contentElement_constraint.json\"\n          }\n        ]\n      }\n    },\n    \"meta_content\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"./sofria_contentElement_constraint.json\"\n          }\n        ]\n      }\n    }\n  },\n  \"if\": {\n    \"properties\": {\n      \"type\": {\n        \"enum\": [\"graft\"]\n      }\n    }\n  },\n  \"then\": {\n    \"properties\": {\n      \"subtype\": {\n        \"enum\": [\n          \"introduction\",\n          \"intro_title\",\n          \"Intro_end_title\",\n          \"title\",\n          \"end_title\",\n          \"heading\",\n          \"remark\",\n          \"sidebar\",\n          \"table\",\n          \"tree\",\n          \"kv\"\n        ]\n      }\n    }\n  },\n  \"else\": {\n    \"properties\": {\n      \"subtype\": {\n        \"type\": \"string\",\n        \"pattern\": \"^usfm:\"\n      }\n    }\n  }\n}\n\n\n", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/constraint/0_2_1/sofria_contentElement_constraint.json\",\n  \"type\": \"object\",\n  \"allOf\": [\n    {\n      \"properties\": {\n        \"content\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"./sofria_contentElement_constraint.json\"\n              }\n            ]\n          }\n        },\n        \"meta_content\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"./sofria_contentElement_constraint.json\"\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"graft\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"enum\": [\n              \"footnote\",\n              \"xref\",\n              \"note_caller\"\n            ]\n          }\n        },\n        \"allOf\": [\n          {\n            \"not\": {\n              \"required\": [\n                \"content\"\n              ]\n            }\n          },\n          {\n            \"not\": {\n              \"required\": [\n                \"meta_content\"\n              ]\n            }\n          }\n        ],\n        \"if\": {\n          \"required\": [\n            \"new\"\n          ],\n          \"properties\": {\n            \"new\": {\n              \"enum\": [\n                true\n              ]\n            }\n          }\n        },\n        \"then\": {\n          \"not\": {\n            \"anyOf\": [\n              {\n                \"required\": [\n                  \"block\"\n                ]\n              },\n              {\n                \"required\": [\n                  \"preview_text\"\n                ]\n              }\n            ]\n          }\n        },\n        \"else\": {\n          \"required\": [\n            \"block\"\n          ]\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"mark\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"type\": \"string\",\n            \"oneOf\": [\n              {\n                \"enum\": [\n                  \"chapter_label\",\n                  \"verses_label\"\n                ]\n              },\n              {\n                \"pattern\": \"^[A-Za-z][A-Za-z0-9]*:\\\\S+$\"\n              },\n              {\n                \"pattern\": \"^x-\\\\S+$\"\n              }\n            ]\n          }\n        },\n        \"if\": {\n          \"properties\": {\n            \"subtype\": {\n              \"enum\": [\n                \"chapter\",\n                \"verses\"\n              ]\n            }\n          }\n        },\n        \"then\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"atts\"\n          ],\n          \"properties\": {\n            \"atts\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"number\"\n              ],\n              \"maxProperties\": 1\n            }\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"wrapper\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"type\": \"string\",\n            \"oneOf\": [\n              {\n                \"enum\": [\n                  \"meta_content\",\n                  \"chapter\",\n                  \"verses\"\n                ]\n              },\n              {\n                \"pattern\": \"^[A-Za-z][A-Za-z0-9]*:\\\\S+$\"\n              },\n              {\n                \"pattern\": \"^x-\\\\S+$\"\n              }\n            ]\n          }\n        },\n        \"if\": {\n          \"properties\": {\n            \"subtype\": {\n              \"enum\": [\"meta_content\"]\n            }\n          }\n        },\n        \"then\": {\n          \"not\": {\n            \"required\": [\"atts\"]\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"start_milestone\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"type\": \"string\",\n            \"oneOf\": [\n              {\n                \"pattern\": \"^[A-Za-z][A-Za-z0-9]*:\\\\S+$\"\n              },\n              {\n                \"pattern\": \"^x-\\\\S+$\"\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"end_milestone\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"type\": \"string\",\n            \"oneOf\": [\n              {\n                \"pattern\": \"^[A-Za-z][A-Za-z0-9]*:\\\\S+$\"\n              },\n              {\n                \"pattern\": \"^x-\\\\S+$\"\n              }\n            ]\n          }\n        },\n        \"not\": {\n          \"required\": [\n            \"atts\"\n          ]\n        }\n      }\n    }\n  ]\n}\n", "{\n  \"$comment\": \"version 0.1.0\",\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/structure/0_3_0/document_structure.json\",\n  \"title\": \"Document (Structure)\",\n  \"description\": \"A document, typically corresponding to a single USFM or USX book\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"schema\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"structure\": {\n          \"description\": \"The basic 'shape' of the content\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"flat\",\n            \"nested\"\n          ]\n        },\n        \"structure_version\": {\n          \"description\": \"the semantic version of the structure schema\",\n          \"type\": \"string\"\n        },\n        \"constraints\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"perf\",\n                  \"sofria\"\n                ]\n              },\n              \"version\": {\n                \"description\": \"the semantic version of the constraint schema\",\n                \"type\": \"string\"\n              }\n            },\n            \"additionalProperties\": false,\n            \"required\": [\n              \"name\",\n              \"version\"\n            ]\n          }\n        }\n      },\n      \"required\": [\n        \"structure\",\n        \"structure_version\",\n        \"constraints\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"metadata\": {\n      \"description\": \"Metadata describing the document and the translation it belongs to\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"translation\": {\n          \"type\": \"object\",\n          \"description\": \"Metadata concerning the translation to which the document belongs\",\n          \"properties\": {\n            \"tags\": {\n              \"description\": \"Tags attached to the translation\",\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"properties\": {\n              \"type\": \"object\",\n              \"description\": \"Key/value properties attached to the translation\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              }\n            },\n            \"selectors\": {\n              \"type\": \"object\",\n              \"description\": \"Proskomma selectors for the translation that, together, provide a primary key in the translation store\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          },\n          \"required\": [\"id\"]\n        },\n        \"document\": {\n          \"type\": \"object\",\n          \"description\": \"Metadata concerning the document itself\",\n          \"properties\": {\n            \"tags\": {\n              \"type\": \"array\",\n              \"description\": \"Tags attached to the document\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"properties\": {\n              \"type\": \"object\",\n              \"description\": \"Key/value properties attached to the document\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              }\n            },\n            \"chapters\": {\n              \"type\": \"string\",\n              \"pattern\": \"^[1-9][0-9]*(-[1-9][0-9]*)?$\"\n            }\n          },\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"hooks\": {\n      \"type\": \"array\",\n      \"$ref\": \"./hook_structure.json\"\n    },\n    \"sequences\": {\n      \"type\": \"object\",\n      \"propertyNames\": {\n        \"pattern\": \"^\\\\S+$\"\n      },\n      \"additionalProperties\": {\n        \"$ref\": \"./sequence_structure.json\"\n      }\n    },\n    \"sequence\": {\n      \"$ref\": \"./sequence_structure.json\"\n    },\n    \"main_sequence_id\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"schema\",\n    \"metadata\"\n  ],\n  \"additionalProperties\": false,\n  \"if\": {\n    \"properties\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"structure\": {\n            \"enum\": [\n              \"flat\"\n            ]\n          }\n        }\n      }\n    }\n  },\n  \"then\": {\n    \"required\": [\n      \"sequences\",\n      \"main_sequence_id\"\n    ],\n    \"not\": {\n      \"required\": [\n        \"sequence\"\n      ]\n    }\n  },\n  \"else\": {\n    \"required\": [\n      \"sequence\"\n    ],\n    \"allOf\": [\n      {\n        \"not\": {\n          \"required\": [\n            \"sequences\"\n          ]\n        }\n      },\n      {\n        \"not\": {\n          \"required\": [\n            \"main_sequence_id\"\n          ]\n        }\n      }\n    ]\n  }\n}\n\n\n\n\n", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/structure/0_3_0/sequence_structure.json\",\n  \"title\": \"Sequence (Structure)\",\n  \"description\": \"A sequence contains a 'flow' of one or more blocks\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"description\": \"The type of sequence\",\n      \"type\": \"string\"\n    },\n    \"preview_text\": {\n      \"description\": \"An optional field to provide some kind of printable label\",\n      \"type\": \"string\"\n    },\n    \"blocks\": {\n      \"type\": \"array\",\n      \"description\": \"The blocks that, together, represent the 'flow' of the sequence\",\n      \"items\": {\n        \"$ref\": \"./block_structure.json\"\n      }\n    },\n    \"hooks\": {\n      \"type\": \"array\",\n      \"$ref\": \"./hook_structure.json\"\n    }\n  },\n  \"required\": [\n    \"type\"\n  ],\n  \"additionalProperties\": false\n}\n\n\n", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/structure/0_3_0/block_structure.json\",\n  \"title\": \"Block (Structure)\",\n  \"description\": \"A block, which represents either a paragraph of text or a graft\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"description\": \"The type of block\",\n      \"enum\": [\n        \"paragraph\",\n        \"row\",\n        \"node\",\n        \"lookup\",\n        \"graft\"\n      ]\n    },\n    \"subtype\": {\n      \"description\": \"A type-specific subtype\",\n      \"type\": \"string\"\n    },\n    \"target\": {\n      \"description\": \"The id of the sequence containing graft content\",\n      \"type\": \"string\"\n    },\n    \"sequence\": {\n      \"description\": \"The sequence containing graft content\",\n      \"$ref\": \"./sequence_structure.json\"\n    },\n    \"preview_text\": {\n      \"description\": \"An optional field to provide some kind of printable label for a graft\",\n      \"type\": \"string\"\n    },\n    \"new\": {\n      \"description\": \"If present and true, is interpreted as a request for the server to create a new graft\",\n      \"type\": \"boolean\"\n    },\n    \"atts\": {\n      \"type\": \"object\",\n      \"description\": \"An object containing USFM attributes or subtype-specific additional information (such as the number of a verse or chapter). The value may be a boolean, a string or an array of strings\",\n      \"additionalProperties\": {\n        \"oneOf\": [\n          {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"type\": \"boolean\"\n          }\n        ]\n      }\n    },\n    \"content\": {\n      \"type\": \"array\",\n      \"description\": \"The content of the block\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"./contentElement_structure.json\"\n          }\n        ]\n      }\n    },\n    \"hooks\": {\n      \"type\": \"array\",\n      \"$ref\": \"./hook_structure.json\"\n    }\n  },\n  \"required\": [\n    \"type\"\n  ],\n  \"additionalProperties\": false,\n  \"if\": {\n    \"properties\": {\n      \"type\": {\n        \"enum\": [\n          \"paragraph\",\n          \"row\",\n          \"node\",\n          \"lookup\"\n        ]\n      }\n    }\n  },\n  \"then\": {\n    \"required\": [\n      \"content\"\n    ],\n    \"allOf\": [\n      {\n        \"not\": {\n          \"required\": [\n            \"new\"\n          ]\n        }\n      },\n      {\n        \"not\": {\n          \"required\": [\n            \"preview_text\"\n          ]\n        }\n      },\n      {\n        \"not\": {\n          \"required\": [\n            \"target\"\n          ]\n        }\n      }\n    ]\n  },\n  \"else\": {\n    \"if\": {\n      \"required\": [\n        \"new\"\n      ],\n      \"properties\": {\n        \"new\": {\n          \"enum\": [\n            true\n          ]\n        }\n      }\n    },\n    \"then\": {\n      \"allOf\": [\n        {\n          \"oneOf\": [\n            {\n              \"required\": [\n                \"subtype\"\n              ]\n            },\n            {\n              \"required\": [\n                \"sequence\"\n              ]\n            }\n          ]\n        },\n        {\n          \"not\": {\n            \"required\": [\n              \"target\"\n            ]\n          }\n        },\n        {\n          \"not\": {\n            \"required\": [\n              \"preview_text\"\n            ]\n          }\n        },\n        {\n          \"not\": {\n            \"required\": [\n              \"content\"\n            ]\n          }\n        }\n      ]\n    },\n    \"else\": {\n      \"oneOf\": [\n        {\n          \"required\": [\n            \"target\"\n          ]\n        },\n        {\n          \"required\": [\n            \"sequence\"\n          ]\n        }\n      ]\n    }\n  }\n}\n", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/structure/0_3_0/contentElement_structure.json\",\n  \"title\": \"Content Element (Structure)\",\n  \"description\": \"A content element, ie some form of (possibly nested) markup\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"description\": \"The type of element\",\n      \"enum\": [\n        \"mark\",\n        \"wrapper\",\n        \"start_milestone\",\n        \"end_milestone\",\n        \"graft\"\n      ]\n    },\n    \"subtype\": {\n      \"description\": \"The subtype of the element, which is context-dependent\",\n      \"type\": \"string\"\n    },\n    \"atts\": {\n      \"type\": \"object\",\n      \"description\": \"An object containing USFM attributes or subtype-specific additional information (such as the number of a verse or chapter). The value may be a boolean, a string or an array of strings\",\n      \"additionalProperties\": {\n        \"oneOf\": [\n          {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"type\": \"boolean\"\n          }\n        ]\n      }\n    },\n    \"target\": {\n      \"type\": \"string\",\n      \"description\": \"The id of the sequence containing graft content\"\n    },\n    \"sequence\": {\n      \"description\": \"The sequence containing graft content\",\n      \"$ref\": \"./sequence_structure.json\"\n    },\n    \"preview_text\": {\n      \"description\": \"An optional field to provide some kind of printable label for a graft\",\n      \"type\": \"string\"\n    },\n    \"new\": {\n      \"type\": \"boolean\",\n      \"description\": \"If present and true, is interpreted as a request for the server to create a new graft\"\n    },\n    \"content\": {\n      \"type\": \"array\",\n      \"description\": \"Nested content within the content element\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"./contentElement_structure.json\"\n          }\n        ]\n      }\n    },\n    \"meta_content\": {\n      \"type\": \"array\",\n      \"description\": \"Non-Scripture content related to the content element, such as checking data or related resources\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"./contentElement_structure.json\"\n          }\n        ]\n      }\n    },\n    \"hooks\": {\n      \"type\": \"array\",\n      \"$ref\": \"./hook_structure.json\"\n    }\n  },\n  \"required\": [\n    \"type\"\n  ],\n  \"additionalProperties\": false\n}\n", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/structure/0_3_0/hook_structure.json\",\n  \"title\": \"Hook (Structure)\",\n  \"description\": \"Hooks, ie typed labels that may be used to link documents\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"array\",\n    \"items\": [\n      {\n        \"type\": \"string\",\n        \"oneOf\": [\n          {\"enum\":  [\n            \"bcv_ref\",\n            \"book_ref\"\n          ]},\n          {\"pattern\": \"^x-(app|publisher)-[a-z][a-z0-9]+-\\\\S{2,256}$\"},\n          {\"pattern\": \"^x-local-\\\\S{2,256}$\"}\n        ]\n      },\n      {\n        \"type\": \"string\",\n        \"oneOf\": [\n          {\"enum\":  [\n            \"label\"\n          ]},\n          {\"pattern\": \"^\\\\w{1,255}$\"}\n        ]\n      }\n    ],\n    \"minItems\": 2,\n    \"maxItems\": 2\n  }\n}\n", "{\n  \"$comment\": \"version 0.3.0\",\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/constraint/0_3_0/perf_document_constraint.json\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"hooks\": {\n      \"type\": \"array\"\n    },\n    \"sequences\": {\n      \"type\": \"object\",\n      \"propertyNames\": {\n        \"pattern\": \"^\\\\S+$\"\n      },\n      \"additionalProperties\": {\n        \"$ref\": \"./perf_sequence_constraint.json\"\n      }\n    }\n  }\n}\n\n\n\n\n", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/constraint/0_3_0/perf_sequence_constraint.json\",\n\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"main\",\n        \"introduction\",\n        \"intro_title\",\n        \"intro_end_title\",\n        \"title\",\n        \"end_title\",\n        \"heading\",\n        \"remark\",\n        \"sidebar\",\n        \"table\",\n        \"tree\",\n        \"kv\",\n        \"footnote\",\n        \"note_caller\",\n        \"xref\",\n        \"pub_number\",\n        \"alt_number\",\n        \"esb_cat\",\n        \"fig\",\n        \"temp\"\n      ]\n    },\n    \"blocks\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"./perf_block_constraint.json\"\n      }\n    }\n  }\n\n}\n\n\n", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/constraint/0_3_0/perf_block_constraint.json\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"paragraph\",\n        \"graft\",\n        \"row\",\n        \"node\",\n        \"lookup\"\n      ]\n    },\n    \"content\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"./perf_contentElement_constraint.json\"\n          }\n        ]\n      }\n    },\n    \"meta_content\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"./perf_contentElement_constraint.json\"\n          }\n        ]\n      }\n    }\n  },\n  \"if\": {\n    \"properties\": {\n      \"type\": {\n        \"enum\": [\n          \"graft\"\n        ]\n      }\n    }\n  },\n  \"then\": {\n    \"properties\": {\n      \"subtype\": {\n        \"enum\": [\n          \"introduction\",\n          \"intro_title\",\n          \"Intro_end_title\",\n          \"title\",\n          \"end_title\",\n          \"heading\",\n          \"remark\",\n          \"sidebar\",\n          \"table\",\n          \"tree\",\n          \"kv\"\n        ]\n      }\n    }\n  },\n  \"else\": {\n    \"if\": {\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\"row\"]\n        }\n      }\n    },\n    \"then\": {\n      \"properties\": {\n        \"subtype\": {\n          \"type\": \"string\",\n          \"oneOf\": [\n            {\n              \"enum\": [\n                \"row:heading\",\n                \"row:body\"\n              ]\n            }\n          ]\n        }\n      }\n    },\n    \"else\": {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\"enum\": [\"node\"]}\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"type\": \"string\",\n            \"oneOf\": [\n              {\"enum\":  [\"node\"]},\n              {\n                \"pattern\": \"^x-\\\\S{1,256}$\"\n              }\n            ]\n          },\n          \"atts\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"parent\": {\n                \"type\": \"string\"\n              },\n              \"children\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"required\": [\n              \"id\"\n            ],\n            \"additionalProperties\": false\n          }\n        }\n      },\n      \"else\": {\n        \"if\": {\n          \"properties\": {\n            \"type\": {\"enum\": [\"lookup\"]}\n          }\n        },\n        \"then\": {\n          \"properties\": {\n            \"subtype\": {\n              \"type\": \"string\",\n              \"oneOf\": [\n                {\"enum\":  [\"lookup\"]},\n                {\n                  \"pattern\": \"^x-\\\\S{1,256}$\"\n                }\n              ]\n            },\n            \"atts\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"primary\": {\n                  \"type\": \"string\"\n                },\n                \"secondary\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"required\": [\n                \"primary\"\n              ],\n              \"additionalProperties\": false\n            }\n\n          }\n        },\n        \"else\": {\n          \"properties\": {\n            \"subtype\": {\n              \"type\": \"string\",\n              \"oneOf\": [\n                {\n                  \"pattern\": \"^usfm:\"\n                },\n                {\n                  \"pattern\": \"^x-\\\\S{1,256}$\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n}", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/constraint/0_3_0/perf_contentElement_constraint.json\",\n  \"type\": \"object\",\n  \"allOf\": [\n    {\n      \"properties\": {\n        \"content\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"./perf_contentElement_constraint.json\"\n              }\n            ]\n          }\n        },\n        \"meta_content\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"./perf_contentElement_constraint.json\"\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"graft\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"enum\": [\n              \"footnote\",\n              \"xref\",\n              \"note_caller\"\n            ]\n          }\n        },\n        \"allOf\": [\n          {\n            \"not\": {\n              \"required\": [\n                \"content\"\n              ]\n            }\n          },\n          {\n            \"not\": {\n              \"required\": [\n                \"meta_content\"\n              ]\n            }\n          }\n        ],\n        \"if\": {\n          \"required\": [\n            \"new\"\n          ],\n          \"properties\": {\n            \"new\": {\n              \"enum\": [\n                true\n              ]\n            }\n          }\n        },\n        \"then\": {\n          \"not\": {\n            \"anyOf\": [\n              {\n                \"required\": [\n                  \"target\"\n                ]\n              },\n              {\n                \"required\": [\n                  \"preview_text\"\n                ]\n              }\n            ]\n          }\n        },\n        \"else\": {\n          \"required\": [\n            \"target\"\n          ]\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"mark\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"type\": \"string\",\n            \"oneOf\": [\n              {\n                \"enum\": [\n                  \"chapter\",\n                  \"verses\",\n                  \"alt_chapter\",\n                  \"alt_verse\",\n                  \"pub_chapter\",\n                  \"pub_verse\"\n                ]\n              },\n              {\n                \"pattern\": \"^[A-Za-z][A-Za-z0-9]*:\\\\S+$\"\n              },\n              {\n                \"pattern\": \"^x-\\\\S+$\"\n              }\n            ]\n          }\n        },\n        \"if\": {\n          \"properties\": {\n            \"subtype\": {\n              \"enum\": [\n                \"chapter\",\n                \"verses\"\n              ]\n            }\n          }\n        },\n        \"then\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"atts\"\n          ],\n          \"properties\": {\n            \"atts\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"number\"\n              ],\n              \"maxProperties\": 1\n            }\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"wrapper\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"type\": \"string\",\n            \"oneOf\": [\n              {\n                \"enum\": [\n                  \"meta_content\"\n                ]\n              },\n              {\n                \"pattern\": \"^[A-Za-z][A-Za-z0-9]*:\\\\S+$\"\n              },\n              {\n                \"pattern\": \"^x-\\\\S+$\"\n              }\n            ]\n          }\n        },\n        \"if\": {\n          \"properties\": {\n            \"subtype\": {\n              \"enum\": [\"meta_content\"]\n            }\n          }\n        },\n        \"then\": {\n          \"not\": {\n            \"required\": [\"atts\"]\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"start_milestone\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"type\": \"string\",\n            \"oneOf\": [\n              {\n                \"pattern\": \"^[A-Za-z][A-Za-z0-9]*:\\\\S+$\"\n              },\n              {\n                \"pattern\": \"^x-\\\\S+$\"\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"end_milestone\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"type\": \"string\",\n            \"oneOf\": [\n              {\n                \"pattern\": \"^[A-Za-z][A-Za-z0-9]*:\\\\S+$\"\n              },\n              {\n                \"pattern\": \"^x-\\\\S+$\"\n              }\n            ]\n          }\n        },\n        \"not\": {\n          \"required\": [\n            \"atts\"\n          ]\n        }\n      }\n    }\n  ]\n}\n", "{\n  \"$comment\": \"version 0.3.0\",\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/constraint/0_3_0/sofria_document_constraint.json\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"sequence\": {\n      \"$ref\": \"./sofria_sequence_constraint.json\"\n    }\n  }\n}\n\n\n\n\n\n", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/constraint/0_3_0/sofria_sequence_constraint.json\",\n\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"main\",\n        \"introduction\",\n        \"intro_title\",\n        \"intro_end_title\",\n        \"title\",\n        \"end_title\",\n        \"heading\",\n        \"remark\",\n        \"sidebar\",\n        \"table\",\n        \"tree\",\n        \"kv\",\n        \"footnote\",\n        \"note_caller\",\n        \"xref\",\n        \"pub_number\",\n        \"alt_number\",\n        \"esb_cat\",\n        \"fig\",\n        \"temp\"\n      ]\n    },\n    \"blocks\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"./sofria_block_constraint.json\"\n      }\n    }\n  }\n\n}\n\n\n", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/constraint/0_3_0/sofria_block_constraint.json\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"paragraph\",\n        \"graft\"\n      ]\n    },\n    \"content\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"./sofria_contentElement_constraint.json\"\n          }\n        ]\n      }\n    },\n    \"meta_content\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"$ref\": \"./sofria_contentElement_constraint.json\"\n          }\n        ]\n      }\n    }\n  },\n  \"if\": {\n    \"properties\": {\n      \"type\": {\n        \"enum\": [\"graft\"]\n      }\n    }\n  },\n  \"then\": {\n    \"properties\": {\n      \"subtype\": {\n        \"enum\": [\n          \"introduction\",\n          \"intro_title\",\n          \"Intro_end_title\",\n          \"title\",\n          \"end_title\",\n          \"heading\",\n          \"remark\",\n          \"sidebar\",\n          \"table\",\n          \"tree\",\n          \"kv\"\n        ]\n      }\n    }\n  },\n  \"else\": {\n    \"properties\": {\n      \"subtype\": {\n        \"type\": \"string\",\n        \"pattern\": \"^usfm:\"\n      }\n    }\n  }\n}\n\n\n", "{\n  \"$id\": \"https://github.com/Proskomma/proskomma-json-tools/tree/main/src/schema/constraint/0_3_0/sofria_contentElement_constraint.json\",\n  \"type\": \"object\",\n  \"allOf\": [\n    {\n      \"properties\": {\n        \"content\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"./sofria_contentElement_constraint.json\"\n              }\n            ]\n          }\n        },\n        \"meta_content\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"$ref\": \"./sofria_contentElement_constraint.json\"\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"graft\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"enum\": [\n              \"footnote\",\n              \"xref\",\n              \"note_caller\"\n            ]\n          }\n        },\n        \"allOf\": [\n          {\n            \"not\": {\n              \"required\": [\n                \"content\"\n              ]\n            }\n          },\n          {\n            \"not\": {\n              \"required\": [\n                \"meta_content\"\n              ]\n            }\n          }\n        ],\n        \"if\": {\n          \"required\": [\n            \"new\"\n          ],\n          \"properties\": {\n            \"new\": {\n              \"enum\": [\n                true\n              ]\n            }\n          }\n        },\n        \"then\": {\n          \"not\": {\n            \"anyOf\": [\n              {\n                \"required\": [\n                  \"blocks\"\n                ]\n              },\n              {\n                \"required\": [\n                  \"preview_text\"\n                ]\n              }\n            ]\n          }\n        },\n        \"else\": {\n          \"required\": [\n            \"sequence\"\n          ]\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"mark\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"type\": \"string\",\n            \"oneOf\": [\n              {\n                \"enum\": [\n                  \"chapter_label\",\n                  \"verses_label\",\n                  \"alt_chapter\",\n                  \"alt_verse\",\n                  \"pub_chapter\",\n                  \"pub_verse\"\n                ]\n              },\n              {\n                \"pattern\": \"^[A-Za-z][A-Za-z0-9]*:\\\\S+$\"\n              },\n              {\n                \"pattern\": \"^x-\\\\S+$\"\n              }\n            ]\n          }\n        },\n        \"if\": {\n          \"properties\": {\n            \"subtype\": {\n              \"enum\": [\n                \"chapter\",\n                \"verses\"\n              ]\n            }\n          }\n        },\n        \"then\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"atts\"\n          ],\n          \"properties\": {\n            \"atts\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"number\"\n              ],\n              \"maxProperties\": 1\n            }\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"wrapper\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"type\": \"string\",\n            \"oneOf\": [\n              {\n                \"enum\": [\n                  \"meta_content\",\n                  \"chapter\",\n                  \"verses\"\n                ]\n              },\n              {\n                \"pattern\": \"^[A-Za-z][A-Za-z0-9]*:\\\\S+$\"\n              },\n              {\n                \"pattern\": \"^x-\\\\S+$\"\n              }\n            ]\n          }\n        },\n        \"if\": {\n          \"properties\": {\n            \"subtype\": {\n              \"enum\": [\"meta_content\"]\n            }\n          }\n        },\n        \"then\": {\n          \"not\": {\n            \"required\": [\"atts\"]\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"start_milestone\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"type\": \"string\",\n            \"oneOf\": [\n              {\n                \"pattern\": \"^[A-Za-z][A-Za-z0-9]*:\\\\S+$\"\n              },\n              {\n                \"pattern\": \"^x-\\\\S+$\"\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"end_milestone\"\n            ]\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"subtype\": {\n            \"type\": \"string\",\n            \"oneOf\": [\n              {\n                \"pattern\": \"^[A-Za-z][A-Za-z0-9]*:\\\\S+$\"\n              },\n              {\n                \"pattern\": \"^x-\\\\S+$\"\n              }\n            ]\n          }\n        },\n        \"not\": {\n          \"required\": [\n            \"atts\"\n          ]\n        }\n      }\n    }\n  ]\n}\n", "\"use strict\";\n\nvar Ajv = require('ajv');\nvar succinctSchema_0_2_0 = require('./schema/succinct/0_2_0/proskomma_succinct.json');\nvar documentStructureSchema_0_2_1 = require('./schema/structure/0_2_1/document_structure.json');\nvar sequenceStructureSchema_0_2_1 = require('./schema/structure/0_2_1/sequence_structure.json');\nvar blockStructureSchema_0_2_1 = require('./schema/structure/0_2_1/block_structure.json');\nvar contentElementStructureSchema_0_2_1 = require('./schema/structure/0_2_1/contentElement_structure.json');\nvar perfDocumentConstraintSchema_0_2_1 = require('./schema/constraint/0_2_1/perf_document_constraint.json');\nvar perfSequenceConstraintSchema_0_2_1 = require('./schema/constraint/0_2_1/perf_sequence_constraint.json');\nvar perfBlockConstraintSchema_0_2_1 = require('./schema/constraint/0_2_1/perf_block_constraint.json');\nvar perfContentElementConstraintSchema_0_2_1 = require('./schema/constraint/0_2_1/perf_contentElement_constraint.json');\nvar sofriaDocumentConstraintSchema_0_2_1 = require('./schema/constraint/0_2_1/sofria_document_constraint.json');\nvar sofriaSequenceConstraintSchema_0_2_1 = require('./schema/constraint/0_2_1/sofria_sequence_constraint.json');\nvar sofriaBlockConstraintSchema_0_2_1 = require('./schema/constraint/0_2_1/sofria_block_constraint.json');\nvar sofriaContentElementConstraintSchema_0_2_1 = require('./schema/constraint/0_2_1/sofria_contentElement_constraint.json');\nvar documentStructureSchema_0_3_0 = require('./schema/structure/0_3_0/document_structure.json');\nvar sequenceStructureSchema_0_3_0 = require('./schema/structure/0_3_0/sequence_structure.json');\nvar blockStructureSchema_0_3_0 = require('./schema/structure/0_3_0/block_structure.json');\nvar contentElementStructureSchema_0_3_0 = require('./schema/structure/0_3_0/contentElement_structure.json');\nvar hookStructureSchema_0_3_0 = require('./schema/structure/0_3_0/hooks_structure.json');\nvar perfDocumentConstraintSchema_0_3_0 = require('./schema/constraint/0_3_0/perf_document_constraint.json');\nvar perfSequenceConstraintSchema_0_3_0 = require('./schema/constraint/0_3_0/perf_sequence_constraint.json');\nvar perfBlockConstraintSchema_0_3_0 = require('./schema/constraint/0_3_0/perf_block_constraint.json');\nvar perfContentElementConstraintSchema_0_3_0 = require('./schema/constraint/0_3_0/perf_contentElement_constraint.json');\nvar sofriaDocumentConstraintSchema_0_3_0 = require('./schema/constraint/0_3_0/sofria_document_constraint.json');\nvar sofriaSequenceConstraintSchema_0_3_0 = require('./schema/constraint/0_3_0/sofria_sequence_constraint.json');\nvar sofriaBlockConstraintSchema_0_3_0 = require('./schema/constraint/0_3_0/sofria_block_constraint.json');\nvar sofriaContentElementConstraintSchema_0_3_0 = require('./schema/constraint/0_3_0/sofria_contentElement_constraint.json');\nclass Validator {\n  constructor() {\n    this.schema = {\n      structure: {},\n      constraint: {},\n      proskomma: {}\n    };\n    for (var [key, schemaOb] of [['succinct', {\n      \"0.2.0\": [{\n        \"name\": \"Proskomma Serialized Succinct\",\n        \"validator\": new Ajv().compile(succinctSchema_0_2_0)\n      }]\n    }]]) {\n      this.schema.proskomma[key] = schemaOb;\n    }\n    for (var [_key, _schemaOb] of [['document', {\n      \"0.2.1\": [{\n        \"name\": \"Document Structure\",\n        \"validator\": new Ajv().addSchema(contentElementStructureSchema_0_2_1).addSchema(blockStructureSchema_0_2_1).addSchema(sequenceStructureSchema_0_2_1).compile(documentStructureSchema_0_2_1)\n      }],\n      \"0.3.0\": [{\n        \"name\": \"Document Structure\",\n        \"validator\": new Ajv().addSchema(hookStructureSchema_0_3_0).addSchema(contentElementStructureSchema_0_3_0).addSchema(blockStructureSchema_0_3_0).addSchema(sequenceStructureSchema_0_3_0).compile(documentStructureSchema_0_3_0)\n      }]\n    }], ['sequence', {\n      \"0.2.1\": [{\n        \"name\": \"Sequence Structure\",\n        \"validator\": new Ajv().addSchema(contentElementStructureSchema_0_2_1).addSchema(blockStructureSchema_0_2_1).compile(sequenceStructureSchema_0_2_1)\n      }],\n      \"0.3.0\": [{\n        \"name\": \"Sequence Structure\",\n        \"validator\": new Ajv().addSchema(hookStructureSchema_0_3_0).addSchema(contentElementStructureSchema_0_3_0).addSchema(blockStructureSchema_0_3_0).compile(sequenceStructureSchema_0_3_0)\n      }]\n    }]]) {\n      this.schema.structure[_key] = _schemaOb;\n    }\n    for (var [_key2, _schemaOb2] of [['perfDocument', {\n      \"0.2.1\": [{\n        \"name\": \"Document Structure\",\n        \"validator\": new Ajv().addSchema(contentElementStructureSchema_0_2_1).addSchema(blockStructureSchema_0_2_1).addSchema(sequenceStructureSchema_0_2_1).compile(documentStructureSchema_0_2_1)\n      }, {\n        \"name\": \"PERF Document\",\n        \"validator\": new Ajv().addSchema(perfContentElementConstraintSchema_0_2_1).addSchema(perfBlockConstraintSchema_0_2_1).addSchema(perfSequenceConstraintSchema_0_2_1).compile(perfDocumentConstraintSchema_0_2_1)\n      }],\n      \"0.3.0\": [{\n        \"name\": \"Document Structure\",\n        \"validator\": new Ajv().addSchema(hookStructureSchema_0_3_0).addSchema(contentElementStructureSchema_0_3_0).addSchema(blockStructureSchema_0_3_0).addSchema(sequenceStructureSchema_0_3_0).compile(documentStructureSchema_0_3_0)\n      }, {\n        \"name\": \"PERF Document\",\n        \"validator\": new Ajv().addSchema(hookStructureSchema_0_3_0).addSchema(perfContentElementConstraintSchema_0_3_0).addSchema(perfBlockConstraintSchema_0_3_0).addSchema(perfSequenceConstraintSchema_0_3_0).compile(perfDocumentConstraintSchema_0_3_0)\n      }]\n    }], ['perfSequence', {\n      \"0.2.1\": [{\n        \"name\": \"Sequence Structure\",\n        \"validator\": new Ajv().addSchema(contentElementStructureSchema_0_2_1).addSchema(blockStructureSchema_0_2_1).compile(sequenceStructureSchema_0_2_1)\n      }, {\n        \"name\": \"PERF Sequence\",\n        \"validator\": new Ajv().addSchema(perfContentElementConstraintSchema_0_2_1).addSchema(perfBlockConstraintSchema_0_2_1).compile(perfSequenceConstraintSchema_0_2_1)\n      }],\n      \"0.3.0\": [{\n        \"name\": \"Sequence Structure\",\n        \"validator\": new Ajv().addSchema(hookStructureSchema_0_3_0).addSchema(contentElementStructureSchema_0_3_0).addSchema(blockStructureSchema_0_3_0).compile(sequenceStructureSchema_0_3_0)\n      }, {\n        \"name\": \"PERF Sequence\",\n        \"validator\": new Ajv().addSchema(hookStructureSchema_0_3_0).addSchema(perfContentElementConstraintSchema_0_3_0).addSchema(perfBlockConstraintSchema_0_3_0).compile(perfSequenceConstraintSchema_0_3_0)\n      }]\n    }], ['sofriaDocument', {\n      \"0.2.1\": [{\n        \"name\": \"Document Structure\",\n        \"validator\": new Ajv().addSchema(contentElementStructureSchema_0_2_1).addSchema(blockStructureSchema_0_2_1).addSchema(sequenceStructureSchema_0_2_1).compile(documentStructureSchema_0_2_1)\n      }, {\n        \"name\": \"SOFRIA Document\",\n        \"validator\": new Ajv().addSchema(sofriaContentElementConstraintSchema_0_2_1).addSchema(sofriaBlockConstraintSchema_0_2_1).addSchema(sofriaSequenceConstraintSchema_0_2_1).compile(sofriaDocumentConstraintSchema_0_2_1)\n      }],\n      \"0.3.0\": [{\n        \"name\": \"Document Structure\",\n        \"validator\": new Ajv().addSchema(hookStructureSchema_0_3_0).addSchema(contentElementStructureSchema_0_3_0).addSchema(blockStructureSchema_0_3_0).addSchema(sequenceStructureSchema_0_3_0).compile(documentStructureSchema_0_3_0)\n      }, {\n        \"name\": \"SOFRIA Document\",\n        \"validator\": new Ajv().addSchema(hookStructureSchema_0_3_0).addSchema(sofriaContentElementConstraintSchema_0_3_0).addSchema(sofriaBlockConstraintSchema_0_3_0).addSchema(sofriaSequenceConstraintSchema_0_3_0).compile(sofriaDocumentConstraintSchema_0_3_0)\n      }]\n    }], ['sofriaSequence', {\n      \"0.2.1\": [{\n        \"name\": \"Sequence Structure\",\n        \"validator\": new Ajv().addSchema(contentElementStructureSchema_0_2_1).addSchema(blockStructureSchema_0_2_1).compile(sequenceStructureSchema_0_2_1)\n      }, {\n        \"name\": \"SOFRIA Sequence\",\n        \"validator\": new Ajv().addSchema(sofriaContentElementConstraintSchema_0_2_1).addSchema(sofriaBlockConstraintSchema_0_2_1).compile(sofriaSequenceConstraintSchema_0_2_1)\n      }],\n      \"0.3.0\": [{\n        \"name\": \"Sequence Structure\",\n        \"validator\": new Ajv().addSchema(hookStructureSchema_0_3_0).addSchema(contentElementStructureSchema_0_3_0).addSchema(blockStructureSchema_0_3_0).compile(sequenceStructureSchema_0_3_0)\n      }, {\n        \"name\": \"SOFRIA Sequence\",\n        \"validator\": new Ajv().addSchema(hookStructureSchema_0_3_0).addSchema(sofriaContentElementConstraintSchema_0_3_0).addSchema(sofriaBlockConstraintSchema_0_3_0).compile(sofriaSequenceConstraintSchema_0_3_0)\n      }]\n    }]]) {\n      this.schema.constraint[_key2] = _schemaOb2;\n    }\n  }\n  schemaInfo() {\n    var ret = {};\n    for (var [schemaType, schemas] of Object.entries(this.schema)) {\n      ret[schemaType] = {};\n      for (var [schemaLabel, schemaVersions] of Object.entries(schemas)) {\n        ret[schemaType][schemaLabel] = {};\n        for (var [version, versionSteps] of Object.entries(schemaVersions)) {\n          ret[schemaType][schemaLabel][version] = versionSteps.map(vs => vs.name);\n        }\n      }\n    }\n    return ret;\n  }\n  validate(schemaType, schemaKey, schemaVersion, data) {\n    if (data === undefined) {\n      throw new Error(\"data argument is missing. Usage: validate(schemaType, schemaKey, schemaVersion, data)\");\n    }\n    if (data === null) {\n      throw new Error(\"Data argument is null\");\n    }\n    var knownSchemaTypes = Object.keys(this.schema);\n    if (!knownSchemaTypes.includes(schemaType)) {\n      throw new Error(\"Schema type must be one of \".concat(knownSchemaTypes.map(s => \"'\".concat(s, \"'\")).join(', '), \", not '\").concat(schemaType, \"'\"));\n    }\n    if (!this.schema[schemaType][schemaKey]) {\n      throw new Error(\"Unknown \".concat(schemaType, \" schema key \").concat(schemaKey));\n    }\n    if (!this.schema[schemaType][schemaKey][schemaVersion]) {\n      throw new Error(\"Unknown version \".concat(schemaVersion, \" for \").concat(schemaType, \" schema key \").concat(schemaKey));\n    }\n    var validators = this.schema[schemaType][schemaKey][schemaVersion];\n    var result;\n    for (var {\n      name: validatorName,\n      validator\n    } of validators) {\n      result = {\n        validatorName,\n        isValid: validator(data),\n        errors: validator.errors\n      };\n      if (!result.isValid) {\n        break;\n      }\n    }\n    return {\n      requested: {\n        schemaType,\n        schemaKey,\n        schemaVersion\n      },\n      lastSchema: result.validatorName,\n      isValid: result.isValid,\n      errors: result.errors\n    };\n  }\n}\nmodule.exports = Validator;", "\"use strict\";\n\nvar characterTags = ['qs', 'qac', 'litl', 'lik', 'liv', 'fr', 'fq', 'fqa', 'fk', 'fl', 'fw', 'fp', 'fv', 'ft', 'fdc', 'fm', 'xo', 'xk', 'xq', 'xt', 'xta', 'xop', 'xot', 'xnt', 'xdc', 'rq', 'add', 'bk', 'dc', 'k', 'nd', 'ord', 'pn', 'png', 'qt', 'sig', 'sls', 'tl', 'wj', 'em', 'bd', 'it', 'bdit', 'no', 'sc', 'sup', 'ior', 'iqt', 'th', 'thr', 'tc', 'tcr'];\nvar headingTags = ['ms', 'mr', 's', 'sr', 'r', 'qa', 'sp', 'sd'];\nvar bodyTags = ['cd', 'p', 'm', 'po', 'pr', 'cls', 'pmo', 'pm', 'pmc', 'pmr', 'pi', 'mi', 'nb', 'pc', 'ph', 'b', 'q', 'qr', 'qc', 'qa', 'qm', 'qd', 'lh', 'li', 'lf', 'lim', 'd'];\nvar introHeadingTags = ['imt', 'is', 'imte'];\nvar introBodyTags = ['ip', 'ipi', 'im', 'imi', 'ipq', 'imq', 'ipr', 'iq', 'ib', 'ili', 'iot', 'io', 'iex'];\nmodule.exports = {\n  characterTags,\n  bodyTags,\n  headingTags,\n  introHeadingTags,\n  introBodyTags\n};", "\"use strict\";\n\nvar _xregexp = _interopRequireDefault(require(\"xregexp\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar verseWordsActions = {\n  startDocument: [{\n    description: \"Set up storage\",\n    test: () => true,\n    action: _ref => {\n      var {\n        workspace,\n        output\n      } = _ref;\n      workspace.verseContent = [];\n      workspace.chapter = null;\n      workspace.verses = null;\n      output.cv = {};\n    }\n  }],\n  mark: [{\n    description: \"Update CV state\",\n    test: () => true,\n    action: _ref2 => {\n      var {\n        context,\n        workspace,\n        output\n      } = _ref2;\n      var {\n        element\n      } = context.sequences[0];\n      if (element.subType === 'chapter') {\n        workspace.chapter = element.atts['number'];\n        workspace.verses = 0;\n        output.cv[workspace.chapter] = {};\n        output.cv[workspace.chapter][workspace.verses] = {};\n      } else if (element.subType === 'verses') {\n        workspace.verses = element.atts['number'];\n        output.cv[workspace.chapter][workspace.verses] = {};\n      }\n    }\n  }],\n  text: [{\n    description: \"Log occurrences\",\n    test: () => true,\n    action: _ref3 => {\n      var {\n        context,\n        workspace,\n        output\n      } = _ref3;\n      var {\n        chapter,\n        verses\n      } = workspace;\n      var {\n        text\n      } = context.sequences[0].element;\n      var re = (0, _xregexp.default)('([\\\\p{Letter}\\\\p{Number}\\\\p{Mark}\\\\u2060]{1,127})');\n      var words = _xregexp.default.match(text, re, \"all\");\n      for (var word of words) {\n        var _output$cv$chapter$ve, _output$cv$chapter$ve2;\n        (_output$cv$chapter$ve2 = (_output$cv$chapter$ve = output.cv[chapter][verses])[word]) !== null && _output$cv$chapter$ve2 !== void 0 ? _output$cv$chapter$ve2 : _output$cv$chapter$ve[word] = 0;\n        output.cv[chapter][verses][word] += 1;\n      }\n    }\n  }]\n};\nmodule.exports = {\n  verseWordsActions\n};", "\"use strict\";\n\nvar _xregexp = _interopRequireDefault(require(\"xregexp\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar stripMarkupActions = {\n  startDocument: [{\n    description: \"Set up\",\n    test: () => true,\n    action: _ref => {\n      var {\n        workspace,\n        output\n      } = _ref;\n      workspace.chapter = null;\n      workspace.verses = null;\n      workspace.lastWord = \"\";\n      workspace.waitingMarkup = [];\n      workspace.currentOccurrences = {};\n      workspace.PendingStartMilestones = [];\n      output.stripped = {};\n      output.unalignedWords = {};\n      return true;\n    }\n  }],\n  startMilestone: [{\n    description: \"Ignore zaln startMilestone events\",\n    test: _ref2 => {\n      var {\n        context\n      } = _ref2;\n      return context.sequences[0].element.subType === \"usfm:zaln\";\n    },\n    action: _ref3 => {\n      var {\n        context,\n        workspace\n      } = _ref3;\n      var payload = context.sequences[0].element;\n      payload.subtype = payload.subType;\n      delete payload.subType;\n      workspace.waitingMarkup.push(payload);\n      workspace.PendingStartMilestones.push(payload);\n    }\n  }],\n  endMilestone: [{\n    description: \"Ignore zaln endMilestone events\",\n    test: _ref4 => {\n      var {\n        context\n      } = _ref4;\n      return context.sequences[0].element.subType === \"usfm:zaln\";\n    },\n    action: _ref5 => {\n      var {\n        context,\n        workspace,\n        output,\n        config\n      } = _ref5;\n      var {\n        chapter,\n        verses,\n        lastWord: word\n      } = workspace;\n      var {\n        verseWords: totalOccurrences\n      } = config;\n      var strippedKey = [\"after\", word, workspace.currentOccurrences[word], totalOccurrences[chapter][verses][word]].join(\"--\");\n      var payload = _objectSpread({}, context.sequences[0].element);\n      payload.subtype = payload.subType;\n      delete payload.subType;\n      var record = {\n        chapter: chapter,\n        verses: verses,\n        occurrence: workspace.currentOccurrences[word],\n        occurrences: totalOccurrences[chapter][verses][word],\n        position: \"after\",\n        word,\n        payload,\n        startMilestone: workspace.PendingStartMilestones.shift()\n      };\n      if (!output.stripped[workspace.chapter][workspace.verses][strippedKey]) {\n        output.stripped[workspace.chapter][workspace.verses][strippedKey] = [record];\n      } else {\n        output.stripped[workspace.chapter][workspace.verses][strippedKey].push(record);\n      }\n      return false;\n    }\n  }],\n  startWrapper: [{\n    description: \"Ignore w startWrapper events\",\n    test: _ref6 => {\n      var {\n        context\n      } = _ref6;\n      return context.sequences[0].element.subType === \"usfm:w\";\n    },\n    action: _ref7 => {\n      var {\n        context,\n        workspace\n      } = _ref7;\n      var payload = _objectSpread({}, context.sequences[0].element);\n      payload.subtype = payload.subType;\n      delete payload.subType;\n      workspace.waitingMarkup.push(payload);\n    }\n  }],\n  endWrapper: [{\n    description: \"Ignore w endWrapper events\",\n    test: _ref8 => {\n      var {\n        context\n      } = _ref8;\n      return context.sequences[0].element.subType === \"usfm:w\";\n    },\n    action: _ref9 => {\n      var {\n        context\n      } = _ref9;\n    }\n  }],\n  text: [{\n    description: \"Log occurrences\",\n    test: () => true,\n    action: _ref10 => {\n      var {\n        context,\n        workspace,\n        output,\n        config\n      } = _ref10;\n      try {\n        var sequence = context.sequences[0];\n        if (sequence.type !== 'main') return true;\n        var text = sequence.element.text;\n        var re = (0, _xregexp.default)(\"([\\\\p{Letter}\\\\p{Number}\\\\p{Mark}\\\\u2060]{1,127})\");\n        var words = _xregexp.default.match(text, re, \"all\");\n        var {\n          chapter,\n          verses\n        } = workspace;\n        var {\n          verseWords: totalOccurrences\n        } = config;\n        for (var word of words) {\n          var _workspace$currentOcc, _workspace$currentOcc2;\n          (_workspace$currentOcc2 = (_workspace$currentOcc = workspace.currentOccurrences)[word]) !== null && _workspace$currentOcc2 !== void 0 ? _workspace$currentOcc2 : _workspace$currentOcc[word] = 0;\n          workspace.currentOccurrences[word]++;\n          if (!workspace.PendingStartMilestones.length && workspace.waitingMarkup.length) {\n            var _output$unalignedWord, _output$unalignedWord2, _output$unalignedWord3, _output$unalignedWord4;\n            (_output$unalignedWord2 = (_output$unalignedWord = output.unalignedWords)[chapter]) !== null && _output$unalignedWord2 !== void 0 ? _output$unalignedWord2 : _output$unalignedWord[chapter] = {};\n            (_output$unalignedWord4 = (_output$unalignedWord3 = output.unalignedWords[chapter])[verses]) !== null && _output$unalignedWord4 !== void 0 ? _output$unalignedWord4 : _output$unalignedWord3[verses] = [];\n            output.unalignedWords[chapter][verses].push({\n              word,\n              occurrence: workspace.currentOccurrences[word],\n              totalOccurrences: totalOccurrences[chapter][verses][word]\n            });\n          }\n          while (workspace.waitingMarkup.length) {\n            var payload = workspace.waitingMarkup.shift();\n            var strippedKey = [\"before\", word, workspace.currentOccurrences[word], totalOccurrences[chapter][verses][word]].join(\"--\");\n            var record = {\n              chapter: chapter,\n              verses: verses,\n              occurrence: workspace.currentOccurrences[word],\n              occurrences: totalOccurrences[chapter][verses][word],\n              position: \"before\",\n              word,\n              payload: _objectSpread(_objectSpread({}, payload), payload.subtype === \"usfm:w\" && {\n                content: [word]\n              })\n            };\n            if (!output.stripped[workspace.chapter][workspace.verses][strippedKey]) {\n              output.stripped[workspace.chapter][workspace.verses][strippedKey] = [record];\n            } else {\n              output.stripped[workspace.chapter][workspace.verses][strippedKey].push(record);\n            }\n          }\n          workspace.lastWord = word;\n        }\n      } catch (err) {\n        console.error(err);\n        throw err;\n      }\n      return true;\n    }\n  }],\n  mark: [{\n    description: \"Update CV state\",\n    test: () => true,\n    action: _ref11 => {\n      var {\n        context,\n        workspace,\n        output\n      } = _ref11;\n      try {\n        var element = context.sequences[0].element;\n        if (element.subType === \"chapter\") {\n          workspace.chapter = element.atts[\"number\"];\n          workspace.verses = 0;\n          workspace.lastWord = \"\";\n          workspace.currentOccurrences = {};\n          output.stripped[workspace.chapter] = {};\n          output.stripped[workspace.chapter][workspace.verses] = {};\n        } else if (element.subType === \"verses\") {\n          workspace.verses = element.atts[\"number\"];\n          workspace.lastWord = \"\";\n          workspace.currentOccurrences = {};\n          output.stripped[workspace.chapter][workspace.verses] = {};\n        }\n      } catch (err) {\n        console.error(err);\n        throw err;\n      }\n      return true;\n    }\n  }]\n};\nmodule.exports = {\n  stripMarkupActions\n};", "\"use strict\";\n\nvar _xregexp = _interopRequireDefault(require(\"xregexp\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar lexingRegexes = [[\"printable\", \"wordLike\", (0, _xregexp.default)(\"([\\\\p{Letter}\\\\p{Number}\\\\p{Mark}\\\\u2060]{1,127})\")], [\"printable\", \"lineSpace\", (0, _xregexp.default)(\"([\\\\p{Separator}\\t]{1,127})\")], [\"printable\", \"punctuation\", (0, _xregexp.default)(\"([\\\\p{Punctuation}\\\\p{Math_Symbol}\\\\p{Currency_Symbol}\\\\p{Modifier_Symbol}\\\\p{Other_Symbol}])\")], [\"bad\", \"unknown\", (0, _xregexp.default)(\"(.)\")]];\nvar re = _xregexp.default.union(lexingRegexes.map(x => x[2]));\nvar endMilestone = {\n  type: \"end_milestone\",\n  subtype: \"usfm:zaln\"\n};\nvar mergeAlignmentActions = {\n  startDocument: [{\n    description: \"setup\",\n    test: () => true,\n    action: _ref => {\n      var {\n        workspace,\n        output\n      } = _ref;\n      workspace.chapter = null;\n      workspace.verses = null;\n      workspace.currentOccurrences = {};\n      output.unalignedWords = {};\n      return true;\n    }\n  }],\n  text: [{\n    description: \"add-to-text\",\n    test: () => true,\n    action: _ref2 => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref2;\n      try {\n        var sequence = context.sequences[0];\n        if (sequence.type !== 'main') return true;\n        var text = context.sequences[0].element.text;\n        var words = _xregexp.default.match(text, re, \"all\");\n        var {\n          chapter,\n          verses\n        } = workspace;\n        if (!verses) return true;\n        var {\n          totalOccurrences,\n          strippedAlignment\n        } = config;\n        var alignments = {\n          opened: null\n        };\n        var addWrappers = _ref3 => {\n          var {\n            subtype,\n            content = [],\n            atts = {}\n          } = _ref3;\n          if (Object.keys(atts).length > 0) {\n            return {\n              type: \"wrapper\",\n              subtype,\n              content,\n              atts\n            };\n          }\n          return {\n            type: \"wrapper\",\n            subtype,\n            content\n          };\n        };\n        var onHoldChars = [];\n        function pushOnHoldChars() {\n          while (onHoldChars.length) {\n            workspace.outputContentStack[0].push(onHoldChars.shift());\n          }\n        }\n        var _loop = function _loop(word) {\n          var _xre$match, _workspace$currentOcc, _workspace$currentOcc2;\n          var isWord = (_xre$match = _xregexp.default.match(word, lexingRegexes[0][2], \"all\")) === null || _xre$match === void 0 ? void 0 : _xre$match.length;\n          if (!isWord) {\n            onHoldChars.push(word);\n            return \"continue\";\n          }\n          (_workspace$currentOcc2 = (_workspace$currentOcc = workspace.currentOccurrences)[word]) !== null && _workspace$currentOcc2 !== void 0 ? _workspace$currentOcc2 : _workspace$currentOcc[word] = 0;\n          workspace.currentOccurrences[word]++;\n          var strippedKey = position => [position, word, workspace.currentOccurrences[word], totalOccurrences[chapter][verses][word]].join(\"--\");\n          var markup = strippedAlignment[chapter][verses];\n          var skipStartMilestone = false;\n          var afterWord = markup[strippedKey(\"after\")];\n          var beforeWord = markup[strippedKey(\"before\")];\n          if (beforeWord !== null && beforeWord !== void 0 && beforeWord.length) pushOnHoldChars();\n          if (afterWord !== null && afterWord !== void 0 && afterWord.length && !alignments.opened) {\n            afterWord.map(_ref4 => {\n              var {\n                startMilestone\n              } = _ref4;\n              return workspace.outputContentStack[0].push(startMilestone);\n            });\n            skipStartMilestone = true;\n          }\n\n          //TODO: Count number of opened alignments, to close them when there is a modified/new word in the current iteration.\n          beforeWord === null || beforeWord === void 0 ? void 0 : beforeWord.forEach(_ref5 => {\n            var {\n              payload\n            } = _ref5;\n            if (payload.type !== \"start_milestone\") {\n              workspace.outputContentStack[0].push(payload);\n            }\n            if (payload.type === \"start_milestone\" && !skipStartMilestone) {\n              workspace.outputContentStack[0].push(payload);\n              alignments.opened = true;\n            }\n          });\n\n          //TODO: Decrease number of opened alignments as they are being pushed\n          afterWord === null || afterWord === void 0 ? void 0 : afterWord.forEach(_ref6 => {\n            var {\n              payload\n            } = _ref6;\n            alignments.opened = false;\n            workspace.outputContentStack[0].push(payload);\n          });\n\n          //TODO: Add as many endMilestones as there are opened in alignments.opened, and set the later to 0.\n          if (!(beforeWord !== null && beforeWord !== void 0 && beforeWord.length)) {\n            var _output$unalignedWord, _output$unalignedWord2, _output$unalignedWord3, _output$unalignedWord4;\n            if (alignments.opened) {\n              workspace.outputContentStack[0].push(endMilestone);\n              alignments.opened = false;\n            }\n            pushOnHoldChars();\n            (_output$unalignedWord2 = (_output$unalignedWord = output.unalignedWords)[chapter]) !== null && _output$unalignedWord2 !== void 0 ? _output$unalignedWord2 : _output$unalignedWord[chapter] = {};\n            (_output$unalignedWord4 = (_output$unalignedWord3 = output.unalignedWords[chapter])[verses]) !== null && _output$unalignedWord4 !== void 0 ? _output$unalignedWord4 : _output$unalignedWord3[verses] = [];\n            output.unalignedWords[workspace.chapter][workspace.verses].push({\n              word,\n              occurrence: workspace.currentOccurrences[word],\n              totalOccurrences: totalOccurrences[chapter][verses][word]\n            });\n            var wrappedWord = addWrappers({\n              subtype: \"usfm:w\",\n              content: [word]\n            });\n            workspace.outputContentStack[0].push(wrappedWord);\n          }\n        };\n        for (var word of words) {\n          var _ret = _loop(word);\n          if (_ret === \"continue\") continue;\n        }\n        pushOnHoldChars();\n        return false;\n      } catch (err) {\n        console.error(err);\n        throw err;\n      }\n    }\n  }],\n  mark: [{\n    description: \"mark-chapters\",\n    test: _ref7 => {\n      var {\n        context\n      } = _ref7;\n      return context.sequences[0].element.subType === \"chapter\";\n    },\n    action: _ref8 => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref8;\n      var element = context.sequences[0].element;\n      workspace.chapter = element.atts[\"number\"];\n      workspace.verses = 0;\n      return true;\n    }\n  }, {\n    description: \"mark-verses\",\n    test: _ref9 => {\n      var {\n        context\n      } = _ref9;\n      return context.sequences[0].element.subType === \"verses\";\n    },\n    action: _ref10 => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref10;\n      var element = context.sequences[0].element;\n      workspace.verses = element.atts[\"number\"];\n      workspace.currentOccurrences = {};\n      return true;\n    }\n  }]\n};\nmodule.exports = {\n  mergeAlignmentActions\n};", "\"use strict\";\n\nvar {\n  verseWordsActions\n} = require('./verseWords');\nvar {\n  stripMarkupActions\n} = require('./stripAlignment');\nvar {\n  mergeAlignmentActions\n} = require('./mergeAlignement');\nmodule.exports = {\n  verseWordsActions,\n  stripMarkupActions,\n  mergeAlignmentActions\n};", "\"use strict\";\n\nclass ProskommaRenderAction {\n  constructor(ob) {\n    if (!ob) {\n      throw new Error(\"Must provide a constructor object to constructor\");\n    }\n    this.description = ob.description || function (e) {\n      throw e;\n    }(new Error(\"Must provide a description in constructor object\"));\n    this.test = ob.test || (() => true);\n    this.action = ob.action || (() => null);\n  }\n}\nmodule.exports = ProskommaRenderAction;", "\"use strict\";\n\nvar ProskommaRenderAction = require('./ProskommaRenderAction');\nclass ProskommaRender {\n  constructor(spec) {\n    if (this.constructor === ProskommaRender) {\n      throw new Error(\"Abstract class ProskommaRender cannot be instantiated - make as subclass!\");\n    }\n    var actions = spec.actions || {};\n    this.debugLevel = spec.debugLevel || 0;\n    this.actions = {};\n    for (var event of [\"startDocument\", \"endDocument\", \"startSequence\", \"endSequence\", \"unresolvedBlockGraft\", \"blockGraft\", \"startParagraph\", \"endParagraph\", \"metaContent\", \"mark\", \"unresolvedInlineGraft\", \"inlineGraft\", \"startWrapper\", \"endWrapper\", \"startMilestone\", \"endMilestone\", \"text\"]) {\n      if (actions[event]) {\n        this.actions[event] = actions[event].map(a => new ProskommaRenderAction(a));\n      } else {\n        this.actions[event] = [];\n      }\n    }\n  }\n  addRenderActionObject(event, actionOb) {\n    if (!this.actions[event]) {\n      throw new Error(\"Unknown event '\".concat(event));\n    }\n    this.actions[event].push(actionOb);\n  }\n  addRenderAction(event, actionSpec) {\n    this.addRenderActionObject(event, new ProskommaRenderAction(actionSpec));\n  }\n  describeRenderActions(event) {\n    if (!this.actions[event]) {\n      throw new Error(\"Unknown event '\".concat(event));\n    }\n    var ret = [\"**Actions for \".concat(event, \"**\\n\")];\n    for (var actionOb of this.actions[event]) {\n      ret.push(\"IF \".concat(actionOb.test.toString(), \":\"));\n      ret.push(\"    DO \".concat(actionOb.description));\n    }\n    return ret.join('\\n');\n  }\n  renderDocument(_ref) {\n    var {\n      docId,\n      config,\n      output\n    } = _ref;\n    var context = {};\n    var workspace = {};\n    this.renderDocument1({\n      docId,\n      config,\n      context,\n      workspace,\n      output\n    });\n    return output;\n  }\n  renderDocument1(_ref2) {\n    var {\n      docId,\n      config,\n      context,\n      workspace,\n      output\n    } = _ref2;\n    throw new Error(\"Define renderDocument1() in subclass\");\n  }\n\n  // renderEnvironment => {config, context, workspace, output}\n  renderEvent(event, renderEnvironment) {\n    var context = renderEnvironment.context;\n    if (this.debugLevel > 1) {\n      console.log(\"\".concat(\"    \".repeat(context.sequences.length), \"EVENT \").concat(event));\n    }\n    if (!this.actions[event]) {\n      throw new Error(\"Unknown event '\".concat(event));\n    }\n    var found = false;\n    for (var actionOb of this.actions[event]) {\n      var testResult = false;\n      try {\n        testResult = actionOb.test(renderEnvironment);\n      } catch (err) {\n        var msg = \"Exception from test of action '\".concat(actionOb.description, \"' for event \").concat(event, \" in \").concat(context.sequences.length > 0 ? context.sequences[0].type : \"no\", \" sequence: \").concat(err);\n        throw new Error(msg);\n      }\n      if (testResult) {\n        found = true;\n        if (this.debugLevel > 0) {\n          console.log(\"\".concat(\"    \".repeat(context.sequences.length), \"    \").concat(event, \" action: \").concat(actionOb.description));\n        }\n        var actionResult = false;\n        try {\n          actionResult = actionOb.action(renderEnvironment);\n        } catch (err) {\n          throw new Error(\"Exception from action '\".concat(actionOb.description, \"' for event \").concat(event, \" in \").concat(context.sequences.length > 0 ? context.sequences[0].type : \"no\", \" sequence: \").concat(err));\n        }\n        if (!actionResult) {\n          break;\n        }\n      }\n    }\n    if (['unresolvedBlockGraft', 'unresolvedInlineGraft'].includes(event) && this.actions[event].length === 0) {\n      throw new Error(\"No action for \".concat(event, \" graft event in \").concat(context.sequences.length > 0 ? context.sequences[0].type : \"no\", \" sequence: add an action or fix your data!\"));\n    }\n    if (!found && this.debugLevel > 1) {\n      console.log(\"\".concat(\"    \".repeat(context.sequences.length), \"    No matching action\"));\n    }\n  }\n}\nmodule.exports = ProskommaRender;", "\"use strict\";\n\nvar ProskommaRender = require('./ProskommaRender');\nclass PerfRenderFromJson extends ProskommaRender {\n  constructor(spec) {\n    super(spec);\n    if (!spec.srcJson) {\n      throw new Error(\"Must provide srcJson\");\n    }\n    this.srcJson = spec.srcJson;\n  }\n  renderDocument1(_ref) {\n    var {\n      docId,\n      config,\n      context,\n      workspace,\n      output\n    } = _ref;\n    var environment = {\n      config,\n      context,\n      workspace,\n      output\n    };\n    context.renderer = this;\n    context.document = {\n      id: docId,\n      schema: this.srcJson.schema,\n      metadata: this.srcJson.metadata,\n      mainSequenceId: this.srcJson.main_sequence_id,\n      nSequences: Object.keys(this.srcJson.sequences).length\n    };\n    context.sequences = [];\n    this.renderEvent('startDocument', environment);\n    this.renderSequenceId(environment, this.srcJson.main_sequence_id);\n    this.renderEvent('endDocument', environment);\n  }\n  sequenceContext(sequence, sequenceId) {\n    return {\n      id: sequenceId,\n      type: sequence.type,\n      nBlocks: sequence.blocks.length,\n      milestones: new Set([])\n    };\n  }\n  renderSequenceId(environment, sequenceId) {\n    var context = environment.context;\n    var sequence = this.srcJson.sequences[sequenceId];\n    if (!sequence) {\n      throw new Error(\"Sequence '\".concat(sequenceId, \"' not found in renderSequenceId()\"));\n    }\n    context.sequences.unshift(this.sequenceContext(sequence, sequenceId));\n    this.renderEvent('startSequence', environment);\n    for (var [blockN, block] of sequence.blocks.entries()) {\n      context.sequences[0].block = {\n        type: block.type,\n        subType: block.subtype,\n        blockN,\n        wrappers: []\n      };\n      if (block.type === 'graft') {\n        if (block.target && !this.srcJson.sequences[block.target]) {\n          context.sequences[0].block.target = block.target;\n          this.renderEvent('unresolvedBlockGraft', environment);\n        } else {\n          context.sequences[0].block.target = block.target;\n          context.sequences[0].block.isNew = block.new || false;\n          this.renderEvent('blockGraft', environment);\n        }\n      } else {\n        this.renderEvent('startParagraph', environment);\n        this.renderContent(block.content, environment);\n        this.renderEvent('endParagraph', environment);\n      }\n      delete context.sequences[0].block;\n    }\n    this.renderEvent('endSequence', environment);\n    context.sequences.shift();\n  }\n  renderContent(content, environment) {\n    for (var element of content) {\n      this.renderElement(element, environment);\n    }\n  }\n  renderElement(element, environment) {\n    var maybeRenderMetaContent = elementContext => {\n      if (element.meta_content) {\n        elementContext.metaContent = element.meta_content;\n        this.renderEvent('metaContent', environment);\n      }\n    };\n    var context = environment.context;\n    var elementContext = {\n      type: element.type || 'text'\n    };\n    if (element.subtype) {\n      elementContext.subType = element.subtype;\n    }\n    if (element.atts) {\n      elementContext.atts = element.atts;\n    } else if (elementContext.type !== \"end_milestone\" && elementContext.type !== \"meta_content\") {\n      elementContext.atts = {};\n    }\n    if (element.target) {\n      elementContext.target = element.target;\n    }\n    if (element.type === 'graft') {\n      elementContext.isNew = element.new || false;\n    }\n    if (elementContext.type === 'text') {\n      elementContext.text = element;\n    }\n    context.sequences[0].element = elementContext;\n    if (elementContext.type === \"text\") {\n      this.renderEvent('text', environment);\n      maybeRenderMetaContent(elementContext);\n    } else if (elementContext.type === \"mark\") {\n      this.renderEvent('mark', environment);\n      maybeRenderMetaContent(elementContext);\n    } else if (elementContext.type === \"start_milestone\") {\n      this.renderEvent('startMilestone', environment);\n      maybeRenderMetaContent(elementContext);\n    } else if (elementContext.type === \"end_milestone\") {\n      this.renderEvent('endMilestone', environment);\n      maybeRenderMetaContent(elementContext);\n    } else if (elementContext.type === \"graft\") {\n      if (element.target) {\n        if (element.target && !this.srcJson.sequences[element.target]) {\n          this.renderEvent('unresolvedInlineGraft', environment);\n          return;\n        }\n      }\n      this.renderEvent('inlineGraft', environment);\n      maybeRenderMetaContent(elementContext);\n    } else if (elementContext.type === \"wrapper\") {\n      context.sequences[0].block.wrappers.unshift(elementContext.subType);\n      this.renderEvent('startWrapper', environment);\n      this.renderContent(element.content, environment);\n      context.sequences[0].element = elementContext;\n      maybeRenderMetaContent(elementContext);\n      this.renderEvent('endWrapper', environment);\n      context.sequences[0].block.wrappers.shift();\n    } else {\n      throw new Error(\"Unexpected element type '\".concat(elementContext.type));\n    }\n    delete context.sequences[0].element;\n  }\n}\nmodule.exports = PerfRenderFromJson;", "\"use strict\";\n\nvar _PerfRenderFromJson = _interopRequireDefault(require(\"../../../PerfRenderFromJson\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar {\n  verseWordsActions\n} = require('../renderActions/verseWords');\nvar verseWordsCode = function verseWordsCode(_ref) {\n  var {\n    perf\n  } = _ref;\n  var cl = new _PerfRenderFromJson.default({\n    srcJson: perf,\n    actions: verseWordsActions\n  });\n  var output = {};\n  cl.renderDocument({\n    docId: \"\",\n    config: {},\n    output\n  });\n  return {\n    verseWords: output.cv\n  };\n};\nvar verseWords = {\n  name: \"verseWords\",\n  type: \"Transform\",\n  description: \"PERF=>JSON: Counts words occurrences\",\n  inputs: [{\n    name: \"perf\",\n    type: \"json\",\n    source: \"\"\n  }],\n  outputs: [{\n    name: \"verseWords\",\n    type: \"json\"\n  }],\n  code: verseWordsCode\n};\nmodule.exports = {\n  verseWords\n};", "\"use strict\";\n\nvar mergeActions = actionList => {\n  var ret = {};\n  for (var action of actionList) {\n    for (var key of Object.keys(action)) {\n      if (ret[key]) {\n        ret[key].push(...action[key]);\n      } else {\n        ret[key] = action[key];\n      }\n    }\n  }\n  return ret;\n};\nmodule.exports = mergeActions;", "\"use strict\";\n\nvar identityActions = {\n  startDocument: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref;\n      output.perf = {};\n      output.perf.schema = context.document.schema;\n      output.perf.metadata = context.document.metadata;\n      output.perf.sequences = {};\n    }\n  }],\n  endDocument: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref2 => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref2;\n    }\n  }],\n  startSequence: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref3 => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref3;\n      output.perf.sequences[context.sequences[0].id] = {\n        type: context.sequences[0].type,\n        blocks: []\n      };\n      workspace.outputSequence = output.perf.sequences[context.sequences[0].id];\n      if (context.sequences[0].type === 'main') {\n        output.perf.main_sequence_id = context.sequences[0].id;\n      }\n    }\n  }],\n  endSequence: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref4 => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref4;\n      if (context.sequences.length > 1) {\n        workspace.outputSequence = output.perf.sequences[context.sequences[1].id];\n      }\n    }\n  }],\n  blockGraft: [{\n    description: \"identity\",\n    test: () => true,\n    action: environment => {\n      var currentBlock = environment.context.sequences[0].block;\n      var graftRecord = {\n        type: currentBlock.type,\n        subtype: currentBlock.subType\n      };\n      if (currentBlock.target) {\n        graftRecord.target = currentBlock.target;\n        environment.context.renderer.renderSequenceId(environment, graftRecord.target);\n      }\n      if (currentBlock.isNew) {\n        graftRecord.new = currentBlock.isNew;\n      }\n      environment.workspace.outputSequence.blocks.push(graftRecord);\n    }\n  }],\n  startParagraph: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref5 => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref5;\n      var currentBlock = context.sequences[0].block;\n      var paraRecord = {\n        type: currentBlock.type,\n        subtype: currentBlock.subType,\n        content: []\n      };\n      workspace.outputSequence.blocks.push(paraRecord);\n      workspace.currentContent = paraRecord.content;\n      workspace.outputBlock = workspace.outputSequence.blocks[workspace.outputSequence.blocks.length - 1];\n      workspace.outputContentStack = [workspace.outputBlock.content];\n    }\n  }],\n  endParagraph: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref6 => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref6;\n    }\n  }],\n  metaContent: [{\n    description: \"identity\",\n    test: () => true,\n    action: environment => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = environment;\n      var element = context.sequences[0].element;\n      workspace.currentContent = element.metaContent;\n      var lastOutputItem = workspace.outputContentStack[1][workspace.outputContentStack[1].length - 1];\n      lastOutputItem.meta_content = [];\n      workspace.outputContentStack.unshift(lastOutputItem.meta_content);\n      context.renderer.renderContent(workspace.currentContent, environment);\n      workspace.outputContentStack.shift();\n    }\n  }],\n  mark: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref7 => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref7;\n      var element = context.sequences[0].element;\n      var markRecord = {\n        type: element.type,\n        subtype: element.subType\n      };\n      if (element.atts && typeof element.atts === \"object\" && Object.keys(element.atts).length !== 0) {\n        markRecord.atts = element.atts;\n      }\n      workspace.outputContentStack[0].push(markRecord);\n    }\n  }],\n  inlineGraft: [{\n    description: \"identity\",\n    test: () => true,\n    action: environment => {\n      var element = environment.context.sequences[0].element;\n      var graftRecord = {\n        type: element.type,\n        subtype: element.subType\n      };\n      if (element.target) {\n        graftRecord.target = element.target;\n        var currentContent = environment.workspace.outputContentStack[0];\n        environment.context.renderer.renderSequenceId(environment, element.target);\n        environment.workspace.outputContentStack[0] = currentContent; // Probably need more for nesting!\n      }\n\n      if (element.isNew) {\n        graftRecord.new = element.isNew;\n      }\n      environment.workspace.outputContentStack[0].push(graftRecord);\n    }\n  }],\n  startWrapper: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref8 => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref8;\n      var element = context.sequences[0].element;\n      var wrapperRecord = {\n        type: element.type,\n        subtype: element.subType,\n        content: []\n      };\n      if ('atts' in element && typeof element.atts === \"object\" && Object.keys(element.atts).length !== 0) {\n        wrapperRecord.atts = element.atts;\n      }\n      workspace.outputContentStack[0].push(wrapperRecord);\n      workspace.outputContentStack.unshift(wrapperRecord.content);\n    }\n  }],\n  endWrapper: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref9 => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref9;\n      workspace.outputContentStack.shift();\n    }\n  }],\n  startMilestone: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref10 => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref10;\n      var element = context.sequences[0].element;\n      var milestoneRecord = {\n        type: element.type,\n        subtype: element.subType\n      };\n      if (element.atts && typeof element.atts === \"object\" && Object.keys(element.atts).length !== 0) {\n        milestoneRecord.atts = element.atts;\n      }\n      workspace.outputContentStack[0].push(milestoneRecord);\n    }\n  }],\n  endMilestone: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref11 => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref11;\n      var element = context.sequences[0].element;\n      var milestoneRecord = {\n        type: element.type,\n        subtype: element.subType\n      };\n      workspace.outputContentStack[0].push(milestoneRecord);\n    }\n  }],\n  text: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref12 => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref12;\n      var element = context.sequences[0].element;\n      workspace.outputContentStack[0].push(element.text);\n    }\n  }]\n};\nmodule.exports = {\n  identityActions\n};", "\"use strict\";\n\nvar _PerfRenderFromJson = _interopRequireDefault(require(\"../../../PerfRenderFromJson\"));\nvar _mergeActions = _interopRequireDefault(require(\"../../../mergeActions\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar {\n  identityActions\n} = require('../../perfToPerf/renderActions/identity');\nvar {\n  stripMarkupActions\n} = require('../renderActions/stripAlignment');\nvar stripMarkupCode = function stripMarkupCode(_ref) {\n  var {\n    perf,\n    verseWords\n  } = _ref;\n  var cl = new _PerfRenderFromJson.default({\n    srcJson: perf,\n    actions: (0, _mergeActions.default)([stripMarkupActions, identityActions])\n  });\n  var output = {};\n  cl.renderDocument({\n    docId: \"\",\n    config: {\n      verseWords\n    },\n    output\n  });\n  return {\n    perf: output.perf,\n    strippedAlignment: output.stripped,\n    unalignedWords: output.unalignedWords\n  };\n};\nvar stripAlignment = {\n  name: \"stripAlignment\",\n  type: \"Transform\",\n  description: \"PERF=>PERF: Strips alignment markup\",\n  inputs: [{\n    name: \"perf\",\n    type: \"json\",\n    source: \"\"\n  }, {\n    name: \"verseWords\",\n    type: \"json\",\n    source: \"\"\n  }],\n  outputs: [{\n    name: \"perf\",\n    type: \"json\"\n  }, {\n    name: \"strippedAlignment\",\n    type: \"json\"\n  }, {\n    name: \"unalignedWords\",\n    type: \"json\"\n  }],\n  code: stripMarkupCode\n};\nmodule.exports = {\n  stripAlignment\n};", "\"use strict\";\n\nvar _PerfRenderFromJson = _interopRequireDefault(require(\"../../../PerfRenderFromJson\"));\nvar _mergeActions = _interopRequireDefault(require(\"../../../mergeActions\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar {\n  identityActions\n} = require('../../perfToPerf/renderActions/identity');\nvar {\n  mergeAlignmentActions\n} = require('../renderActions/mergeAlignement');\nvar mergeAlignmentCode = function mergeAlignmentCode(_ref) {\n  var {\n    perf,\n    verseWords: totalOccurrences,\n    strippedAlignment\n  } = _ref;\n  var cl = new _PerfRenderFromJson.default({\n    srcJson: perf,\n    actions: (0, _mergeActions.default)([mergeAlignmentActions, identityActions])\n  });\n  var output = {};\n  cl.renderDocument({\n    docId: \"\",\n    config: {\n      totalOccurrences,\n      strippedAlignment\n    },\n    output\n  });\n  return {\n    perf: output.perf,\n    unalignedWords: output.unalignedWords\n  }; // identityActions currently put PERF directly in output\n};\n\nvar mergeAlignment = {\n  name: \"mergeAlignment\",\n  type: \"Transform\",\n  description: \"PERF=>PERF adds report to verses\",\n  inputs: [{\n    name: \"perf\",\n    type: \"json\",\n    source: \"\"\n  }, {\n    name: \"strippedAlignment\",\n    type: \"json\",\n    source: \"\"\n  }, {\n    name: \"verseWords\",\n    type: \"json\",\n    source: \"\"\n  }],\n  outputs: [{\n    name: \"perf\",\n    type: \"json\"\n  }, {\n    name: \"unalignedWords\",\n    type: \"json\"\n  }],\n  code: mergeAlignmentCode\n};\nmodule.exports = {\n  mergeAlignment\n};", "\"use strict\";\n\nvar {\n  verseWords\n} = require('./verseWords');\nvar {\n  stripAlignment\n} = require('./stripAlignment');\nvar {\n  mergeAlignment\n} = require('./mergeAlignment');\nmodule.exports = {\n  verseWords,\n  stripAlignment,\n  mergeAlignment\n};", "\"use strict\";\n\nvar renderActions = require('./renderActions');\nvar transforms = require('./transforms');\nmodule.exports = {\n  transforms,\n  renderActions\n};", "// nothing here for now\n\"use strict\";", "\"use strict\";\n\nvar usfmToPerfCode = function usfmToPerfCode(_ref) {\n  var {\n    usfm,\n    selectors,\n    proskomma\n  } = _ref;\n  proskomma.importDocuments(selectors, 'usfm', [usfm]);\n  var perfResultDocument = proskomma.gqlQuerySync('{documents {id docSetId perf} }').data.documents[0];\n  var docId = perfResultDocument.id;\n  var docSetId = perfResultDocument.docSetId;\n  proskomma.gqlQuerySync(\"mutation { deleteDocument(docSetId: \\\"\".concat(docSetId, \"\\\", documentId: \\\"\").concat(docId, \"\\\") }\"));\n  var perf = JSON.parse(perfResultDocument.perf);\n  return {\n    perf\n  };\n};\nvar usfmToPerf = {\n  name: \"usfmToPerf\",\n  type: \"Transform\",\n  description: \"USFM=>PERF: Conversion via Proskomma\",\n  inputs: [{\n    name: \"usfm\",\n    type: \"text\",\n    source: \"\"\n  }, {\n    name: \"selectors\",\n    type: \"json\",\n    source: \"\"\n  }],\n  outputs: [{\n    name: \"perf\",\n    type: \"json\"\n  }],\n  code: usfmToPerfCode\n};\nmodule.exports = {\n  usfmToPerf,\n  usfmToPerfCode\n};", "\"use strict\";\n\nvar {\n  usfmToPerf,\n  usfmToPerfCode\n} = require('./usfmToPerf');\nmodule.exports = {\n  usfmToPerf,\n  usfmToPerfCode\n};", "\"use strict\";\n\nvar renderActions = require('./renderActions');\nvar transforms = require('./transforms');\nmodule.exports = {\n  transforms,\n  renderActions\n};", "\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar identityActions = {\n  startDocument: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref;\n      output.sofria = {};\n      output.sofria.schema = context.document.schema;\n      output.sofria.metadata = context.document.metadata;\n      output.sofria.sequence = {};\n      workspace.currentSequence = output.sofria.sequence;\n      workspace.chapter = null;\n      workspace.verses = null;\n      workspace.cachedChapter = null;\n      workspace.cachedVerses = null;\n    }\n  }],\n  endDocument: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref2 => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref2;\n    }\n  }],\n  startSequence: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref3 => {\n      var {\n        context,\n        workspace\n      } = _ref3;\n      workspace.currentSequence.type = context.sequences[0].type;\n      workspace.currentSequence.blocks = [];\n    }\n  }],\n  endSequence: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref4 => {\n      var {\n        workspace\n      } = _ref4;\n      if (workspace.currentSequence.type === 'main') {\n        workspace.chapter = null;\n        workspace.verses = null;\n      }\n      workspace.currentSequence = null;\n    }\n  }],\n  blockGraft: [{\n    description: \"identity\",\n    test: () => true,\n    action: environment => {\n      var currentBlock = environment.context.sequences[0].block;\n      var graftRecord = {\n        type: currentBlock.type\n      };\n      if (currentBlock.sequence) {\n        graftRecord.sequence = {};\n        var cachedSequencePointer = environment.workspace.currentSequence;\n        environment.workspace.currentSequence = graftRecord.sequence;\n        environment.context.renderer.renderSequence(environment);\n        environment.workspace.currentSequence = cachedSequencePointer;\n      }\n      environment.workspace.currentSequence.blocks.push(graftRecord);\n    }\n  }],\n  startParagraph: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref5 => {\n      var {\n        context,\n        workspace\n      } = _ref5;\n      var currentBlock = context.sequences[0].block;\n      var paraRecord = {\n        type: currentBlock.type,\n        subtype: currentBlock.subType,\n        content: []\n      };\n      workspace.currentSequence.blocks.push(paraRecord);\n      workspace.currentContent = paraRecord.content;\n      workspace.outputBlock = workspace.currentSequence.blocks[workspace.currentSequence.blocks.length - 1];\n      workspace.outputContentStack = [workspace.outputBlock.content];\n      if (workspace.currentSequence.type === \"main\") {\n        for (var cv of ['chapter', 'verses']) {\n          if (workspace[cv]) {\n            var wrapperRecord = {\n              type: 'wrapper',\n              subtype: cv,\n              content: [],\n              atts: {\n                number: workspace[cv]\n              }\n            };\n            workspace.outputContentStack[0].push(wrapperRecord);\n            workspace.outputContentStack.unshift(wrapperRecord.content);\n          }\n        }\n      }\n    }\n  }],\n  endParagraph: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref6 => {\n      var {\n        workspace\n      } = _ref6;\n    }\n  }],\n  metaContent: [{\n    description: \"identity\",\n    test: () => true,\n    action: environment => {\n      var {\n        context,\n        workspace\n      } = environment;\n      var element = context.sequences[0].element;\n      workspace.currentContent = element.metaContent;\n      var lastOutputItem = workspace.outputContentStack[1][workspace.outputContentStack[1].length - 1];\n      lastOutputItem.meta_content = [];\n      workspace.outputContentStack.unshift(lastOutputItem.meta_content);\n      context.renderer.renderContent(workspace.currentContent, environment);\n      workspace.outputContentStack.shift();\n    }\n  }],\n  mark: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref7 => {\n      var {\n        context,\n        workspace\n      } = _ref7;\n      var element = context.sequences[0].element;\n      var markRecord = {\n        type: element.type,\n        subtype: element.subType\n      };\n      if (element.atts) {\n        markRecord.atts = element.atts;\n      }\n      workspace.outputContentStack[0].push(markRecord);\n    }\n  }],\n  inlineGraft: [{\n    description: \"identity\",\n    test: () => true,\n    action: environment => {\n      var element = environment.context.sequences[0].element;\n      var graftRecord = {\n        type: element.type,\n        subtype: element.subType,\n        sequence: {}\n      };\n      var cachedSequencePointer = environment.workspace.currentSequence;\n      var cachedOutputContentStack = [...environment.workspace.outputContentStack];\n      environment.workspace.currentSequence = graftRecord.sequence;\n      environment.context.renderer.renderSequence(environment);\n      environment.workspace.outputContentStack = cachedOutputContentStack;\n      environment.workspace.currentSequence = cachedSequencePointer;\n      environment.workspace.outputContentStack[0].push(graftRecord);\n    }\n  }],\n  startWrapper: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref8 => {\n      var {\n        context,\n        workspace\n      } = _ref8;\n      var element = context.sequences[0].element;\n      // console.log(element)\n      if (element.subType === \"chapter\") {\n        workspace.chapter = element.atts.number;\n        workspace.cachedChapter = workspace.chapter;\n      } else if (element.subType === \"verses\") {\n        workspace.verses = element.atts.number;\n        workspace.cachedVerses = workspace.verses;\n      }\n      var wrapperRecord = {\n        type: element.type,\n        subtype: element.subType,\n        content: []\n      };\n      if ('atts' in element) {\n        wrapperRecord.atts = _objectSpread({}, element.atts);\n      }\n      if (workspace.outputContentStack.length === 0) {\n        throw new Error(\"outputContentStack is empty before pushing to its first element, near \".concat(context.document.metadata.document.bookCode, \" \").concat(workspace.cachedChapter, \":\").concat(workspace.cachedVerses));\n      }\n      workspace.outputContentStack[0].push(wrapperRecord);\n      workspace.outputContentStack.unshift(wrapperRecord.content);\n    }\n  }],\n  endWrapper: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref9 => {\n      var {\n        context,\n        workspace\n      } = _ref9;\n      var element = context.sequences[0].element;\n      if (element.subType === \"chapter\") {\n        workspace.chapter = null;\n      } else if (element.subType === \"verses\") {\n        workspace.verses = null;\n      }\n      workspace.outputContentStack.shift();\n    }\n  }],\n  startMilestone: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref10 => {\n      var {\n        context,\n        workspace\n      } = _ref10;\n      var element = context.sequences[0].element;\n      var milestoneRecord = {\n        type: element.type,\n        subtype: element.subType\n      };\n      if (element.atts) {\n        milestoneRecord.atts = element.atts;\n      }\n      workspace.outputContentStack[0].push(milestoneRecord);\n    }\n  }],\n  endMilestone: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref11 => {\n      var {\n        context,\n        workspace\n      } = _ref11;\n      var element = context.sequences[0].element;\n      var milestoneRecord = {\n        type: element.type,\n        subtype: element.subType\n      };\n      workspace.outputContentStack[0].push(milestoneRecord);\n    }\n  }],\n  text: [{\n    description: \"identity\",\n    test: () => true,\n    action: _ref12 => {\n      var {\n        context,\n        workspace\n      } = _ref12;\n      var element = context.sequences[0].element;\n      workspace.outputContentStack[0].push(element.text);\n    }\n  }]\n};\nmodule.exports = {\n  identityActions\n};", "\"use strict\";\n\nvar {\n  identityActions\n} = require('./identity');\nmodule.exports = {\n  identityActions\n};", "\"use strict\";\n\n// import identityActions from \"./identityActions\";\nvar {\n  identityActions\n} = require('../renderActions/identity');\nvar identityActionsCode = function identityActionsCode(_ref) {\n  var {\n    perf\n  } = _ref;\n  var cl = new PerfRenderFromJson({\n    srcJson: perf,\n    actions: identityAction\n  });\n  var output = {};\n  cl.renderDocument({\n    docId: \"\",\n    config: {},\n    output\n  });\n  return {\n    verseWords: output.cv\n  };\n};\nvar identity = {\n  name: \"identity\",\n  type: \"Transform\",\n  description: \"identity operation\",\n  inputs: [{\n    name: \"perf\",\n    type: \"json\",\n    source: \"\"\n  }],\n  outputs: [{\n    name: \"perf\",\n    type: \"json\"\n  }],\n  code: identityActionsCode\n};\nmodule.exports = {\n  identity\n};", "\"use strict\";\n\nvar {\n  identity\n} = require('./identity');\nmodule.exports = {\n  identity\n};", "\"use strict\";\n\nvar renderActions = require('./renderActions');\nvar transforms = require('./transforms');\nmodule.exports = {\n  transforms,\n  renderActions\n};", "\"use strict\";\n\nvar wordCountActions = {\n  startDocument: [{\n    description: \"Set up word object\",\n    test: () => true,\n    action: _ref => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref;\n      workspace.words = {};\n    }\n  }],\n  text: [{\n    description: \"Split strings and add words to word object\",\n    test: () => true,\n    action: _ref2 => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref2;\n      for (var word of context.sequences[0].element.text.split(/[\\s:;,.]+/).filter(w => w.length > 0)) {\n        word = word.toLowerCase();\n        if (word in workspace.words) {\n          workspace.words[word] += 1;\n        } else {\n          workspace.words[word] = 1;\n        }\n      }\n    }\n  }],\n  endDocument: [{\n    description: \"Sort words\",\n    test: () => true,\n    action: _ref3 => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref3;\n      output.words = [...Object.entries(workspace.words)].sort((a, b) => b[1] - a[1]);\n    }\n  }]\n};\nmodule.exports = {\n  wordCountActions\n};", "\"use strict\";\n\nvar initialBlockRecord = ct => ({\n  type: ct.sequences[0].block.type,\n  subType: ct.sequences[0].block.subType,\n  pos: ct.sequences[0].block.blockN,\n  perfChapter: null\n});\nvar calculateUsfmChapterPositionsActions = {\n  startDocument: [{\n    description: \"Set up storage\",\n    test: () => true,\n    action: _ref => {\n      var {\n        workspace,\n        output\n      } = _ref;\n      workspace.blockRecords = [];\n      output.report = {};\n    }\n  }],\n  startParagraph: [{\n    description: \"Set up block record\",\n    test: () => true,\n    action: _ref2 => {\n      var {\n        context,\n        workspace,\n        output\n      } = _ref2;\n      workspace.blockRecords.push(initialBlockRecord(context));\n    }\n  }],\n  blockGraft: [{\n    description: \"Set up block record\",\n    test: () => true,\n    action: _ref3 => {\n      var {\n        context,\n        workspace,\n        output\n      } = _ref3;\n      workspace.blockRecords.push(initialBlockRecord(context));\n    }\n  }],\n  mark: [{\n    description: \"Add chapter number to block record\",\n    test: _ref4 => {\n      var {\n        context\n      } = _ref4;\n      return context.sequences[0].element.subType === \"chapter\";\n    },\n    action: _ref5 => {\n      var {\n        config,\n        context,\n        workspace,\n        output\n      } = _ref5;\n      workspace.blockRecords[workspace.blockRecords.length - 1].perfChapter = context.sequences[0].element.atts[\"number\"];\n    }\n  }],\n  endDocument: [{\n    description: \"Populate report\",\n    test: () => true,\n    action: _ref6 => {\n      var {\n        workspace,\n        output\n      } = _ref6;\n      for (var [recordN, record] of Object.entries(workspace.blockRecords)) {\n        if (!record.perfChapter) {\n          continue;\n        }\n        var usfmChapterPos = recordN;\n        var found = false;\n        while (usfmChapterPos > 0 && !found) {\n          if (workspace.blockRecords[usfmChapterPos - 1].type === 'paragraph' || workspace.blockRecords[usfmChapterPos - 1].subType === 'title') {\n            found = true;\n          } else {\n            usfmChapterPos--;\n          }\n        }\n        output.report[usfmChapterPos.toString()] = record.perfChapter;\n      }\n    }\n  }]\n};\nmodule.exports = {\n  calculateUsfmChapterPositionsActions\n};", "\"use strict\";\n\nvar oneifyTag = t => {\n  if (['toc', 'toca', 'mt', 'imt', 's', 'ms', 'mte', 'sd'].includes(t)) {\n    return t + '1';\n  }\n  return t;\n};\nvar buildMilestone = function buildMilestone(type) {\n  var atts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (atts == null) atts = {};\n  var str = \"\\\\\".concat(type, \"-s |\");\n  for (var [key, value] of Object.entries(atts)) {\n    if (key === \"x-morph\" && typeof value !== \"string\") {\n      str = str + oneifyTag(key) + \"=\\\"\" + value.join(',') + \"\\\" \";\n    } else {\n      str = str + oneifyTag(key) + \"=\\\"\" + value + \"\\\" \";\n    }\n  }\n  ;\n  return str + \"\\\\*\";\n};\nvar buildEndWrapper = function buildEndWrapper(type) {\n  var atts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var isnested = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (atts == null) atts = {};\n  var str = \"|\";\n  for (var [key, value] of Object.entries(atts)) {\n    str = str + oneifyTag(key) + \"=\\\"\" + value + \"\\\" \";\n  }\n  ;\n  str = str + \"\\\\\";\n\n  // if it's nested, we simply add a \"+\" sign before the type\n  if (isnested) {\n    str = str + \"+\";\n  }\n  return str + type + \"*\";\n};\nvar perfToUsfmActions = {\n  startDocument: [{\n    description: \"Set up environment\",\n    test: () => true,\n    action: _ref => {\n      var {\n        context,\n        workspace\n      } = _ref;\n      workspace.usfmBits = [''];\n      workspace.nestedWrapper = 0;\n      for (var [key, value] of Object.entries(context.document.metadata.document).filter(kv => !['tags', 'properties', 'bookCode', 'cl'].includes(kv[0]))) {\n        workspace.usfmBits.push(\"\\\\\".concat(oneifyTag(key), \" \").concat(value, \"\\n\"));\n      }\n      ;\n    }\n  }],\n  blockGraft: [{\n    description: \"Follow block grafts\",\n    test: _ref2 => {\n      var {\n        context\n      } = _ref2;\n      return ['title', 'heading', 'introduction'].includes(context.sequences[0].block.subType);\n    },\n    action: environment => {\n      var contextSequence = environment.context.sequences[0];\n      var chapterValue = environment.config.report[contextSequence.block.blockN.toString()];\n      var target = contextSequence.block.target;\n      if (chapterValue && contextSequence.type === \"main\") {\n        environment.workspace.usfmBits.push(\"\\n\\\\c \".concat(chapterValue, \"\\n\"));\n      }\n      if (target) {\n        environment.context.renderer.renderSequenceId(environment, target);\n      }\n    }\n  }],\n  inlineGraft: [{\n    description: \"Follow inline grafts\",\n    test: () => true,\n    action: environment => {\n      var target = environment.context.sequences[0].element.target;\n      if (target) {\n        environment.context.renderer.renderSequenceId(environment, target);\n      }\n    }\n  }],\n  startParagraph: [{\n    description: \"Output footnote paragraph tag (footnote)\",\n    test: _ref3 => {\n      var {\n        context\n      } = _ref3;\n      return context.sequences[0].block.subType === \"usfm:f\" && context.sequences[0].type === \"footnote\" || context.sequences[0].block.subType === \"usfm:x\" && context.sequences[0].type === \"xref\";\n    },\n    action: _ref4 => {\n      var {\n        context,\n        workspace,\n        config\n      } = _ref4;\n      workspace.nestedWrapper = 0;\n      var contextSequence = context.sequences[0];\n      workspace.usfmBits.push(\"\\\\\".concat(oneifyTag(contextSequence.block.subType.split(':')[1]), \" \"));\n    }\n  }, {\n    description: \"Output footnote note_caller tag (footnote)\",\n    test: _ref5 => {\n      var {\n        context\n      } = _ref5;\n      return context.sequences[0].block.subType === \"usfm:f\" || context.sequences[0].block.subType === \"usfm:x\";\n    },\n    action: _ref6 => {\n      var {\n        context,\n        workspace,\n        config\n      } = _ref6;\n      workspace.nestedWrapper = 0;\n    }\n  }, {\n    description: \"Output paragraph tag (main)\",\n    test: () => true,\n    action: _ref7 => {\n      var {\n        context,\n        workspace,\n        config\n      } = _ref7;\n      workspace.nestedWrapper = 0;\n      var contextSequence = context.sequences[0];\n      var chapterValue = config.report[contextSequence.block.blockN.toString()];\n      if (chapterValue && contextSequence.type === \"main\") {\n        workspace.usfmBits.push(\"\\n\\\\c \".concat(chapterValue, \"\\n\"));\n      }\n      workspace.usfmBits.push(\"\\n\\\\\".concat(oneifyTag(contextSequence.block.subType.split(':')[1]), \"\\n\"));\n    }\n  }],\n  endParagraph: [{\n    description: \"Output footnote paragraph tag (footnote)\",\n    test: _ref8 => {\n      var {\n        context\n      } = _ref8;\n      return context.sequences[0].block.subType === \"usfm:f\" && context.sequences[0].type === \"footnote\" || context.sequences[0].block.subType === \"usfm:x\" && context.sequences[0].type === \"xref\";\n    },\n    action: _ref9 => {\n      var {\n        context,\n        workspace,\n        config\n      } = _ref9;\n      var contextSequence = context.sequences[0];\n      workspace.usfmBits.push(\"\\\\\".concat(oneifyTag(contextSequence.block.subType.split(':')[1]), \"*\"));\n    }\n  }, {\n    description: \"Output footnote note_caller tag (footnote)\",\n    test: _ref10 => {\n      var {\n        context\n      } = _ref10;\n      return context.sequences[0].block.subType === \"usfm:f\" || context.sequences[0].block.subType === \"usfm:x\";\n    },\n    action: _ref11 => {\n      var {\n        context,\n        workspace,\n        config\n      } = _ref11;\n    }\n  }, {\n    description: \"Output nl\",\n    test: () => true,\n    action: _ref12 => {\n      var {\n        workspace\n      } = _ref12;\n      workspace.usfmBits.push(\"\\n\");\n    }\n  }],\n  startMilestone: [{\n    description: \"Output start milestone\",\n    test: () => true,\n    action: _ref13 => {\n      var {\n        context,\n        workspace\n      } = _ref13;\n      var contextSequenceElement = context.sequences[0].element;\n      var newStartMileStone = buildMilestone(oneifyTag(contextSequenceElement.subType.split(':')[1]), contextSequenceElement.atts);\n      workspace.usfmBits.push(newStartMileStone);\n    }\n  }],\n  endMilestone: [{\n    description: \"Output end milestone\",\n    test: () => true,\n    action: _ref14 => {\n      var {\n        context,\n        workspace\n      } = _ref14;\n      workspace.usfmBits.push(\"\\\\\".concat(oneifyTag(context.sequences[0].element.subType.split(':')[1]), \"-e\\\\*\"));\n    }\n  }],\n  text: [{\n    description: \"Output text\",\n    test: () => true,\n    action: _ref15 => {\n      var {\n        context,\n        workspace\n      } = _ref15;\n      var text = context.sequences[0].element.text;\n      workspace.usfmBits.push(text);\n    }\n  }],\n  mark: [{\n    description: \"Output chapter or verses\",\n    test: () => true,\n    action: _ref16 => {\n      var {\n        context,\n        workspace\n      } = _ref16;\n      var element = context.sequences[0].element;\n      if (element.subType === 'verses') {\n        workspace.usfmBits.push(\"\\n\\\\v \".concat(element.atts['number'], \"\\n\"));\n      }\n    }\n  }],\n  endSequence: [{\n    description: \"Output \\\\cl\",\n    test: _ref17 => {\n      var {\n        context\n      } = _ref17;\n      return context.document.metadata.document.cl && context.sequences[0].type === \"title\";\n    },\n    action: _ref18 => {\n      var {\n        context,\n        workspace\n      } = _ref18;\n      workspace.usfmBits.push(\"\\n\\\\cl \".concat(context.document.metadata.document.cl, \"\\n\"));\n    }\n  }],\n  startWrapper: [{\n    description: \"Output start tag\",\n    test: () => true,\n    action: _ref19 => {\n      var {\n        workspace,\n        context\n      } = _ref19;\n      var contextSequence = context.sequences[0];\n      // handle nested wrappers : https://ubsicap.github.io/usfm/characters/nesting.html\n      if (workspace.nestedWrapper > 0) {\n        workspace.usfmBits.push(\"\\\\+\".concat(oneifyTag(contextSequence.element.subType.split(':')[1]), \" \"));\n      } else {\n        workspace.usfmBits.push(\"\\\\\".concat(oneifyTag(contextSequence.element.subType.split(':')[1]), \" \"));\n      }\n      workspace.nestedWrapper += 1;\n    }\n  }],\n  endWrapper: [{\n    description: \"Output end tag\",\n    test: _ref20 => {\n      var {\n        context\n      } = _ref20;\n      return !['fr', 'fq', 'fqa', 'fk', 'fl', 'fw', 'fp', 'ft', 'xo', 'xk', 'xq', 'xt', 'xta'].includes(context.sequences[0].element.subType.split(':')[1]);\n    },\n    action: _ref21 => {\n      var {\n        workspace,\n        context\n      } = _ref21;\n      workspace.nestedWrapper -= 1;\n      var contextSequence = context.sequences[0];\n      var subType = contextSequence.element.subType.split(':')[1];\n      var isNested = workspace.nestedWrapper > 0;\n      if (subType === \"w\") {\n        var newEndW = buildEndWrapper(oneifyTag(subType), contextSequence.element.atts, isNested);\n        workspace.usfmBits.push(newEndW);\n      } else {\n        // handle nested wrappers : https://ubsicap.github.io/usfm/characters/nesting.html\n        if (isNested) {\n          workspace.usfmBits.push(\"\\\\+\".concat(oneifyTag(contextSequence.element.subType.split(':')[1]), \"*\"));\n        } else {\n          workspace.usfmBits.push(\"\\\\\".concat(oneifyTag(contextSequence.element.subType.split(':')[1]), \"*\"));\n        }\n      }\n    }\n  }, {\n    description: \"Do NOT output end tag\",\n    test: () => true,\n    action: _ref22 => {\n      var {\n        workspace\n      } = _ref22;\n      workspace.nestedWrapper -= 1;\n    }\n  }],\n  endDocument: [{\n    description: \"Build output\",\n    test: () => true,\n    action: _ref23 => {\n      var {\n        workspace,\n        output\n      } = _ref23;\n      output.usfm = workspace.usfmBits.join('').replace(/(\\s*)\\n(\\s*)/gm, \"\\n\");\n    }\n  }]\n};\nmodule.exports = {\n  perfToUsfmActions\n};", "\"use strict\";\n\nvar {\n  wordCountActions\n} = require('./wordCount');\nvar {\n  calculateUsfmChapterPositionsActions\n} = require('./calculateUsfmChapterPositions');\nvar {\n  perfToUsfmActions\n} = require('./perfToUsfm');\nmodule.exports = {\n  wordCountActions,\n  perfToUsfmActions,\n  calculateUsfmChapterPositionsActions\n};", "\"use strict\";\n\nvar _PerfRenderFromJson = _interopRequireDefault(require(\"../../../PerfRenderFromJson\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar {\n  wordCountActions\n} = require('../renderActions/wordCount');\nvar wordCountCode = function wordCountCode(_ref) {\n  var {\n    perf\n  } = _ref;\n  var cl = new _PerfRenderFromJson.default({\n    srcJson: perf,\n    actions: wordCountActions\n  });\n  var output = {};\n  cl.renderDocument({\n    docId: \"\",\n    config: {},\n    output\n  });\n  return {\n    report: output.report\n  };\n};\nvar wordCount = {\n  name: \"wordCount\",\n  type: \"Transform\",\n  description: \"PERF=>JSON: Generates positions for inserting chapter numbers into USFM\",\n  inputs: [{\n    name: \"perf\",\n    type: \"json\",\n    source: \"\"\n  }],\n  outputs: [{\n    name: \"report\",\n    type: \"json\"\n  }],\n  code: wordCountCode\n};\nmodule.exports = {\n  wordCount\n};", "\"use strict\";\n\nvar _PerfRenderFromJson = _interopRequireDefault(require(\"../../../PerfRenderFromJson\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar {\n  calculateUsfmChapterPositionsActions\n} = require('../renderActions/calculateUsfmChapterPositions');\nvar calculateUsfmChapterPositionsCode = function calculateUsfmChapterPositionsCode(_ref) {\n  var {\n    perf\n  } = _ref;\n  var cl = new _PerfRenderFromJson.default({\n    srcJson: perf,\n    actions: calculateUsfmChapterPositionsActions\n  });\n  var output = {};\n  cl.renderDocument({\n    docId: \"\",\n    config: {\n      maxLength: 60\n    },\n    output\n  });\n  return {\n    report: output.report\n  };\n};\nvar calculateUsfmChapterPositions = {\n  name: \"calculateUsfmChapterPositions\",\n  type: \"Transform\",\n  description: \"PERF=>JSON: Generates positions for inserting chapter numbers into USFM\",\n  inputs: [{\n    name: \"perf\",\n    type: \"json\",\n    source: \"\"\n  }],\n  outputs: [{\n    name: \"report\",\n    type: \"json\"\n  }],\n  code: calculateUsfmChapterPositionsCode\n};\nmodule.exports = {\n  calculateUsfmChapterPositions\n};", "\"use strict\";\n\nvar _PerfRenderFromJson = _interopRequireDefault(require(\"../../../PerfRenderFromJson\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar {\n  perfToUsfmActions\n} = require('../renderActions/perfToUsfm');\nvar perfToUsfmCode = function perfToUsfmCode(_ref) {\n  var {\n    perf,\n    report\n  } = _ref;\n  var cl = new _PerfRenderFromJson.default({\n    srcJson: perf,\n    actions: perfToUsfmActions\n  });\n  var output = {};\n  cl.renderDocument({\n    docId: \"\",\n    config: {\n      report\n    },\n    output\n  });\n  return {\n    usfm: output.usfm\n  };\n};\nvar perfToUsfm = {\n  name: \"perfToUsfm\",\n  type: \"Transform\",\n  description: \"PERF=>USFM\",\n  inputs: [{\n    name: \"perf\",\n    type: \"json\",\n    source: \"\"\n  }, {\n    name: \"report\",\n    type: \"json\",\n    source: \"\"\n  }],\n  outputs: [{\n    name: \"usfm\",\n    type: \"text\"\n  }],\n  code: perfToUsfmCode\n};\nmodule.exports = {\n  perfToUsfm\n};", "\"use strict\";\n\nvar {\n  wordCount\n} = require('./wordCount');\nvar {\n  calculateUsfmChapterPositions\n} = require('./calculateUsfmChapterPositions');\nvar {\n  perfToUsfm\n} = require('./perfToUsfm');\nmodule.exports = {\n  wordCount,\n  perfToUsfm,\n  calculateUsfmChapterPositions\n};", "\"use strict\";\n\nvar renderActions = require('./renderActions');\nvar transforms = require('./transforms');\nmodule.exports = {\n  transforms,\n  renderActions\n};", "\"use strict\";\n\nvar justTheBibleActions = {\n  startMilestone: [{\n    description: \"Ignore startMilestone events\",\n    test: () => true,\n    action: () => {}\n  }],\n  endMilestone: [{\n    description: \"Ignore endMilestone events\",\n    test: () => true,\n    action: () => {}\n  }],\n  startWrapper: [{\n    description: \"Ignore startWrapper events\",\n    test: () => true,\n    action: () => {}\n  }],\n  endWrapper: [{\n    description: \"Ignore endWrapper events\",\n    test: () => true,\n    action: () => {}\n  }],\n  blockGraft: [{\n    description: \"Ignore blockGraft events, except for title (\\\\mt)\",\n    test: environment => environment.context.sequences[0].block.subType !== 'title',\n    action: environment => {}\n  }],\n  inlineGraft: [{\n    description: \"Ignore inlineGraft events\",\n    test: () => true,\n    action: () => {}\n  }],\n  mark: [{\n    description: \"Ignore mark events, except for chapter and verses\",\n    test: _ref => {\n      var {\n        context\n      } = _ref;\n      return !['chapter', 'verses'].includes(context.sequences[0].element.subType);\n    },\n    action: () => {}\n  }]\n};\nmodule.exports = {\n  justTheBibleActions\n};", "\"use strict\";\n\nvar {\n  identityActions\n} = require('./identity');\nvar {\n  justTheBibleActions\n} = require('./justTheBible');\nmodule.exports = {\n  identityActions,\n  justTheBibleActions\n};", "\"use strict\";\n\n// import identityActions from \"./identityActions\";\nvar {\n  identityActions\n} = require('../../perfToPerf/renderActions/identity');\nvar identityActionsCode = function identityActionsCode(_ref) {\n  var {\n    perf\n  } = _ref;\n  var cl = new PerfRenderFromJson({\n    srcJson: perf,\n    actions: identityActions\n  });\n  var output = {};\n  cl.renderDocument({\n    docId: \"\",\n    config: {},\n    output\n  });\n  return {\n    verseWords: output.cv\n  };\n};\nvar identity = {\n  name: \"identityTransform\",\n  type: \"Transform\",\n  description: \"identity operation\",\n  inputs: [{\n    name: \"perf\",\n    type: \"json\",\n    source: \"\"\n  }],\n  outputs: [{\n    name: \"perf\",\n    type: \"json\"\n  }],\n  code: identityActionsCode\n};\nmodule.exports = {\n  identity\n};", "\"use strict\";\n\nvar _PerfRenderFromJson = _interopRequireDefault(require(\"../../../PerfRenderFromJson\"));\nvar _mergeActions = _interopRequireDefault(require(\"../../../mergeActions\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar {\n  identityActions\n} = require('../../perfToPerf/renderActions/identity');\nvar {\n  justTheBibleActions\n} = require('../../perfToPerf/renderActions/justTheBible');\nvar justTheBibleCode = function justTheBibleCode(_ref) {\n  var {\n    perf\n  } = _ref;\n  var cl = new _PerfRenderFromJson.default({\n    srcJson: perf,\n    actions: (0, _mergeActions.default)([justTheBibleActions, identityActions])\n  });\n  var output = {};\n  cl.renderDocument({\n    docId: \"\",\n    config: {},\n    output\n  });\n  return {\n    perf: output.perf\n  }; // identityActions currently put PERF directly in output\n};\n\nvar justTheBible = {\n  name: \"justTheBible\",\n  type: \"Transform\",\n  description: \"PERF=>PERF: Strips most markup\",\n  documentation: \"This transform removes milestones, wrappers and most marks. It has been used in several pipelines. It may also be stripping metaContent.\",\n  inputs: [{\n    name: \"perf\",\n    type: \"json\",\n    source: \"\"\n  }],\n  outputs: [{\n    name: \"perf\",\n    type: \"json\"\n  }],\n  code: justTheBibleCode\n};\nmodule.exports = {\n  justTheBible\n};", "// object library - specific behaviors for each object type\n\nconst objectBehaviors = {};\n\n// return true if item is a primitive data type\nconst isPrimitive = (item) => {\n  let type = typeof item;\n  return type === 'number' || type === 'string' || type === 'boolean'\n    || type === 'undefined' || type === 'bigint' || type === 'symbol'\n    || item === null;\n};\n\n// establish a \"type\" keyword for an object\nconst objectType = (obj) => {\n\n  // match primitives right away\n  if (isPrimitive(obj) || !(obj instanceof Object)) {\n    return 'primitive';\n  }\n\n  // try to match object constructor name\n  const consName = obj.constructor && obj.constructor.name\n    && obj.constructor.name.toLowerCase();\n  if (typeof consName === 'string' && consName.length\n    && objectBehaviors[consName]) {\n    return consName;\n  }\n\n  // try to match by looping through objectBehaviors type property\n  let typeTry;\n  for (const name in objectBehaviors) {\n    typeTry = objectBehaviors[name].type;\n    if (!typeTry || obj instanceof typeTry) {\n      // console.log('objectType matched in a fall-back loop name:',name);\n      return name;\n    }\n  }\n  return 'unknown';\n};\n\n/**\n * define object behaviors\n * Note: The order is important - custom objects must be listed BEFORE\n *       the standard JavaScript Object.\n * @namespace\n * @property {*} type - object data \"type\"\n * @property {Boolean} [mayDeepCopy] - true if object may be deep copied\n * @property {function} [addElement] - add a single element to object\n * @property {function} [makeEmpty] - make an empty object\n * @property {function} makeShallow - make shallow copy of object\n * @property {function} [iterate] - iterate over objects elements\n *                                  with callback({key,value,\"type\"})\n */\n\nconst arrayAddElement = (array, key, value) =>\n  Array.prototype.push.call(array, value);\n\nconst arrayMakeEmpty = source => {\n  const newArray = [];\n  Object.setPrototypeOf(newArray, Object.getPrototypeOf(source));\n  return newArray;\n};\n\nconst arrayMakeShallow = source => {\n  const dest = [...source];\n  Object.setPrototypeOf(dest, Object.getPrototypeOf(source));\n  return dest;\n};\n\nconst arrayIterate = (array, copyNonEnumerables, callback) => {\n  const len = array.length;\n  for (let i = 0; i < len; i++) {\n    const val = array[i];\n    const elInfo = {\n      key: i,\n      value: val,\n      type: objectType(val)\n    };\n    callback(elInfo);\n  }\n};\n\nconst addArrayBehavior = () => {\n  Object.assign(objectBehaviors, {\n    'array': {\n      type: Array,\n      mayDeepCopy: true,\n      addElement: arrayAddElement,\n      makeEmpty: arrayMakeEmpty,\n      makeShallow: arrayMakeShallow,\n      iterate: arrayIterate\n    }\n  });\n};\n\nconst addDateBehavior = () => {\n  Object.assign(objectBehaviors, {\n    'date': {\n      type: Date,\n      makeShallow: date => new Date(date.getTime()),\n    }\n  });\n};\n\nconst addRegExpBehavior = () => {\n  Object.assign(objectBehaviors, {\n    'regexp': {\n      type: RegExp,\n      makeShallow: src => new RegExp(src),\n    }\n  });\n};\n\nconst addFunctionBehavior = () => {\n  Object.assign(objectBehaviors, {\n    'function': {\n      type: Function,\n      makeShallow: fn => fn,\n    }\n  });\n};\n\nconst addErrorBehavior = () => {\n  Object.assign(objectBehaviors, {\n    'error': {\n      type: Error,\n      makeShallow: err => {\n        const errCopy = new Error(err.message);\n        errCopy.stack = err.stack;\n        return errCopy;\n      }\n    }\n  });\n};\n\n// in case they don't exist, perform existence checks on these\n// types before adding them\n\n// add a named TypedArray to objectBehaviors\nconst addTypedArrayBehavior = (name) => {\n  let type = (typeof global !== 'undefined' && global[name])\n    || (typeof window !== 'undefined' && window[name])\n    || (typeof WorkerGlobalScope !== 'undefined' && WorkerGlobalScope[name]);\n  if (typeof type !== 'undefined') {\n    objectBehaviors[name.toLowerCase()] = {\n      type,\n      makeShallow: source => type.from(source)\n    };\n  }\n};\n\nconst addAllTypedArrayBehaviors = () => {\n  const typedArrayNames = [\n    'Int8Array', 'Uint8Array', 'Uint8ClampedArray', 'Int16Array',\n    'Uint16Array', 'Int32Array', 'Uint32Array', 'Float32Array',\n    'Float32Array', 'Float64Array', 'BigInt64Array', 'BigUint64Array'\n  ];\n  typedArrayNames.forEach(name => addTypedArrayBehavior(name));\n};\n\nconst addArrayBufferBehavior = () => {\n  if (typeof ArrayBuffer !== 'undefined') {\n    Object.assign(objectBehaviors, {\n      'arraybuffer': {\n        type: ArrayBuffer,\n        makeShallow: buffer => buffer.slice(0)\n      }\n    });\n  }\n};\n\nconst addMapBehavior = () => {\n  if (typeof Map === 'undefined') { return; }\n  Object.assign(objectBehaviors, {\n    'map': {\n      type: Map,\n      mayDeepCopy: true,\n      addElement: (map, key, value) => map.set(key, value),\n      makeEmpty: () => new Map(),\n      makeShallow: sourceMap => new Map(sourceMap),\n      iterate: (map, copyNonEnumerables, callback) => {\n        map.forEach((val, key) => {\n          const elInfo = {\n            key: key,\n            value: val,\n            type: objectType(val)\n          };\n          callback(elInfo);\n        });\n      }\n    }\n  });\n};\n\nconst addSetBehavior = () => {\n  if (typeof Set === 'undefined') { return; }\n  Object.assign(objectBehaviors, {\n    'set': {\n      type: Set,\n      mayDeepCopy: true,\n      addElement: (set, key, value) => set.add(value),\n      makeEmpty: () => new Set(),\n      makeShallow: set => new Set(set),\n      iterate: (set, copyNonEnumerables, callback) => {\n        set.forEach(val => {\n          const elInfo = {\n            key: null,\n            value: val,\n            type: objectType(val)\n          };\n          callback(elInfo);\n        });\n      }\n    }\n  });\n};\n\nconst addWeakSetBehavior = () => {\n  if (typeof WeakSet === 'undefined') { return; }\n  Object.assign(objectBehaviors, {\n    'weakset': {\n      type: WeakSet,\n      makeShallow: wset => wset\n    }\n  });\n};\n\nconst addWeakMapBehavior = () => {\n  if (typeof WeakMap === 'undefined') { return; }\n  Object.assign(objectBehaviors, {\n    'weakmap': {\n      type: WeakMap,\n      makeShallow: wmap => wmap\n    }\n  });\n};\n\n// node.js Buffer\nconst addBufferBehavior = () => {\n  if (typeof Buffer === 'undefined') { return; }\n  Object.assign(objectBehaviors, {\n    'buffer': {\n      type: Buffer,\n      makeShallow: buf => Buffer.from(buf)\n    }\n  });\n};\n\n// always include Object, primitive, unknown\nconst objectAddElement = (obj, key, value, descriptor = undefined) => {\n  if (!descriptor) {\n    obj[key] = value;\n  } else {\n    Object.defineProperty(obj, key, descriptor);\n  }\n};\n\nconst objectMakeEmpty = source => {\n  const newObj = {};\n  Object.setPrototypeOf(newObj, Object.getPrototypeOf(source));\n  return newObj;\n};\n\nconst objectMakeShallow = source => {\n  const dest = Object.assign({}, source);\n  Object.setPrototypeOf(dest, Object.getPrototypeOf(source));\n  return dest;\n};\n\nconst objectIterate = (obj, copyNonEnumerables, callback) => {\n  const keys = copyNonEnumerables ?\n    Object.getOwnPropertyNames(obj) : Object.keys(obj);\n  const len = keys.length;\n  for (let i = 0; i < len; i++) {\n    const key = keys[i], value = obj[key], elInfo = {\n      key, value, type: objectType(value)\n    };\n    if (copyNonEnumerables && !obj.propertyIsEnumerable(key)) {\n      elInfo.descriptor = Object.getOwnPropertyDescriptor(obj, key);\n    }\n    callback(elInfo);\n  }\n};\n\nconst addObjectBehavior = () => {\n  Object.assign(objectBehaviors, {\n    'object': {\n      type: Object,\n      mayDeepCopy: true,\n      addElement: objectAddElement,\n      makeEmpty: objectMakeEmpty,\n      makeShallow: objectMakeShallow,\n      iterate: objectIterate\n    }\n  });\n};\n\nconst addUnknownAndPrimitive = () => {\n  Object.assign(objectBehaviors, {\n    'unknown': {\n      makeShallow: source => source\n    },\n    'primitive': {\n      makeShallow: source => source\n    }\n  });\n};\n\naddArrayBehavior();\naddDateBehavior();\naddRegExpBehavior();\naddFunctionBehavior();\naddErrorBehavior();\naddAllTypedArrayBehaviors();\naddArrayBufferBehavior();\naddMapBehavior();\naddSetBehavior();\naddWeakSetBehavior();\naddWeakMapBehavior();\naddBufferBehavior();\naddObjectBehavior();\naddUnknownAndPrimitive();\n\n/**\n * object actions as defined in objectBehaviors { }\n * @typedef {Object} ObjectActions\n * @property {Boolean} mayDeepCopy\n * @property {Function} addElement\n * @property {Function} makeEmpty\n * @property {Function} makeShallow\n * @property {Function} iterate\n */\n/**\n * return object actions for the named typed\n * @param {string} typeName\n * @return {ObjectActions}\n */\nfunction objectActions(typeName) {\n  return objectBehaviors[typeName];\n}\n\nmodule.exports = [\n  isPrimitive,\n  objectType,\n  objectActions\n];\n", "\"use strict\";const[isPrimitive,objectType,objectActions]=require(\"./dca-library.js\"),defaultOpts={goDeep:!0,includeNonEnumerable:!1,detectCircular:!0,maxDepth:20};function setMissingOptions(e){Object.keys(defaultOpts).forEach(t=>{void 0===e[t]&&(e[t]=defaultOpts[t])})}class Watcher{constructor(){this._seenMap=new WeakMap}setAsCopied(e,t){e instanceof Object&&this._seenMap.set(e,t)}wasCopied(e){return e instanceof Object&&this._seenMap.has(e)}getCopy(e){return this._seenMap.get(e)}}function copyElement(e,t,c){const{options:o,watcher:s}=c;let n;return t.mayDeepCopy?(n=t.makeEmpty(e),o.detectCircular&&s.setAsCopied(e,n)):n=t.makeShallow(e),n}function checkForExceededDepth(e,t){if(e>=t)throw`Error max depth of ${t} levels exceeded, possible circular reference`}const copyObjectContents=(e,t,c)=>{const{destObject:o,srcType:s,watcher:n,options:r}=t,p=r.detectCircular;checkForExceededDepth(++c,r.maxDepth);const i=objectActions(s);if(!i.mayDeepCopy)return;const a=i.addElement;i.iterate(e,r.includeNonEnumerable,e=>{const t=e.value,s=e.type,i=objectActions(s);let d,l=!1;p&&n.wasCopied(t)?(d=n.getCopy(t),l=!0):d=copyElement(t,i,{options:r,watcher:n}),a(o,e.key,d,e.descriptor),i.mayDeepCopy&&!l&&copyObjectContents(t,{destObject:d,srcType:s,watcher:n,options:r},c)})};function deepCopy(e,t=defaultOpts){if(setMissingOptions(t),isPrimitive(e))return e;const c=objectType(e),o=objectActions(c);if(!t.goDeep||!o.mayDeepCopy)return o.makeShallow(e);const s=t.detectCircular?new Watcher:null;let n=o.makeEmpty(e);return t.detectCircular&&s.setAsCopied(e,n),copyObjectContents(e,{destObject:n,srcType:c,watcher:s,options:t},0),n}module.exports=deepCopy;", "\"use strict\";\n\nvar _deepCopyAll = _interopRequireDefault(require(\"deep-copy-all\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar doMerge1 = content => {\n  var ret = [];\n  for (var element of content) {\n    if (typeof element === 'string') {\n      if (ret.length > 0 && typeof ret[ret.length - 1] === 'string') {\n        ret[ret.length - 1] += element;\n      } else {\n        ret.push(element);\n      }\n    } else {\n      if (element.content) {\n        element.content = doMerge1(element.content);\n      }\n      if (element.metaContent) {\n        element.metaContent = doMerge1(element.content);\n      }\n      ret.push(element);\n    }\n  }\n  return ret;\n};\nvar doMerge = perf => {\n  var newPerf = (0, _deepCopyAll.default)(perf);\n  for (var seq of Object.values(newPerf.sequences)) {\n    for (var block of seq.blocks) {\n      if (block.content) {\n        block.content = doMerge1(block.content);\n      }\n      if (block.metaContent) {\n        block.metaContent = doMerge1(block.metaContent);\n      }\n    }\n  }\n  return newPerf;\n};\nvar mergePerfTextCode = function mergePerfTextCode(_ref) {\n  var {\n    perf\n  } = _ref;\n  return {\n    perf: doMerge(perf)\n  };\n};\nvar mergePerfText = {\n  name: \"mergePerfText\",\n  type: \"Transform\",\n  description: \"PERF=>PERF: Merge consecutive text strings\",\n  inputs: [{\n    name: \"perf\",\n    type: \"json\",\n    source: \"\"\n  }],\n  outputs: [{\n    name: \"perf\",\n    type: \"json\"\n  }],\n  code: mergePerfTextCode\n};\nmodule.exports = {\n  mergePerfText,\n  mergePerfTextCode\n};", "\"use strict\";\n\nvar {\n  identity\n} = require('./identity');\nvar {\n  justTheBible\n} = require('./justTheBible');\nvar {\n  mergePerfText,\n  mergePerfTextCode\n} = require('./mergePerfText');\nmodule.exports = {\n  identity,\n  justTheBible,\n  mergePerfText,\n  mergePerfTextCode\n};", "\"use strict\";\n\nvar renderActions = require('./renderActions');\nvar transforms = require('./transforms');\nmodule.exports = {\n  transforms,\n  renderActions\n};", "\"use strict\";\n\nvar alignment = require('./alignment');\nvar xToPerf = require('./xToPerf');\nvar sofriaToSofria = require('./sofriaToSofria');\nvar perfToX = require('./perfToX');\nvar perfToPerf = require('./perfToPerf');\nmodule.exports = {\n  xToPerf,\n  perfToX,\n  sofriaToSofria,\n  alignment,\n  perfToPerf\n};", "[\n  {\n    \"id\": 0,\n    \"type\": \"Inputs\",\n    \"inputs\": {\n      \"usfm\": \"text\",\n      \"selectors\": \"json\"\n    }\n  },\n  {\n    \"id\": 2,\n    \"title\": \"USFM to PERF\",\n    \"name\": \"usfmToPerf\",\n    \"type\": \"Transform\",\n    \"inputs\": [\n      {\n        \"name\": \"usfm\",\n        \"type\": \"text\",\n        \"source\": \"Input usfm\"\n      },\n      {\n        \"name\": \"selectors\",\n        \"type\": \"json\",\n        \"source\": \"Input selectors\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\"\n      }\n    ],\n    \"description\": \"USFM=>PERF: Conversion via Proskomma\"\n  },\n  {\n    \"id\": 999,\n    \"type\": \"Outputs\",\n    \"outputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\",\n        \"source\": \"Transform 2 perf\"\n      }\n    ]\n  }\n]", "[\n  {\n    \"id\": 0,\n    \"type\": \"Inputs\",\n    \"inputs\": {\n      \"perf\": \"json\",\n      \"strippedAlignment\": \"json\"\n    }\n  },\n  {\n    \"id\": 1,\n    \"title\": \"Count stripped perf words\",\n    \"name\": \"verseWords\",\n    \"transformName\": \"verseWords\",\n    \"type\": \"Transform\",\n    \"inputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\",\n        \"source\": \"Input perf\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"verseWords\",\n        \"type\": \"json\"\n      }\n    ],\n    \"description\": \"PERF=>JSON: Counts words occurrences\"\n  },\n  {\n    \"id\": 2,\n    \"title\": \"Merge Back Into Stripped (roundtrip)\",\n    \"name\": \"mergeAlignment\",\n    \"transformName\": \"mergeAlignment\",\n    \"type\": \"Transform\",\n    \"inputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\",\n        \"source\": \"Input perf\"\n      },\n      {\n        \"name\": \"strippedAlignment\",\n        \"type\": \"json\",\n        \"source\": \"Input strippedAlignment\"\n      },\n      {\n        \"name\": \"verseWords\",\n        \"type\": \"json\",\n        \"source\": \"Transform 1 verseWords\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\"\n      },\n      {\n        \"name\": \"unalignedWords\",\n        \"type\": \"json\"\n      }\n    ],\n    \"description\": \"PERF=>PERF adds report to verses\"\n  },\n  {\n    \"id\": 3,\n    \"title\": \"Merge Merged PERF Text\",\n    \"name\": \"mergePerfText\",\n    \"transformName\": \"mergePerfText\",\n    \"type\": \"Transform\",\n    \"inputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\",\n        \"source\": \"Transform 2 perf\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\"\n      }\n    ],\n    \"description\": \"PERF=>PERF: Merge consecutive text strings\"\n  },\n  {\n    \"id\": 999,\n    \"type\": \"Outputs\",\n    \"outputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\",\n        \"source\": \"Transform 3 perf\"\n      },\n      {\n        \"name\": \"unalignedWords\",\n        \"type\": \"json\",\n        \"source\": \"Transform 2 unalignedWords\"\n      }\n    ]\n  }\n]", "[\n  {\n    \"id\": 0,\n    \"type\": \"Inputs\",\n    \"inputs\": {\n      \"perf\": \"json\"\n    }\n  },\n  {\n    \"id\": 1,\n    \"title\": \"Count stripped perf words\",\n    \"name\": \"verseWords\",\n    \"type\": \"Transform\",\n    \"transformName\": \"verseWords\",\n    \"inputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\",\n        \"source\": \"Input perf\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"verseWords\",\n        \"type\": \"json\"\n      }\n    ],\n    \"description\": \"PERF=>JSON: Counts words occurrences\"\n  },\n  {\n    \"id\": 2,\n    \"title\": \"Strip Alignment\",\n    \"name\": \"stripAlignment\",\n    \"type\": \"Transform\",\n    \"transformName\": \"stripAlignment\",\n    \"inputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\",\n        \"source\": \"Input perf\"\n      },\n      {\n        \"name\": \"verseWords\",\n        \"type\": \"json\",\n        \"source\": \"Transform 1 verseWords\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\"\n      },\n      {\n        \"name\": \"strippedAlignment\",\n        \"type\": \"json\"\n      },\n      {\n        \"name\": \"unalignedWords\",\n        \"type\": \"json\"\n      }\n    ],\n    \"description\": \"PERF=>PERF: Strips alignment markup\"\n  },\n  {\n    \"id\": 3,\n    \"title\": \"Merge stripped perf\",\n    \"name\": \"mergePerfText\",\n    \"type\": \"Transform\",\n    \"transformName\": \"mergePerfText\",\n    \"inputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\",\n        \"source\": \"Transform 2 perf\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\"\n      }\n    ],\n    \"description\": \"PERF=>PERF: Merge consecutive text strings\"\n  },\n  {\n    \"id\": 999,\n    \"type\": \"Outputs\",\n    \"outputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\",\n        \"source\": \"Transform 3 perf\"\n      },\n      {\n        \"name\": \"strippedAlignment\",\n        \"type\": \"json\",\n        \"source\": \"Transform 2 strippedAlignment\"\n      },\n      {\n        \"name\": \"unalignedWords\",\n        \"type\": \"json\",\n        \"source\": \"Transform 2 unalignedWords\"\n      }\n    ]\n  }\n]\n", "[\n  {\n    \"id\": 0,\n    \"type\": \"Inputs\",\n    \"inputs\": {\n      \"perf\": \"json\"\n    }\n  },\n  {\n    \"id\": 1,\n    \"title\": \"Generate report\",\n    \"name\": \"calculateUsfmChapterPositions\",\n    \"type\": \"Transform\",\n    \"inputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\",\n        \"source\": \"Input perf\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"report\",\n        \"type\": \"json\"\n      }\n    ],\n    \"description\": \"Generate report from perf to calculate the position of the chapters\"\n  },\n  {\n    \"id\": 2,\n    \"title\": \"PERF to USFM\",\n    \"name\": \"perfToUsfm\",\n    \"type\": \"Transform\",\n    \"inputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\",\n        \"source\": \"Input perf\"\n      },\n      {\n        \"name\": \"report\",\n        \"type\": \"json\",\n        \"source\": \"Transform 1 report\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"usfm\",\n        \"type\": \"text\"\n      }\n    ],\n    \"description\": \"PERF=>USFM: Conversion via Proskomma\"\n  },\n  {\n    \"id\": 999,\n    \"type\": \"Outputs\",\n    \"outputs\": [\n      {\n        \"name\": \"usfm\",\n        \"type\": \"text\",\n        \"source\": \"Transform 2 usfm\"\n      }\n    ]\n  }\n]", "[\n  {\n    \"id\": 0,\n    \"type\": \"Inputs\",\n    \"inputs\": {\n      \"perf\": \"json\"\n    }\n  },\n  {\n    \"id\": 1,\n    \"title\": \"Simplify Input PERF\",\n    \"name\": \"justTheBible\",\n    \"transformName\": \"justTheBible\",\n    \"type\": \"Transform\",\n    \"inputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\",\n        \"source\": \"Input perf\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\"\n      }\n    ]\n  },\n  {\n    \"id\": 999,\n    \"type\": \"Outputs\",\n    \"outputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\",\n        \"source\": \"Transform 1 perf\"\n      }\n    ]\n  }\n]", "\"use strict\";\n\nvar _usfmToPerfPipeline = _interopRequireDefault(require(\"./usfmToPerfPipeline.json\"));\nvar _mergeAlignmentPipeline = _interopRequireDefault(require(\"./mergeAlignmentPipeline.json\"));\nvar _stripAlignmentPipeline = _interopRequireDefault(require(\"./stripAlignmentPipeline.json\"));\nvar _perfToUsfmPipeline = _interopRequireDefault(require(\"./perfToUsfmPipeline.json\"));\nvar _justTheBiblePipeline = _interopRequireDefault(require(\"./justTheBiblePipeline.json\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nmodule.exports = {\n  usfmToPerfPipeline: _usfmToPerfPipeline.default,\n  mergeAlignmentPipeline: _mergeAlignmentPipeline.default,\n  stripAlignmentPipeline: _stripAlignmentPipeline.default,\n  perfToUsfmPipeline: _perfToUsfmPipeline.default,\n  justTheBiblePipeline: _justTheBiblePipeline.default\n};", "\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nvar namespaceTransforms = require('../render');\nvar officialPipelines = require('../pipelines');\nclass PipelineHandler {\n  /**\r\n   *\r\n   * @param {Proskomma} proskomma - a proskomma instance\r\n   * @param {JSON[]} pipelines - a list of the pipelines\r\n   * @param {JSON[]} transforms - a list of the transforms\r\n   * @param {boolean} verbose - print pipeline reading step by step\r\n   */\n  constructor(_ref) {\n    var {\n      pipelines = null,\n      transforms = null,\n      proskomma = null,\n      verbose = false\n    } = _ref;\n    if (proskomma !== null) {\n      this.proskomma = proskomma;\n      var query = '{ id }';\n      var content = proskomma.gqlQuerySync(query) || {};\n      if (!content || !content.data.id) {\n        throw new Error('Provided Proskomma instance does not have any ID');\n      }\n    }\n    this.pipelines = officialPipelines;\n    this.namespaces = namespaceTransforms;\n    this.transforms = {};\n    if (pipelines != null) {\n      for (var key of Object.keys(pipelines)) {\n        this.pipelines[key] = pipelines[key];\n      }\n    }\n    if (transforms != null) {\n      for (var _key of Object.keys(transforms)) {\n        this.transforms[_key] = transforms[_key];\n      }\n    }\n    this.verbose = verbose;\n  }\n  getProskomma() {\n    return this.proskomma;\n  }\n  setProskomma(proskomma) {\n    this.proskomma = proskomma;\n  }\n  listPipelinesNames() {\n    return Object.keys(this.pipelines).join('\\n');\n  }\n  listTransformsNames() {\n    return Object.keys(this.transforms).join('\\n');\n  }\n  listNamespacesNames() {\n    return Object.keys(this.namespaces).join('\\n');\n  }\n\n  /**\r\n   * Gets pipeline by given name\r\n   * @param {string} pipelineName - the pipeline name\r\n   * @param {object} data input data\r\n   * @return {pipeline} pipeline transforms\r\n   * @private\r\n   */\n  getPipeline(pipelineName, data) {\n    if (!this.pipelines[pipelineName]) {\n      throw new Error(\"Unknown pipeline name '\".concat(pipelineName, \"'\"));\n    }\n    var pipeline = this.pipelines[pipelineName];\n    var inputSpecs = pipeline[0].inputs;\n    if (Object.keys(inputSpecs).length !== Object.keys(data).length) {\n      throw new Error(\"\".concat(Object.keys(inputSpecs).length, \" input(s) expected by \").concat(pipelineName, \" but \").concat(Object.keys(data).length, \" provided (\").concat(Object.keys(data).join(', '), \")\"));\n    }\n    for (var [inputSpecName, inputSpecType] of Object.entries(inputSpecs)) {\n      if (!data[inputSpecName]) {\n        throw new Error(\"Input \".concat(inputSpecName, \" not provided as input to \").concat(pipelineName));\n      }\n      if (typeof data[inputSpecName] === 'string' !== (inputSpecType === 'text')) {\n        throw new Error(\"Input \".concat(inputSpecName, \" must be \").concat(inputSpecType, \" but \").concat(typeof data[inputSpecName] === 'string' ? 'text' : 'json', \" was provided\"));\n      }\n    }\n    return pipeline;\n  }\n\n  /**\r\n   * Generates and returns a report via a transform pipeline\r\n   * @async\r\n   * @param {string} pipelineName\r\n   * @param {object} data\r\n   * @return {Promise<array>} A report\r\n   */\n  runPipeline(pipelineName, data) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var pipeline = _this.getPipeline(pipelineName, data);\n      _this.loadTransforms(pipeline, 'perf');\n      return yield _this.evaluateSteps({\n        specSteps: pipeline,\n        inputValues: data\n      });\n    })();\n  }\n  loadTransforms(pipeline) {\n    var namespace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'perf';\n    var transformSteps = pipeline.filter(s => s.type === 'Transform');\n    if (transformSteps.length === 0) {\n      throw new Error(\"No Transform steps found in report steps\");\n    }\n    var names = Object.keys(transformSteps).map(val => transformSteps[val]['name']);\n    if (namespace === 'sofria') {\n      var entries = null;\n      for (var [key, tr] of Object.entries(this.namespaces)) {\n        if (key === 'sofriaToSofria') {\n          if (tr.transforms) {\n            entries = Object.entries(tr.transforms);\n          } else {\n            entries = Object.entries(tr);\n          }\n          for (var [k, t] of entries) {\n            if (names.includes(k)) {\n              this.transforms[k] = t;\n            }\n          }\n        }\n      }\n    } else {\n      var _entries = null;\n      for (var [_key2, _tr] of Object.entries(this.namespaces)) {\n        if (_key2 !== 'sofriaToSofria') {\n          if (_tr.transforms) {\n            _entries = Object.entries(_tr.transforms);\n          } else {\n            _entries = Object.entries(_tr);\n          }\n          for (var [_k, _t] of _entries) {\n            if (names.includes(_k)) {\n              this.transforms[_k] = _t;\n            }\n          }\n        }\n      }\n    }\n  }\n  evaluateSteps(_ref2) {\n    var {\n      specSteps,\n      inputValues\n    } = _ref2;\n    this.verbose && console.log('** Evaluate **');\n    // Find input, output and transforms\n    var inputStep = specSteps.filter(s => s.type === 'Inputs')[0];\n    if (!inputStep) {\n      throw new Error(\"No Inputs step found in report steps\");\n    }\n    var outputStep = specSteps.filter(s => s.type === 'Outputs')[0];\n    if (!outputStep) {\n      throw new Error(\"No Outputs step found in report steps\");\n    }\n    var transformSteps = specSteps.filter(s => s.type === 'Transform');\n    if (transformSteps.length === 0) {\n      throw new Error(\"No Transform steps found in report steps\");\n    }\n    var transformInputs = {};\n    var transformOutputs = {};\n    for (var transformStep of Object.values(transformSteps)) {\n      transformInputs[transformStep.id] = {};\n      for (var input of transformStep.inputs) {\n        transformInputs[transformStep.id][input.name] = null;\n      }\n      transformOutputs[transformStep.id] = {};\n      for (var output of transformStep.outputs) {\n        transformOutputs[transformStep.id][output] = null;\n      }\n    }\n    // Copy inputs to transforms\n    for (var [inputKey, inputValue] of Object.entries(inputValues)) {\n      for (var _transformStep of transformSteps) {\n        for (var _input of _transformStep.inputs) {\n          if (_input.source === \"Input \".concat(inputKey)) {\n            this.verbose && console.log(\"Copying Input \".concat(inputKey, \" to Transform \").concat(_transformStep.id, \" \").concat(_input.name, \" input\"));\n            transformInputs[_transformStep.id][_input.name] = inputValue;\n          }\n        }\n      }\n    }\n    // Propagate values between transforms until nothing changes\n    var changed = true;\n    var nWaitingTransforms = 0;\n    while (changed) {\n      changed = false;\n      for (var _transformStep2 of transformSteps) {\n        if (Object.values(transformInputs[_transformStep2.id]).filter(i => !i).length === 0 && Object.values(transformOutputs[_transformStep2.id]).filter(i => !i).length > 0) {\n          this.verbose && console.log(\"Evaluating Transform \".concat(_transformStep2.id));\n          try {\n            transformOutputs[_transformStep2.id] = this.transforms[_transformStep2.name].code(_objectSpread(_objectSpread({}, transformInputs[_transformStep2.id]), {}, {\n              proskomma: this.getProskomma()\n            }));\n          } catch (err) {\n            var errMsg = \"Error evaluating Transform \".concat(_transformStep2.id, \" (name=\").concat(_transformStep2.name, \", type=\").concat(typeof _transformStep2.code, \"): \").concat(err);\n            throw new Error(errMsg);\n          }\n          for (var consumingTransform of transformSteps) {\n            for (var consumingInput of consumingTransform.inputs) {\n              for (var resolvedOutput of Object.keys(transformOutputs[_transformStep2.id])) {\n                if (consumingInput.source === \"Transform \".concat(_transformStep2.id, \" \").concat(resolvedOutput)) {\n                  this.verbose && console.log(\"Copying Transform \".concat(_transformStep2.id, \" \").concat(resolvedOutput, \" output to Transform \").concat(consumingTransform.id, \" \").concat(consumingInput.name, \" input\"));\n                  transformInputs[consumingTransform.id][consumingInput.name] = transformOutputs[_transformStep2.id][resolvedOutput];\n                }\n              }\n            }\n          }\n          changed = true;\n        }\n      }\n    }\n    if (nWaitingTransforms) {\n      throw new Error(\"Inputs not satisfied for \".concat(nWaitingTransforms, \" transform(s)\"));\n    }\n    // Copy to output;\n    var outputValues = {};\n    for (var _output of outputStep.outputs) {\n      var transformN = _output.source.split(' ')[1];\n      this.verbose && console.log(\"Copying Transform \".concat(transformN, \" \").concat(_output.name, \" to Output \").concat(_output.name));\n      outputValues[_output.name] = transformOutputs[transformN][_output.name];\n    }\n    this.verbose && console.log('****');\n    return outputValues;\n  }\n}\nmodule.exports = PipelineHandler;\n\n/**\r\n * Proskomma instance\r\n * @typedef Proskomma\r\n * @see {@link https://github.com/mvahowe/proskomma-js}\r\n */", "\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar ProskommaRender = require('./ProskommaRender');\nvar camelCaseToSnakeCase = s => {\n  var ret = [];\n  for (var c of s.split(\"\")) {\n    if (c.toUpperCase() === c && c.toLowerCase() !== c) {\n      ret.push(\"_\".concat(c.toLowerCase()));\n    } else {\n      ret.push(c);\n    }\n  }\n  return ret.join(\"\");\n};\nclass PerfRenderFromProskomma extends ProskommaRender {\n  constructor(spec) {\n    super(spec);\n    if (!spec.proskomma) {\n      throw new Error(\"No Proskomma\");\n    }\n    this.pk = spec.proskomma;\n    this._tokens = [];\n    this._container = null;\n  }\n  renderDocument1(_ref) {\n    var {\n      docId,\n      config,\n      context,\n      workspace,\n      output\n    } = _ref;\n    var environment = {\n      config,\n      context,\n      workspace,\n      output\n    };\n    context.renderer = this;\n    var documentResult = this.pk.gqlQuerySync(\"{document(id: \\\"\".concat(docId, \"\\\") {docSetId mainSequence { id } nSequences sequences {id} headers { key value } } }\"));\n    var docSetId = documentResult.data.document.docSetId;\n    var mainId = documentResult.data.document.mainSequence.id;\n    var nSequences = documentResult.data.document.nSequences;\n    var sequenceIds = documentResult.data.document.sequences.map(s => s.id);\n    var headers = {};\n    for (var header of documentResult.data.document.headers) {\n      headers[header.key] = header.value;\n    }\n    var docSetResult = this.pk.gqlQuerySync(\"{docSet(id: \\\"\".concat(docSetId, \"\\\") {selectors {key value}}}\"));\n    var selectors = {};\n    for (var selector of docSetResult.data.docSet.selectors) {\n      selectors[selector.key] = selector.value;\n    }\n    context.document = {\n      id: docId,\n      schema: {\n        \"structure\": \"flat\",\n        \"structure_version\": \"0.2.1\",\n        \"constraints\": [{\n          \"name\": \"perf\",\n          \"version\": \"0.2.1\"\n        }]\n      },\n      metadata: {\n        translation: {\n          id: docSetId,\n          selectors,\n          properties: {},\n          tags: []\n        },\n        document: _objectSpread(_objectSpread({}, headers), {}, {\n          properties: {},\n          tags: []\n        })\n      },\n      mainSequenceId: mainId,\n      nSequences\n    };\n    context.sequences = [];\n    this.renderEvent('startDocument', environment);\n    this.renderSequenceId(environment, mainId);\n    this.renderEvent('endDocument', environment);\n  }\n  sequenceContext(sequence, sequenceId) {\n    return {\n      id: sequenceId,\n      type: camelCaseToSnakeCase(sequence.type),\n      nBlocks: sequence.nBlocks,\n      milestones: new Set([])\n    };\n  }\n  renderSequenceId(environment, sequenceId) {\n    var context = environment.context;\n    var documentResult = this.pk.gqlQuerySync(\"{document(id: \\\"\".concat(context.document.id, \"\\\") {sequence(id:\\\"\").concat(sequenceId, \"\\\") {id type nBlocks } } }\"));\n    var sequence = documentResult.data.document.sequence;\n    if (!sequence) {\n      throw new Error(\"Sequence '\".concat(sequenceId, \"' not found in renderSequenceId()\"));\n    }\n    context.sequences.unshift(this.sequenceContext(sequence, sequenceId));\n    this.renderEvent('startSequence', environment);\n    var outputBlockN = 0;\n    for (var inputBlockN = 0; inputBlockN < sequence.nBlocks; inputBlockN++) {\n      var blocksResult = this.pk.gqlQuerySync(\"{\\n               document(id: \\\"\".concat(context.document.id, \"\\\") {\\n                 sequence(id:\\\"\").concat(sequenceId, \"\\\") {\\n                   blocks(positions:\").concat(inputBlockN, \") {\\n                     bg {subType payload}\\n                     bs {payload}\\n                     items {type subType payload}\\n                   }\\n                 }\\n               }\\n             }\"));\n      var blockResult = blocksResult.data.document.sequence.blocks[0];\n      for (var blockGraft of blockResult.bg) {\n        context.sequences[0].block = {\n          type: \"graft\",\n          subType: camelCaseToSnakeCase(blockGraft.subType),\n          blockN: outputBlockN\n        };\n        context.sequences[0].block.target = blockGraft.payload;\n        context.sequences[0].block.isNew = false;\n        this.renderEvent('blockGraft', environment);\n        outputBlockN++;\n      }\n      context.sequences[0].block = {\n        type: \"paragraph\",\n        subType: \"usfm:\".concat(blockResult.bs.payload.split('/')[1]),\n        blockN: outputBlockN,\n        wrappers: []\n      };\n      this.renderEvent('startParagraph', environment);\n      this._tokens = [];\n      this.renderContent(blockResult.items, environment);\n      this._tokens = [];\n      this.renderEvent('endParagraph', environment);\n      delete context.sequences[0].block;\n      outputBlockN++;\n    }\n    this.renderEvent('endSequence', environment);\n    context.sequences.shift();\n  }\n  renderContent(items, environment) {\n    for (var item of items) {\n      this.renderItem(item, environment);\n    }\n    this.maybeRenderText(environment);\n  }\n  renderItem(item, environment) {\n    if (item.type === 'scope' && item.payload.startsWith('attribute')) {\n      var scopeBits = item.payload.split('/');\n      if (item.subType === \"start\") {\n        if (!this._container) {\n          this._container = {\n            direction: \"start\",\n            subType: \"usfm:w\",\n            type: \"wrapper\",\n            atts: {}\n          };\n        }\n        if (scopeBits[3] in this._container.atts) {\n          this._container.atts[scopeBits[3]].push(scopeBits[5]);\n        } else {\n          this._container.atts[scopeBits[3]] = [scopeBits[5]];\n        }\n      } else {\n        if (!this._container) {\n          this._container = {\n            direction: \"end\",\n            subType: \"usfm:\".concat(camelCaseToSnakeCase(scopeBits[2]))\n          };\n          if (scopeBits[1] === 'milestone') {\n            this._container.type = \"end_milestone\";\n          } else {\n            this._container.type = \"wrapper\";\n            this._container.atts = {};\n          }\n        }\n      }\n    } else {\n      if (this._container) {\n        this.maybeRenderText(environment);\n        this.renderContainer(environment);\n      }\n      if (item.type === 'token') {\n        this._tokens.push(item.payload.replace(/\\s+/g, \" \"));\n      } else {\n        if (item.type === \"graft\") {\n          this.maybeRenderText(environment);\n          var graft = {\n            type: \"graft\",\n            subType: camelCaseToSnakeCase(item.subType),\n            target: item.payload,\n            isNew: false\n          };\n          environment.context.sequences[0].element = graft;\n          this.renderEvent('inlineGraft', environment);\n          delete environment.context.sequences[0].element;\n        } else {\n          // scope\n          this.maybeRenderText(environment);\n          var _scopeBits = item.payload.split('/');\n          if ([\"chapter\", \"verses\", \"pubChapter\", \"pubVerse\", \"altChapter\", \"altVerse\"].includes(_scopeBits[0])) {\n            if (item.subType === 'start') {\n              var mark = {\n                type: \"mark\",\n                subType: camelCaseToSnakeCase(_scopeBits[0]),\n                atts: {\n                  number: _scopeBits[1]\n                }\n              };\n              environment.context.sequences[0].element = mark;\n              this.renderEvent('mark', environment);\n              delete environment.context.sequences[0].element;\n            }\n          } else if (_scopeBits[0] === 'span') {\n            var wrapper = {\n              type: \"wrapper\",\n              subType: \"usfm:\".concat(_scopeBits[1]),\n              atts: {}\n            };\n            environment.context.sequences[0].element = wrapper;\n            if (item.subType === 'start') {\n              environment.context.sequences[0].block.wrappers.unshift(wrapper.subType);\n              this.renderEvent('startWrapper', environment);\n            } else {\n              this.renderEvent('endWrapper', environment);\n              environment.context.sequences[0].block.wrappers.shift();\n            }\n            delete environment.context.sequences[0].element;\n          } else if (_scopeBits[0] === 'spanWithAtts') {\n            if (item.subType === 'start') {\n              this._container = {\n                direction: \"start\",\n                type: \"wrapper\",\n                subType: \"usfm:\".concat(_scopeBits[1]),\n                atts: {}\n              };\n            }\n          } else if (_scopeBits[0] === 'milestone' && item.subType === \"start\") {\n            if (_scopeBits[1] === 'ts') {\n              var _mark = {\n                type: \"mark\",\n                subType: \"usfm:\".concat(camelCaseToSnakeCase(_scopeBits[1])),\n                atts: {}\n              };\n              environment.context.sequences[0].element = _mark;\n              this.renderEvent('mark', environment);\n              delete environment.context.sequences[0].element;\n            } else {\n              this._container = {\n                type: \"start_milestone\",\n                subType: \"usfm:\".concat(camelCaseToSnakeCase(_scopeBits[1])),\n                atts: {}\n              };\n            }\n          }\n        }\n      }\n    }\n  }\n  maybeRenderText(environment) {\n    if (this._tokens.length === 0) {\n      return;\n    }\n    var elementContext = {\n      type: 'text',\n      text: this._tokens.join('')\n    };\n    environment.context.sequences[0].element = elementContext;\n    this._tokens = [];\n    this.renderEvent('text', environment);\n    delete environment.context.sequences[0].element;\n  }\n  renderContainer(environment) {\n    if (this._container.type === \"wrapper\") {\n      var direction = this._container.direction;\n      delete this._container.direction;\n      if (direction === 'start') {\n        environment.context.sequences[0].element = this._container;\n        environment.context.sequences[0].block.wrappers.unshift(this._container.subType);\n        this.renderEvent('startWrapper', environment);\n        delete environment.context.sequences[0].element;\n      } else {\n        environment.context.sequences[0].element = this._container;\n        this.renderEvent('endWrapper', environment);\n        environment.context.sequences[0].block.wrappers.shift();\n        delete environment.context.sequences[0].element;\n      }\n    } else if (this._container.type === \"start_milestone\") {\n      environment.context.sequences[0].element = this._container;\n      this.renderEvent('startMilestone', environment);\n      delete environment.context.sequences[0].element;\n    } else if (this._container.type === \"end_milestone\") {\n      environment.context.sequences[0].element = this._container;\n      this.renderEvent('endMilestone', environment);\n      delete environment.context.sequences[0].element;\n    }\n    this._container = null;\n  }\n}\nmodule.exports = PerfRenderFromProskomma;", "\"use strict\";\n\nvar ProskommaRender = require('./ProskommaRender');\nclass SofriaRenderFromJson extends ProskommaRender {\n  constructor(spec) {\n    super(spec);\n    if (!spec.srcJson) {\n      throw new Error(\"Must provide srcJson\");\n    }\n    this.srcJson = spec.srcJson;\n    this.cachedSequences = [];\n  }\n  renderDocument1(_ref) {\n    var {\n      docId,\n      config,\n      context,\n      workspace,\n      output\n    } = _ref;\n    var environment = {\n      config,\n      context,\n      workspace,\n      output\n    };\n    context.renderer = this;\n    context.document = {\n      id: docId,\n      schema: this.srcJson.schema,\n      metadata: this.srcJson.metadata\n    };\n    context.sequences = [];\n    this.renderEvent('startDocument', environment);\n    this.renderSequence(environment, this.srcJson.sequence);\n    this.renderEvent('endDocument', environment);\n  }\n  sequenceContext(sequence) {\n    return {\n      type: sequence.type,\n      nBlocks: sequence.blocks.length,\n      milestones: new Set([])\n    };\n  }\n  renderSequence(environment, providedSequence) {\n    var sequence;\n    if (!providedSequence) {\n      if (this.cachedSequences.length === 0) {\n        throw new Error(\"No sequence provided and no sequences cached\");\n      }\n      sequence = this.cachedSequences[0];\n    } else {\n      sequence = providedSequence;\n    }\n    var context = environment.context;\n    context.sequences.unshift(sequence);\n    this.renderEvent('startSequence', environment);\n    for (var [blockN, block] of sequence.blocks.entries()) {\n      context.sequences[0].block = {\n        type: block.type,\n        blockN,\n        wrappers: []\n      };\n      if (block.type === 'graft') {\n        context.sequences[0].block.sequence = this.sequenceContext(block.sequence);\n        this.cachedSequences.unshift(block.sequence);\n        this.renderEvent('blockGraft', environment);\n        this.cachedSequences.shift();\n      } else {\n        this.renderEvent('startParagraph', environment);\n        this.renderContent(block.content, environment);\n        this.renderEvent('endParagraph', environment);\n      }\n      delete context.sequences[0].block;\n    }\n    this.renderEvent('endSequence', environment);\n    this.cachedSequence = null;\n    context.sequences.shift();\n  }\n  renderContent(content, environment) {\n    for (var element of content) {\n      this.renderElement(element, environment);\n    }\n  }\n  renderElement(element, environment) {\n    var maybeRenderMetaContent = elementContext => {\n      if (element.meta_content) {\n        elementContext.metaContent = element.meta_content;\n        this.renderEvent('metaContent', environment);\n      }\n    };\n    var context = environment.context;\n    var elementContext = {\n      type: element.type || 'text'\n    };\n    if (element.subtype) {\n      elementContext.subType = element.subtype;\n    }\n    if (element.atts) {\n      elementContext.atts = element.atts;\n    } else if (elementContext.type !== \"end_milestone\" && elementContext.type !== \"meta_content\") {\n      elementContext.atts = {};\n    }\n    if (element.sequence) {\n      elementContext.sequence = this.sequenceContext(element.sequence);\n    }\n    if (elementContext.type === 'text') {\n      elementContext.text = element;\n    }\n    context.sequences[0].element = elementContext;\n    if (elementContext.type === \"text\") {\n      this.renderEvent('text', environment);\n      maybeRenderMetaContent(elementContext);\n    } else if (elementContext.type === \"mark\") {\n      this.renderEvent('mark', environment);\n      maybeRenderMetaContent(elementContext);\n    } else if (elementContext.type === \"start_milestone\") {\n      this.renderEvent('startMilestone', environment);\n      maybeRenderMetaContent(elementContext);\n    } else if (elementContext.type === \"end_milestone\") {\n      this.renderEvent('endMilestone', environment);\n      maybeRenderMetaContent(elementContext);\n    } else if (elementContext.type === \"graft\") {\n      this.cachedSequences.unshift(element.sequence);\n      this.renderEvent('inlineGraft', environment);\n      this.cachedSequences.shift();\n      maybeRenderMetaContent(elementContext);\n    } else if (elementContext.type === \"wrapper\") {\n      context.sequences[0].block.wrappers.unshift(elementContext.subType);\n      this.renderEvent('startWrapper', environment);\n      this.renderContent(element.content, environment);\n      context.sequences[0].element = elementContext;\n      maybeRenderMetaContent(elementContext);\n      this.renderEvent('endWrapper', environment);\n      context.sequences[0].block.wrappers.shift();\n    } else {\n      throw new Error(\"Unexpected element type '\".concat(elementContext.type));\n    }\n    delete context.sequences[0].element;\n  }\n}\nmodule.exports = SofriaRenderFromJson;", "\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar ProskommaRender = require('./ProskommaRender');\nvar camelCaseToSnakeCase = s => {\n  var ret = [];\n  for (var c of s.split(\"\")) {\n    if (c.toUpperCase() === c && c.toLowerCase() !== c) {\n      ret.push(\"_\".concat(c.toLowerCase()));\n    } else {\n      ret.push(c);\n    }\n  }\n  return ret.join(\"\");\n};\nclass SofriaRenderFromProskomma extends ProskommaRender {\n  constructor(spec) {\n    super(spec);\n    if (!spec.proskomma) {\n      throw new Error(\"No Proskomma\");\n    }\n    this.pk = spec.proskomma;\n    this._tokens = [];\n    this._container = null;\n    this.cachedSequenceIds = [];\n    this.sequences = null;\n    this.currentCV = {\n      chapter: null,\n      verses: null\n    };\n  }\n  renderDocument1(_ref) {\n    var {\n      docId,\n      config,\n      context,\n      workspace,\n      output\n    } = _ref;\n    var environment = {\n      config,\n      context,\n      workspace,\n      output\n    };\n    context.renderer = this;\n    var documentResult = this.pk.gqlQuerySync(\"{\\n          document(id: \\\"\".concat(docId, \"\\\") {\\n            docSetId\\n            mainSequence { id }\\n            nSequences\\n            sequences {\\n              id\\n              type\\n              nBlocks\\n            }\\n            headers {\\n              key\\n              value\\n            }\\n          } \\n        }\"));\n    var docSetId = documentResult.data.document.docSetId;\n    var mainId = documentResult.data.document.mainSequence.id;\n    var nSequences = documentResult.data.document.nSequences;\n    this.sequences = {};\n    for (var seq of documentResult.data.document.sequences) {\n      this.sequences[seq.id] = seq;\n    }\n    var headers = {};\n    for (var header of documentResult.data.document.headers) {\n      headers[header.key] = header.value;\n    }\n    var docSetResult = this.pk.gqlQuerySync(\"{docSet(id: \\\"\".concat(docSetId, \"\\\") {selectors {key value}}}\"));\n    var selectors = {};\n    for (var selector of docSetResult.data.docSet.selectors) {\n      selectors[selector.key] = selector.value;\n    }\n    context.document = {\n      id: docId,\n      schema: {\n        \"structure\": \"nested\",\n        \"structure_version\": \"0.2.1\",\n        \"constraints\": [{\n          \"name\": \"sofria\",\n          \"version\": \"0.2.1\"\n        }]\n      },\n      metadata: {\n        translation: {\n          id: docSetId,\n          selectors,\n          properties: {},\n          tags: []\n        },\n        document: _objectSpread(_objectSpread({}, headers), {}, {\n          properties: {},\n          tags: []\n        })\n      },\n      mainSequenceId: mainId,\n      nSequences\n    };\n    if (config.chapters) {\n      context.document.metadata.document.properties.chapters = config.chapters[0];\n    }\n    context.sequences = [];\n    this.renderEvent('startDocument', environment);\n    this.cachedSequenceIds.unshift(mainId);\n    this.renderSequence(environment, mainId);\n    this.cachedSequenceIds.shift();\n    this.renderEvent('endDocument', environment);\n  }\n  sequenceContext(sequence, sequenceId) {\n    return {\n      id: sequenceId,\n      type: camelCaseToSnakeCase(sequence.type),\n      nBlocks: sequence.nBlocks,\n      milestones: new Set([])\n    };\n  }\n  renderSequence(environment) {\n    var context = environment.context;\n    var sequenceId = this.cachedSequenceIds[0];\n    var documentResult = this.pk.gqlQuerySync(\"{document(id: \\\"\".concat(context.document.id, \"\\\") {sequence(id:\\\"\").concat(sequenceId, \"\\\") {id type nBlocks blocks { os {payload} is {payload} } } } }\"));\n    var sequence = documentResult.data.document.sequence;\n    if (!sequence) {\n      throw new Error(\"Sequence '\".concat(sequenceId, \"' not found in renderSequenceId()\"));\n    }\n    context.sequences.unshift(this.sequenceContext(sequence, sequenceId));\n    this.renderEvent('startSequence', environment);\n    var outputBlockN = 0;\n    for (var inputBlockN = 0; inputBlockN < sequence.nBlocks; inputBlockN++) {\n      if (environment.config.chapters && sequence.type === \"main\") {\n        var chapterScopes = [...sequence.blocks[inputBlockN].os.map(s => s.payload), ...sequence.blocks[inputBlockN].is.map(s => s.payload)].filter(s => ['chapter'].includes(s.split('/')[0])).map(s => s.split('/')[1]);\n        if (chapterScopes.length === 0 || !environment.config.chapters.includes(chapterScopes[0])) {\n          continue;\n        }\n      }\n      var blocksResult = this.pk.gqlQuerySync(\"{\\n               document(id: \\\"\".concat(context.document.id, \"\\\") {\\n                 sequence(id:\\\"\").concat(sequenceId, \"\\\") {\\n                   blocks(positions:\").concat(inputBlockN, \") {\\n                     bg {subType payload}\\n                     bs {payload}\\n                     items {type subType payload}\\n                   }\\n                 }\\n               }\\n             }\"));\n      var blockResult = blocksResult.data.document.sequence.blocks[0];\n      for (var blockGraft of blockResult.bg) {\n        context.sequences[0].block = {\n          type: \"graft\",\n          subType: camelCaseToSnakeCase(blockGraft.subType),\n          blockN: outputBlockN,\n          sequence: this.sequences[blockGraft.payload]\n        };\n        this.cachedSequenceIds.unshift(blockGraft.payload);\n        this.renderEvent('blockGraft', environment);\n        this.cachedSequenceIds.shift();\n        outputBlockN++;\n      }\n      var subTypeValues = blockResult.bs.payload.split('/');\n      var subTypeValue = subTypeValues[1] ? \"usfm:\".concat(subTypeValues[1]) : subTypeValues[0];\n      context.sequences[0].block = {\n        type: \"paragraph\",\n        subType: subTypeValue,\n        blockN: outputBlockN,\n        wrappers: []\n      };\n      this.renderEvent('startParagraph', environment);\n      this._tokens = [];\n      if (sequence.type === \"main\" && this.currentCV.chapter) {\n        var wrapper = {\n          type: \"wrapper\",\n          subType: 'chapter',\n          atts: {\n            number: this.currentCV.chapter\n          }\n        };\n        environment.context.sequences[0].element = wrapper;\n        environment.context.sequences[0].block.wrappers.unshift(wrapper.subType);\n        this.renderEvent('startWrapper', environment);\n      }\n      if (sequence.type === \"main\" && this.currentCV.verses) {\n        var _wrapper = {\n          type: \"wrapper\",\n          subType: 'verses',\n          atts: {\n            number: this.currentCV.verses\n          }\n        };\n        environment.context.sequences[0].element = _wrapper;\n        environment.context.sequences[0].block.wrappers.unshift(_wrapper.subType);\n        this.renderEvent('startWrapper', environment);\n      }\n      this.renderContent(blockResult.items, environment);\n      this._tokens = [];\n      if (sequence.type === \"main\" && this.currentCV.verses) {\n        var _wrapper2 = {\n          type: \"wrapper\",\n          subType: 'verses',\n          atts: {\n            number: this.currentCV.verses\n          }\n        };\n        environment.context.sequences[0].element = _wrapper2;\n        environment.context.sequences[0].block.wrappers.shift();\n        this.renderEvent('endWrapper', environment);\n      }\n      if (sequence.type === \"main\" && this.currentCV.chapter) {\n        var _wrapper3 = {\n          type: \"wrapper\",\n          subType: 'chapter',\n          atts: {\n            number: this.currentCV.chapter\n          }\n        };\n        environment.context.sequences[0].element = _wrapper3;\n        environment.context.sequences[0].block.wrappers.shift();\n        this.renderEvent('endWrapper', environment);\n      }\n      this.renderEvent('endParagraph', environment);\n      delete context.sequences[0].block;\n      outputBlockN++;\n    }\n    this.renderEvent('endSequence', environment);\n    context.sequences.shift();\n  }\n  renderContent(items, environment) {\n    for (var item of items) {\n      this.renderItem(item, environment);\n    }\n    this.maybeRenderText(environment);\n  }\n  renderItem(item, environment) {\n    if (item.type === 'scope' && item.payload.startsWith('attribute')) {\n      var scopeBits = item.payload.split('/');\n      if (item.subType === \"start\") {\n        if (!this._container) {\n          this._container = {\n            direction: \"start\",\n            subType: \"usfm:w\",\n            type: \"wrapper\",\n            atts: {}\n          };\n        }\n        if (scopeBits[3] in this._container.atts) {\n          this._container.atts[scopeBits[3]].push(scopeBits[5]);\n        } else {\n          this._container.atts[scopeBits[3]] = [scopeBits[5]];\n        }\n      } else {\n        if (!this._container) {\n          this._container = {\n            direction: \"end\",\n            subType: \"usfm:\".concat(camelCaseToSnakeCase(scopeBits[2]))\n          };\n          if (scopeBits[1] === 'milestone') {\n            this._container.type = \"end_milestone\";\n          } else {\n            this._container.type = \"wrapper\";\n            this._container.atts = {};\n          }\n        }\n      }\n    } else {\n      if (this._container) {\n        this.maybeRenderText(environment);\n        this.renderContainer(environment);\n      }\n      if (item.type === 'token') {\n        this._tokens.push(item.payload.replace(/\\s+/g, \" \"));\n      } else if (item.type === \"graft\") {\n        this.maybeRenderText(environment);\n        var graft = {\n          type: \"graft\",\n          subType: camelCaseToSnakeCase(item.subType),\n          sequence: this.sequences[item.payload]\n        };\n        environment.context.sequences[0].element = graft;\n        this.cachedSequenceIds.unshift(item.payload);\n        this.renderEvent('inlineGraft', environment);\n        this.cachedSequenceIds.shift();\n        delete environment.context.sequences[0].element;\n      } else {\n        // scope\n        this.maybeRenderText(environment);\n        var _scopeBits = item.payload.split('/');\n        if ([\"chapter\", \"verses\"].includes(_scopeBits[0])) {\n          var wrapper = {\n            type: \"wrapper\",\n            subType: camelCaseToSnakeCase(_scopeBits[0]),\n            atts: {\n              number: _scopeBits[1]\n            }\n          };\n          environment.context.sequences[0].element = wrapper;\n          if (item.subType === 'start') {\n            this.currentCV[_scopeBits[0]] = _scopeBits[1];\n            environment.context.sequences[0].block.wrappers.unshift(wrapper.subType);\n            this.renderEvent('startWrapper', environment);\n            var cvMark = {\n              \"type\": \"mark\",\n              \"subType\": \"\".concat(_scopeBits[0], \"_label\"),\n              \"atts\": {\n                \"number\": _scopeBits[1]\n              }\n            };\n            environment.context.sequences[0].element = cvMark;\n            this.renderEvent('mark', environment);\n            environment.context.sequences[0].element = wrapper;\n          } else {\n            this.renderEvent('endWrapper', environment);\n            environment.context.sequences[0].block.wrappers.shift();\n            delete environment.context.sequences[0].element;\n            this.currentCV[_scopeBits[0]] = null;\n          }\n        } else if ([\"pubChapter\", \"pubVerse\", \"altChapter\", \"altVerse\"].includes(_scopeBits[0])) {\n          if (item.subType === 'start') {\n            var mark = {\n              type: \"mark\",\n              subType: camelCaseToSnakeCase(_scopeBits[0]),\n              atts: {\n                number: _scopeBits[1]\n              }\n            };\n            environment.context.sequences[0].element = mark;\n            this.renderEvent('mark', environment);\n            delete environment.context.sequences[0].element;\n          }\n        } else if (_scopeBits[0] === 'span') {\n          var _wrapper4 = {\n            type: \"wrapper\",\n            subType: \"usfm:\".concat(_scopeBits[1]),\n            atts: {}\n          };\n          environment.context.sequences[0].element = _wrapper4;\n          if (item.subType === 'start') {\n            environment.context.sequences[0].block.wrappers.unshift(_wrapper4.subType);\n            this.renderEvent('startWrapper', environment);\n          } else {\n            this.renderEvent('endWrapper', environment);\n            environment.context.sequences[0].block.wrappers.shift();\n          }\n          delete environment.context.sequences[0].element;\n        } else if (_scopeBits[0] === 'spanWithAtts') {\n          if (item.subType === 'start') {\n            this._container = {\n              direction: \"start\",\n              type: \"wrapper\",\n              subType: \"usfm:\".concat(_scopeBits[1]),\n              atts: {}\n            };\n          }\n        } else if (_scopeBits[0] === 'milestone' && item.subType === \"start\") {\n          if (_scopeBits[1] === 'ts') {\n            var _mark = {\n              type: \"mark\",\n              subType: \"usfm:\".concat(camelCaseToSnakeCase(_scopeBits[1])),\n              atts: {}\n            };\n            environment.context.sequences[0].element = _mark;\n            this.renderEvent('mark', environment);\n            delete environment.context.sequences[0].element;\n          } else {\n            this._container = {\n              type: \"start_milestone\",\n              subType: \"usfm:\".concat(camelCaseToSnakeCase(_scopeBits[1])),\n              atts: {}\n            };\n          }\n        }\n      }\n    }\n  }\n  maybeRenderText(environment) {\n    if (this._tokens.length === 0) {\n      return;\n    }\n    var elementContext = {\n      type: 'text',\n      text: this._tokens.join('')\n    };\n    environment.context.sequences[0].element = elementContext;\n    this._tokens = [];\n    this.renderEvent('text', environment);\n    delete environment.context.sequences[0].element;\n  }\n  renderContainer(environment) {\n    if (this._container.type === \"wrapper\") {\n      var direction = this._container.direction;\n      delete this._container.direction;\n      if (direction === 'start') {\n        environment.context.sequences[0].element = this._container;\n        environment.context.sequences[0].block.wrappers.unshift(this._container.subType);\n        this.renderEvent('startWrapper', environment);\n        delete environment.context.sequences[0].element;\n      } else {\n        environment.context.sequences[0].element = this._container;\n        this.renderEvent('endWrapper', environment);\n        environment.context.sequences[0].block.wrappers.shift();\n        delete environment.context.sequences[0].element;\n      }\n    } else if (this._container.type === \"start_milestone\") {\n      environment.context.sequences[0].element = this._container;\n      this.renderEvent('startMilestone', environment);\n      delete environment.context.sequences[0].element;\n    } else if (this._container.type === \"end_milestone\") {\n      environment.context.sequences[0].element = this._container;\n      this.renderEvent('endMilestone', environment);\n      delete environment.context.sequences[0].element;\n    }\n    this._container = null;\n  }\n}\nmodule.exports = SofriaRenderFromProskomma;", "\"use strict\";\n\nvar Validator = require('./validator');\nvar usfmHelps = require('./usfmHelps');\nvar PipelineHandler = require('./classes/PipelineHandler');\nvar ProskommaRender = require('./ProskommaRender');\nvar PerfRenderFromJson = require('./PerfRenderFromJson');\nvar PerfRenderFromProskomma = require('./PerfRenderFromProskomma');\nvar SofriaRenderFromJson = require('./SofriaRenderFromJson');\nvar SofriaRenderFromProskomma = require('./SofriaRenderFromProskomma');\nvar mergeActions = require('./mergeActions');\nvar pipelines = require('./pipelines');\nvar render = require('./render');\nmodule.exports = {\n  Validator,\n  usfmHelps,\n  ProskommaRender,\n  PerfRenderFromJson,\n  SofriaRenderFromJson,\n  SofriaRenderFromProskomma,\n  PerfRenderFromProskomma,\n  mergeActions,\n  PipelineHandler,\n  pipelines,\n  render\n};", "const xre = require('xregexp');\n\nconst lexingRegexes = [\n  ['chapter', 'chapter', xre('([\\\\r\\\\n]*\\\\\\\\c[ \\\\t]+(\\\\d+)[ \\\\t\\\\r\\\\n]*)')],\n  [\n    'pubchapter',\n    'pubchapter',\n    xre('([\\\\r\\\\n]*\\\\\\\\cp[ \\\\t]+([^\\\\r\\\\n]+)[ \\\\t\\\\r\\\\n]*)'),\n  ],\n  ['verses', 'verses', xre('(\\\\\\\\v[ \\\\t]+([\\\\d\\\\-]+)[ \\\\t\\\\r\\\\n]*)')],\n  [\n    'attribute',\n    'attribute',\n    xre('([ \\\\t]*\\\\|?[ \\\\t]*([A-Za-z0-9\\\\-]+)=\"([^\"]*)\"[ \\\\t]?)'),\n  ],\n  [\n    'attribute',\n    'defaultAttribute',\n    xre('([ \\\\t]*\\\\|[ \\\\t]*([^\\\\|\\\\\\\\]*))'),\n  ],\n  ['milestone', 'emptyMilestone', xre('(\\\\\\\\([a-z1-9]+)\\\\\\\\[*])')],\n  ['milestone', 'startMilestoneTag', xre('(\\\\\\\\([a-z1-9]+)-([se]))')],\n  ['milestone', 'endMilestoneMarker', xre('(\\\\\\\\([*]))')],\n  ['tag', 'endTag', xre('(\\\\\\\\([+]?[a-z\\\\-]+)([1-9]?(-([1-9]))?)[*])')],\n  ['tag', 'startTag', xre('(\\\\\\\\([+]?[a-z\\\\-]+)([1-9]?(-([1-9]))?)[ \\\\t]?)')],\n  ['bad', 'bareSlash', xre('(\\\\\\\\)')],\n  ['printable', 'eol', xre('([ \\\\t]*[\\\\r\\\\n]+[ \\\\t]*)')],\n  ['break', 'noBreakSpace', xre('~')],\n  ['break', 'softLineBreak', xre('//')],\n  [\n    'printable',\n    'wordLike',\n    xre('([\\\\p{Letter}\\\\p{Number}\\\\p{Mark}\\\\u2060]{1,127})'),\n  ],\n  ['printable', 'lineSpace', xre('([\\\\p{Separator}\\t]{1,127})')],\n  ['printable', 'punctuation', xre('([\\\\p{Punctuation}\\\\p{Math_Symbol}\\\\p{Currency_Symbol}\\\\p{Modifier_Symbol}\\\\p{Other_Symbol}])')],\n  ['bad', 'unknown', xre('(.)')],\n];\n\nconst mainRegex = xre.union(lexingRegexes.map((x) => x[2]));\n\nmodule.exports = {\n  lexingRegexes,\n  mainRegex,\n};\n", "const xre = require('xregexp');\n\nconst makePrintable = (subclass, matchedBits) => ({\n  subclass,\n  printValue: matchedBits[0],\n});\n\nconst makeChapter = (subclass, matchedBits) => ({\n  subclass,\n  numberString: matchedBits[2],\n  number: parseInt(matchedBits[2]),\n  printValue: `\\\\c ${matchedBits[2]}\\n`,\n});\n\nconst makeVerses = (subclass, matchedBits) => {\n  const ret = {\n    subclass,\n    numberString: matchedBits[2],\n    printValue: `\\\\v ${matchedBits[2]}\\n`,\n  };\n\n  if (ret.numberString.includes('-')) {\n    const [fromV, toV] = ret.numberString.split('-').map(v => parseInt(v));\n    ret.numbers = Array.from(Array((toV - fromV) + 1).keys()).map(v => v + fromV);\n  } else {\n    ret.numbers = [parseInt(ret.numberString)];\n  }\n  return ret;\n};\n\nconst makeAttribute = (subclass, matchedBits) => {\n  let ret;\n\n  if (subclass === 'defaultAttribute') {\n    ret = {\n      subclass,\n      key: 'default',\n      valueString: matchedBits[2].trim().replace(/\\//g, '÷'),\n    };\n  } else {\n    ret = {\n      subclass,\n      key: matchedBits[2],\n      valueString: matchedBits[3].trim().replace(/\\//g, '÷'),\n    };\n  }\n  ret.values = ret.valueString.split(',').map(vb => vb.trim());\n  ret.printValue = `| ${ret.key}=\"${ret.valueString}\"`;\n  return ret;\n};\n\nconst makePubChapter = (subclass, matchedBits) => ({\n  subclass,\n  numberString: matchedBits[2],\n  printValue: `\\\\cp ${matchedBits[2]}\\n`,\n});\n\nconst makeMilestone = (subclass, matchedBits) => {\n  const ret = {\n    subclass,\n    sOrE: null,\n  };\n\n  if (subclass === 'endMilestoneMarker') {\n    ret.printValue = '\\\\*';\n  } else {\n    ret.tagName = matchedBits[2];\n\n    if (subclass === 'emptyMilestone') {\n      ret.printValue = `\\\\${ret.tagName}\\\\*`;\n    } else {\n      ret.printValue = `\\\\${ret.tagName}`;\n      ret.sOrE = matchedBits[3];\n    }\n  }\n  return ret;\n};\n\nconst makeTag = (subclass, matchedBits) => {\n  const ret = {\n    subclass,\n    tagName: matchedBits[2],\n    isNested: false,\n  };\n\n  if (ret.tagName.startsWith('+')) {\n    ret.isNested = true;\n    ret.tagName = ret.tagName.substring(1);\n  }\n  ret.tagLevel = matchedBits[3] !== '' ? parseInt(matchedBits[3]) : 1;\n  ret.fullTagName = `${ret.tagName}${matchedBits[3] === '1' ? '' : matchedBits[3]}`;\n  ret.printValue = subclass === 'startTag' ? `\\\\${ret.fullTagName} ` : `\\\\${ret.fullTagName}*`;\n  return ret;\n};\n\nconst constructorForFragment = {\n  printable: makePrintable,\n  chapter: makeChapter,\n  pubchapter: makePubChapter,\n  verses: makeVerses,\n  tag: makeTag,\n  break: makePrintable,\n  milestone: makeMilestone,\n  attribute: makeAttribute,\n  bad: makePrintable,\n};\n\nconst preTokenObjectForFragment = (fragment, lexingRegexes) => {\n  for (let n = 0; n < lexingRegexes.length; n++) {\n    let [tClass, tSubclass, tRE] = lexingRegexes[n];\n    let matchedBits = xre.exec(fragment, tRE, 0, 'sticky');\n\n    if (matchedBits) {\n      return constructorForFragment[tClass](tSubclass, matchedBits);\n    }\n  }\n  throw new Error(`Could not match preToken fragment '${fragment}'`);\n};\n\nmodule.exports = {\n  constructorForFragment,\n  preTokenObjectForFragment,\n};\n", "const xre = require('xregexp');\n\nconst {\n  lexingRegexes,\n  mainRegex,\n} = require('./lexingRegexes.cjs');\nconst { preTokenObjectForFragment } = require('./object_for_fragment.cjs');\n\nconst parseUsfm = (str, parser) => {\n  const matches = xre.match(str, mainRegex, 'all');\n\n  for (let n = 0; n < matches.length; n++) {\n    parser.parseItem(preTokenObjectForFragment(matches[n], lexingRegexes));\n  }\n};\n\nmodule.exports = { parseUsfm };\n", "'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n", "// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nif (typeof global.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof global.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nvar title = 'browser';\nvar platform = 'browser';\nvar browser = true;\nvar env = {};\nvar argv = [];\nvar version = ''; // empty string to avoid regexp issues\nvar versions = {};\nvar release = {};\nvar config = {};\n\nfunction noop() {}\n\nvar on = noop;\nvar addListener = noop;\nvar once = noop;\nvar off = noop;\nvar removeListener = noop;\nvar removeAllListeners = noop;\nvar emit = noop;\n\nfunction binding(name) {\n    throw new Error('process.binding is not supported');\n}\n\nfunction cwd () { return '/' }\nfunction chdir (dir) {\n    throw new Error('process.chdir is not supported');\n}function umask() { return 0; }\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() };\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3;\n  var seconds = Math.floor(clocktime);\n  var nanoseconds = Math.floor((clocktime%1)*1e9);\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0];\n    nanoseconds = nanoseconds - previousTimestamp[1];\n    if (nanoseconds<0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [seconds,nanoseconds]\n}\n\nvar startTime = new Date();\nfunction uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nvar browser$1 = {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime\n};\n\nexport default browser$1;\nexport { addListener, argv, binding, browser, chdir, config, cwd, emit, env, hrtime, nextTick, off, on, once, platform, release, removeAllListeners, removeListener, title, umask, uptime, version, versions };\n", "\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n", "var lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\n\nfunction toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n\n  var L = 0;\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = (tmp >> 16) & 0xFF;\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[(tmp << 4) & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n    output += lookup[tmp >> 10];\n    output += lookup[(tmp >> 4) & 0x3F];\n    output += lookup[(tmp << 2) & 0x3F];\n    output += '=';\n  }\n\n  parts.push(output);\n\n  return parts.join('')\n}\n\nfunction read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n}\n\nvar toString = {}.toString;\n\nvar isArray = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : true;\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nvar _kMaxLength = kMaxLength();\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr\n};\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n};\n\nfunction allocUnsafe (that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n};\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0;\n  }\n  return Buffer.alloc(+length)\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\n\nfunction swap (b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n};\n\nBuffer.prototype.inspect = function inspect () {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>'\n};\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset;  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf)\n  } else {\n    return fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, true, 23, 4)\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, false, 23, 4)\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, true, 52, 8)\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 1] = (value >>> 8);\n    this[offset] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 3] = (value >>> 24);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n\nexport { Buffer, INSPECT_MAX_BYTES, SlowBuffer, isBuffer, _kMaxLength as kMaxLength };\n", "import {Buffer} from 'buffer';\n\nexport default BufferList;\n\nfunction BufferList() {\n  this.head = null;\n  this.tail = null;\n  this.length = 0;\n}\n\nBufferList.prototype.push = function (v) {\n  var entry = { data: v, next: null };\n  if (this.length > 0) this.tail.next = entry;else this.head = entry;\n  this.tail = entry;\n  ++this.length;\n};\n\nBufferList.prototype.unshift = function (v) {\n  var entry = { data: v, next: this.head };\n  if (this.length === 0) this.tail = entry;\n  this.head = entry;\n  ++this.length;\n};\n\nBufferList.prototype.shift = function () {\n  if (this.length === 0) return;\n  var ret = this.head.data;\n  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n  --this.length;\n  return ret;\n};\n\nBufferList.prototype.clear = function () {\n  this.head = this.tail = null;\n  this.length = 0;\n};\n\nBufferList.prototype.join = function (s) {\n  if (this.length === 0) return '';\n  var p = this.head;\n  var ret = '' + p.data;\n  while (p = p.next) {\n    ret += s + p.data;\n  }return ret;\n};\n\nBufferList.prototype.concat = function (n) {\n  if (this.length === 0) return Buffer.alloc(0);\n  if (this.length === 1) return this.head.data;\n  var ret = Buffer.allocUnsafe(n >>> 0);\n  var p = this.head;\n  var i = 0;\n  while (p) {\n    p.data.copy(ret, i);\n    i += p.data.length;\n    p = p.next;\n  }\n  return ret;\n};\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport {Buffer} from 'buffer';\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nexport function StringDecoder(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n", "'use strict';\n\n\nReadable.ReadableState = ReadableState;\nimport EventEmitter from 'events';\nimport {inherits, debuglog} from 'util';\nimport BufferList from './buffer-list';\nimport {StringDecoder} from 'string_decoder';\nimport {Duplex} from './duplex';\nimport {nextTick} from 'process';\n\nvar debug = debuglog('stream');\ninherits(Readable, EventEmitter);\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') {\n    return emitter.prependListener(event, fn);\n  } else {\n    // This is a hack to make sure that our error handler is attached before any\n    // userland ones.  NEVER DO THIS. This is here only because this code needs\n    // to continue to work with older versions of Node.js that do not include\n    // the prependListener() method. The goal is to eventually remove this hack.\n    if (!emitter._events || !emitter._events[event])\n      emitter.on(event, fn);\n    else if (Array.isArray(emitter._events[event]))\n      emitter._events[event].unshift(fn);\n    else\n      emitter._events[event] = [fn, emitter._events[event]];\n  }\n}\nfunction listenerCount (emitter, type) {\n  return emitter.listeners(type).length;\n}\nfunction ReadableState(options, stream) {\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nexport default Readable;\nexport function Readable(options) {\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options && typeof options.read === 'function') this._read = options.read;\n\n  EventEmitter.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n\n  if (!state.objectMode && typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = Buffer.from(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var _e = new Error('stream.unshift() after end event');\n      stream.emit('error', _e);\n    } else {\n      var skipAdd;\n      if (state.decoder && !addToFront && !encoding) {\n        chunk = state.decoder.write(chunk);\n        skipAdd = !state.objectMode && chunk.length === 0;\n      }\n\n      if (!addToFront) state.reading = false;\n\n      // Don't add to the buffer if we've decoded to an empty string chunk and\n      // we're not in object mode\n      if (!skipAdd) {\n        // if we want the data now, just emit it.\n        if (state.flowing && state.length === 0 && !state.sync) {\n          stream.emit('data', chunk);\n          stream.read(0);\n        } else {\n          // update the buffer info.\n          state.length += state.objectMode ? 1 : chunk.length;\n          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n          if (state.needReadable) emitReadable(stream);\n        }\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false);\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted) nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (listenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && src.listeners('data').length) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var _i = 0; _i < len; _i++) {\n      dests[_i].emit('unpipe', this);\n    }return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1) return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = EventEmitter.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function (ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n", "// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\nimport {inherits, deprecate} from 'util';\nimport {Buffer} from 'buffer';\nWritable.WritableState = WritableState;\nimport {EventEmitter} from 'events';\nimport {Duplex} from './duplex';\nimport {nextTick} from 'process';\ninherits(Writable, EventEmitter);\n\nfunction nop() {}\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\nfunction WritableState(options, stream) {\n  Object.defineProperty(this, 'buffer', {\n    get: deprecate(function () {\n      return this.getBuffer();\n    }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')\n  });\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function writableStateGetBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\nexport default Writable;\nexport function Writable(options) {\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex)) return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n  }\n\n  EventEmitter.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  nextTick(cb, er);\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n  // Always throw error if a null is written\n  // if we are not in object mode then throw\n  // if it is not a buffer, string, or undefined.\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) nextTick(cb, er);else cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n        nextTick(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n        afterWrite(stream, state, finished, cb);\n      }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    while (entry) {\n      buffer[count] = entry;\n      entry = entry.next;\n      count += 1;\n    }\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequestCount = 0;\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else {\n      prefinish(stream, state);\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function (err) {\n    var entry = _this.entry;\n    _this.entry = null;\n    while (entry) {\n      var cb = entry.callback;\n      state.pendingcb--;\n      cb(err);\n      entry = entry.next;\n    }\n    if (state.corkedRequestsFree) {\n      state.corkedRequestsFree.next = _this;\n    } else {\n      state.corkedRequestsFree = _this;\n    }\n  };\n}\n", "\nimport {inherits} from 'util';\nimport {nextTick} from 'process';\nimport {Readable} from './readable';\nimport {Writable} from './writable';\n\n\ninherits(Duplex, Readable);\n\nvar keys = Object.keys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\nexport default Duplex;\nexport function Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n", "// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\nimport {Duplex} from './duplex';\n\n\nimport {inherits} from 'util';\ninherits(Transform, Duplex);\n\nfunction TransformState(stream) {\n  this.afterTransform = function (er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n  this.writeencoding = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\nexport default Transform;\nexport function Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  this.once('prefinish', function () {\n    if (typeof this._flush === 'function') this._flush(function (er) {\n      done(stream, er);\n    });else done(stream);\n  });\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('Not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nfunction done(stream, er) {\n  if (er) return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n", "\nimport {Transform} from './transform';\n\nimport {inherits} from 'util';\ninherits(PassThrough, Transform);\nexport default PassThrough;\nexport function PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n", "import EE from 'events';\nimport {inherits} from 'util';\n\nimport {Duplex} from './readable-stream/duplex.js';\nimport {Readable} from './readable-stream/readable.js';\nimport {Writable} from './readable-stream/writable.js';\nimport {Transform} from './readable-stream/transform.js';\nimport {PassThrough} from './readable-stream/passthrough.js';\ninherits(Stream, EE);\nStream.Readable = Readable;\nStream.Writable = Writable;\nStream.Duplex = Duplex;\nStream.Transform = Transform;\nStream.PassThrough = PassThrough;\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\nexport default Stream;\nexport {Readable,Writable,Duplex,Transform,PassThrough,Stream}\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n", "\nconst polyfill = require('stream')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "\nconst polyfill = require('string_decoder')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", ";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n", "const xre = require('xregexp');\n\nconst sax = require('sax');\n\nconst {\n  lexingRegexes,\n  mainRegex,\n} = require('../lexingRegexes.cjs');\nconst {\n  preTokenObjectForFragment,\n  constructorForFragment,\n} = require('../object_for_fragment.cjs');\n\nclass UsxLexer {\n  constructor() {\n    this.sax = sax.parser(true);\n    this.sax.ontext = text => this.handleSaxText(text);\n    this.sax.onopentag = ot => this.handleSaxOpenTag(ot);\n    this.sax.onclosetag = ct => this.handleSaxCloseTag(ct);\n    this.lexed = [];\n    this.elementStack = [];\n    this.currentText = '';\n    this.openTagHandlers = {\n      usx: this.ignoreHandler,\n      book: this.handleBookOpen,\n      chapter: this.handleChapter,\n      verse: this.handleVerses,\n      para: this.handleParaOpen,\n      table: this.ignoreHandler,\n      row: this.handleRowOpen,\n      cell: this.handleCellOpen,\n      char: this.handleCharOpen,\n      ms: this.handleMSOpen,\n      note: this.handleNoteOpen,\n      sidebar: this.handleSidebarOpen,\n      periph: this.notHandledHandler,\n      figure: this.handleFigureOpen,\n      optbreak: this.handleOptBreakOpen,\n      ref: this.ignoreHandler, // this.handleRefOpen,\n    };\n    this.closeTagHandlers = {\n      usx: this.ignoreHandler,\n      book: this.handleBookClose,\n      chapter: this.ignoreHandler,\n      verse: this.ignoreHandler,\n      para: this.handleParaClose,\n      table: this.ignoreHandler,\n      row: this.handleRowClose,\n      cell: this.handleCellClose,\n      char: this.handleCharClose,\n      ms: this.handleMSClose,\n      note: this.handleNoteClose,\n      sidebar: this.handleSidebarClose,\n      periph: this.notHandledHandler,\n      figure: this.handleFigureClose,\n      optbreak: this.handleOptBreakClose,\n      ref: this.ignoreHandler, // this.handleRefClose,\n    };\n  }\n\n  lexAndParse(str, parser) {\n    this.parser = parser;\n    this.lexed = [];\n    this.elementStack = [];\n    this.sax.write(str).close();\n  }\n\n  handleSaxText(text) {\n    this.currentText = this.replaceEntities(text);\n    xre.match(this.currentText, mainRegex, 'all')\n      .map(f => preTokenObjectForFragment(f, lexingRegexes))\n      .forEach(t => this.parser.parseItem(t));\n  }\n\n  replaceEntities(text) {\n    return text.replace('&lt;', '<')\n      .replace('&gt;', '>')\n      .replace('&apos;', '\\'')\n      .replace('&quot;', '\"')\n      .replace('&amp;', '&');\n  }\n\n  handleSaxOpenTag(tagOb) {\n    const name = tagOb.name;\n    const atts = tagOb.attributes;\n\n    if (name in this.openTagHandlers) {\n      this.openTagHandlers[name](this, 'open', name, atts);\n    } else {\n      throw new Error(`Unexpected open element tag '${name}' in UsxParser`);\n    }\n  }\n\n  handleSaxCloseTag(name) {\n    this.closeTagHandlers[name](this, 'close', name);\n  }\n\n  notHandledHandler(lexer, oOrC, tag) {\n    console.error(`WARNING: ${oOrC} element tag '${tag}' is not handled by UsxParser`);\n  }\n\n  stackPush(name, atts) {\n    this.elementStack.push([name, atts]);\n  }\n\n  stackPop() {\n    return this.elementStack.pop();\n  }\n\n  splitTagNumber(fullTagName) {\n    const tagBits = xre.exec(fullTagName, xre('([^1-9]+)(.*)'));\n    const tagName = tagBits[1];\n    const tagNo = tagBits[2].length > 0 ? tagBits[2] : '1';\n    return [tagName, tagNo];\n  }\n\n  ignoreHandler(lexer, oOrC, tag) {\n  }\n\n  handleParaOpen(lexer, oOrC, name, atts) {\n    lexer.currentText = '';\n    const [tagName, tagNo] = lexer.splitTagNumber(atts.style);\n\n    if (!['cp'].includes(tagName)) {\n      lexer.parser.parseItem(constructorForFragment.tag('startTag', [null, null, tagName, tagNo]));\n    }\n    lexer.stackPush(name, atts);\n  }\n\n  handleParaClose(lexer) {\n    const sAtts = lexer.stackPop()[1];\n    const [tagName, tagNo] = lexer.splitTagNumber(sAtts.style);\n\n    if (['cp'].includes(tagName)) {\n      lexer.parser.parseItem(constructorForFragment.pubchapter('pubchapter', [null, null, lexer.currentText]));\n    } else {\n      lexer.parser.parseItem(constructorForFragment.tag('endTag', [null, null, tagName, tagNo]));\n    }\n    lexer.currentText = '';\n  }\n\n  handleCharOpen(lexer, oOrC, name, atts) {\n    const [tagName, tagNo] = lexer.splitTagNumber(atts.style);\n    lexer.parser.parseItem(constructorForFragment.tag('startTag', [null, null, `+${tagName}`, tagNo]));\n    const ignoredAtts = ['sid', 'eid', 'style', 'srcloc', 'link-href', 'link-title', 'link-id', 'closed'];\n\n    for (const [attName, attValue] of Object.entries(atts)) {\n      if (!ignoredAtts.includes(attName)) {\n        lexer.parser.parseItem(constructorForFragment.attribute('attribute', [null, null, attName, attValue]));\n      }\n    }\n    lexer.stackPush(name, atts);\n  }\n\n  handleCharClose(lexer) {\n    const sAtts = lexer.stackPop()[1];\n    const [tagName, tagNo] = lexer.splitTagNumber(sAtts.style);\n    lexer.parser.parseItem(constructorForFragment.tag('endTag', [null, null, `+${tagName}`, tagNo]));\n  }\n\n  handleRefOpen(lexer) {\n    lexer.parser.parseItem(constructorForFragment.tag('startTag', [null, null, 'xt', '']));\n  }\n\n  handleRefClose(lexer) {\n    lexer.parser.parseItem(constructorForFragment.tag('endTag', [null, null, 'xt', '']));\n  }\n\n  handleRowOpen(lexer, oOrC, name, atts) {\n    const [tagName, tagNo] = lexer.splitTagNumber(atts.style);\n    lexer.parser.parseItem(constructorForFragment.tag('startTag', [null, null, tagName, tagNo]));\n    lexer.stackPush(name, atts);\n  }\n\n  handleRowClose(lexer) {\n    const sAtts = lexer.stackPop()[1];\n    const [tagName, tagNo] = lexer.splitTagNumber(sAtts.style);\n    lexer.parser.parseItem(constructorForFragment.tag('endTag', [null, null, tagName, tagNo]));\n  }\n\n  handleCellOpen(lexer, oOrC, name, atts) {\n    const [tagName, tagNo] = lexer.splitTagNumber(atts.style);\n    lexer.parser.parseItem(constructorForFragment.tag('startTag', [null, null, tagName, tagNo]));\n    lexer.stackPush(name, atts);\n  }\n\n  handleCellClose(lexer) {\n    const sAtts = lexer.stackPop()[1];\n    const [tagName, tagNo] = lexer.splitTagNumber(sAtts.style);\n    lexer.parser.parseItem(constructorForFragment.tag('endTag', [null, null, tagName, tagNo]));\n  }\n\n  handleBookOpen(lexer, oOrC, name, atts) {\n    lexer.parser.parseItem(constructorForFragment.tag('startTag', [null, null, 'id', '']));\n    lexer.parser.parseItem(constructorForFragment.printable('wordLike', [atts.code]));\n    lexer.parser.parseItem(constructorForFragment.printable('lineSpace', [' ']));\n    lexer.stackPush(name, atts);\n  }\n\n  handleBookClose(lexer) {\n    lexer.stackPop();\n    lexer.parser.parseItem(constructorForFragment.tag('endTag', [null, null, 'id', '']));\n  }\n\n  handleChapter(lexer, oOrC, name, atts) {\n    if (atts.number) {\n      lexer.parser.parseItem(constructorForFragment.chapter('chapter', [null, null, atts.number]));\n\n      if (atts.pubnumber) {\n        lexer.parser.parseItem(constructorForFragment.pubchapter('pubchapter', [null, null, atts.pubnumber]));\n      }\n\n      if (atts.altnumber) {\n        lexer.parser.parseItem(constructorForFragment.tag('startTag', [null, null, '+ca', '']));\n        lexer.parser.parseItem(constructorForFragment.printable('wordLike', [atts.altnumber]));\n        lexer.parser.parseItem(constructorForFragment.tag('endTag', [null, null, '+ca', '']));\n      }\n    }\n  }\n\n  handleVerses(lexer, oOrC, name, atts) {\n    if (atts.number) {\n      lexer.parser.parseItem(constructorForFragment.verses('verses', [null, null, atts.number]));\n\n      if (atts.pubnumber) {\n        lexer.parser.parseItem(constructorForFragment.tag('startTag', [null, null, '+vp', '']));\n        lexer.parser.parseItem(constructorForFragment.printable('wordLike', [atts.pubnumber]));\n        lexer.parser.parseItem(constructorForFragment.tag('endTag', [null, null, '+vp', '']));\n      }\n\n      if (atts.altnumber) {\n        lexer.parser.parseItem(constructorForFragment.tag('startTag', [null, null, '+va', '']));\n        lexer.parser.parseItem(constructorForFragment.printable('wordLike', [atts.altnumber]));\n        lexer.parser.parseItem(constructorForFragment.tag('endTag', [null, null, '+va', '']));\n      }\n    }\n  }\n\n  handleNoteOpen(lexer, oOrC, name, atts) {\n    lexer.parser.parseItem(constructorForFragment.tag('startTag', [null, null, atts.style, '']));\n    lexer.parser.parseItem(constructorForFragment.printable('punctuation', [atts.caller]));\n    lexer.stackPush(name, atts);\n  }\n\n  handleNoteClose(lexer) {\n    const sAtts = lexer.stackPop()[1];\n    lexer.parser.parseItem(constructorForFragment.tag('endTag', [null, null, sAtts.style, '']));\n  }\n\n  handleSidebarOpen(lexer, oOrC, name, atts) {\n    lexer.parser.parseItem(constructorForFragment.tag('startTag', [null, null, 'esb', '']));\n\n    if ('category' in atts) {\n      lexer.parser.parseItem(constructorForFragment.tag('startTag', [null, null, 'cat', '']));\n      lexer.parser.parseItem(constructorForFragment.printable('wordLike', [atts.category]));\n      lexer.parser.parseItem(constructorForFragment.tag('endTag', [null, null, 'cat', '']));\n    }\n    lexer.stackPush(name, atts);\n  }\n\n  handleSidebarClose(lexer) {\n    lexer.stackPop();\n    lexer.parser.parseItem(constructorForFragment.tag('startTag', [null, null, 'esbe', '']));\n  }\n\n  handleMSOpen(lexer, oOrC, name, atts) {\n    let matchBits = xre.exec(atts.style, xre('(([a-z1-9]+)-([se]))'));\n\n    if (matchBits) {\n      const startMS = constructorForFragment.milestone('startMilestoneTag', [null, null, matchBits[2], matchBits[3]]);\n      lexer.parser.parseItem(startMS);\n      const ignoredAtts = ['sid', 'eid', 'style', 'srcloc', 'link-href', 'link-title', 'link-id'];\n\n      for (const [attName, attValue] of Object.entries(atts)) {\n        if (!ignoredAtts.includes(attName)) {\n          lexer.parser.parseItem(constructorForFragment.attribute('attribute', [null, null, attName, attValue]));\n        }\n      }\n      lexer.parser.parseItem(constructorForFragment.milestone('endMilestoneMarker'));\n    } else {\n      const emptyMS = constructorForFragment.milestone('emptyMilestone', [null, null, atts.style, '']);\n      lexer.parser.parseItem(emptyMS);\n    }\n    lexer.stackPush(name, atts);\n  }\n\n  handleMSClose(lexer) {\n    lexer.stackPop();\n  }\n\n  handleFigureOpen(lexer, oOrC, name, atts) {\n    lexer.parser.parseItem(constructorForFragment.tag('startTag', [null, null, '+fig', '']));\n\n    for (const [attName, attValue] of Object.entries(atts)) {\n      if (attName === 'style') {\n        continue;\n      }\n\n      const scopeAttName = (attName === 'file') ? 'src' : attName;\n      lexer.parser.parseItem(constructorForFragment.attribute('attribute', [null, null, scopeAttName, attValue]));\n    }\n    lexer.stackPush(name, atts);\n  }\n\n  handleFigureClose(lexer) {\n    const sAtts = lexer.stackPop()[1];\n    lexer.parser.parseItem(constructorForFragment.tag('endTag', [null, null, `+fig`, '']));\n  }\n\n\n  handleOptBreakOpen(lexer, oOrC, name, atts) {\n    lexer.parser.parseItem(constructorForFragment.printable('softLineBreak', ['//']));\n    lexer.stackPush(name, atts);\n  }\n\n  handleOptBreakClose(lexer) {\n    lexer.stackPop();\n  }\n}\n\nmodule.exports = { UsxLexer };\n", "const { UsxLexer } = require('./usx_lexer.cjs');\n\nconst parseUsx = (str, parser) => {\n  new UsxLexer().lexAndParse(str, parser);\n};\n\nmodule.exports = { parseUsx };\n", "const utils = require('../../util/index.cjs');\nconst ByteArray = utils.ByteArray;\nconst {\n  pushSuccinctGraftBytes,\n  pushSuccinctScopeBytes,\n  pushSuccinctTokenBytes,\n} = utils.succinct;\nconst { addTag } = utils.tags;\nconst { labelForScope } = utils.scopeDefs;\nconst { itemEnum } = utils.itemDefs;\nconst { scopeEnum } = utils.scopeDefs;\nconst { tokenCategory, tokenEnum } = utils.tokenDefs;\n\nconst Sequence = class {\n  constructor(sType) {\n    this.id = utils.generateId();\n    this.type = sType;\n    this.tags = new Set([]);\n    this.blocks = [];\n    this.activeScopes = [];\n  }\n\n  addTag(tag) {\n    addTag(this.tags, tag);\n  }\n\n  plainText() {\n    return this.blocks.map(b => b.plainText()).join('').trim();\n  }\n\n  addItem(i) {\n    this.lastBlock().addItem(i);\n  }\n\n  addBlockGraft(g) {\n    this.newBlock('hangingGraft');\n    this.lastBlock().bg.push(g);\n  }\n\n  lastBlock() {\n    if (this.blocks.length === 0) {\n      this.newBlock('orphanTokens');\n    }\n    return this.blocks[this.blocks.length - 1];\n  }\n\n  newBlock(label) {\n    if (this.blocks.length > 0 && ['orphanTokens', 'hangingGraft'].includes(this.blocks[this.blocks.length - 1].bs.payload)) {\n      this.lastBlock().bs = {\n        type: 'scope',\n        subType: 'start',\n        payload: label,\n      };\n    } else {\n      this.blocks.push(new Block(label));\n    }\n  }\n\n  trim() {\n    this.blocks.forEach(b => b.trim());\n  }\n\n  reorderSpanWithAtts() {\n    this.blocks.forEach(b => b.reorderSpanWithAtts());\n  }\n\n  makeNoteGrafts(parser) {\n    this.blocks.forEach(b => b.makeNoteGrafts(parser));\n  }\n\n  close(parser) {\n    for (const activeScope of this.activeScopes.filter(() => true).reverse()) {\n      this.closeActiveScope(parser, activeScope);\n    }\n    this.activeScopes = [];\n  }\n\n  closeActiveScope(parser, sc) {\n    this.addItem({\n      type: 'scope',\n      subType: 'end',\n      payload: sc.label,\n    });\n\n    if (sc.onEnd) {\n      sc.onEnd(parser, sc.label);\n    }\n  }\n\n  filterGrafts(options) {\n    return this.blocks.map(b => b.filterGrafts(options)).reduce((acc, current) => acc.concat(current), []);\n  }\n\n  filterScopes(options) {\n    this.blocks.forEach(b => b.filterScopes(options));\n  }\n\n  text() {\n    return this.blocks.map(b => b.text()).join('');\n  }\n\n  addTableScopes() {\n    let inTable = false;\n\n    for (const [blockNo, block] of this.blocks.entries()) {\n      if (!inTable && block.bs.payload === 'blockTag/tr') {\n        inTable = true;\n        this.blocks[blockNo].items.unshift({\n          type: 'scope',\n          subType: 'start',\n          payload: labelForScope('table', []),\n        });\n      } else if (inTable && block.bs.payload !== 'blockTag/tr') {\n        inTable = false;\n        this.blocks[(blockNo - 1)].items.push({\n          type: 'scope',\n          subType: 'end',\n          payload: labelForScope('table', []),\n        });\n      }\n    }\n\n    if (inTable) {\n      this.lastBlock().items.push({\n        type: 'scope',\n        subType: 'end',\n        payload: labelForScope('table', []),\n      });\n    }\n  }\n\n  graftifyIntroductionHeadings(parser) {\n    let blockEntries = [...this.blocks.entries()];\n    blockEntries.reverse();\n    const introHeadingTags = ['iot', 'is'].concat(parser.customTags.introHeading);\n\n    for (const [n, block] of blockEntries) {\n      const blockTag = block.bs.payload.split('/')[1].replace(/[0-9]/g, '');\n\n      if (introHeadingTags.includes(blockTag)) {\n        const headingSequence = new Sequence('heading');\n        parser.sequences.heading.push(headingSequence);\n        headingSequence.blocks.push(block);\n        const headingGraft = {\n          type: 'graft',\n          subType: 'heading',\n          payload: headingSequence.id,\n        };\n\n        if (this.blocks.length < n + 2) {\n          this.newBlock('blockTag/hangingGraft');\n        }\n        this.blocks[n + 1].bg.unshift(headingGraft);\n        this.blocks.splice(n, 1);\n      } else if (blockTag.startsWith('imt')) {\n        const titleType = (blockTag.startsWith('imte') ? 'introEndTitle' : 'introTitle');\n        let titleSequence;\n\n        if (parser.sequences[titleType]) {\n          titleSequence = parser.sequences[titleType];\n        } else {\n          const graftType = (blockTag.startsWith('imte') ? 'endTitle' : 'title');\n          titleSequence = new Sequence(graftType);\n          parser.sequences[titleType] = titleSequence;\n          const titleGraft = {\n            type: 'graft',\n            subType: graftType,\n            payload: titleSequence.id,\n          };\n\n          if (this.blocks.length < n + 2) {\n            this.newBlock('blockTag/hangingGraft');\n          }\n          this.blocks[n + 1].bg.unshift(titleGraft);\n        }\n        this.blocks.splice(n, 1);\n        titleSequence.blocks.unshift(block);\n      }\n    }\n  }\n\n  moveOrphanScopes() {\n    if (this.blocks.length > 1) {\n      this.moveOrphanStartScopes();\n      this.moveOrphanEndScopes();\n    }\n  }\n\n  moveOrphanStartScopes() {\n    for (const [blockNo, block] of this.blocks.entries()) {\n      if (blockNo >= this.blocks.length - 1) {\n        continue;\n      }\n\n      for (const item of [...block.items].reverse()) {\n        if (item.subType !== 'start' || item.payload.startsWith('altChapter')) {\n          break;\n        }\n        this.blocks[blockNo + 1].items.unshift(this.blocks[blockNo].items.pop());\n      }\n    }\n  }\n\n  moveOrphanStartScopes2() {\n    for (const [blockNo, block] of this.blocks.entries()) {\n      if (blockNo >= this.blocks.length - 1) {\n        continue;\n      }\n\n      for (const item of [...block.items].reverse()) {\n        if (item.subType !== 'start') {\n          break;\n        }\n        this.blocks[blockNo + 1].items.unshift(this.blocks[blockNo].items.pop());\n      }\n    }\n  }\n\n  moveOrphanEndScopes() {\n    for (const [blockNo, block] of this.blocks.entries()) {\n      if (blockNo === 0) {\n        continue;\n      }\n\n      for (const item of [...block.items]) {\n        if (item.subType !== 'end') {\n          break;\n        }\n        this.blocks[blockNo - 1].items.push(this.blocks[blockNo].items.shift());\n      }\n    }\n  }\n\n  removeEmptyBlocks(customCanBeEmpty) {\n    const canBeEmpty = ['blockTag/b', 'blockTag/ib'].concat(customCanBeEmpty);\n    const emptyBlocks = [];\n    let changed = false;\n\n    for (const blockRecord of this.blocks.entries()) {\n      if (blockRecord[1].tokens().length === 0 && !canBeEmpty.includes(blockRecord[1].bs.payload)) {\n        emptyBlocks.push(blockRecord);\n      }\n    }\n\n    for (const [n, block] of emptyBlocks.reverse()) {\n      if (n < this.blocks.length - 1) {\n        for (const bg of [...block.bg].reverse()) {\n          this.blocks[n + 1].bg.unshift(bg);\n        }\n\n        for (const i of block.items.reverse()) {\n          this.blocks[n + 1].items.unshift(i);\n        }\n        this.blocks.splice(n, 1);\n        changed = true;\n      } else if (block.bg.length === 0 && block.items.length === 0) {\n        this.blocks.splice(n, 1);\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      this.removeEmptyBlocks(customCanBeEmpty);\n    }\n  }\n\n  removeGraftsToEmptySequences(emptySequences) {\n    this.blocks.forEach(b => b.removeGraftsToEmptySequences(emptySequences));\n  }\n\n  succinctifyBlocks(docSet) {\n    const ret = [];\n    let openScopes = [];\n\n    const updateOpenScopes = item => {\n      if (item.subType === 'start') {\n        const existingScopes = openScopes.filter(s => s.payload === item.payload);\n\n        if (existingScopes.length === 0) {\n          openScopes.push(item);\n        }\n      } else {\n        openScopes = openScopes.filter(s => s.payload !== item.payload);\n      }\n    };\n\n    let nextToken = 0;\n\n    for (const block of this.blocks) {\n      const contentBA = new ByteArray(block.length);\n      const blockGraftsBA = new ByteArray(1);\n      const openScopesBA = new ByteArray(1);\n      const includedScopesBA = new ByteArray(1);\n      const nextTokenBA = new ByteArray(1);\n\n      nextTokenBA.pushNByte(nextToken);\n\n      for (const bg of block.bg) {\n        this.pushSuccinctGraft(blockGraftsBA, docSet, bg);\n      }\n\n      for (const os of openScopes) {\n        this.pushSuccinctScope(openScopesBA, docSet, os);\n      }\n\n      const includedScopes = [];\n\n      for (const item of block.items) {\n        switch (item.type) {\n        case 'token':\n          this.pushSuccinctToken(contentBA, docSet, item);\n\n          if (item.subType === 'wordLike') {\n            nextToken++;\n          }\n          break;\n        case 'graft':\n          this.pushSuccinctGraft(contentBA, docSet, item);\n          break;\n        case 'scope':\n          this.pushSuccinctScope(contentBA, docSet, item);\n          updateOpenScopes(item);\n\n          if (item.subType === 'start') {\n            includedScopes.push(item);\n          }\n          break;\n        default:\n          throw new Error(`Item type ${item.type} is not handled in succinctifyBlocks`);\n        }\n      }\n\n      const blockScopeBA = new ByteArray(10);\n      this.pushSuccinctScope(blockScopeBA, docSet, block.bs);\n\n      for (const is of includedScopes) {\n        this.pushSuccinctScope(includedScopesBA, docSet, is);\n      }\n      contentBA.trim();\n      blockGraftsBA.trim();\n      blockScopeBA.trim();\n      openScopesBA.trim();\n      includedScopesBA.trim();\n      ret.push({\n        c: contentBA,\n        bs: blockScopeBA,\n        bg: blockGraftsBA,\n        os: openScopesBA,\n        is: includedScopesBA,\n        nt: nextTokenBA,\n      });\n    }\n    return ret;\n  }\n\n  pushSuccinctToken(bA, docSet, item) {\n    const charsEnumIndex = docSet.enumForCategoryValue(tokenCategory[item.subType], item.payload);\n    pushSuccinctTokenBytes(bA, tokenEnum[item.subType], charsEnumIndex);\n  }\n\n  pushSuccinctGraft(bA, docSet, item) {\n    const graftTypeEnumIndex = docSet.enumForCategoryValue('graftTypes', item.subType);\n    const seqEnumIndex = docSet.enumForCategoryValue('ids', item.payload);\n    pushSuccinctGraftBytes(bA, graftTypeEnumIndex, seqEnumIndex);\n  }\n\n  pushSuccinctScope(bA, docSet, item) {\n    const scopeBits = item.payload.split('/');\n    const scopeTypeByte = scopeEnum[scopeBits[0]];\n    const scopeBitBytes = scopeBits.slice(1).map(b => docSet.enumForCategoryValue('scopeBits', b));\n    pushSuccinctScopeBytes(bA, itemEnum[`${item.subType}Scope`], scopeTypeByte, scopeBitBytes);\n  }\n};\nconst Block = class {\n  constructor(blockScope) {\n    this.id = utils.generateId();\n    this.items = [];\n    this.bg = [];\n    this.bs = {\n      type: 'scope',\n      subType: 'start',\n      payload: blockScope,\n    };\n    this.os = [];\n  }\n\n  addItem(i) {\n    this.items.push(i);\n  }\n\n  plainText() {\n    return this.items.filter(i => i.type === 'token').map(i => i.payload).join('');\n  }\n\n  trim() {\n    this.items = this.trimEnd(this.trimStart(this.items));\n  }\n\n  reorderSpanWithAtts() {\n    const swaStarts = [];\n\n    for (const [pos, item] of this.items.entries()) {\n      if (item.subType === 'start' && item.payload.startsWith('spanWithAtts')) {\n        swaStarts.push(pos + 1);\n      }\n    }\n\n    for (const swaStart of swaStarts) {\n      let pos = swaStart;\n      let tokens = [];\n      let scopes = [];\n\n      // eslint-disable-next-line no-constant-condition\n      while (true) {\n        if (pos >= this.items.length) {\n          break;\n        }\n\n        const item = this.items[pos];\n\n        if (item.type === 'token') {\n          tokens.push(item);\n        } else if (item.subType === 'start' && item.payload.startsWith('attribute/spanWithAtts')) {\n          scopes.push(item);\n        } else {\n          break;\n        }\n        pos++;\n      }\n\n      if (tokens.length !== 0 && scopes.length !== 0) {\n        let pos = swaStart;\n\n        for (const s of scopes) {\n          this.items[pos] = s;\n          pos++;\n        }\n\n        for (const t of tokens) {\n          this.items[pos] = t;\n          pos++;\n        }\n      }\n    }\n  }\n\n  inlineToEnd() {\n    let toAppend = null;\n\n    for (const [pos, item] of this.items.entries()) {\n      if (item.subType === 'end' && ['inline/f', 'inline/fe', 'inline/x'].includes(item.payload)) {\n        toAppend = item;\n        this.items.splice(pos, 1);\n        break;\n      }\n    }\n\n    if (toAppend) {\n      this.addItem(toAppend);\n    }\n  }\n\n  makeNoteGrafts(parser) {\n    const noteStarts = [];\n\n    for (const [pos, item] of this.items.entries()) {\n      if (item.subType === 'start' && (item.payload.startsWith('inline/f') || item.payload.startsWith('inline/x'))) {\n        noteStarts.push(pos);\n      }\n    }\n\n    for (const noteStart of noteStarts) {\n      const noteLabel = this.items[noteStart].payload;\n      const callerToken = this.items[noteStart + 1];\n\n      if (callerToken.type === 'token' && callerToken.payload.length === 1) {\n        const callerSequence = new Sequence('noteCaller');\n        callerSequence.newBlock(noteLabel);\n        callerSequence.addItem(callerToken);\n        parser.sequences.noteCaller.push(callerSequence);\n        this.items[noteStart + 1] = {\n          type: 'graft',\n          subType: 'noteCaller',\n          payload: callerSequence.id,\n        };\n      }\n    }\n  }\n\n  trimStart(items) {\n    if (items.length === 0) {\n      return items;\n    }\n\n    const firstItem = items[0];\n\n    if (['lineSpace', 'eol'].includes(firstItem.subType)) {\n      return this.trimStart(items.slice(1));\n    }\n\n    if (firstItem.type === 'token') {\n      return items;\n    }\n    return [firstItem, ...this.trimStart(items.slice(1))];\n  }\n\n  trimEnd(items) {\n    if (items.length === 0) {\n      return items;\n    }\n\n    const lastItem = items[items.length - 1];\n\n    if (['lineSpace', 'eol'].includes(lastItem.subType)) {\n      return this.trimEnd(items.slice(0, items.length - 1));\n    }\n\n    if (lastItem.type === 'token') {\n      return items;\n    }\n    return [...this.trimEnd(items.slice(0, items.length - 1)), lastItem];\n  }\n\n  filterGrafts(options) {\n    // Each graft should be removed or returned\n    const ret = [];\n    let toRemove = [];\n\n    for (const [pos, item] of this.grafts()) {\n      if (this.graftPassesOptions(item, options)) {\n        ret.push(item.payload);\n      } else {\n        toRemove.push(pos);\n      }\n    }\n\n    for (const [count, pos] of Array.from(toRemove.entries())) {\n      this.items.splice(pos - count, 1);\n    }\n    toRemove = [];\n\n    for (const [pos, item] of this.bg.entries()) {\n      if (this.graftPassesOptions(item, options)) {\n        ret.push(item.payload);\n      } else {\n        toRemove.push(pos);\n      }\n    }\n\n    for (const [count, pos] of Array.from(toRemove.entries())) {\n      this.bg.splice(pos - count, 1);\n    }\n    return ret;\n  }\n\n  filterScopes(options) {\n    const toRemove = [];\n\n    for (const [pos, item] of this.scopes()) {\n      if (!this.scopePassesOptions(item, options)) {\n        toRemove.push(pos);\n      }\n    }\n\n    for (const [count, pos] of Array.from(toRemove.entries())) {\n      this.items.splice(pos - count, 1);\n    }\n  }\n\n  graftPassesOptions(item, options) {\n    return (\n      (!('includeGrafts' in options) || options.includeGrafts.includes(item.subType)) &&\n      (!('excludeGrafts' in options) || !options.excludeGrafts.includes(item.subType))\n    );\n  }\n\n  scopePassesOptions(item, options) {\n    return (\n      (!('includeScopes' in options) || this.scopeMatchesOptionArray(item.payload, options.includeScopes)) &&\n      (!('excludeScopes' in options) || !this.scopeMatchesOptionArray(item.payload, options.excludeScopes))\n    );\n  }\n\n  scopeMatchesOptionArray(itemString, optionArray) {\n    for (const optionString of optionArray) {\n      if (itemString.startsWith(optionString)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  removeGraftsToEmptySequences(emptySequences) {\n    const ret = [];\n    let toRemove = [];\n\n    for (const [pos, item] of this.grafts()) {\n      if (emptySequences.includes(item.payload)) {\n        toRemove.push(pos);\n      }\n    }\n\n    for (const [count, pos] of Array.from(toRemove.entries())) {\n      this.items.splice(pos - count, 1);\n    }\n    toRemove = [];\n\n    for (const [pos, item] of this.bg.entries()) {\n      if (emptySequences.includes(item.payload)) {\n        toRemove.push(pos);\n      }\n    }\n\n    for (const [count, pos] of Array.from(toRemove.entries())) {\n      this.bg.splice(pos - count, 1);\n    }\n    return ret;\n  }\n\n  grafts() {\n    return Array.from(this.items.entries()).filter(ip => ip[1].type === 'graft');\n  }\n\n  scopes() {\n    return Array.from(this.items.entries()).filter(ip => ip[1].type === 'scope');\n  }\n\n  tokens() {\n    return Array.from(this.items.entries()).filter(ip => !['scope', 'graft'].includes(ip[1].type));\n  }\n\n  text() {\n    return this.tokens().map(t => t[1].payload).join('');\n  }\n};\n\nmodule.exports = { Sequence, Block };\n", "const xre = require('xregexp');\nconst { lexingRegexes } = require('../lexers/lexingRegexes.cjs');\n\nconst tokenTypes = {};\nconst unionComponents = [];\n\nfor (const lr of lexingRegexes) {\n  if (['wordLike', 'eol', 'lineSpace', 'punctuation', 'unknown'].includes(lr[1])) {\n    tokenTypes[lr[1]] = xre(`^${lr[2].xregexp.source}$`);\n    unionComponents.push(lr[2]);\n  }\n}\n\nconst tokenizeString = str => {\n  const unionRegex = xre.union(unionComponents);\n  const ret = [];\n\n  for (const token of xre.match(str, unionRegex, 'all')) {\n    let tokenType;\n\n    if (xre.test(token, tokenTypes['wordLike'])) {\n      tokenType = 'wordLike';\n    } else if (xre.test(token, tokenTypes['punctuation'])) {\n      tokenType = 'punctuation';\n    } else if (xre.test(token, tokenTypes['lineSpace'])) {\n      tokenType = 'lineSpace';\n    } else if (xre.test(token, tokenTypes['eol'])) {\n      tokenType = 'eol';\n    } else {\n      tokenType = 'unknown';\n    }\n    ret.push([token, tokenType]);\n  }\n  return ret;\n};\n\nmodule.exports = { tokenizeString };\n", "const utils = require('../../util/index.cjs');\nconst { labelForScope } = utils.scopeDefs;\nconst { Sequence } = require('../model/index.cjs');\nconst { tokenizeString } = require('../lib/tokenize.cjs');\n\nconst parseTableToDocument = (str, parser, bookCode) => {\n  const { rows } = JSON.parse(str);\n  parser.headers.id = bookCode;\n  parser.headers.bookCode = bookCode;\n  const tableSequence = new Sequence('table');\n\n  for (const [rowN, row] of rows.entries()) {\n    for (const [cellN, cell] of row.entries()) {\n      tableSequence.newBlock(labelForScope('tTableRow', [`${rowN}`]));\n      const lastBlock = tableSequence.lastBlock();\n\n      lastBlock.addItem({\n        type: 'scope',\n        subType: 'start',\n        payload: `tTableCol/${cellN}`,\n      });\n\n      for (const [token, tokenType] of tokenizeString(cell)) {\n        lastBlock.addItem({\n          type: 'token',\n          subType: tokenType,\n          payload: token,\n        });\n      }\n      lastBlock.addItem({\n        type: 'scope',\n        subType: 'end',\n        payload: `tTableCol/${cellN}`,\n      });\n    }\n  }\n  parser.sequences.table.push(tableSequence);\n  parser.sequences.main.addBlockGraft({\n    type: 'graft',\n    subType: 'table',\n    payload: tableSequence.id,\n  });\n};\n\nmodule.exports = { parseTableToDocument };\n", "const utils = require('../../util/index.cjs');\nconst { labelForScope } = utils.scopeDefs;\nconst { Sequence } = require('../model/index.cjs');\nconst { tokenizeString } = require('../lib/tokenize.cjs');\n\nlet nextNodeId = 0;\n\nconst numberNodes = (node, parentId) => {\n  if (typeof parentId !== 'number') {\n    nextNodeId = 0;\n  }\n\n  const ret = {\n    ...node,\n    id: nextNodeId,\n    parentId: typeof parentId === 'number' ? parentId : 'none',\n  };\n  nextNodeId++;\n\n  if (node.children) {\n    ret.children = node.children.map(cn => numberNodes(cn, ret.id));\n  }\n  return ret;\n};\n\nconst flattenNodes = node => {\n  const ret = [{}];\n  ret[0].id = node.id;\n  ret[0].parentId = node.parentId;\n\n  if (node.content) {\n    ret[0].content = node.content;\n  }\n\n  if (node.children) {\n    ret[0].children = [];\n\n    for (const cn of node.children) {\n      ret[0].children.push(cn.id);\n      flattenNodes(cn).forEach(n => ret.push(n));\n    }\n  }\n  return ret;\n};\n\nconst parseNodes = (str, parser, bookCode) => {\n  parser.headers.id = bookCode;\n  parser.headers.bookCode = bookCode;\n  const treeSequence = new Sequence('tree');\n\n  for (const node of flattenNodes(numberNodes(JSON.parse(str)))) {\n    treeSequence.newBlock(labelForScope('tTreeNode', [`${node.id}`]));\n    const scopePayload = labelForScope('tTreeParent', [`${node.parentId}`]);\n\n    treeSequence.lastBlock().items.push({\n      type: 'scope',\n      subType: 'start',\n      payload: scopePayload,\n    });\n\n    if (node.content) {\n      for (const [name, content] of Object.entries(node.content)) {\n        const treeContentStart = treeSequence.lastBlock().items.length;\n        const tokenized = tokenizeString(content);\n        const scopePayload = labelForScope('tTreeContent', [name, node.id, `${treeContentStart}`, `${tokenized.length}`]);\n\n        treeSequence.lastBlock().items.push({\n          type: 'scope',\n          subType: 'start',\n          payload: scopePayload,\n        });\n\n        for (const [payload, subType] of tokenized) {\n          treeSequence.lastBlock().items.push({\n            type: 'token',\n            subType,\n            payload,\n          });\n        }\n        treeSequence.lastBlock().items.push({\n          type: 'scope',\n          subType: 'end',\n          payload: scopePayload,\n        });\n      }\n    }\n\n    if (node.children) {\n      for (const [childN, childNodeN] of node.children.entries()) {\n        const scopePayload = labelForScope('tTreeChild', [childN, childNodeN]);\n\n        treeSequence.lastBlock().items.push({\n          type: 'scope',\n          subType: 'start',\n          payload: scopePayload,\n        });\n        treeSequence.lastBlock().items.push({\n          type: 'scope',\n          subType: 'end',\n          payload: scopePayload,\n        });\n      }\n    }\n    treeSequence.lastBlock().items.push({\n      type: 'scope',\n      subType: 'end',\n      payload: scopePayload,\n    });\n  }\n\n  parser.sequences.tree.push(treeSequence);\n  parser.sequences.main.addBlockGraft({\n    type: 'graft',\n    subType: 'tree',\n    payload: treeSequence.id,\n  });\n};\n\nmodule.exports = {\n  flattenNodes,\n  numberNodes,\n  parseNodes,\n};\n", "const { parseUsfm } = require('./usfm.cjs');\nconst { parseUsx } = require('./usx/index.cjs');\nconst { parseTableToDocument } = require('./tsv.cjs');\nconst { parseNodes } = require('./nodes.cjs');\n\nmodule.exports = {\n  parseUsfm,\n  parseUsx,\n  parseTableToDocument,\n  parseNodes,\n};\n", "const utils = require('../util/index.cjs');\nconst { labelForScope } = utils.scopeDefs;\nconst { constructorForFragment } = require('./lexers/object_for_fragment.cjs');\n\nconst buildSpecLookup = specs => {\n  const ret = {};\n\n  for (const spec of specs) {\n    for (const context of spec.contexts) {\n      if (!(context[0] in ret)) {\n        ret[context[0]] = {};\n      }\n\n      const accessor = context[1];\n\n      if (!accessor) {\n        ret[context[0]]._noAccessor = spec.parser;\n      } else {\n        if (!(accessor in ret[context[0]])) {\n          ret[context[0]][accessor] = {};\n        }\n\n        for (const accessorValue of context[2]) {\n          ret[context[0]][accessor][accessorValue] = spec.parser;\n        }\n      }\n    }\n  }\n  return ret;\n};\n\nconst specs = (pt) => [\n  {\n    // HEADERS - make temp sequence, then add to headers object\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        [\n          'id',\n          'usfm',\n          'ide',\n          'sts',\n          'h',\n          'toc',\n          'toca',\n          'cl',\n        ],\n      ],\n    ],\n    parser: {\n      baseSequenceType: 'header',\n      forceNewSequence: true,\n      newBlock: true,\n      useTempSequence: true,\n      newScopes: [\n        {\n          label: pt => pt.fullTagName,\n          endedBy: ['baseSequenceChange'],\n          onEnd: (parser, label) => {\n            parser.headers[label] = parser.current.sequence.plainText();\n\n            if (label === 'id') {\n              if (\n                parser.headers[label].length === 3 ||\n                (\n                  parser.headers[label].length > 3 &&\n                  parser.headers[label].substring(3, 4) === ' '\n                )\n              ) {\n                const bookCode = parser.headers[label].substring(0, 3);\n                parser.headers['bookCode'] = bookCode;\n              }\n            }\n          },\n        },\n      ],\n    },\n  },\n  {\n    // HEADINGS - Start new sequence\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        [\n          'ms',\n          'mr',\n          's',\n          'sr',\n          'r',\n          'qa',\n          'sp',\n          'sd',\n        ].concat(pt.customTags.heading),\n      ],\n    ],\n    parser: {\n      baseSequenceType: 'heading',\n      forceNewSequence: true,\n      newBlock: true,\n      newScopes: [],\n    },\n  },\n  {\n    // TITLE - make a sequence or add to existing one\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        [\n          'mt',\n        ],\n      ],\n    ],\n    parser: {\n      baseSequenceType: 'title',\n      newBlock: true,\n      newScopes: [],\n    },\n  },\n  {\n    // END TITLE - make a sequence or add to existing one\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        [\n          'mte',\n        ],\n      ],\n    ],\n    parser: {\n      baseSequenceType: 'endTitle',\n      newBlock: true,\n      newScopes: [],\n    },\n  },\n  {\n    // INTRODUCTION - make a sequence or add to existing one\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        [\n          'imt',\n          'is',\n          'ip',\n          'ipi',\n          'im',\n          'imi',\n          'ipq',\n          'imq',\n          'ipr',\n          'iq',\n          'ib',\n          'ili',\n          'iot',\n          'io',\n          'iex',\n          'imte',\n        ].concat(pt.customTags.intro),\n      ],\n    ],\n    parser: {\n      baseSequenceType: 'introduction',\n      newBlock: true,\n      newScopes: [],\n    },\n  },\n  {\n    // START SIDEBAR - make a new sequence\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        [\n          'esb',\n        ],\n      ],\n    ],\n    parser: {\n      baseSequenceType: 'sidebar',\n      newBlock: true,\n      newScopes: [],\n      after: (parser) => {\n        parser.mainLike = parser.current.sequence;\n      },\n    },\n  },\n  {\n    // END SIDEBAR - return to main\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        [\n          'esbe',\n        ],\n      ],\n    ],\n    parser: {\n      baseSequenceType: 'main',\n      newBlock: true,\n      newScopes: [],\n      after: (parser) => {\n        parser.mainLike = parser.sequences.main;\n      },\n    },\n  },\n  {\n    // CAT - graft label and add stub scope, then remove graft and modify scope at tidy stage\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        ['cat'],\n      ],\n    ],\n    parser: {\n      inlineSequenceType: 'esbCat',\n      forceNewSequence: true,\n      newScopes: [\n        {\n          label: pt => labelForScope('inline', [pt.fullTagName]),\n          endedBy: ['endTag/cat', 'endBlock', 'implicitEnd'],\n          onEnd: (parser) => parser.returnToBaseSequence(),\n        },\n      ],\n      during: (parser, pt) => {\n        const scopeId = utils.generateId();\n        const esbScope = {\n          label: () => labelForScope('esbCat', [scopeId]),\n          endedBy: ['startTag/esbe'],\n        };\n        parser.openNewScope(pt, esbScope, true, parser.mainLike);\n      },\n    },\n  },\n  {\n    // REMARK - make new sequence\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        [\n          'rem',\n        ],\n      ],\n    ],\n    parser: {\n      baseSequenceType: 'remark',\n      forceNewSequence: true,\n      newScopes: [],\n    },\n  },\n  {\n    // PARAGRAPH STYLES - Make new block on main\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        [\n          'cd',\n          'p',\n          'm',\n          'po',\n          'pr',\n          'cls',\n          'pmo',\n          'pm',\n          'pmc',\n          'pmr',\n          'pi',\n          'mi',\n          'nb',\n          'pc',\n          'ph',\n          'b',\n          'q',\n          'qr',\n          'qc',\n          'qa',\n          'qm',\n          'qd',\n          'lh',\n          'li',\n          'lf',\n          'lim',\n          'd',\n        ].concat(pt.customTags.paragraph),\n      ],\n    ],\n    parser: {\n      baseSequenceType: 'mainLike',\n      newBlock: true,\n      newScopes: [],\n    },\n  },\n  {\n    // ROW - Make new block\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        ['tr'],\n      ],\n    ],\n    parser: {\n      newBlock: true,\n      newScopes: [],\n    },\n  },\n  {\n    // FOOTNOTE/ENDNOTE - new inline sequence\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        [\n          'f',\n          'fe',\n        ],\n      ],\n    ],\n    parser: {\n      inlineSequenceType: 'footnote',\n      forceNewSequence: true,\n      newScopes: [\n        {\n          label: pt => labelForScope('inline', [pt.fullTagName]),\n          endedBy: ['endTag/f', 'endTag/fe', 'endBlock'],\n          onEnd: (parser) => parser.returnToBaseSequence(),\n        },\n      ],\n    },\n  },\n  {\n    // CROSS REFERENCE - make new inline sequence\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        [\n          'x',\n        ],\n      ],\n    ],\n    parser: {\n      inlineSequenceType: 'xref',\n      forceNewSequence: true,\n      newScopes: [\n        {\n          label: pt => labelForScope('inline', [pt.fullTagName]),\n          endedBy: ['endTag/x', 'endBlock'],\n          onEnd: (parser) => parser.returnToBaseSequence(),\n        },\n      ],\n    },\n  },\n  {\n    // FIGURE - new inline sequence\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        [\n          'fig',\n        ],\n      ],\n    ],\n    parser: {\n      inlineSequenceType: 'fig',\n      forceNewSequence: true,\n      newScopes: [\n        {\n          label: pt => labelForScope('spanWithAtts', [pt.tagName]),\n          endedBy: ['endBlock', 'endTag/$tagName$'],\n          onEnd: (parser) => parser.clearAttributeContext(),\n        },\n      ],\n      during: (parser, pt) => {\n        parser.setAttributeContext(labelForScope('spanWithAtts', [pt.tagName]));\n      },\n    },\n  },\n  {\n    // CHAPTER - chapter scope\n    contexts: [['chapter']],\n    parser: {\n      mainSequence: true,\n      newScopes: [\n        {\n          label: pt => labelForScope('chapter', [pt.number]),\n          endedBy: ['chapter'],\n        },\n      ],\n    },\n  },\n  {\n    // CP - graft label and add stub scope, then remove graft and modify scope at tidy stage\n    contexts: [['pubchapter']],\n    parser: {\n      mainSequence: true,\n      newScopes: [\n        {\n          label: pt => labelForScope('pubChapter', [pt.numberString]),\n          endedBy: ['pubchapter', 'chapter'],\n        },\n      ],\n    },\n  },\n  {\n    // CA - graft label and add stub scope, then remove graft and modify scope at tidy stage\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        ['ca'],\n      ],\n    ],\n    parser: {\n      inlineSequenceType: 'altNumber',\n      forceNewSequence: true,\n      newScopes: [\n        {\n          label: pt => labelForScope('inline', [pt.fullTagName]),\n          endedBy: ['endTag/ca', 'endBlock', 'implicitEnd'],\n          onEnd: (parser) => parser.returnToBaseSequence(),\n        },\n      ],\n      during: (parser, pt) => {\n        const scopeId = utils.generateId();\n        const caScope = {\n          label: () => labelForScope('altChapter', [scopeId]),\n          endedBy: ['startTag/ca', 'chapter'],\n        };\n        parser.openNewScope(pt, caScope, true, parser.sequences.main);\n      },\n    },\n  },\n  {\n    // VERSES - verse and verses scopes\n    contexts: [\n      ['verses'],\n    ],\n    parser: {\n      mainSequence: true,\n      newScopes: [\n        {\n          label: pt => labelForScope('verses', [pt.numberString]),\n          endedBy: ['verses', 'chapter', 'pubchapter'],\n        },\n      ],\n      during: (parser, pt) => {\n        pt.numbers.forEach(n => {\n          const verseScope = {\n            label: () => labelForScope('verse', [n]),\n            endedBy: ['verses', 'chapter', 'pubchapter'],\n          };\n          parser.openNewScope(pt, verseScope, true, parser.sequences.main);\n        },\n        );\n      },\n    },\n  },\n  {\n    // VP - graft label and add stub scope, then remove graft and modify scope at tidy stage\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        ['vp'],\n      ],\n    ],\n    parser: {\n      inlineSequenceType: 'pubNumber',\n      forceNewSequence: true,\n      newScopes: [\n        {\n          label: pt => labelForScope('inline', [pt.fullTagName]),\n          endedBy: ['endTag/vp', 'endBlock', 'implicitEnd'],\n          onEnd: (parser) => parser.returnToBaseSequence(),\n        },\n      ],\n      during: (parser, pt) => {\n        const scopeId = utils.generateId();\n        const vpScope = {\n          label: () => labelForScope('pubVerse', [scopeId]),\n          endedBy: ['startTag/vp', 'verses', 'chapter', 'pubchapter'],\n        };\n        parser.openNewScope(pt, vpScope, true, parser.sequences.main);\n      },\n    },\n  },\n  {\n    // VA - graft label and add stub scope, then remove graft and modify scope at tidy stage\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        ['va'],\n      ],\n    ],\n    parser: {\n      inlineSequenceType: 'altNumber',\n      forceNewSequence: true,\n      newScopes: [\n        {\n          label: pt => labelForScope('inline', [pt.fullTagName]),\n          endedBy: ['endTag/va', 'endBlock', 'implicitEnd'],\n          onEnd: (parser) => parser.returnToBaseSequence(),\n        },\n      ],\n      during: (parser, pt) => {\n        const scopeId = utils.generateId();\n        const vpScope = {\n          label: () => labelForScope('altVerse', [scopeId]),\n          endedBy: ['startTag/va', 'verses', 'chapter', 'pubchapter'],\n        };\n        parser.openNewScope(pt, vpScope, true, parser.sequences.main);\n      },\n    },\n  },\n  {\n    // CHARACTER MARKUP - add scope\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        [\n          'qs',\n          'qac',\n          'litl',\n          'lik',\n          'liv',\n          'fr',\n          'fq',\n          'fqa',\n          'fk',\n          'fl',\n          'fw',\n          'fp',\n          'fv',\n          'ft',\n          'fdc',\n          'fm',\n          'xo',\n          'xk',\n          'xq',\n          'xt',\n          'xta',\n          'xop',\n          'xot',\n          'xnt',\n          'xdc',\n          'rq',\n          'add',\n          'bk',\n          'dc',\n          'k',\n          'nd',\n          'ord',\n          'pn',\n          'png',\n          'qt',\n          'sig',\n          'sls',\n          'tl',\n          'wj',\n          'em',\n          'bd',\n          'it',\n          'bdit',\n          'no',\n          'sc',\n          'sup',\n          'ior',\n          'iqt',\n        ].concat(pt.customTags.char),\n      ],\n    ],\n    parser: {\n      newScopes: [\n        {\n          label: pt => labelForScope('span', [pt.fullTagName]),\n          endedBy: ['endBlock', 'endTag/$fullTagName$', 'implicitEnd'],\n        },\n      ],\n    },\n  },\n  {\n    // CELL - unpick tagName, add scope\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        [\n          'th',\n          'thr',\n          'tc',\n          'tcr',\n        ],\n      ],\n    ],\n    parser: {\n      newScopes: [\n        {\n          label: pt => labelForScope('cell', [pt.fullTagName]),\n          endedBy: [\n            'startTag/th',\n            'startTag/thr',\n            'startTag/tc',\n            'startTag/tcr',\n            'startTag/th2',\n            'startTag/thr2',\n            'startTag/tc2',\n            'startTag/tcr2',\n            'startTag/th3',\n            'startTag/thr3',\n            'startTag/tc3',\n            'startTag/tcr3',\n            'endBlock',\n            'endTag/$fullTagName$',\n          ],\n        },\n      ],\n    },\n  },\n  {\n    // EMPTY MILESTONE - add open and close scope\n    contexts: [\n      ['emptyMilestone'],\n    ],\n    parser: { during: (parser, pt) => parser.addEmptyMilestone(labelForScope('milestone', [pt.tagName])) },\n  },\n  {\n    // START MILESTONE - open scope, set attribute context\n    contexts: [\n      ['startMilestoneTag', 'sOrE', 's'],\n    ],\n    parser: {\n      newScopes: [\n        {\n          label: pt => labelForScope('milestone', [pt.tagName]),\n          endedBy: ['endMilestone/$tagName$'],\n        },\n      ],\n      during: (parser, pt) => {\n        parser.setAttributeContext(labelForScope('milestone', [pt.tagName]));\n      },\n    },\n  },\n  {\n    // END MILESTONE - close scope, clear attribute context\n    contexts: [\n      ['endMilestoneMarker'],\n    ],\n    parser: { during: (parser) => parser.clearAttributeContext() },\n  },\n  {\n    // ATTRIBUTE - open scope based on attribute context\n    contexts: [\n      ['attribute'],\n      ['defaultAttribute'],\n    ],\n    parser: {\n      during: (parser, pt) => {\n        const defaults = {\n          w: 'lemma',\n          rb: 'gloss',\n          xt: 'link-href',\n        };\n\n        if (parser.current.attributeContext) {\n          const contextParts = parser.current.attributeContext.split('/');\n\n          if ((pt.key === 'default') && (contextParts.length === 2)) {\n            pt.key = defaults[contextParts[1]] || `unknownDefault_${contextParts[1]}`;\n            pt.printValue = pt.printValue.replace(/default/, pt.key);\n          }\n          [...pt.values.entries()].forEach(na => {\n            const attScope = {\n              label: pt => labelForScope('attribute', [parser.current.attributeContext, pt.key, na[0], na[1]]),\n              endedBy: [`$attributeContext$`],\n            };\n            parser.openNewScope(pt, attScope);\n          },\n          );\n        } else {\n          parser.addToken(constructorForFragment.printable('unknown', [pt.printValue]));\n        }\n      },\n    },\n  },\n  {\n    // WORD-LEVEL MARKUP - open scope and set attribute context\n    contexts: [\n      [\n        'startTag',\n        'tagName',\n        [\n          'w',\n          'rb',\n          // 'xt',\n        ].concat(pt.customTags.word),\n      ],\n    ],\n    parser: {\n      newScopes: [\n        {\n          label: pt => labelForScope('spanWithAtts', [pt.tagName]),\n          endedBy: ['endBlock', 'endTag/$tagName$'],\n          onEnd: (parser) => parser.clearAttributeContext(),\n        },\n      ],\n      during: (parser, pt) => {\n        parser.setAttributeContext(labelForScope('spanWithAtts', [pt.tagName]));\n      },\n    },\n  },\n  {\n    // TOKEN - add a token!\n    contexts: [\n      ['wordLike'],\n      ['lineSpace'],\n      ['punctuation'],\n      ['eol'],\n    ],\n    parser: { during: (parser, pt) => parser.addToken(pt) },\n  },\n  {\n    // NO BREAK SPACE - make a token!\n    contexts: [\n      ['noBreakSpace'],\n    ],\n    parser: {\n      during: (parser) => {\n        parser.addToken(constructorForFragment.printable('lineSpace', ['\\xa0']));\n      },\n    },\n  },\n  {\n    // SOFT LINE BREAK - make a token!\n    contexts: [\n      ['softLineBreak'],\n    ],\n    parser: {\n      during: (parser) => {\n        parser.addToken(constructorForFragment.printable('softLineBreak', ['//']));\n      },\n    },\n  },\n  {\n    // BARESLASH - make a token!\n    contexts: [\n      ['bareSlash'],\n    ],\n    parser: {\n      during: (parser) => {\n        parser.addToken(constructorForFragment.printable('bareSlash', ['\\\\']));\n      },\n    },\n  },\n  {\n    // UNKNOWN - make a token!\n    contexts: [\n      ['unknown'],\n    ],\n    parser: {\n      during: (parser, pt) => {\n        parser.addToken(constructorForFragment.printable('unknown', [pt.printValue]));\n      },\n    },\n  },\n];\n\nmodule.exports = {\n  specs,\n  buildSpecLookup,\n};\n", "const utils = require('../util/index.cjs');\nconst { Sequence } = require('./model/index.cjs');\nconst {\n  specs,\n  buildSpecLookup,\n} = require('./parser_specs.cjs');\n\nconst { labelForScope } = utils.scopeDefs;\nconst parserConstantDef = utils.parserConstants;\n\nconst Parser = class {\n  constructor(filterOptions, customTags, emptyBlocks) {\n    this.filterOptions = filterOptions;\n    this.customTags = customTags;\n    this.emptyBlocks = emptyBlocks;\n    this.specs = specs(this);\n    this.specLookup = buildSpecLookup(this.specs);\n    this.headers = {};\n    this.baseSequenceTypes = parserConstantDef.usfm.baseSequenceTypes;\n    this.inlineSequenceTypes = parserConstantDef.usfm.inlineSequenceTypes;\n    this.setSequences();\n    this.setCurrent();\n  }\n\n  setSequences() {\n    this.sequences = {};\n\n    for (const [sType, sArity] of Object.entries({ ...this.baseSequenceTypes, ...this.inlineSequenceTypes })) {\n      switch (sArity) {\n      case '1':\n        this.sequences[sType] = new Sequence(sType);\n        break;\n      case '?':\n        this.sequences[sType] = null;\n        break;\n      case '*':\n        this.sequences[sType] = [];\n        break;\n      default:\n        throw new Error(`Unexpected sequence arity '${sArity}' for '${sType}'`);\n      }\n    }\n    this.mainLike = this.sequences.main;\n  }\n\n  setCurrent() {\n    this.current = {\n      sequence: this.sequences.main,\n      parentSequence: null,\n      baseSequenceType: 'main',\n      inlineSequenceType: null,\n      attributeContext: null,\n    };\n  }\n\n  parseItem(lexedItem) {\n    let changeBaseSequence = false;\n\n    if (['startTag'].includes(lexedItem.subclass)) {\n      this.closeActiveScopes(`startTag/${lexedItem.fullTagName}`);\n\n      if (!lexedItem.isNested) {\n        this.closeActiveScopes(`implicitEnd`);\n      }\n    }\n\n    if (['endTag'].includes(lexedItem.subclass)) {\n      this.closeActiveScopes(`endTag/${lexedItem.fullTagName}`);\n    }\n\n    if (['startMilestoneTag'].includes(lexedItem.subclass) && lexedItem.sOrE === 'e') {\n      this.closeActiveScopes(`endMilestone/${lexedItem.tagName}`);\n    }\n\n    if (['chapter', 'pubchapter', 'verses'].includes(lexedItem.subclass)) {\n      this.closeActiveScopes(lexedItem.subclass, this.sequences.main);\n    }\n\n    const spec = this.specForItem(lexedItem);\n\n    if (spec) {\n      if ('before' in spec.parser) {\n        spec.parser.before(this, lexedItem);\n      }\n      changeBaseSequence = false;\n\n      if (spec.parser.baseSequenceType) {\n        const returnSequenceType = spec.parser.baseSequenceType === 'mainLike' ? this.mainLike.type : spec.parser.baseSequenceType;\n\n        changeBaseSequence = (returnSequenceType !== this.current.baseSequenceType) ||\n          spec.parser.forceNewSequence;\n      }\n\n      if (changeBaseSequence) {\n        this.closeActiveScopes('baseSequenceChange');\n        this.changeBaseSequence(spec.parser);\n\n        if ('newBlock' in spec.parser && spec.parser.newBlock) {\n          this.closeActiveScopes('endBlock');\n          this.current.sequence.newBlock(labelForScope('blockTag', [lexedItem.fullTagName]));\n        }\n      } else if (spec.parser.inlineSequenceType) {\n        this.current.inlineSequenceType = spec.parser.inlineSequenceType;\n        this.current.parentSequence = this.current.sequence;\n\n        if (this.current.parentSequence.type === 'header') { // Not lovely, needed for \\cp before first content\n          this.current.parentSequence = this.sequences.main;\n        }\n        this.current.sequence = new Sequence(this.current.inlineSequenceType);\n        this.current.sequence.newBlock(labelForScope('inline', spec.parser.inlineSequenceType));\n        this.sequences[this.current.inlineSequenceType].push(this.current.sequence);\n        this.current.parentSequence.addItem({\n          type: 'graft',\n          subType: this.current.inlineSequenceType,\n          payload: this.current.sequence.id,\n        });\n      } else if ('newBlock' in spec.parser && spec.parser.newBlock) {\n        this.current.sequence.newBlock(labelForScope('blockTag', [lexedItem.fullTagName]));\n      }\n\n      if ('during' in spec.parser) {\n        spec.parser.during(this, lexedItem);\n      }\n      this.openNewScopes(spec.parser, lexedItem);\n\n      if ('after' in spec.parser) {\n        spec.parser.after(this, lexedItem);\n      }\n    }\n  }\n\n  tidy() {\n    for (const introduction of this.sequences.introduction) {\n      introduction.graftifyIntroductionHeadings(this);\n    }\n\n    const allSequences = this.allSequences();\n\n    for (const seq of allSequences) {\n      seq.trim();\n      seq.reorderSpanWithAtts();\n      seq.makeNoteGrafts(this);\n      seq.moveOrphanScopes();\n      seq.removeEmptyBlocks(this.emptyBlocks);\n    }\n\n    const emptySequences = this.emptySequences(allSequences);\n\n    for (const seq of allSequences) {\n      if (emptySequences) {\n        seq.removeGraftsToEmptySequences(emptySequences);\n      }\n      seq.addTableScopes();\n      seq.close(this);\n      this.substitutePubNumberScopes(seq);\n      seq.moveOrphanStartScopes2();\n\n      if (seq.type === 'sidebar') {\n        this.substituteEsbCatScopes(seq);\n      }\n\n      if (['footnote', 'xref'].includes(seq.type)) {\n        seq.lastBlock().inlineToEnd();\n      }\n    }\n  }\n\n  emptySequences(sequences) {\n    return sequences.filter(s => s.blocks.length === 0).map(s => s.id);\n  }\n\n  substitutePubNumberScopes(seq) {\n    const scopeToGraftContent = {};\n    const sequenceById = this.sequenceById();\n\n    for (const block of seq.blocks) {\n      let spliceCount = 0;\n      const itItems = [...block.items];\n\n      for (const [n, item] of itItems.entries()) {\n        if (item.type === 'graft' && ['pubNumber', 'altNumber'].includes(item.subType)) {\n          const graftContent = sequenceById[item.payload].text().trim();\n          const scopeId = itItems[n + 1].payload.split('/')[1];\n          scopeToGraftContent[scopeId] = graftContent;\n          block.items.splice(n - spliceCount, 1);\n          spliceCount++;\n        }\n      }\n    }\n\n    // Substitute scopeIds for graft content\n    if (Object.keys(scopeToGraftContent).length > 0) {\n      for (const block of seq.blocks) {\n        for (const scope of block.items.filter(i => i.type === 'scope')) {\n          const scopeParts = scope.payload.split('/');\n\n          if (['altChapter', 'pubVerse', 'altVerse'].includes(scopeParts[0])) {\n            scope.payload = `${scopeParts[0]}/${scopeToGraftContent[scopeParts[1]]}`;\n          }\n        }\n      }\n    }\n  }\n\n  substituteEsbCatScopes(seq) {\n    const scopeToGraftContent = {};\n    const sequenceById = this.sequenceById();\n\n    for (const block of seq.blocks) {\n      let spliceCount = 0;\n      const itItems = [...block.items];\n\n      for (const [n, item] of itItems.entries()) {\n        if (item.type === 'graft' && item.subType === 'esbCat') {\n          const catContent = sequenceById[item.payload].text().trim();\n          const scopeId = itItems[1].payload.split('/')[1];\n          scopeToGraftContent[scopeId] = catContent;\n          block.items.splice(n - spliceCount, 1);\n          spliceCount++;\n        }\n      }\n    }\n\n    // Substitute scopeIds for graft content\n    if (Object.keys(scopeToGraftContent).length > 0) {\n      for (const block of seq.blocks) {\n        for (const scope of block.items.filter(i => i.type === 'scope')) {\n          const scopeParts = scope.payload.split('/');\n\n          if (scopeParts[0] === 'esbCat') {\n            scope.payload = `${scopeParts[0]}/${scopeToGraftContent[scopeParts[1]]}`;\n          }\n        }\n      }\n    }\n  }\n\n  allSequences() {\n    const ret = [];\n\n    for (const [seqName, seqArity] of Object.entries({ ...this.baseSequenceTypes, ...this.inlineSequenceTypes })) {\n      switch (seqArity) {\n      case '1':\n      case '?':\n        if (this.sequences[seqName]) {\n          ret.push(this.sequences[seqName]);\n        }\n        break;\n      case '*':\n        this.sequences[seqName].forEach(s => {\n          ret.push(s);\n        });\n        break;\n      default:\n        throw new Error(`Unexpected sequence arity '${seqArity}' for '${seqName}'`);\n      }\n    }\n    return ret;\n  }\n\n  sequenceById() {\n    const ret = {};\n\n    this.allSequences().forEach(s => {\n      ret[s.id] = s;\n    });\n    return ret;\n  }\n\n  filter() {\n    const usedSequences = [];\n    const sequenceById = this.sequenceById();\n    this.filterGrafts(this.sequences.main.id, sequenceById, usedSequences, this.filterOptions);\n    this.removeUnusedSequences(usedSequences);\n    this.filterScopes(Object.values(sequenceById), this.filterOptions);\n  }\n\n  filterGrafts(seqId, seqById, used, options) {\n    used.push(seqId);\n    const childSequences = seqById[seqId].filterGrafts(options);\n\n    for (const si of childSequences) {\n      if (seqById[si].type === 'main') {\n        console.log('MAIN is child!');\n        console.log(JSON.stringify(seqById[seqId], null, 2));\n        process.exit(1);\n      }\n      this.filterGrafts(si, seqById, used, options);\n    }\n  }\n\n  removeUnusedSequences(usedSequences) {\n    for (const seq of this.allSequences()) {\n      if (!usedSequences.includes(seq.id)) {\n        const seqArity = { ...this.baseSequenceTypes, ...this.inlineSequenceTypes }[seq.type];\n\n        switch (seqArity) {\n        case '1':\n          throw new Error('Attempting to remove sequence with arity of 1');\n        case '?':\n          this.sequences[seq.type] = null;\n          break;\n        case '*':\n          this.sequences[seq.type] = this.sequences[seq.type].filter(s => s.id !== seq.id);\n          break;\n        default:\n          throw new Error(`Unexpected sequence arity '${seqArity}' for '${seq.type}'`);\n        }\n      }\n    }\n  }\n\n  filterScopes(sequences, options) {\n    sequences.forEach(s => s.filterScopes(options));\n  }\n\n  specForItem(item) {\n    const context = item.subclass;\n\n    if (!(context in this.specLookup)) {\n      return null;\n    }\n\n    for (const accessor of ['tagName', 'sOrE']) {\n      if (accessor in item && accessor in this.specLookup[context] && item[accessor] in this.specLookup[context][accessor]) {\n        return { parser: this.specLookup[context][accessor][item[accessor]] };\n      }\n    }\n\n    if ('_noAccessor' in this.specLookup[context]) {\n      return { parser: this.specLookup[context]['_noAccessor'] };\n    }\n\n    return null;\n  }\n\n  closeActiveScopes(closeLabel, targetSequence) {\n    if (targetSequence === undefined) {\n      targetSequence = this.current.sequence;\n    }\n\n    const matchedScopes = targetSequence.activeScopes.filter(\n      sc => sc.endedBy.includes(closeLabel),\n    ).reverse();\n\n    targetSequence.activeScopes = targetSequence.activeScopes.filter(\n      sc => !sc.endedBy.includes(closeLabel),\n    );\n    matchedScopes.forEach(ms => this.closeActiveScope(ms, targetSequence));\n  }\n\n  closeActiveScope(sc, targetSequence) {\n    this.addScope('end', sc.label, targetSequence);\n\n    if (sc.onEnd) {\n      sc.onEnd(this, sc.label);\n    }\n  }\n\n  changeBaseSequence(parserSpec) {\n    const newType = parserSpec.baseSequenceType;\n\n    if (newType === 'mainLike') {\n      this.current.sequence = this.mainLike;\n      return;\n    }\n    this.current.baseSequenceType = newType;\n    const arity = this.baseSequenceTypes[newType];\n\n    switch (arity) {\n    case '1':\n      this.current.sequence = this.sequences[newType];\n      break;\n    case '?':\n      if (!this.sequences[newType]) {\n        this.sequences[newType] = new Sequence(newType);\n      }\n      this.current.sequence = this.sequences[newType];\n      break;\n    case '*':\n      this.current.sequence = new Sequence(newType);\n\n      if (!parserSpec.useTempSequence) {\n        this.sequences[newType].push(this.current.sequence);\n      }\n      break;\n    default:\n      throw new Error(`Unexpected base sequence arity '${arity}' for '${newType}'`);\n    }\n\n    if (!parserSpec.useTempSequence && this.current.sequence.type !== 'main') {\n      this.mainLike.addBlockGraft({\n        type: 'graft',\n        subType: this.current.baseSequenceType,\n        payload: this.current.sequence.id,\n      });\n    }\n  }\n\n  returnToBaseSequence() {\n    this.current.inlineSequenceType = null;\n    this.current.sequence = this.current.parentSequence;\n    this.current.parentSequence = null;\n  }\n\n  openNewScopes(parserSpec, pt) {\n    if (parserSpec.newScopes) {\n      let targetSequence = this.current.sequence;\n\n      if ('mainSequence' in parserSpec && parserSpec.mainSequence) {\n        targetSequence = this.sequences.main;\n      }\n      parserSpec.newScopes.forEach(sc => this.openNewScope(pt, sc, true, targetSequence));\n    }\n  }\n\n  openNewScope(pt, sc, addItem, targetSequence) {\n    if (addItem === undefined) {\n      addItem = true;\n    }\n\n    if (targetSequence === undefined) {\n      targetSequence = this.current.sequence;\n    }\n\n    if (addItem) {\n      targetSequence.addItem({\n        type: 'scope',\n        subType: 'start',\n        payload: sc.label(pt),\n      });\n    }\n\n    const newScope = {\n      label: sc.label(pt),\n      endedBy: this.substituteEndedBys(sc.endedBy, pt),\n    };\n\n    if ('onEnd' in sc) {\n      newScope.onEnd = sc.onEnd;\n    }\n    targetSequence.activeScopes.push(newScope);\n  }\n\n  substituteEndedBys(endedBy, pt) {\n    return endedBy.map(\n      eb => {\n        let ret = eb\n          .replace('$fullTagName$', pt.fullTagName)\n          .replace('$tagName$', pt.tagName);\n\n        if (this.current.attributeContext) {\n          ret = ret.replace(\n            '$attributeContext$',\n            this.current.attributeContext\n              .replace('milestone', 'endMilestone')\n              .replace('spanWithAtts', 'endTag'),\n          );\n        }\n        return ret;\n      },\n    );\n  }\n\n  addToken(pt) {\n    this.current.sequence.addItem({\n      type: 'token',\n      subType: pt.subclass,\n      payload: pt.printValue,\n    });\n  }\n\n  addScope(sOrE, label, targetSequence) {\n    if (targetSequence === undefined) {\n      targetSequence = this.current.sequence;\n    }\n    targetSequence.addItem({\n      type: 'scope',\n      subType: sOrE,\n      payload: label,\n    });\n  }\n\n  addEmptyMilestone(label) {\n    this.mainLike.addItem({\n      type: 'scope',\n      subType: 'start',\n      payload: label,\n    });\n    this.mainLike.addItem({\n      type: 'scope',\n      subType: 'end',\n      payload: label,\n    });\n  }\n\n  setAttributeContext(label) {\n    this.current.attributeContext = label;\n  }\n\n  clearAttributeContext() {\n    this.current.attributeContext = null;\n  }\n};\n\nmodule.exports = { Parser };\n", "[\n  {\n    \"id\": 0,\n    \"type\": \"Inputs\",\n    \"inputs\": {\n      \"perf\": \"json\"\n    }\n  },\n  {\n    \"id\": 1,\n    \"title\": \"Generate report\",\n    \"name\": \"calculateUsfmChapterPositions\",\n    \"type\": \"Transform\",\n    \"inputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\",\n        \"source\": \"Input perf\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"report\",\n        \"type\": \"json\"\n      }\n    ],\n    \"description\": \"Generate report from perf to calculate the position of the chapters\"\n  },\n  {\n    \"id\": 2,\n    \"title\": \"PERF to USFM\",\n    \"name\": \"perf2usfm\",\n    \"type\": \"Transform\",\n    \"inputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\",\n        \"source\": \"Input perf\"\n      },\n      {\n        \"name\": \"report\",\n        \"type\": \"json\",\n        \"source\": \"Transform 1 report\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"usfm\",\n        \"type\": \"text\"\n      }\n    ],\n    \"description\": \"PERF=>USFM: Conversion via Proskomma\"\n  },\n  {\n    \"id\": 999,\n    \"type\": \"Outputs\",\n    \"outputs\": [\n      {\n        \"name\": \"usfm\",\n        \"type\": \"text\",\n        \"source\": \"Transform 2 usfm\"\n      }\n    ]\n  }\n]", "[\n  {\n    \"id\": 0,\n    \"type\": \"Inputs\",\n    \"inputs\": {\n      \"perf\": \"json\"\n    }\n  },\n  {\n    \"id\": 1,\n    \"title\": \"PERF to PkJSON\",\n    \"name\": \"perf2PkJson\",\n    \"type\": \"Transform\",\n    \"inputs\": [\n      {\n        \"name\": \"perf\",\n        \"type\": \"json\",\n        \"source\": \"Input perf\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"pkJson\",\n        \"type\": \"json\"\n      }\n    ],\n    \"documentation\": \"\",\n    \"description\": \"PERF=>JSON: Converts PERF to current Proskomma input format\"\n  },\n  {\n    \"id\": 999,\n    \"type\": \"Outputs\",\n    \"outputs\": [\n      {\n        \"name\": \"pkJson\",\n        \"type\": \"json\",\n        \"source\": \"Transform 1 pkJson\"\n      }\n    ]\n  }\n]\n", "const perf2usfmPipeline = require('./perf2usfmPipeline.json');\nconst perf2PkJsonPipeline = require('./perf2PkJsonPipeline.json');\n\nmodule.exports = {\n  perf2usfmPipeline,\n  perf2PkJsonPipeline,\n};\n", "const { PerfRenderFromJson } = require('proskomma-json-tools');\n\nconst initialBlockRecord = ct => ({\n  type: ct.sequences[0].block.type,\n  subType: ct.sequences[0].block.subType,\n  pos: ct.sequences[0].block.blockN,\n  perfChapter: null,\n});\n\nconst calculateUsfmChapterPositionsActions = {\n  startDocument: [\n    {\n      description: 'Set up storage',\n      test: () => true,\n      action: ({ workspace, output }) => {\n        workspace.blockRecords = [];\n        output.report = {};\n      },\n    },\n  ],\n  startParagraph: [\n    {\n      description: 'Set up block record',\n      test: () => true,\n      action: ({ context, workspace }) => {\n        workspace.blockRecords.push(initialBlockRecord(context));\n      },\n    },\n  ],\n  blockGraft: [\n    {\n      description: 'Set up block record',\n      test: () => true,\n      action: ({ context, workspace }) => {\n        workspace.blockRecords.push(initialBlockRecord(context));\n      },\n    },\n  ],\n  mark: [\n    {\n      description: 'Add chapter number to block record',\n      test: ({ context }) => context.sequences[0].element.subType === 'chapter',\n      action: ({ context, workspace }) => {\n        workspace.blockRecords[workspace.blockRecords.length - 1].perfChapter = context.sequences[0].element.atts['number'];\n      },\n    },\n  ],\n  endDocument: [\n    {\n      description: 'Populate report',\n      test: () => true,\n      action: ({ workspace, output }) => {\n        for (const [recordN, record] of Object.entries(workspace.blockRecords)) {\n          if (!record.perfChapter) {\n            continue;\n          }\n\n          let usfmChapterPos = recordN;\n          let found = false;\n\n          while (usfmChapterPos > 0 && !found) {\n            if (workspace.blockRecords[usfmChapterPos - 1].type === 'paragraph'\n                            || workspace.blockRecords[usfmChapterPos - 1].subType === 'title') {\n              found = true;\n            } else {\n              usfmChapterPos--;\n            }\n          }\n          output.report[usfmChapterPos.toString()] = record.perfChapter;\n        }\n      },\n    },\n  ],\n};\n\nconst calculateUsfmChapterPositionsCode = function ({ perf }) {\n  const cl = new PerfRenderFromJson({ srcJson: perf, actions: calculateUsfmChapterPositionsActions });\n  const output = {};\n\n  cl.renderDocument({\n    docId: '', config: { maxLength: 60 }, output,\n  });\n  return { report: output.report };\n};\n\nconst calculateUsfmChapterPositions = {\n  name: 'calculateUsfmChapterPositions',\n  type: 'Transform',\n  description: 'PERF=>JSON: Generates positions for inserting chapter numbers into USFM',\n  inputs: [\n    {\n      name: 'perf',\n      type: 'json',\n      source: '',\n    },\n  ],\n  outputs: [\n    {\n      name: 'report',\n      type: 'json',\n    },\n  ],\n  code: calculateUsfmChapterPositionsCode,\n};\n\nmodule.exports = calculateUsfmChapterPositions;\n", "const { PerfRenderFromJson } = require('proskomma-json-tools');\n\nconst oneifyTag = t => {\n  if (['toc', 'toca', 'mt', 'imt', 's', 'ms', 'mte', 'sd'].includes(t)) {\n    return t + '1';\n  }\n  return t;\n};\n\nconst buildMilestone = (atts, type) => {\n  let str=`\\\\${type}-s |`;\n\n  for (let [key, value] of Object.entries(atts)) {\n    if (key === 'x-morph') {\n      str = str + oneifyTag(key) + '=\"' + value.join(',') + '\" ';\n    } else {\n      str = str + oneifyTag(key) + '=\"' + value + '\" ';\n    }\n  };\n  return str + '\\\\*';\n};\n\nconst buildEndWrapper = (atts, type, isnested = false) => {\n  let str='|';\n\n  for (let [key, value] of Object.entries(atts)) {\n    str = str + oneifyTag(key) + '=\"' + value + '\" ';\n  };\n  str = str + '\\\\';\n\n  // if it's nested, we simply add a \"+\" sign before the type\n  if (isnested) {\n    str = str + '+';\n  }\n  return str + type + '*';\n};\n\nconst localToUsfmActions = {\n  startDocument: [\n    {\n      description: 'Set up environment',\n      test: () => true,\n      action: ({ context, workspace }) => {\n        workspace.usfmBits = [''];\n        workspace.nestedWrapper = 0;\n\n        for (\n          let [key, value] of\n          Object.entries(context.document.metadata.document)\n            .filter(kv => !['tags', 'properties', 'bookCode', 'cl'].includes(kv[0]))\n        ) {\n          workspace.usfmBits.push(`\\\\${oneifyTag(key)} ${value}\\n`);\n        };\n      },\n    },\n  ],\n  blockGraft: [\n    {\n      description: 'Follow block grafts',\n      test: ({ context }) => ['title', 'heading', 'introduction'].includes(context.sequences[0].block.subType),\n      action: (environment) => {\n        let contextSequence = environment.context.sequences[0];\n        let chapterValue = environment.config.report[contextSequence.block.blockN.toString()];\n        const target = contextSequence.block.target;\n\n        if (chapterValue && contextSequence.type === 'main') {\n          environment.workspace.usfmBits.push(`\\n\\\\c ${chapterValue}\\n`);\n        }\n\n        if (target) {\n          environment.context.renderer.renderSequenceId(environment, target);\n        }\n      },\n    },\n  ],\n  inlineGraft: [\n    {\n      description: 'Follow inline grafts',\n      test: () => true,\n      action: (environment) => {\n        const target = environment.context.sequences[0].element.target;\n\n        if (target) {\n          environment.context.renderer.renderSequenceId(environment, target);\n        }\n      },\n    },\n  ],\n  startParagraph: [\n    {\n      description: 'Output footnote paragraph tag (footnote)',\n      test: ({ context }) => (context.sequences[0].block.subType === 'usfm:f' && context.sequences[0].type === 'footnote')\n            || (context.sequences[0].block.subType === 'usfm:x' && context.sequences[0].type === 'xref'),\n      action: ({ context, workspace }) => {\n        workspace.nestedWrapper = 0;\n        let contextSequence = context.sequences[0];\n        workspace.usfmBits.push(`\\\\${oneifyTag(contextSequence.block.subType.split(':')[1])} `);\n      },\n    },\n    {\n      description: 'Output footnote note_caller tag (footnote)',\n      test: ({ context }) => context.sequences[0].block.subType === 'usfm:f' || context.sequences[0].block.subType === 'usfm:x',\n      action: ({ workspace }) => {\n        workspace.nestedWrapper = 0;\n      },\n    },\n    {\n      description: 'Output paragraph tag (main)',\n      test: () => true,\n      action: ({\n        context, workspace, config,\n      }) => {\n        workspace.nestedWrapper = 0;\n        let contextSequence = context.sequences[0];\n        let chapterValue = config.report[contextSequence.block.blockN.toString()];\n\n        if (chapterValue && contextSequence.type === 'main') {\n          workspace.usfmBits.push(`\\n\\\\c ${chapterValue}\\n`);\n        }\n        workspace.usfmBits.push(`\\n\\\\${oneifyTag(contextSequence.block.subType.split(':')[1])}\\n`);\n      },\n    },\n  ],\n  endParagraph: [\n    {\n      description: 'Output footnote paragraph tag (footnote)',\n      test: ({ context }) => (context.sequences[0].block.subType === 'usfm:f' && context.sequences[0].type === 'footnote')\n            || (context.sequences[0].block.subType === 'usfm:x' && context.sequences[0].type === 'xref'),\n      action: ({ context, workspace }) => {\n        let contextSequence = context.sequences[0];\n        workspace.usfmBits.push(`\\\\${oneifyTag(contextSequence.block.subType.split(':')[1])}*`);\n      },\n    },\n    {\n      description: 'Output footnote note_caller tag (footnote)',\n      test: ({ context }) => context.sequences[0].block.subType === 'usfm:f' || context.sequences[0].block.subType === 'usfm:x',\n      action: () => {\n      },\n    },\n    {\n      description: 'Output nl',\n      test: () => true,\n      action: ({ workspace }) => {\n        workspace.usfmBits.push(`\\n`);\n      },\n    },\n  ],\n  startMilestone: [\n    {\n      description: 'Output start milestone',\n      test: () => true,\n      action: ({ context, workspace }) => {\n        let contextSequenceElement = context.sequences[0].element;\n        let newStartMileStone = buildMilestone(contextSequenceElement.atts, oneifyTag(contextSequenceElement.subType.split(':')[1]));\n        workspace.usfmBits.push(newStartMileStone);\n      },\n    },\n  ],\n  endMilestone: [\n    {\n      description: 'Output end milestone',\n      test: () => true,\n      action: ({ context, workspace }) => {\n        workspace.usfmBits.push(`\\\\${oneifyTag(context.sequences[0].element.subType.split(':')[1])}-e\\\\*`);\n      },\n    },\n  ],\n  text: [\n    {\n      description: 'Output text',\n      test: () => true,\n      action: ({ context, workspace }) => {\n        const text = context.sequences[0].element.text;\n        workspace.usfmBits.push(text);\n      },\n    },\n  ],\n  mark: [\n    {\n      description: 'Output chapter or verses',\n      test: () => true,\n      action: ({ context, workspace }) => {\n        const element = context.sequences[0].element;\n\n        if (element.subType === 'verses') {\n          workspace.usfmBits.push(`\\n\\\\v ${element.atts['number']}\\n`);\n        }\n      },\n    },\n  ],\n  endSequence: [\n    {\n      description: 'Output \\\\cl',\n      test: ({ context }) => context.document.metadata.document.cl && context.sequences[0].type === 'title',\n      action: ({ context, workspace }) => {\n        workspace.usfmBits.push(`\\n\\\\cl ${context.document.metadata.document.cl}\\n`);\n      },\n    },\n  ],\n  startWrapper: [\n    {\n      description: 'Output start tag',\n      test: () => true,\n      action: ({ workspace, context }) => {\n        let contextSequence = context.sequences[0];\n\n        // handle nested wrappers : https://ubsicap.github.io/usfm/characters/nesting.html\n        if (workspace.nestedWrapper > 0) {\n          workspace.usfmBits.push(`\\\\+${oneifyTag(contextSequence.element.subType.split(':')[1])} `);\n        } else {\n          workspace.usfmBits.push(`\\\\${oneifyTag(contextSequence.element.subType.split(':')[1])} `);\n        }\n        workspace.nestedWrapper += 1;\n      },\n    },\n  ],\n  endWrapper: [\n    {\n      description: 'Output end tag',\n      test: ({ context }) => !['fr', 'fq','fqa','fk','fl','fw','fp', 'ft', 'xo', 'xk', 'xq', 'xt', 'xta']\n        .includes(context.sequences[0].element.subType.split(':')[1]),\n      action: ({ workspace, context }) => {\n        workspace.nestedWrapper -= 1;\n        let contextSequence = context.sequences[0];\n        let subType = contextSequence.element.subType.split(':')[1];\n        let isNested = workspace.nestedWrapper > 0;\n\n        if (subType === 'w') {\n          let newEndW = buildEndWrapper(contextSequence.element.atts, oneifyTag(subType), isNested);\n          workspace.usfmBits.push(newEndW);\n        } else {\n          // handle nested wrappers : https://ubsicap.github.io/usfm/characters/nesting.html\n          if (isNested) {\n            workspace.usfmBits.push(`\\\\+${oneifyTag(contextSequence.element.subType.split(':')[1])}*`);\n          } else {\n            workspace.usfmBits.push(`\\\\${oneifyTag(contextSequence.element.subType.split(':')[1])}*`);\n          }\n        }\n      },\n    },\n    {\n      description: 'Do NOT output end tag',\n      test: () => true,\n      action: ({ workspace }) => {\n        workspace.nestedWrapper -= 1;\n      },\n    },\n  ],\n  endDocument: [\n    {\n      description: 'Build output',\n      test: () => true,\n      action: ({ workspace, output }) => {\n        output.usfm = workspace.usfmBits.join('').replace(/(\\s*)\\n(\\s*)/gm, '\\n');\n      },\n    },\n  ],\n};\n\nconst perf2usfmCode = function ({ perf, report }) {\n  const cl = new PerfRenderFromJson({ srcJson: perf, actions: localToUsfmActions });\n  const output = {};\n\n  cl.renderDocument({\n    docId: '', config: { report }, output,\n  });\n  return { usfm: output.usfm };\n};\n\nconst perf2usfm = {\n  name: 'perf2usfm',\n  type: 'Transform',\n  description: 'PERF=>USFM',\n  inputs: [\n    {\n      name: 'perf',\n      type: 'json',\n      source: '',\n    },\n    {\n      name: 'report',\n      type: 'json',\n      source: '',\n    },\n  ],\n  outputs: [\n    {\n      name: 'usfm',\n      type: 'text',\n    },\n  ],\n  code: perf2usfmCode,\n};\nmodule.exports = perf2usfm;\n", "const { PerfRenderFromJson } = require('proskomma-json-tools');\nconst xre = require('xregexp');\nconst { lexingRegexes } = require('../parser/lexers/lexingRegexes.cjs');\n\nconst wordLikeRegex = lexingRegexes.filter(r => r[1] === 'wordLike')[0][2];\nconst lineSpaceRegex = lexingRegexes.filter(r => r[1] === 'lineSpace')[0][2];\nconst punctuationRegex = lexingRegexes.filter(r => r[1] === 'punctuation')[0][2];\n\nconst closeAllOpenScopes = workspace => {\n  [...workspace.os]\n    .reverse()\n    .forEach(o => {\n      workspace.block.items.push({\n        type: 'scope',\n        subType: 'end',\n        payload: o,\n      },\n      );\n    },\n    );\n  workspace.os = [];\n};\n\nconst closeParagraphScopes = workspace => {\n  [...workspace.os.filter(o => ['span'].includes(o.split('/')[1]))]\n    .reverse()\n    .forEach(o => {\n      workspace.block.items.push({\n        type: 'scope',\n        subType: 'end',\n        payload: o,\n      });\n      workspace.os = [...workspace.os.filter(wo => wo !== o)];\n    },\n    );\n};\n\nconst closeVerseScopes = workspace => {\n  [...workspace.os.filter(o => ['verse', 'verses'].includes(o.split('/')[0]))]\n    .reverse()\n    .forEach(o => {\n      workspace.block.items.push({\n        type: 'scope',\n        subType: 'end',\n        payload: o,\n      });\n      workspace.os = [...workspace.os.filter(wo => wo !== o)];\n    },\n    );\n};\n\nconst closeChapterScopes = workspace => {\n  [...workspace.os.filter(o => ['chapter'].includes(o.split('/')[0]))]\n    .reverse()\n    .forEach(o => {\n      workspace.block.items.push({\n        type: 'scope',\n        subType: 'end',\n        payload: o,\n      });\n      workspace.os = [...workspace.os.filter(wo => wo !== o)];\n    },\n    );\n};\n\nconst perf2PkJsonActions = {\n\n  startDocument: [\n    {\n      description: 'Set up word object',\n      test: () => true,\n      action: ({\n        workspace,\n        output,\n      }) => {\n        output.pkJson = {};\n        workspace.sequenceId = null;\n        workspace.block = null;\n        workspace.os = [];\n        workspace.waitingBlockGrafts = [];\n      },\n    },\n  ],\n\n  startSequence: [\n    {\n      description: 'Add sequence array to output',\n      test: () => true,\n      action: (environment) => {\n        environment.output.pkJson[environment.context.sequences[0].id] = [];\n        environment.workspace.sequenceId = environment.context.sequences[0].id;\n      },\n    },\n  ],\n\n  endSequence: [\n    {\n      description: 'Reset sequenceId pointer',\n      test: () => true,\n      action: (environment) => {\n        closeAllOpenScopes(environment.workspace);\n        environment.workspace.sequenceId = environment.context.sequences[1]?.id;\n      },\n    },\n  ],\n\n  unresolvedBlockGraft: [\n    {\n      description: 'Stash for next para',\n      test: () => true,\n      action: ({\n        context,\n        workspace,\n      }) => {\n        const target = context.sequences[0].block.target;\n\n        if (target) {\n          workspace.waitingBlockGrafts.push({\n            type: 'graft',\n            subType: context.sequences[0].block.subType,\n            payload: context.sequences[0].block.target,\n          });\n        }\n      },\n    },\n  ],\n\n  unresolvedInlineGraft: [\n    {\n      description: 'Follow inline grafts',\n      test: () => true,\n      action: ({\n        context,\n        workspace,\n      }) => {\n        const target = context.sequences[0].element.target;\n\n        if (target) {\n          workspace.block.items.push({\n            type: 'graft',\n            subType: context.sequences[0].element.subType,\n            payload: context.sequences[0].element.target,\n          });\n        }\n      },\n    },\n  ],\n\n  startParagraph: [\n    {\n      description: 'Add object for paragraph block',\n      test: () => true,\n      action: ({\n        context,\n        workspace,\n        output,\n      }) => {\n        workspace.block = {\n          os: [...workspace.os],\n          is: [],\n          bs: {\n            type: 'scope',\n            subType: 'start',\n            payload: `blockTag/${context.sequences[0].block.subType.split(':')[1]}`,\n          },\n          bg: [...workspace.waitingBlockGrafts],\n          items: [],\n        };\n        output.pkJson[workspace.sequenceId].push(workspace.block);\n      },\n    },\n  ],\n  endParagraph: [\n    {\n      description: 'Close open scopes',\n      test: () => true,\n      action: ({ workspace }) => {\n        closeParagraphScopes(workspace);\n        workspace.waitingBlockGrafts = [];\n      },\n    },\n  ],\n  mark: [\n    {\n      description: 'ts mark as milestone',\n      test: ({ context }) => ['usfm:ts'].includes(context.sequences[0].element.subType),\n      action: ({ workspace }) => {\n        const milestoneScope = `milestone/ts`;\n\n        if (!workspace.block.is.includes(milestoneScope)) {\n          workspace.block.is.push(milestoneScope);\n        }\n        workspace.os.push(milestoneScope);\n        workspace.block.items.push({\n          type: 'scope',\n          subType: 'start',\n          payload: milestoneScope,\n        });\n        workspace.block.items.push({\n          type: 'scope',\n          subType: 'end',\n          payload: milestoneScope,\n        });\n      },\n    },\n    {\n      description: 'Chapter',\n      test: ({ context }) => ['chapter'].includes(context.sequences[0].element.subType),\n      action: ({\n        context,\n        workspace,\n      }) => {\n        closeVerseScopes(workspace);\n        closeChapterScopes(workspace);\n        const element = context.sequences[0].element;\n        const chapterScope = `chapter/${element.atts['number']}`;\n\n        if (!workspace.block.is.includes(chapterScope)) {\n          workspace.block.is.push(chapterScope);\n        }\n        workspace.os.push(chapterScope);\n        workspace.block.items.push({\n          type: 'scope',\n          subType: 'start',\n          payload: chapterScope,\n        });\n      },\n    },\n    {\n      description: 'Verses',\n      test: ({ context }) => ['verses'].includes(context.sequences[0].element.subType),\n      action: ({\n        context,\n        workspace,\n      }) => {\n        closeVerseScopes(workspace);\n        const element = context.sequences[0].element;\n        const vn = element.atts['number'];\n        let va = [parseInt(vn)];\n\n        if (vn.includes('-')) {\n          let [vs, ve] = vn.split('-').map(s => parseInt(s));\n          va = [vs];\n\n          while (vs <= ve) {\n            vs++;\n            va.push(vs);\n          }\n        }\n\n        for (const v of va) {\n          const verseScope = `verse/${v}`;\n          workspace.os.push(verseScope);\n\n          if (!workspace.block.is.includes(verseScope)) {\n            workspace.block.is.push(verseScope);\n          }\n          workspace.block.items.push({\n            type: 'scope',\n            subType: 'start',\n            payload: verseScope,\n          });\n        }\n\n        const versesScope = `verses/${element.atts['number']}`;\n\n        if (!workspace.block.is.includes(versesScope)) {\n          workspace.block.is.push(versesScope);\n        }\n        workspace.os.push(versesScope);\n        workspace.block.items.push({\n          type: 'scope',\n          subType: 'start',\n          payload: versesScope,\n        });\n      },\n    },\n  ],\n\n  startMilestone: [\n    {\n      description: 'Add scope and update state',\n      test: () => true,\n      action: ({\n        context,\n        workspace,\n      }) => {\n        const element = context.sequences[0].element;\n        const milestoneScope = `milestone/${element.subType.split(':')[1]}`;\n\n        if (!workspace.block.is.includes(milestoneScope)) {\n          workspace.block.is.push(milestoneScope);\n        }\n        workspace.os.push(milestoneScope);\n        workspace.block.items.push({\n          type: 'scope',\n          subType: 'start',\n          payload: milestoneScope,\n        });\n\n        for (const [attKey, attValue] of Object.entries(element.atts || {})) {\n          const valueParts = attValue.toString().split(',');\n\n          for (const [partN, part] of valueParts.entries()) {\n            const attScope = `attribute/milestone/${element.subType.split(':')[1]}/${attKey}/${partN}/${part}`;\n\n            if (!workspace.block.is.includes(attScope)) {\n              workspace.block.is.push(attScope);\n            }\n            workspace.os.push(attScope);\n            workspace.block.items.push({\n              type: 'scope',\n              subType: 'start',\n              payload: attScope,\n            });\n          }\n        }\n      },\n    },\n  ],\n\n  endMilestone: [\n    {\n      description: 'Remove scope and update state',\n      test: () => true,\n      action: ({\n        context,\n        workspace,\n      }) => {\n        const element = context.sequences[0].element;\n        const attScopeRoot = `attribute/milestone/${element.subType.split(':')[1]}`;\n\n        for (const att of [...workspace.os.filter(s => s.startsWith(attScopeRoot))].reverse()) {\n          workspace.os = workspace.os.filter(o => o !== att);\n          workspace.block.items.push({\n            type: 'scope',\n            subType: 'end',\n            payload: att,\n          });\n        }\n\n        const milestoneScope = `milestone/${element.subType.split(':')[1]}`;\n        workspace.os = workspace.os.filter(s => s !== milestoneScope);\n        workspace.block.items.push({\n          type: 'scope',\n          subType: 'end',\n          payload: milestoneScope,\n        });\n      },\n    },\n  ],\n\n  startWrapper: [\n    {\n      description: 'Add scope and update state',\n      test: () => true,\n      action: ({\n        context,\n        workspace,\n      }) => {\n        const element = context.sequences[0].element;\n        const wrapperScope = `${element.subType === 'usfm:w' ? 'spanWithAtts' : 'span'}/${element.subType.split(':')[1]}`;\n\n        if (!workspace.block.is.includes(wrapperScope)) {\n          workspace.block.is.push(wrapperScope);\n        }\n        workspace.os.push(wrapperScope);\n        workspace.block.items.push({\n          type: 'scope',\n          subType: 'start',\n          payload: wrapperScope,\n        });\n\n        for (const [attKey, attValue] of Object.entries(element.atts || {})) {\n          const valueParts = attValue.toString().split(',');\n\n          for (const [partN, part] of valueParts.entries()) {\n            const attScope = `attribute/spanWithAtts/w/${attKey}/${partN}/${part}`;\n\n            if (!workspace.block.is.includes(attScope)) {\n              workspace.block.is.push(attScope);\n            }\n            workspace.os.push(attScope);\n            workspace.block.items.push({\n              type: 'scope',\n              subType: 'start',\n              payload: attScope,\n            });\n          }\n        }\n      },\n    },\n  ],\n\n  endWrapper: [\n    {\n      description: 'Remove scope and update state',\n      test: () => true,\n      action: ({\n        context,\n        workspace,\n      }) => {\n        const element = context.sequences[0].element;\n\n        for (const [attKey, attValue] of [...Object.entries(element.atts || {})].reverse()) {\n          const valueParts = attValue.toString().split(',');\n\n          for (const [partN, part] of [...valueParts.entries()].reverse()) {\n            const attScope = `attribute/spanWithAtts/w/${attKey}/${partN}/${part}`;\n            workspace.os = workspace.os.filter(o => o !== attScope);\n            workspace.block.items.push({\n              type: 'scope',\n              subType: 'end',\n              payload: attScope,\n            });\n          }\n        }\n\n        const wrapperScope = `${element.subType === 'usfm:w' ? 'spanWithAtts' : 'span'}/${element.subType.split(':')[1]}`;\n        workspace.os = workspace.os.filter(s => s !== wrapperScope);\n        workspace.block.items.push({\n          type: 'scope',\n          subType: 'end',\n          payload: wrapperScope,\n        });\n      },\n    },\n  ],\n\n  text: [\n    {\n      description: 'Log occurrences',\n      test: () => true,\n      action: ({\n        context,\n        workspace,\n      }) => {\n        const text = context.sequences[0].element.text;\n        const re = xre.union(lexingRegexes.map((x) => x[2]));\n        const words = xre.match(text, re, 'all');\n\n        for (const word of words) {\n          let subType;\n\n          if (xre.test(word, wordLikeRegex)) {\n            subType = 'wordLike';\n          } else if (xre.test(word, lineSpaceRegex)) {\n            subType = 'lineSpace';\n          } else if (xre.test(word, punctuationRegex)) {\n            subType = 'punctuation';\n          }\n          workspace.block.items.push({\n            type: 'token',\n            subType,\n            payload: word,\n          });\n        }\n      },\n    },\n  ],\n\n  endDocument: [\n    {\n      description: 'Rework hanging end cv scopes',\n      test: () => true,\n      action: ({ output }) => {\n        const sequenceBlocks = Object.values(output.pkJson)[0];\n\n        for (let blockN = 1; blockN < sequenceBlocks.length; blockN++) {\n          let thisBlockItems = sequenceBlocks[blockN].items;\n          const lastBlockItems = sequenceBlocks[blockN - 1].items;\n          let itemN = 0;\n\n          while (itemN < thisBlockItems.length) {\n            const item = thisBlockItems[itemN];\n\n            if (item.type !== 'scope' || item.subType !== 'end') {\n              break;\n            }\n            itemN++;\n          }\n\n          while (itemN > 0) {\n            const movingScope = thisBlockItems.shift();\n            lastBlockItems.push(movingScope);\n            sequenceBlocks[blockN].os = sequenceBlocks[blockN].os.filter(s => s !== movingScope.payload);\n            itemN--;\n          }\n        }\n      },\n    },\n  ],\n\n};\n\nconst perf2PkJsonCode = function ({ perf }) {\n  const cl = new PerfRenderFromJson(\n    {\n      srcJson: perf,\n      ignoreMissingSequences: true,\n      actions: perf2PkJsonActions,\n    },\n  );\n  const output = {};\n\n  cl.renderDocument({\n    docId: '',\n    config: {},\n    output,\n  });\n  return { pkJson: output.pkJson };\n};\n\nconst perf2PkJson = {\n  name: 'perf2PkJson',\n  type: 'Transform',\n  description: 'PERF=>JSON: Converts PERF to current Proskomma input format',\n  documentation: '',\n  inputs: [\n    {\n      name: 'perf',\n      type: 'json',\n      source: '',\n    },\n  ],\n  outputs: [\n    {\n      name: 'pkJson',\n      type: 'json',\n    },\n  ],\n  code: perf2PkJsonCode,\n};\nmodule.exports = perf2PkJson;\n", "const calculateUsfmChapterPositions = require('./calculateUsfmChapterPositions.cjs');\nconst perf2usfm = require('./perf2usfm.cjs');\nconst perf2PkJson = require('./perf2PkJson.cjs');\n\nmodule.exports = {\n  calculateUsfmChapterPositions,\n  perf2usfm,\n  perf2PkJson,\n};\n", "const BitSet = require('bitset');\n\nconst utils = require('../../util/index.cjs');\nconst ByteArray = utils.ByteArray;\nconst { itemEnum } = utils.itemDefs;\nconst { tokenEnum } = utils.tokenDefs;\n\nconst emptyCVIndexType = 0;\nconst shortCVIndexType = 2;\nconst longCVIndexType = 3;\n\nconst buildChapterVerseIndex = document => {\n  const mainSequence = document.sequences[document.mainId];\n  const docSet = document.processor.docSets[document.docSetId];\n  docSet.buildPreEnums();\n  docSet.buildEnumIndexes();\n  const chapterVerseIndexes = {};\n  const chapterIndexes = {};\n  let chapterN = '0';\n  let verseN = '0';\n  let verses = '1';\n  let nextTokenN = 0;\n\n  mainSequence.chapterVerses = {};\n\n  if (docSet.enums.wordLike.length === 0) {\n    throw new Error('No wordLike content in docSet - probably a USFM issue, maybe missing \\\\mt?');\n  }\n  mainSequence.tokensPresent = new BitSet(\n    new Array(docSet.enums.wordLike.length)\n      .fill(0)\n      .map(b => b.toString())\n      .join(''),\n  );\n\n  for (const [blockN, block] of mainSequence.blocks.entries()) {\n    let pos = 0;\n    let succinct = block.c;\n    let itemN = -1;\n\n    while (pos < succinct.length) {\n      itemN++;\n      const [itemLength, itemType, itemSubtype] = utils.succinct.headerBytes(succinct, pos);\n\n      if (itemType === itemEnum['startScope']) {\n        let scopeLabel = docSet.succinctScopeLabel(succinct, itemSubtype, pos);\n\n        if (scopeLabel.startsWith('chapter/')) {\n          chapterN = scopeLabel.split('/')[1];\n          chapterVerseIndexes[chapterN] = {};\n          chapterIndexes[chapterN] = {\n            startBlock: blockN,\n            startItem: itemN,\n            nextToken: nextTokenN,\n          };\n        } else if (scopeLabel.startsWith('verse/')) {\n          verseN = scopeLabel.split('/')[1];\n\n          if (verseN === '1' && !('0' in chapterVerseIndexes[chapterN])) {\n            if (chapterIndexes[chapterN].nextToken < nextTokenN) {\n              chapterVerseIndexes[chapterN]['0'] = [{\n                startBlock: chapterIndexes[chapterN].startBlock,\n                startItem: chapterIndexes[chapterN].startItem,\n                endBlock: blockN,\n                endItem: Math.max(itemN - 1, 0),\n                nextToken: chapterIndexes[chapterN].nextToken,\n                verses: '0',\n              }];\n            }\n          }\n\n          if (!(verseN in chapterVerseIndexes[chapterN])) {\n            chapterVerseIndexes[chapterN][verseN] = [];\n          }\n          chapterVerseIndexes[chapterN][verseN].push({\n            startBlock: blockN,\n            startItem: itemN,\n            nextToken: nextTokenN,\n          });\n        } else if (scopeLabel.startsWith('verses/')) {\n          verses = scopeLabel.split('/')[1];\n        }\n      } else if (itemType === itemEnum['endScope']) {\n        let scopeLabel = docSet.succinctScopeLabel(succinct, itemSubtype, pos);\n\n        if (scopeLabel.startsWith('chapter/')) {\n          chapterN = scopeLabel.split('/')[1];\n          let chapterRecord = chapterIndexes[chapterN];\n\n          if (chapterRecord) { // Check start chapter has not been deleted\n            chapterRecord.endBlock = blockN;\n            chapterRecord.endItem = itemN;\n          }\n        } else if (scopeLabel.startsWith('verse/')) {\n          verseN = scopeLabel.split('/')[1];\n          let versesRecord = chapterVerseIndexes[chapterN][verseN];\n\n          if (versesRecord) { // Check start verse has not been deleted\n            const verseRecord = chapterVerseIndexes[chapterN][verseN][chapterVerseIndexes[chapterN][verseN].length - 1];\n            verseRecord.endBlock = blockN;\n            verseRecord.endItem = itemN;\n            verseRecord.verses = verses;\n          }\n        }\n      } else if (itemType === itemEnum['token'] && itemSubtype === tokenEnum['wordLike']) {\n        mainSequence.tokensPresent\n          .set(\n            succinct.nByte(pos + 2),\n            1,\n          );\n        nextTokenN++;\n      }\n      pos += itemLength;\n    }\n  }\n\n  for (const [chapterN, chapterVerses] of Object.entries(chapterVerseIndexes)) {\n    const ba = new ByteArray();\n    mainSequence.chapterVerses[chapterN] = ba;\n    const sortedVerses = Object.keys(chapterVerses)\n      .map(n => parseInt(n))\n      .sort((a, b) => a - b);\n\n    if (sortedVerses.length === 0) {\n      continue;\n    }\n\n    const maxVerse = sortedVerses[sortedVerses.length - 1];\n    const verseSlots = Array.from(Array(maxVerse + 1).keys());\n    let pos = 0;\n\n    for (const verseSlot of verseSlots) {\n      const verseKey = `${verseSlot}`;\n\n      if (verseKey in chapterVerses) {\n        const verseElements = chapterVerses[verseKey];\n        const nVerseElements = verseElements.length;\n\n        for (const [verseElementN, verseElement] of verseElements.entries()) {\n          if (!verseElement.verses) {\n            console.log(`** VerseElement without verses for ${verseSlot} in buildChapterVerseIndex`);\n            continue;\n          }\n\n          const versesEnumIndex = docSet.enumForCategoryValue('scopeBits', verseElement.verses);\n          const recordType = verseElement.startBlock === verseElement.endBlock ? shortCVIndexType : longCVIndexType;\n          ba.pushByte(0);\n\n          if (recordType === shortCVIndexType) {\n            ba.pushNBytes([\n              verseElement.startBlock,\n              verseElement.startItem,\n              verseElement.endItem,\n              verseElement.nextToken,\n              versesEnumIndex,\n            ]);\n          } else {\n            ba.pushNBytes([\n              verseElement.startBlock,\n              verseElement.endBlock,\n              verseElement.startItem,\n              verseElement.endItem,\n              verseElement.nextToken,\n              versesEnumIndex,\n            ]);\n          }\n          ba.setByte(pos, makeVerseLengthByte(recordType, verseElementN === (nVerseElements - 1), ba.length - pos));\n          pos = ba.length;\n        }\n      } else {\n        ba.pushByte(makeVerseLengthByte(emptyCVIndexType, true, 1));\n        pos++;\n      }\n    }\n    ba.trim();\n  }\n  mainSequence.chapters = {};\n\n  for (const [chapterN, chapterElement] of Object.entries(chapterIndexes)) {\n    if (!('startBlock' in chapterElement) || !('endBlock' in chapterElement)) {\n      continue;\n    }\n\n    const ba = new ByteArray();\n    mainSequence.chapters[chapterN] = ba;\n    const recordType = chapterElement.startBlock === chapterElement.endBlock ? shortCVIndexType : longCVIndexType;\n    ba.pushByte(0);\n\n    if (recordType === shortCVIndexType) {\n      ba.pushNBytes([chapterElement.startBlock, chapterElement.startItem, chapterElement.endItem, chapterElement.nextToken]);\n    } else {\n      ba.pushNBytes([chapterElement.startBlock, chapterElement.endBlock, chapterElement.startItem, chapterElement.endItem, chapterElement.nextToken]);\n    }\n    ba.setByte(0, makeVerseLengthByte(recordType, true, ba.length));\n    ba.trim();\n  }\n};\n\nconst chapterVerseIndex = (document, chapN) => {\n  const docSet = document.processor.docSets[document.docSetId];\n  docSet.buildEnumIndexes();\n  const ret = [];\n  const succinct = document.sequences[document.mainId].chapterVerses[chapN];\n\n  if (succinct) {\n    let pos = 0;\n    let currentVerseRecord = [];\n\n    while (pos < succinct.length) {\n      const [recordType, isLast, recordLength] = verseLengthByte(succinct, pos);\n\n      if (recordType === shortCVIndexType) {\n        const nBytes = succinct.nBytes(pos + 1, 5);\n\n        currentVerseRecord.push({\n          startBlock: nBytes[0],\n          endBlock: nBytes[0],\n          startItem: nBytes[1],\n          endItem: nBytes[2],\n          nextToken: nBytes[3],\n          verses: docSet.enums.scopeBits.countedString(docSet.enumIndexes.scopeBits[nBytes[4]]),\n        });\n      } else if (recordType === longCVIndexType) {\n        const nBytes = succinct.nBytes(pos + 1, 6);\n\n        currentVerseRecord.push({\n          startBlock: nBytes[0],\n          endBlock: nBytes[1],\n          startItem: nBytes[2],\n          endItem: nBytes[3],\n          nextToken: nBytes[4],\n          verses: docSet.enums.scopeBits.countedString(docSet.enumIndexes.scopeBits[nBytes[5]]),\n        });\n      }\n\n      if (isLast) {\n        ret.push(currentVerseRecord);\n        currentVerseRecord = [];\n      }\n      pos += recordLength;\n    }\n  }\n  return ret;\n};\n\nconst chapterIndex = (document, chapN) => {\n  const succinct = document.sequences[document.mainId].chapters[chapN];\n\n  if (succinct) {\n    const recordType = verseLengthByte(succinct, 0)[0];\n\n    if (recordType === shortCVIndexType) {\n      const nBytes = succinct.nBytes(1, 4);\n\n      return {\n        startBlock: nBytes[0],\n        endBlock: nBytes[0],\n        startItem: nBytes[1],\n        endItem: nBytes[2],\n        nextToken: nBytes[3],\n      };\n    } else if (recordType === longCVIndexType) {\n      const nBytes = succinct.nBytes(1, 5);\n\n      return {\n        startBlock: nBytes[0],\n        endBlock: nBytes[1],\n        startItem: nBytes[2],\n        endItem: nBytes[3],\n        nextToken: nBytes[4],\n      };\n    }\n  }\n};\n\nconst makeVerseLengthByte = (recordType, isLast, length) => length + (isLast ? 32 : 0) + (recordType * 64);\n\nconst verseLengthByte= (succinct, pos) => {\n  const sByte = succinct.byte(pos);\n  return [\n    sByte >> 6,\n    (sByte >> 5) % 2 === 1,\n    sByte % 32,\n  ];\n};\n\nmodule.exports = {\n  buildChapterVerseIndex,\n  chapterVerseIndex,\n  chapterIndex,\n};\n", "const deepCopy = require('deep-copy-all');\n\nconst utils = require('../../util/index.cjs');\n\nconst gcSequences = document => {\n  const usedSequences = new Set();\n  const docSet = document.processor.docSets[document.docSetId];\n  docSet.maybeBuildEnumIndexes();\n\n  const followGrafts = (document, sequence, used) => {\n    used.add(sequence.id);\n\n    for (const block of sequence.blocks) {\n      for (const blockGraft of docSet.unsuccinctifyGrafts(block.bg)) {\n        if (!used.has(blockGraft[2])) {\n          followGrafts(document, document.sequences[blockGraft[2]], used);\n        }\n      }\n\n      for (const inlineGraft of docSet.unsuccinctifyItems(block.c, { grafts: true }, 0)) {\n        if (!used.has(inlineGraft[2])) {\n          followGrafts(document, document.sequences[inlineGraft[2]], used);\n        }\n      }\n    }\n  };\n\n  followGrafts(document, document.sequences[document.mainId], usedSequences);\n  let changed = false;\n\n  for (const sequenceId of Object.keys(document.sequences)) {\n    if (!usedSequences.has(sequenceId)) {\n      delete document.sequences[sequenceId];\n      changed = true;\n    }\n  }\n\n  return changed;\n};\n\nconst newSequence = (document, seqType, tags) => {\n  const seqId = utils.generateId();\n\n  document.sequences[seqId] = {\n    id: seqId,\n    type: seqType,\n    tags: new Set(tags || []),\n    isBaseType: (seqType in document.baseSequenceTypes),\n    blocks: [],\n  };\n\n  return seqId;\n};\n\nconst deleteSequence = (document, seqId) => {\n  if (!(seqId in document.sequences)) {\n    return false;\n  }\n\n  if (document.sequences[seqId].type === 'main') {\n    throw new Error('Cannot delete main sequence');\n  }\n\n  if (document.sequences[seqId].type in document.baseSequenceTypes) {\n    gcSequenceReferences(document,'block', seqId);\n  } else {\n    gcSequenceReferences(document,'inline', seqId);\n  }\n  delete document.sequences[seqId];\n  document.buildChapterVerseIndex(this);\n  document.gcSequences();\n  return true;\n};\n\nconst gcSequenceReferences = (document, seqContext, seqId) => {\n  const docSet = document.processor.docSets[document.docSetId];\n\n  for (const sequence of Object.values(document.sequences)) {\n    for (const block of sequence.blocks) {\n      const succinct = seqContext === 'block' ? block.bg : block.c;\n      let pos = 0;\n\n      while (pos < succinct.length) {\n        const [itemLength, itemType] = utils.succinct.headerBytes(succinct, pos);\n\n        if (itemType !== utils.itemDefs.itemEnum.graft) {\n          pos += itemLength;\n        } else {\n          const graftSeqId = utils.succinct.succinctGraftSeqId(docSet.enums, docSet.enumIndexes, succinct, pos);\n\n          if (graftSeqId === seqId) {\n            succinct.deleteItem(pos);\n          } else {\n            pos += itemLength;\n          }\n        }\n      }\n    }\n  }\n};\n\nconst modifySequence = (\n  document,\n  seqId,\n  sequenceRewriteFunc,\n  blockFilterFunc,\n  itemFilterFunc,\n  blockRewriteFunc,\n  itemRewriteFunc,\n) => {\n  const docSet = document.processor.docSets[document.docSetId];\n  docSet.maybeBuildEnumIndexes();\n  sequenceRewriteFunc = sequenceRewriteFunc || (s => s);\n  const oldSequence = document.sequences[seqId];\n  const newSequence = sequenceRewriteFunc({\n    id: seqId,\n    type: oldSequence.type,\n    tags: oldSequence.tags,\n    isBaseType: oldSequence.isBaseType,\n    verseMapping: oldSequence.verseMapping,\n  });\n\n  pushModifiedBlocks(\n    oldSequence,\n    newSequence,\n    blockFilterFunc,\n    itemFilterFunc,\n    blockRewriteFunc,\n    itemRewriteFunc,\n  );\n  document.sequences[seqId] = newSequence;\n\n  if (newSequence.type === 'main') {\n    document.buildChapterVerseIndex();\n  }\n  return newSequence;\n};\n\nconst pushModifiedBlocks = (\n  oldSequence,\n  newSequence,\n  blockFilterFunc,\n  itemFilterFunc,\n  blockRewriteFunc,\n  itemRewriteFunc,\n) => {\n  blockFilterFunc = blockFilterFunc || ((oldSequence, blockN, block) => !!block);\n  itemFilterFunc = itemFilterFunc ||\n    ((oldSequence, oldBlockN, block, itemN, itemType, itemSubType, pos) => !!block || pos);\n  blockRewriteFunc = blockRewriteFunc || ((oldSequence, blockN, block) => block);\n  itemRewriteFunc = itemRewriteFunc ||\n    (\n      (oldSequence, oldBlockN, oldBlock, newBlock, itemN, itemLength, itemType, itemSubType, pos) => {\n        for (let n = 0; n < itemLength; n++) {\n          newBlock.c.pushByte(oldBlock.c.byte(pos + n));\n        }\n      }\n    );\n  newSequence.blocks = [];\n\n  for (const [blockN, block] of oldSequence.blocks.entries()) {\n    if (blockFilterFunc(oldSequence, blockN, block)) {\n      const newBlock = blockRewriteFunc(oldSequence, blockN, deepCopy(block));\n      newBlock.c.clear();\n      modifyBlockItems(\n        oldSequence,\n        blockN,\n        block,\n        newBlock,\n        itemFilterFunc,\n        itemRewriteFunc,\n      );\n      newSequence.blocks.push(newBlock);\n    }\n  }\n};\n\nconst modifyBlockItems = (\n  oldSequence,\n  oldBlockN,\n  oldBlock,\n  newBlock,\n  itemFilterFunc,\n  itemRewriteFunc,\n) => {\n  let pos = 0;\n  let itemN = -1;\n\n  while (pos < oldBlock.c.length) {\n    itemN++;\n    const [itemLength, itemType, itemSubtype] = utils.succinct.headerBytes(oldBlock.c, pos);\n\n    if (itemFilterFunc(oldSequence, oldBlockN, oldBlock, itemN, itemType, itemSubtype, pos)) {\n      itemRewriteFunc(oldSequence, oldBlockN, oldBlock, newBlock, itemN, itemLength, itemType, itemSubtype, pos);\n    }\n    pos += itemLength;\n  }\n};\n\nmodule.exports = {\n  newSequence,\n  gcSequences,\n  deleteSequence,\n  modifySequence,\n};\n", "const utils = require('../../util/index.cjs');\nconst ByteArray = utils.ByteArray;\nconst {\n  pushSuccinctGraftBytes,\n  pushSuccinctScopeBytes,\n  pushSuccinctTokenBytes,\n} = utils.succinct;\nconst { itemEnum } = utils.itemDefs;\nconst {\n  scopeEnum, scopeEnumLabels, nComponentsForScope,\n} = utils.scopeDefs;\nconst { tokenCategory, tokenEnum } = utils.tokenDefs;\nconst { headerBytes } = utils.succinct;\n\nconst { updateBlockGrafts } = require('../doc_set_helpers/update.cjs');\n\nconst deleteBlock = (document, seqId, blockN, buildCV) => {\n  if (buildCV !== false) {\n    buildCV = true;\n  }\n\n  if (!(seqId in document.sequences)) {\n    return false;\n  }\n\n  const sequence = document.sequences[seqId];\n\n  if (blockN < 0 || blockN >= sequence.blocks.length) {\n    return false;\n  }\n  sequence.blocks.splice(blockN, 1);\n\n  if (buildCV) {\n    document.buildChapterVerseIndex(this);\n  }\n  return true;\n};\n\nconst newBlock = (document, seqId, blockN, blockScope, blockGrafts, buildCV) => {\n  if (buildCV !== false) {\n    buildCV = true;\n  }\n\n  if (!(seqId in document.sequences)) {\n    return false;\n  }\n\n  const sequence = document.sequences[seqId];\n\n  if (blockN < 0 || blockN > sequence.blocks.length) {\n    return false;\n  }\n\n  const docSet = document.processor.docSets[document.docSetId];\n  docSet.maybeBuildPreEnums();\n\n  const newBlock = {\n    bs: new ByteArray(0),\n    bg: new ByteArray(0),\n    c: new ByteArray(0),\n    os: new ByteArray(0),\n    is: new ByteArray(0),\n    nt: new ByteArray(0),\n  };\n  const scopeBits = blockScope.split('/');\n  const scopeTypeByte = scopeEnum[scopeBits[0]];\n  const expectedNScopeBits = nComponentsForScope(scopeBits[0]);\n\n  if (scopeBits.length !== expectedNScopeBits) {\n    throw new Error(`Scope ${blockScope} has ${scopeBits.length} component(s) (expected ${expectedNScopeBits}`);\n  }\n\n  const scopeBitBytes = scopeBits.slice(1).map(b => docSet.enumForCategoryValue('scopeBits', b, true));\n  pushSuccinctScopeBytes(newBlock.bs, itemEnum[`startScope`], scopeTypeByte, scopeBitBytes);\n  newBlock.bs.trim();\n\n  if (blockGrafts) {\n    updateBlockGrafts(\n      docSet,\n      document.id,\n      seqId,\n      blockN,\n      blockGrafts,\n    );\n  }\n  sequence.blocks.splice(blockN, 0, newBlock);\n\n  if (buildCV) {\n    document.buildChapterVerseIndex();\n  }\n  return true;\n};\n\nconst rewriteBlock = (block, oldToNew) => {\n  for (const blockKey of ['bs', 'bg', 'c', 'is', 'os']) {\n    const oldBa = block[blockKey];\n    const newBa = new ByteArray(oldBa.length);\n    let pos = 0;\n\n    while (pos < oldBa.length) {\n      const [itemLength, itemType, itemSubtype] = headerBytes(oldBa, pos);\n\n      if (itemType === itemEnum['token']) {\n        if (itemSubtype === tokenEnum.wordLike) {\n          pushSuccinctTokenBytes(newBa, itemSubtype, oldToNew.wordLike[oldBa.nByte(pos + 2)]);\n        } else {\n          pushSuccinctTokenBytes(newBa, itemSubtype, oldToNew.notWordLike[oldBa.nByte(pos + 2)]);\n        }\n      } else if (itemType === itemEnum['graft']) {\n        pushSuccinctGraftBytes(newBa, oldToNew.graftTypes[itemSubtype], oldToNew.ids[oldBa.nByte(pos + 2)]);\n      } else {\n        let nScopeBitBytes = nComponentsForScope(scopeEnumLabels[itemSubtype]);\n        const scopeBitBytes = [];\n        let offset = 2;\n\n        while (nScopeBitBytes > 1) {\n          const scopeBitByte = oldToNew.scopeBits[oldBa.nByte(pos + offset)];\n          scopeBitBytes.push(scopeBitByte);\n          offset += oldBa.nByteLength(scopeBitByte);\n          nScopeBitBytes--;\n        }\n        pushSuccinctScopeBytes(newBa, itemType, itemSubtype, scopeBitBytes);\n      }\n      pos += itemLength;\n    }\n    newBa.trim();\n    block[blockKey] = newBa;\n  }\n};\n\nmodule.exports = {\n  newBlock,\n  deleteBlock,\n  rewriteBlock,\n};\n", "const utils = require('../../util/index.cjs');\nconst ByteArray = utils.ByteArray;\nconst { itemEnum } = utils.itemDefs;\n\n\nconst succinctFilter = (document, filterOptions) => {\n  if (!filterOptions || Object.keys(filterOptions).length === 0) {\n    return;\n  }\n\n  const docSet = document.processor.docSets[document.docSetId];\n\n  const filterItem = (oldSequence, oldBlockN, block, itemN, itemType, itemSubType, pos) => {\n    if (itemType === itemEnum.token) {\n      return true;\n    } else if (itemType === itemEnum.startScope || itemType === itemEnum.endScope) {\n      if (!filterOptions.includeScopes && !filterOptions.excludeScopes) {\n        return true;\n      } else {\n        const scopeOb = docSet.unsuccinctifyScope(block.c, itemType, itemSubType, pos);\n        return (\n          (\n            !filterOptions.includeScopes ||\n          filterOptions.includeScopes.filter(op => scopeOb[2].startsWith(op)).length > 0\n          )\n        &&\n        (\n          !filterOptions.excludeScopes ||\n          filterOptions.excludeScopes.filter(op => scopeOb[2].startsWith(op)).length === 0\n        )\n        );\n      }\n    } else { // graft\n      if (!filterOptions.includeGrafts && !filterOptions.excludeGrafts) {\n        return true;\n      }\n\n      const graftOb = docSet.unsuccinctifyGraft(block.c, itemSubType, pos);\n      return (\n        (\n          !filterOptions.includeGrafts ||\n        filterOptions.includeGrafts.filter(op => graftOb[1].startsWith(op)).length > 0\n        )\n      &&\n      (\n        !filterOptions.excludeGrafts ||\n        filterOptions.excludeGrafts.filter(op => graftOb[1].startsWith(op)).length === 0\n      )\n      );\n    }\n  };\n\n  const rewriteBlock = (oldSequence, blockN, block) => {\n    const newBA = new ByteArray(block.bg.length);\n    let pos = 0;\n\n    while (pos < block.bg.length) {\n      // eslint-disable-next-line no-unused-vars\n      const [itemLength, itemType, itemSubtype] = utils.succinct.headerBytes(block.bg, pos);\n      const graftOb = docSet.unsuccinctifyGraft(block.bg, itemSubtype, pos);\n\n      if (\n        (\n          !filterOptions.includeGrafts ||\n        filterOptions.includeGrafts.filter(op => graftOb[1].startsWith(op)).length > 0\n        )\n      &&\n      (\n        !filterOptions.excludeGrafts ||\n        filterOptions.excludeGrafts.filter(op => graftOb[1].startsWith(op)).length === 0\n      )\n      ) {\n        for (let n = 0; n < itemLength; n++) {\n          newBA.pushByte(block.bg.byte(pos + n));\n        }\n      }\n      pos += itemLength;\n    }\n    newBA.trim();\n    block.bg = newBA;\n    return block;\n  };\n\n  Object.keys(document.sequences).forEach(\n    seqId => {\n      document.modifySequence(\n        seqId,\n        null,\n        null,\n        filterItem,\n        rewriteBlock,\n        null,\n      );\n    },\n  );\n  Object.values(document.sequences).forEach(\n    seq => docSet.updateBlockIndexesAfterFilter(seq),\n  );\n  document.gcSequences();\n};\n\nmodule.exports = { succinctFilter };\n", "const serializeSuccinct = document => {\n  const ret = { sequences: {} };\n  ret.headers = document.headers;\n  ret.mainId = document.mainId;\n  ret.tags = Array.from(document.tags);\n\n  for (const [seqId, seqOb] of Object.entries(document.sequences)) {\n    ret.sequences[seqId] = serializeSuccinctSequence(seqOb);\n  }\n  return ret;\n};\n\nconst serializeSuccinctSequence = seqOb => {\n  const ret = {\n    type: seqOb.type,\n    blocks: seqOb.blocks.map(b => serializeSuccinctBlock(b)),\n    tags: Array.from(seqOb.tags),\n  };\n\n  if (seqOb.type === 'main') {\n    ret.chapters = {};\n\n    for (const [chK, chV] of Object.entries(seqOb.chapters || {})) {\n      chV.trim();\n      ret.chapters[chK] = chV.base64();\n    }\n    ret.chapterVerses = {};\n\n    for (const [chvK, chvV] of Object.entries(seqOb.chapterVerses || {})) {\n      chvV.trim();\n      ret.chapterVerses[chvK] = chvV.base64();\n    }\n\n    if ('tokensPresent' in seqOb) {\n      ret.tokensPresent = '0x' + seqOb.tokensPresent.toString(16);\n    }\n  }\n  return ret;\n};\n\nconst serializeSuccinctBlock = blockOb => {\n  for (const succName of ['bs', 'bg', 'c', 'is', 'os', 'nt']) {\n    blockOb[succName].trim();\n  }\n  return {\n    bs: blockOb.bs.base64(),\n    bg: blockOb.bg.base64(),\n    c: blockOb.c.base64(),\n    is: blockOb.is.base64(),\n    os: blockOb.os.base64(),\n    nt: blockOb.nt.base64(),\n  };\n};\n\nmodule.exports = { serializeSuccinct };\n", "const utils = require('../../util/index.cjs');\n\nconst recordPreEnums = (docSet, seq) => {\n  docSet.recordPreEnum('scopeBits', '0');\n\n  for (const [blockN, block] of seq.blocks.entries()) {\n    for (const [itemN, item] of [...block.items, block.bs, ...block.bg].entries()) {\n      if (item.subType === 'wordLike') {\n        docSet.recordPreEnum('wordLike', item.payload);\n      } else if (['lineSpace', 'eol', 'punctuation', 'softLineBreak', 'bareSlash', 'unknown'].includes(item.subType)) {\n        docSet.recordPreEnum('notWordLike', item.payload);\n      } else if (item.type === 'graft') {\n        docSet.recordPreEnum('graftTypes', item.subType);\n      } else if (item.subType === 'start') {\n        const labelBits = item.payload.split('/');\n\n        if (labelBits.length !== utils.scopeDefs.nComponentsForScope(labelBits[0])) {\n          throw new Error(`Scope ${item.payload} has unexpected number of components`);\n        }\n\n        for (const labelBit of labelBits.slice(1)) {\n          docSet.recordPreEnum('scopeBits', labelBit);\n        }\n      }\n    }\n  }\n};\n\nconst rerecordPreEnums = (docSet, seq) => {\n  docSet.recordPreEnum('scopeBits', '0');\n  docSet.recordPreEnum('ids', seq.id);\n\n  for (const block of seq.blocks) {\n    for (const blockKey of ['bs', 'bg', 'c', 'is', 'os']) {\n      rerecordBlockPreEnums(docSet, block[blockKey]);\n    }\n  }\n};\n\nconst rerecordBlockPreEnums= (docSet, ba) => {\n  for (const item of docSet.unsuccinctifyItems(ba, {}, 0)) {\n    if (item[0] === 'token') {\n      if (item[1] === 'wordLike') {\n        docSet.recordPreEnum('wordLike', item[2]);\n      } else {\n        docSet.recordPreEnum('notWordLike', item[2]);\n      }\n    } else if (item[0] === 'graft') {\n      docSet.recordPreEnum('graftTypes', item[1]);\n    } else if (item[0] === 'scope' && item[1] === 'start') {\n      const labelBits = item[2].split('/');\n\n      if (labelBits.length !== utils.scopeDefs.nComponentsForScope(labelBits[0])) {\n        throw new Error(`Scope ${item[2]} has unexpected number of components`);\n      }\n\n      for (const labelBit of labelBits.slice(1)) {\n        docSet.recordPreEnum('scopeBits', labelBit);\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  recordPreEnums,\n  rerecordPreEnums,\n};\n", "const {\n  PerfRenderFromProskomma,\n  SofriaRenderFromProskomma,\n  render,\n  PipelineHandler,\n} = require('proskomma-json-tools');\nconst utils = require('../util/index.cjs');\nconst {\n  parseUsfm,\n  parseUsx,\n  parseTableToDocument,\n  parseNodes,\n} = require('../parser/lexers/index.cjs');\nconst { Parser } = require('../parser/index.cjs');\nconst pipelines = require('../pipelines/perf2x/index.cjs');\nconst customTransforms = require('../transforms/index.cjs');\nconst {\n  buildChapterVerseIndex,\n  chapterVerseIndex,\n  chapterIndex,\n} = require('./document_helpers/chapter_verse.cjs');\nconst {\n  modifySequence,\n  deleteSequence,\n  gcSequences,\n  newSequence,\n} = require('./document_helpers/sequences.cjs');\nconst {\n  deleteBlock,\n  newBlock,\n  rewriteBlock,\n} = require('./document_helpers/blocks.cjs');\nconst { succinctFilter } = require('./document_helpers/succinct_filter.cjs');\nconst { serializeSuccinct } = require('./document_helpers/serialize_succinct.cjs');\nconst {\n  recordPreEnums,\n  rerecordPreEnums,\n} = require('./document_helpers/pre_enums.cjs');\n\nconst {\n  addTag,\n  removeTag,\n  validateTags,\n} = utils.tags;\nconst parserConstantDef = utils.parserConstants;\n// const maybePrint = str => console.log(str);\nconst maybePrint = str => str;\n\nclass Document {\n  constructor(processor, docSetId, contentType, contentString, filterOptions, customTags, emptyBlocks, tags) {\n    this.processor = processor;\n    this.docSetId = docSetId;\n    this.baseSequenceTypes = parserConstantDef.usfm.baseSequenceTypes;\n\n    if (contentType) {\n      this.id = utils.generateId();\n      this.filterOptions = filterOptions;\n      this.customTags = customTags;\n      this.emptyBlocks = emptyBlocks;\n      this.tags = new Set(tags || []);\n      validateTags(this.tags);\n      this.headers = {};\n      this.mainId = null;\n      this.sequences = {};\n\n      switch (contentType.toLowerCase()) {\n      case 'usfm':\n      case 'sfm':\n        this.processUsfm(contentString);\n        break;\n      case 'usx':\n        this.processUsx(contentString);\n        break;\n      case 'tsv':\n        this.processTSV(contentString);\n        break;\n      case 'nodes':\n        this.processNodes(contentString);\n        break;\n      default:\n        throw new Error(`Unknown document contentType '${contentType}'`);\n      }\n    }\n  }\n\n  addTag(tag) {\n    addTag(this.tags, tag);\n  }\n\n  removeTag(tag) {\n    removeTag(this.tags, tag);\n  }\n\n  makeParser() {\n    return new Parser(\n      this.filterOptions,\n      this.customTags,\n      this.emptyBlocks,\n    );\n  }\n\n  processUsfm(usfmString) {\n    const parser = this.makeParser();\n    const t = Date.now();\n    parseUsfm(usfmString, parser);\n    const t2 = Date.now();\n    maybePrint(`\\nParse USFM in ${t2 - t} msec`);\n    this.postParseScripture(parser);\n    maybePrint(`Total USFM import time = ${Date.now() - t} msec (parse = ${((t2 - t) * 100) / (Date.now() - t)}%)`);\n  }\n\n  processUsx(usxString) {\n    const parser = this.makeParser();\n    const t = Date.now();\n    parseUsx(usxString, parser);\n    const t2 = Date.now();\n    maybePrint(`\\nParse USX in ${t2 - t} msec`);\n    this.postParseScripture(parser);\n    maybePrint(`Total USX import time = ${Date.now() - t} msec (parse = ${((t2 - t) * 100) / (Date.now() - t)}%)`);\n  }\n\n  processTSV(tsvString) {\n    const parser = this.makeParser();\n    const bookCode = `T${this.processor.nextTable > 9 ? this.processor.nextTable : '0' + this.processor.nextTable}`;\n    this.processor.nextTable++;\n    parseTableToDocument(tsvString, parser, bookCode);\n    this.headers = parser.headers;\n    this.succinctPass1(parser);\n    this.succinctPass2(parser);\n    buildChapterVerseIndex(this);\n\n    const tableSequence = Object.values(this.sequences).filter(s => s.type === 'table')[0];\n\n    for (const [colN, colHead] of JSON.parse(tsvString).headings.entries()) {\n      tableSequence.tags.add(`col${colN}:${colHead}`);\n    }\n  }\n\n  processNodes(nodesString) {\n    const parser = this.makeParser();\n    const bookCode = `N${this.processor.nextNodes > 9 ? this.processor.nextNodes : '0' + this.processor.nextNodes}`;\n    this.processor.nextNodes++;\n    parseNodes(nodesString, parser, bookCode);\n    this.headers = parser.headers;\n    this.succinctPass1(parser);\n    this.succinctPass2(parser);\n    buildChapterVerseIndex(this);\n  }\n\n  postParseScripture(parser) {\n    let t = Date.now();\n    parser.tidy();\n    maybePrint(`Tidy in ${Date.now() - t} msec`);\n    t = Date.now();\n    const fo = parser.filterOptions; // CHANGE THIS WHEN REFACTORING PARSER\n    this.headers = parser.headers;\n    this.succinctPass1(parser);\n    maybePrint(`Succinct pass 1 in ${Date.now() - t} msec`);\n    t = Date.now();\n    this.succinctPass2(parser);\n    maybePrint(`Succinct pass 2 in ${Date.now() - t} msec`);\n    t = Date.now();\n    this.succinctFilter(fo);\n    maybePrint(`Filter in ${Date.now() - t} msec`);\n    t = Date.now();\n    buildChapterVerseIndex(this);\n    maybePrint(`CV indexes in ${Date.now() - t} msec`);\n  }\n\n  succinctFilter(filterOptions) {\n    succinctFilter(this, filterOptions);\n  }\n\n  succinctPass1(parser) {\n    const docSet = this.processor.docSets[this.docSetId];\n\n    let t = Date.now();\n\n    for (const seq of parser.allSequences()) {\n      docSet.recordPreEnum('ids', seq.id);\n      this.recordPreEnums(docSet, seq);\n    }\n    maybePrint(`   recordPreEnums in ${Date.now() - t} msec`);\n    t = Date.now();\n\n    if (docSet.enums.wordLike.length === 0) {\n      docSet.sortPreEnums();\n      maybePrint(`   sortPreEnums in ${Date.now() - t} msec`);\n      t = Date.now();\n    }\n    docSet.buildEnums();\n    maybePrint(`   buildEnums in ${Date.now() - t} msec`);\n  }\n\n  recordPreEnums(docSet, seq) {\n    recordPreEnums(docSet, seq);\n  }\n\n  rerecordPreEnums(docSet, seq) {\n    rerecordPreEnums(docSet, seq);\n  }\n\n  succinctPass2(parser) {\n    const docSet = this.processor.docSets[this.docSetId];\n    this.mainId = parser.sequences.main.id;\n\n    for (const seq of parser.allSequences()) {\n      this.sequences[seq.id] = {\n        id: seq.id,\n        type: seq.type,\n        tags: new Set(seq.tags),\n        isBaseType: (seq.type in parser.baseSequenceTypes),\n        blocks: seq.succinctifyBlocks(docSet),\n      };\n    }\n    this.sequences[this.mainId].verseMapping = {};\n  }\n\n  modifySequence(\n    seqId,\n    sequenceRewriteFunc,\n    blockFilterFunc,\n    itemFilterFunc,\n    blockRewriteFunc,\n    itemRewriteFunc,\n  ) {\n    modifySequence(\n      this,\n      seqId,\n      sequenceRewriteFunc,\n      blockFilterFunc,\n      itemFilterFunc,\n      blockRewriteFunc,\n      itemRewriteFunc,\n    );\n  }\n\n  buildChapterVerseIndex() {\n    buildChapterVerseIndex(this);\n  }\n\n  chapterVerseIndexes() {\n    const ret = {};\n\n    for (const chapN of Object.keys(this.sequences[this.mainId].chapterVerses)) {\n      ret[chapN] = chapterVerseIndex(this, chapN);\n    }\n    return ret;\n  }\n\n  chapterVerseIndex(chapN) {\n    return chapterVerseIndex(this, chapN);\n  }\n\n  chapterIndexes() {\n    const ret = {};\n\n    for (const chapN of Object.keys(this.sequences[this.mainId].chapters)) {\n      ret[chapN] = chapterIndex(this, chapN);\n    }\n    return ret;\n  }\n\n  chapterIndex(chapN) {\n    return chapterIndex(this, chapN);\n  }\n\n  rewriteSequenceBlocks(sequenceId, oldToNew) {\n    const sequence = this.sequences[sequenceId];\n\n    for (const block of sequence.blocks) {\n      this.rewriteSequenceBlock(block, oldToNew);\n    }\n  }\n\n  rewriteSequenceBlock(block, oldToNew) {\n    rewriteBlock(block, oldToNew);\n  }\n\n  serializeSuccinct() {\n    return serializeSuccinct(this);\n  }\n\n  gcSequences() {\n    return gcSequences(this);\n  }\n\n  newSequence(seqType, tags) {\n    return newSequence(this, seqType, tags);\n  }\n\n  deleteSequence(seqId) {\n    return deleteSequence(this, seqId);\n  }\n\n  deleteBlock(seqId, blockN, buildCV) {\n    return deleteBlock(this, seqId, blockN, buildCV);\n  }\n\n  newBlock(seqId, blockN, blockScope, blockGrafts, buildCV) {\n    return newBlock(this, seqId, blockN, blockScope, blockGrafts, buildCV);\n  }\n\n  perf(indent) {\n    const cl = new PerfRenderFromProskomma(\n      {\n        proskomma: this.processor,\n        actions: render.perfToPerf.renderActions.identityActions,\n      },\n    );\n    const output = {};\n\n    cl.renderDocument(\n      {\n        docId: this.id,\n        config: {},\n        output,\n      },\n    );\n    return indent ? JSON.stringify(output.perf, null, indent) : JSON.stringify(output.perf);\n  }\n\n  async usfm() {\n    const perf = JSON.parse(this.perf());\n\n    try {\n      const pipelineHandler = new PipelineHandler({\n        pipelines:pipelines,\n        transforms:customTransforms,\n        proskomma:this.processor,\n      });\n      const output = await pipelineHandler.runPipeline('perf2usfmPipeline', { perf });\n      return output.usfm;\n    } catch (err) {\n      console.error('pipelineHandler Error :\\n', err);\n    }\n  }\n\n  sofria(indent, chapter) {\n    const cl = new SofriaRenderFromProskomma(\n      {\n        proskomma: this.processor,\n        actions: render.sofriaToSofria.renderActions.identityActions,\n      },\n    );\n    const output = {};\n    const config = {};\n\n    if (chapter) {\n      config.chapters = [`${chapter}`];\n    }\n\n    try {\n      cl.renderDocument(\n        {\n          docId: this.id,\n          config,\n          output,\n        },\n      );\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n    return indent ? JSON.stringify(output.sofria, null, indent) : JSON.stringify(output.sofria);\n  }\n}\n\nmodule.exports = { Document };\n", "const keyValueSchemaString = `\n\"\"\"Key/Value tuple\"\"\"\ntype KeyValue {\n    \"\"\"The key\"\"\"\n    key: String!\n    \"\"\"The value\"\"\"\n    value: String!\n}`;\n\nconst keyValueResolvers = {\n  key: root => root[0],\n  value: root => root[1],\n};\n\nmodule.exports = {\n  keyValueSchemaString,\n  keyValueResolvers,\n};\n", "const cvSchemaString = `\n\"\"\"A chapter-verse reference\"\"\"\ntype cv {\n  \"\"\"The chapter number\"\"\"\n  chapter: Int\n  \"\"\"The verse number\"\"\"\n  verse: Int\n}\n`;\n\nconst cvResolvers = {\n  chapter: root => root[0],\n  verse: root => root[1],\n};\n\nmodule.exports = {\n  cvSchemaString,\n  cvResolvers,\n};\n", "const idPartsSchemaString = `\n\"\"\"Type-dependent parts of the ID header\"\"\"\ntype idParts {\n  \"\"\"The type of the ID\"\"\"\n  type: String\n  \"\"\"An array of parts of the ID\"\"\"\n  parts: [String]\n  \"\"\"A part of the ID, by index\"\"\"\n  part(\n    \"\"\"The numeric index of the part\"\"\"\n    index: Int!\n  ): String\n}\n`;\n\nconst idPartsResolvers = {\n  type: root => root[0],\n  parts: root => root[1],\n  part: (root, args) => {\n    if (!root[1] || args.index < 0 || args.index >= root[1].length) {\n      return null;\n    }\n    return root[1][args.index];\n  },\n};\n\nmodule.exports = {\n  idPartsSchemaString,\n  idPartsResolvers,\n};\n", "const inputAttSpecSchemaString = `\n\"\"\"Attribute Specification\"\"\"\ninput AttSpec {\n\"\"\"The type of attribute, ie what type of thing it's connected to\"\"\"\nattType: String!\n\"\"\"The name of the USFM tag to which the attribute is connected\"\"\"\ntagName: String!\n\"\"\"The attribute key (ie the bit to the left of the equals sign in USX)\"\"\"\nattKey: String!\n\"\"\"The position of the value (which is 0 except for attributes with multiple values)\"\"\"\nvalueN: Int!\n}`;\n\nmodule.exports = { inputAttSpecSchemaString };\n", "const keyMatchesSchemaString = `\n\"\"\"Key/Regex tuple\"\"\"\ninput KeyMatches {\n  \"\"\"The key\"\"\"\n  key: String!\n  \"\"\"The regex to match\"\"\"\n  matches: String!\n}\n`;\n\nmodule.exports = { keyMatchesSchemaString };\n", "const inputKeyValueSchemaString = `\n\"\"\"Input Key/Value Object\"\"\"\ninput InputKeyValue {\n    \"\"\"The key\"\"\"\n    key: String!\n    \"\"\"The value\"\"\"\n    value: String!\n}\n`;\n\nmodule.exports = { inputKeyValueSchemaString };\n", "const keyValuesSchemaString = `\n\"\"\"Input Key/Values Object\"\"\"\ninput KeyValues {\n    \"\"\"The key\"\"\"\n    key: String!\n    \"\"\"The values\"\"\"\n    values: [String!]!\n}\n`;\n\nmodule.exports = { keyValuesSchemaString };\n", "const inputItemObjectSchemaString = `\n\"\"\"Item for arguments\"\"\"\ninput InputItemObject {\n    \"\"\"The basic item type (token, scope or graft)'\"\"\"\n    type: String!\n    \"\"\"The type-dependent subtype of the item\"\"\"\n    subType: String!\n    \"\"\"The content of the item (the text for tokens, the label for scopes and the sequence id for grafts)\"\"\"\n    payload: String!\n}`;\n\nmodule.exports = { inputItemObjectSchemaString };\n", "const scopeMatchesStartsWith = (sw, s) => {\n  if (sw.length === 0) {\n    return true;\n  }\n\n  for (const swv of sw) {\n    if (s.startsWith(swv)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst itemSchemaString = `\n\"\"\"Item\"\"\"\ntype Item {\n  \"\"\"The basic item type (token, scope or graft)\"\"\"\n  type: String!\n  \"\"\"The type-dependent subtype of the item\"\"\"\n  subType: String!\n  \"\"\"The content of the item (the text for tokens, the label for scopes and the sequence id for grafts)\"\"\"\n  payload(\n    \"\"\"If true, turn all whitespace into a normal space\"\"\"\n    normalizeSpace: Boolean\n    \"\"\"A whitelist of characters to include\"\"\"\n    includeChars: [String!]\n    \"\"\"A blacklist of characters to exclude\"\"\"\n    excludeChars: [String!],\n  ): String!\n  \"\"\"If 'includeContext' was selected, and for tokens, the index of the token from the start of the sequence\"\"\"\n  position(\n    \"\"\"Only include scopes that begin with this value\"\"\"\n    startsWith: [String!]\n  ): Int\n  \"\"\"If 'includeContext' was selected, a list of scopes that are open around the item\"\"\"\n  scopes(\n    \"\"\"Only include scopes that begin with this value\"\"\"\n    startsWith: [String!]\n  ): [String!]\n}\n`;\n\nconst itemResolvers = {\n  type: root => root[0],\n  subType: root => root[1],\n  payload: (root, args) => {\n    let ret = root[2];\n\n    if (root[0] === 'token') {\n      if (args.normalizeSpace) {\n        ret = root[2].replace(/[ \\t\\n\\r]+/g, ' ');\n      }\n\n      if (args.includeChars || args.excludeChars) {\n        let retArray = ret.split('');\n        retArray = retArray.filter(c => !args.includeChars || args.includeChars.includes(c));\n        retArray = retArray.filter(c => !args.excludeChars || !args.excludeChars.includes(c));\n        ret = retArray.join('');\n      }\n    }\n    return ret;\n  },\n  position: root => root[3],\n  scopes: (root, args) =>\n    root[4] ? root[4].filter(s => !args.startsWith || scopeMatchesStartsWith(args.startsWith, s)) : [],\n};\n\nmodule.exports = {\n  itemSchemaString,\n  itemResolvers,\n};\n", "const dumpItem = i => {\n  let wrapper;\n\n  switch (i[0]) {\n  case 'token':\n    return `|${i[2]}`;\n  case 'scope':\n    wrapper = i[1] === 'start' ? '+' : '-';\n    return `${wrapper}${i[2]}${wrapper}`;\n  case 'graft':\n    return `>${i[1]}<`;\n  }\n};\n\nconst dumpItems = il => il.map(bci => dumpItem(bci)).join('');\n\nconst dumpItemGroup = ig => {\n  const ret = ['ItemGroup:'];\n  ret.push(`   Open Scopes ${ig[0].join(', ')}`);\n  ret.push(`   ${dumpItems(ig[1])}`);\n  return ret.join('\\n');\n};\n\nconst dumpBlock = b => {\n  const ret = ['Block:'];\n\n  if (b.bg.length > 0) {\n    b.bg.forEach(bbg => ret.push(`   ${bbg[1]} graft to ${bbg[2]}`));\n  }\n  ret.push(`   Scope ${b.bs[2]}`);\n  ret.push(`   ${dumpItems(b.c)}`);\n  return ret.join('\\n');\n};\n\nmodule.exports = {\n  dumpBlock,\n  dumpItemGroup,\n  dumpItems,\n  dumpItem,\n};\n", "const { dumpItemGroup } = require('../lib/dump.cjs');\n\nconst scopeMatchesStartsWith = (sw, s) => {\n  if (sw.length === 0) {\n    return true;\n  }\n\n  for (const swv of sw) {\n    if (s.startsWith(swv)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// [scopeLabels, items]\n\nconst itemGroupSchemaString = `\n\"\"\"A collection of items, with scope context\"\"\"\ntype ItemGroup {\n  \"\"\"Items for this itemGroup\"\"\"\n  items: [Item!]!\n  \"\"\"Tokens for this itemGroup\"\"\"\n  tokens(\n    \"\"\"Return tokens whose payload is an exact match to one of the specified strings\"\"\"\n    withChars: [String!]\n    \"\"\"Return tokens with one of the specified subTypes\"\"\"\n    withSubTypes: [String!]\n  ): [Item!]!\n  \"\"\"The text of the itemGroup as a single string\"\"\"\n  text(\n    \"\"\"If true, converts each whitespace character to a single space\"\"\"\n    normalizeSpace: Boolean\n  ): String!\n  \"\"\"The labels of scopes that were open at the beginning of the itemGroup\"\"\"\n  scopeLabels(\n    \"\"\"Only include scopes that begin with this value\"\"\"\n    startsWith: [String!]\n  ): [String!]!\n  \"\"\"The itemGroup content as a string in a compact eyeballable format\"\"\"\n  dump: String!\n  \"\"\"A list of scopes from the items of the itemGroup\"\"\"\n  includedScopes: [String!]!\n} \n`;\n\nconst itemGroupResolvers = {\n  items: root => root[1],\n  tokens: (root, args) =>\n    root[1].filter(i =>\n      i[0] === 'token' &&\n      (!args.withChars || args.withChars.includes(i[2])) &&\n      (!args.withSubTypes || args.withSubTypes.includes(i[1])),\n    ),\n  text: (root, args) => {\n    const tokensText = root[1].filter(i => i[0] === 'token').map(t => t[2]).join('');\n    return args.normalizeSpace ? tokensText.replace(/[ \\t\\n\\r]+/g, ' ') : tokensText;\n  },\n  scopeLabels: (root, args) =>\n    root[0].filter(s => !args.startsWith || scopeMatchesStartsWith(args.startsWith, s)),\n  dump: root => dumpItemGroup(root),\n  includedScopes: root =>\n    Array.from(\n      new Set(\n        root[1]\n          .filter(i => i[0] === 'scope' && i[1] === 'start')\n          .map(t => t[2]),\n      ),\n    ),\n};\n\nmodule.exports = {\n  itemGroupSchemaString,\n  itemGroupResolvers,\n};\n", "const kvEntrySchemaString = `\n\"\"\"Key/Items tuple\"\"\"\ntype kvEntry {\n    \"\"\"The key\"\"\"\n    key: String!\n    \"\"\"The secondary keys\"\"\"\n    secondaryKeys: [KeyValue!]\n    \"\"\"The fields as itemGroups\"\"\"\n    itemGroups: [ItemGroup]!\n}`;\n\nconst kvEntryResolvers = {\n  key: root => root[0],\n  secondaryKeys: root => root[1],\n  itemGroups: root => root[2],\n};\n\nmodule.exports = {\n  kvEntrySchemaString,\n  kvEntryResolvers,\n};\n", "const regexIndexSchemaString = `\n\"\"\"Information about a regex match on an enum\"\"\"\ntype regexIndex {\n    \"\"\"The index in the enum\"\"\"\n    index: String!\n    \"\"\"The string in the enum that matched\"\"\"\n    matched: String!\n}`;\n\nconst regexIndexResolvers = {\n  index: root => root[0],\n  matched: root => root[1],\n};\n\nmodule.exports = {\n  regexIndexSchemaString,\n  regexIndexResolvers,\n};\n", "const rowEqualsSpecSchemaString = `\n\"\"\"Row Equals Specification\"\"\"\ninput rowEqualsSpec {\n  \"\"\"The position of the column in which to search a match\"\"\"\n  colN: Int!\n  \"\"\"The values to match\"\"\"\n  values: [String!]!\n}\n`;\n\nmodule.exports = { rowEqualsSpecSchemaString };\n", "const rowMatchSpecSchemaString = `\n\"\"\"Row Match Specification\"\"\"\ninput rowMatchSpec {\n  \"\"\"The position of the column in which to search a match\"\"\"\n  colN: Int!\n  \"\"\"The regex to match\"\"\"\n  matching: String!\n}\n`;\n\nmodule.exports = { rowMatchSpecSchemaString };\n", "const verseRangeSchemaString = `\n\"\"\"Information about a verse range (which may only cover one verse)\"\"\"\ntype verseRange {\n  \"\"\"The range, as it would be printed in a Bible\"\"\"\n  range: String!\n  \"\"\"A list of verse numbers for this range\"\"\"\n  numbers: [Int!]!\n}\n`;\n\nmodule.exports = { verseRangeSchemaString };\n", "const origSchemaString = `\n\"\"\"Mapped verse information\"\"\"\ntype orig {\n  \"\"\"The book code\"\"\"\n  book: String\n  \"\"\"A list of chapter-verse references\"\"\"\n  cvs: [cv!]!\n}\n`;\n\nmodule.exports = { origSchemaString };\n", "const utils = require('../../util/index.cjs');\n\nconst verseNumberSchemaString = `\n\"\"\"Information about a verse number (which may be part of a verse range)\"\"\"\ntype verseNumber {\n  \"\"\"The verse number\"\"\"\n  number: Int!\n  \"\"\"The verse range to which the verse number belongs\"\"\"\n  range: String!\n  \"\"\"The reference for this verse when mapped to 'original' versification\"\"\"\n  orig: orig!\n}\n`;\n\nconst verseNumberResolvers = {\n  orig: (root, args, context) => {\n    const localBook = context.doc.headers.bookCode;\n    const localChapter = context.cvIndex[0];\n    const localVerse = root.number;\n    const mainSequence = context.doc.sequences[context.doc.mainId];\n\n    if (\n      mainSequence.verseMapping &&\n      'forward' in mainSequence.verseMapping &&\n      `${localChapter}` in mainSequence.verseMapping.forward\n    ) {\n      const mapping = utils.versification.mapVerse(mainSequence.verseMapping.forward[`${localChapter}`], localBook, localChapter, localVerse);\n      return ({\n        book: mapping[0],\n        cvs: mapping[1],\n      });\n    } else {\n      return ({\n        book: localBook,\n        cvs: [[localChapter, localVerse]],\n      });\n    }\n  },\n};\n\nmodule.exports = {\n  verseNumberSchemaString,\n  verseNumberResolvers,\n};\n", "const cellSchemaString = `\n\"\"\"A table cell\"\"\"\ntype cell {\n  \"\"\"The row numbers\"\"\"\n  rows: [Int!]!\n  \"\"\"The column numbers\"\"\"\n  columns: [Int!]!\n  \"\"\"A list of items from the c (content) field of the cell\"\"\"\n  items: [Item!]!\n  \"\"\"A list of tokens from the c (content) field of the cell\"\"\"\n  tokens: [Item!]!\n  \"\"\"The text of the cell as a single string\"\"\"\n  text(\n    \"\"\"If true, converts each whitespace character to a single space\"\"\"\n    normalizeSpace: Boolean\n  ): String!\n}\n`;\n\nconst cellResolvers = {\n  rows: root => root[0],\n  columns: root => root[1],\n  items: root => root[2],\n  tokens: root => root[2].filter(i => i[0] === 'token'),\n  text: (root, args) => {\n    let ret = root[2]\n      .filter(i => i[0] === 'token')\n      .map(t => t[2])\n      .join('')\n      .trim();\n\n    if (args.normalizeSpace) {\n      ret = ret.replace(/[ \\t\\n\\r]+/g, ' ');\n    }\n    return ret;\n  },\n};\n\nmodule.exports = {\n  cellSchemaString,\n  cellResolvers,\n};\n", "const { dumpItems } = require('../lib/dump.cjs');\n\nconst cIndexSchemaString = `\n\"\"\"A chapter index entry\"\"\"\ntype cIndex {\n  \"\"\"The chapter number\"\"\"\n  chapter: Int!\n  \"\"\"The zero-indexed number of the block where the chapter starts\"\"\"\n  startBlock: Int\n  \"\"\"The zero-indexed number of the block where the chapter ends\"\"\"\n  endBlock: Int\n  \"\"\"The zero-indexed position of the item where the chapter starts\"\"\"\n  startItem: Int\n  \"\"\"The zero-indexed position of the item where the chapter ends\"\"\"\n  endItem: Int\n  \"\"\"The value of nextToken at the beginning of the chapter\"\"\"\n  nextToken: Int\n  \"\"\"A list of items for this chapter\"\"\"\n  items(\n    \"\"\"If true, adds scope and nextToken information to each token\"\"\"\n    includeContext: Boolean\n  ): [Item]!\n  \"\"\"The items as a string in a compact eyeballable format\"\"\"\n  dumpItems: String\n  \"\"\"A list of tokens for this chapter\"\"\"\n  tokens(\n    \"\"\"If true, adds scope and nextToken information to each token\"\"\"\n    includeContext: Boolean\n    \"\"\"Return tokens whose payload is an exact match to one of the specified strings\"\"\"\n    withChars: [String!]\n    \"\"\"Return tokens with one of the specified subTypes\"\"\"\n    withSubTypes: [String!]\n  ): [Item]!\n  \"\"\"The text of the chapter as a single string\"\"\"\n  text(\n    \"\"\"If true, converts each whitespace character to a single space\"\"\"\n    normalizeSpace: Boolean\n  ): String!\n}\n`;\n\nconst cIndexResolvers = {\n  chapter: root => root[0],\n  startBlock: root => root[1].startBlock,\n  endBlock: root => root[1].endBlock,\n  startItem: root => root[1].startItem,\n  endItem: root => root[1].endItem,\n  nextToken: root => root[1].nextToken,\n  items: (root, args, context) =>\n    context.docSet.itemsByIndex(context.doc.sequences[context.doc.mainId], root[1], args.includeContext)\n      .reduce((a, b) => a.concat([['token', 'lineSpace', ' ']].concat(b)), []),\n  dumpItems: (root, args, context) => {\n    const items = context.docSet.itemsByIndex(context.doc.sequences[context.doc.mainId], root[1], false);\n\n    if (items.length > 0) {\n      return dumpItems(items.reduce((a, b) => a.concat([['token', 'lineSpace', ' ', null]].concat(b))));\n    } else {\n      return '';\n    }\n  },\n  tokens: (root, args, context) =>\n    context.docSet.itemsByIndex(context.doc.sequences[context.doc.mainId], root[1], args.includeContext)\n      .reduce((a, b) => a.concat([['token', 'lineSpace', ' ']].concat(b)), [])\n      .filter(\n        i => i[0] === 'token' &&\n          (!args.withChars || args.withChars.includes(i[2])) &&\n          (!args.withSubTypes || args.withSubTypes.includes(i[1])),\n      ),\n  text: (root, args, context) => {\n    let ret = context.docSet.itemsByIndex(context.doc.sequences[context.doc.mainId], root[1])\n      .reduce((a, b) => a.concat([['token', 'lineSpace', ' ']].concat(b)), [])\n      .filter(i => i[0] === 'token')\n      .map(t => t[1] === 'lineSpace' ? ' ' : t[2])\n      .join('')\n      .trim();\n\n    if (args.normalizeSpace) {\n      ret = ret.replace(/[ \\t\\n\\r]+/g, ' ');\n    }\n    return ret;\n  },\n};\n\nmodule.exports = {\n  cIndexSchemaString,\n  cIndexResolvers,\n};\n", "const { dumpItems } = require('../lib/dump.cjs');\n\nconst cvVerseElementSchemaString = `\n\"\"\"\"\"\"\ntype cvVerseElement {\n  \"\"\"The zero-indexed number of the block where the verse starts\"\"\"\n  startBlock: Int\n  \"\"\"The zero-indexed number of the block where the verse ends\"\"\"\n  endBlock: Int\n  \"\"\"The zero-indexed position of the item where the verse starts\"\"\"\n  startItem: Int\n  \"\"\"The zero-indexed position of the item where the verse ends\"\"\"\n  endItem: Int\n  \"\"\"The value of nextToken at the beginning of the verse\"\"\"\n  nextToken: Int\n  \"\"\"The verse range for this verse as it would be printed in a Bible\"\"\"\n  verseRange: String\n  \"\"\"A list of items for this verse\"\"\"\n  items(\n    \"\"\"If true, adds scope and nextToken information to each token\"\"\"\n    includeContext: Boolean\n  ): [Item]!\n  \"\"\"The items as a string in a compact eyeballable format\"\"\"\n  dumpItems: String\n  \"\"\"A list of tokens for this verse\"\"\"\n  tokens(\n    \"\"\"If true, adds scope and nextToken information to each token\"\"\"\n    includeContext: Boolean\n    \"\"\"Return tokens whose payload is an exact match to one of the specified strings\"\"\"\n    withChars: [String!]\n    \"\"\"Return tokens with one of the specified subTypes\"\"\"\n    withSubTypes: [String!]\n  ): [Item]!\n  \"\"\"The text of the verse as a single string\"\"\"\n  text(\n    \"\"\"If true, converts each whitespace character to a single space\"\"\"\n    normalizeSpace: Boolean\n  ): String!\n}\n`;\n\nconst cvVerseElementResolvers = {\n  startBlock: root => root.startBlock,\n  endBlock: root => root.endBlock,\n  startItem: root => root.startItem,\n  endItem: root => root.endItem,\n  nextToken: root => root.nextToken,\n  verseRange: root => root.verses,\n  items: (root, args, context) =>\n    context.docSet.itemsByIndex(context.doc.sequences[context.doc.mainId], root, args.includeContext)\n      .reduce((a, b) => a.concat([['token', 'lineSpace', ' ', null]].concat(b))),\n  dumpItems: (root, args, context) =>\n    dumpItems(\n      context.docSet.itemsByIndex(context.doc.sequences[context.doc.mainId], root, args.includeContext)\n        .reduce((a, b) => a.concat([['token', 'lineSpace', ' ', null]].concat(b))),\n    ),\n  tokens: (root, args, context) =>\n    context.docSet.itemsByIndex(context.doc.sequences[context.doc.mainId], root, args.includeContext)\n      .reduce((a, b) => a.concat([['token', 'lineSpace', ' ', null]].concat(b)))\n      .filter(\n        i =>\n          i[0] === 'token' &&\n          (!args.withChars || args.withChars.includes(i[2])) &&\n          (!args.withSubTypes || args.withSubTypes.includes(i[1])),\n      ),\n  text: (root, args, context) => {\n    let ret = context.docSet.itemsByIndex(context.doc.sequences[context.doc.mainId], root)\n      .reduce((a, b) => a.concat([['token', 'lineSpace', ' ', null]].concat(b)))\n      .filter(i => i[0] === 'token')\n      .map(t => t[1] === 'lineSpace' ? ' ' : t[2])\n      .join('')\n      .trim();\n\n    if (args.normalizeSpace) {\n      ret = ret.replace(/[ \\t\\n\\r]+/g, ' ');\n    }\n    return ret;\n  },\n};\n\nmodule.exports = {\n  cvVerseElementSchemaString,\n  cvVerseElementResolvers,\n};\n", "const cvVersesSchemaString = `\n\"\"\"Information about a verse in the chapter, which may be split into several pieces\"\"\"\ntype cvVerses {\n  \"\"\"The pieces of verse\"\"\"\n  verse: [cvVerseElement]\n}\n`;\n\nconst cvVersesResolvers = { verse: root => root };\n\nmodule.exports = {\n  cvVersesSchemaString,\n  cvVersesResolvers,\n};\n", "const cvIndexSchemaString = `\n\"\"\"A chapterVerse index entry\"\"\"\ntype cvIndex {\n  \"\"\"The chapter number\"\"\"\n  chapter: Int!\n  \"\"\"Information about the verses in the chapter\"\"\"\n  verses: [cvVerses]\n  \"\"\"A list of verse number and range information, organized by verse number\"\"\"\n  verseNumbers: [verseNumber!]\n  \"\"\"A list of verse number and range information, organized by verse range\"\"\"\n  verseRanges: [verseRange!]\n}\n`;\n\nconst cvIndexResolvers = {\n  chapter: root => root[0],\n  verses: root => root[1],\n  verseNumbers: (root, args, context) => {\n    context.cvIndex = root;\n    return [...root[1].entries()]\n      .filter(v => v[1].length > 0)\n      .map(v => ({\n        number: v[0],\n        range: v[1][v[1].length - 1].verses,\n      }));\n  },\n  verseRanges: root => {\n    const ret = [];\n\n    for (const [vn, vo] of [...root[1].entries()].filter(v => v[1].length > 0)) {\n      if (ret.length === 0 || ret[ret.length - 1].range !== vo[vo.length - 1].verses) {\n        ret.push({\n          range: vo[vo.length - 1].verses,\n          numbers: [vn],\n        });\n      } else {\n        ret[ret.length - 1].numbers.push(vn);\n      }\n    }\n    return ret;\n  },\n};\n\nmodule.exports = {\n  cvIndexSchemaString,\n  cvIndexResolvers,\n};\n", "const nv = (root, newVerseRange) => {\n  const chapterN = parseInt(root[0]);\n  const verseN = parseInt(root[1]);\n\n  if (root[3].length <= verseN || root[3][verseN].length === 0) {\n    return null;\n  }\n\n  let ret = null;\n  let nc = chapterN;\n  let nv = verseN;\n  let index = root[3];\n  let startVerseRange = index[verseN][0].verses;\n  let onNextChapter = false;\n\n  while (!ret) {\n    nv += 1;\n\n    if (nv >= index.length) {\n      if (onNextChapter || !root[4]) {\n        break;\n      }\n      nv = -1;\n      nc += 1;\n      index = root[4];\n      onNextChapter = true;\n    } else if (\n      index[nv].length > 0 &&\n      (!newVerseRange || onNextChapter || index[nv][0].verses !== startVerseRange)\n    ) {\n      ret = [nc, nv];\n    }\n  }\n  return ret;\n};\n\nconst pv = (root, newVerseRange) => {\n  const chapterN = parseInt(root[0]);\n  const verseN = parseInt(root[1]);\n\n  if (root[3].length <= verseN || root[3][verseN].length === 0) {\n    return null;\n  }\n\n  let ret = null;\n  let nc = chapterN;\n  let nv = verseN;\n  let index = root[3];\n  let startVerseRange = index[verseN][0].verses;\n  let onPreviousChapter = false;\n\n  while (!ret) {\n    nv -= 1;\n\n    if (nv < 0) {\n      if (onPreviousChapter || !root[2]) {\n        break;\n      }\n      nv = root[2].length;\n      nc -= 1;\n      index = root[2];\n      onPreviousChapter = true;\n    } else if (\n      index[nv].length > 0 &&\n      (!newVerseRange || onPreviousChapter || index[nv][0].verses !== startVerseRange)\n    ) {\n      ret = [nc, nv];\n    }\n  }\n  return ret;\n};\n\nconst cvNavigationSchemaString = `\n\"\"\"Various answers to 'previous' and 'next' with respect to a verse\"\"\"\ntype cvNavigation {\n  \"\"\"The verse number for the next verse\"\"\"\n  nextVerse: cv\n  \"\"\"The verse number for the previous verse\"\"\"\n  previousVerse: cv\n  \"\"\"The verse number for the next verse range\"\"\"\n  nextVerseRangeVerse: cv\n  \"\"\"The verse number for the previous verse range\"\"\"\n  previousVerseRangeVerse: cv\n  \"\"\"The next chapter number (as a string)\"\"\"\n  nextChapter: String\n  \"\"\"The previous chapter number (as a string)\"\"\"\n  previousChapter: String\n}\n`;\n\n// root is [ < 0 chapter >, < 1 verse >, < 2 previousChapterIndex >, < 3 thisChapterIndex >, < 4 nextChapterIndex > ]\nconst cvNavigationResolvers = {\n  nextVerse: root => nv(root, false),\n  previousVerse: root => pv(root, false),\n  nextVerseRangeVerse: root => nv(root, true),\n  previousVerseRangeVerse: root => pv(root, true),\n  nextChapter: root => {\n    if (root[3].length > 0 && root[4].length > 0) {\n      return (parseInt(root[0]) + 1).toString();\n    } else {\n      return null;\n    }\n  },\n  previousChapter: root => {\n    if (root[2].length > 0 && root[3].length > 0) {\n      return (parseInt(root[0]) - 1).toString();\n    } else {\n      return null;\n    }\n  },\n};\n\nmodule.exports = {\n  cvNavigationSchemaString,\n  cvNavigationResolvers,\n};\n", "const inputBlockSpecSchemaString = `\n\"\"\"A specification to create or update a block\"\"\"\ninput inputBlockSpec {\n  \"\"\"The block scope as an item\"\"\"\n  bs: InputItemObject!\n  \"\"\"The block grafts as items\"\"\"\n  bg: [InputItemObject!]!\n  \"\"\"The open scopes as items\"\"\"\n  os: [InputItemObject!]!\n  \"\"\"The included scopes as items\"\"\"\n  is: [InputItemObject!]!\n  \"\"\"The items\"\"\"\n  items: [InputItemObject!]!\n}\n`;\n\nmodule.exports = { inputBlockSpecSchemaString };\n", "const utils = require('../../util/index.cjs');\n\nconst nodeSchemaString = `\n\"\"\"A tree node\"\"\"\ntype node {\n  \"\"\"The node id\"\"\"\n  id: String!\n  \"\"\"The node parent id\"\"\"\n  parentId: String\n  \"\"\"The keys for content\"\"\"\n  keys: [String!]!\n  \"\"\"The content as itemGroups\"\"\"\n  itemGroups(\n    \"\"\"If true, adds scope and nextToken information to each token\"\"\"\n    includeContext: Boolean\n  ): [ItemGroup!]!\n  \"\"\"The node children ids\"\"\"\n  childIds: [String!]!\n}\n`;\n\nconst nodeResolvers = {\n  id: (root, args, context) => {\n    const [itemLength, itemType, itemSubtype] = utils.succinct.headerBytes(root.bs, 0);\n    return context.docSet.unsuccinctifyScope(root.bs, itemType, itemSubtype, 0)[2].split('/')[1];\n  },\n  parentId: (root, args, context) => {\n    const parentId = context.docSet.unsuccinctifyScopes(root.is).filter(s => s[2].startsWith('tTreeParent'))[0][2].split('/')[1];\n    return parentId === 'none' ? null: parentId;\n  },\n  keys: (root, args, context) => context.docSet.unsuccinctifyScopes(root.is)\n    .filter(s => s[2].startsWith('tTreeContent'))\n    .map(s => s[2].split('/')[1]),\n  itemGroups: (root, args, context) =>\n    context.docSet.sequenceItemsByScopes([root], ['tTreeContent/'], args.includeContext || false),\n  childIds: (root, args, context) =>\n    context.docSet.unsuccinctifyScopes(root.is).filter(s => s[2].startsWith('tTreeChild'))\n      .map(s => s[2].split('/')[2]),\n};\n\nmodule.exports = {\n  nodeSchemaString,\n  nodeResolvers,\n};\n", "const xre = require('xregexp');\n\nconst kvSequenceSchemaString = `\n\"\"\"A contiguous flow of content for key-values\"\"\"\ntype kvSequence {\n  \"\"\"The id of the sequence\"\"\"\n  id: String!\n  \"\"\"The number of entries in the key-value sequence\"\"\"\n  nEntries: Int!\n  \"\"\"The entries in the key-value sequence\"\"\"\n  entries(\n    \"\"\"Only return entries whose key matches the specification\"\"\"\n    keyMatches: String\n    \"\"\"Only return entries whose key equals one of the values in the specification\"\"\"\n    keyEquals: [String!]\n    \"\"\"Only return entries whose secondary keys match the specification\"\"\"\n    secondaryMatches: [KeyMatches!]\n    \"\"\"Only return entries whose secondary keys equal one of the values in the specification\"\"\"\n    secondaryEquals: [KeyValues!]\n    \"\"\"Only return entries whose content matches the specification\"\"\"\n    contentMatches: [KeyMatches!]\n    \"\"\"Only return entries whose content equals one of the values in the specification\"\"\"\n    contentEquals: [KeyValues!]\n  ): [kvEntry!]\n  \"\"\"A list of the tags of this sequence\"\"\"\n  tags: [String!]!\n  \"\"\"A list of the tags of this sequence as key/value tuples\"\"\"\n  tagsKv: [KeyValue!]!\n  \"\"\"Whether or not the sequence has the specified tag\"\"\"\n  hasTag(\n    \"\"\"The tag name\"\"\"\n    tagName: String\n  ): Boolean!\n}\n`;\n\nconst kvSequenceResolvers = {\n  nEntries: root => root.blocks.length,\n  entries: (root, args, context) => {\n    let ret = root.blocks.map(\n      b => [\n        context.docSet.unsuccinctifyScopes(b.bs)\n          .map(s => s[2].split('/')[1])[0],\n        context.docSet.unsuccinctifyScopes(b.is)\n          .filter(s => s[2].startsWith('kvSecondary/'))\n          .map(s => [s[2].split('/')[1], s[2].split('/')[2]]),\n        context.docSet.sequenceItemsByScopes([b], ['kvField/'], false),\n      ],\n    );\n\n    if (args.keyMatches) {\n      ret = ret.filter(e => xre.test(e[0], xre(args.keyMatches)));\n    }\n\n    if (args.keyEquals) {\n      ret = ret.filter(e => args.keyEquals.includes(e[0]));\n    }\n\n    if (args.secondaryMatches) {\n      const matchesOb = {};\n      args.secondaryMatches.forEach(sm => (matchesOb[sm.key] = sm.matches));\n      ret = ret.filter(\n        e => {\n          const secondaryOb = {};\n          e[1].forEach(st => (secondaryOb[st[0]] = st[1]));\n\n          for (const mo of Object.entries(matchesOb)) {\n            const secondaryString = secondaryOb[mo[0]];\n\n            if (!secondaryString || !xre.test(secondaryString, xre(mo[1]))) {\n              return false;\n            }\n          }\n          return true;\n        });\n    }\n\n    if (args.secondaryEquals) {\n      const equalsOb = {};\n      args.secondaryEquals.forEach(sm => (equalsOb[sm.key] = sm.values));\n      ret = ret.filter(\n        e => {\n          const secondaryOb = {};\n          e[1].forEach(st => (secondaryOb[st[0]] = st[1]));\n\n          for (const mo of Object.entries(equalsOb)) {\n            const secondaryString = secondaryOb[mo[0]];\n\n            if (!secondaryString || !mo[1].includes(secondaryString)) {\n              return false;\n            }\n          }\n          return true;\n        });\n    }\n\n    if (args.contentMatches) {\n      const matchesOb = {};\n      args.contentMatches.forEach(sm => (matchesOb[sm.key] = sm.matches));\n      ret = ret.filter(\n        e => {\n          const contentOb = {};\n          e[2].forEach(st => (contentOb[st[0].filter(s => s.startsWith('kvField'))[0].split('/')[1]] = st[1].filter(i => i[0] === 'token').map(t => t[2]).join('')));\n\n          for (const mo of Object.entries(matchesOb)) {\n            const contentString = contentOb[mo[0]];\n\n            if (!contentString || !xre.test(contentString, xre(mo[1]))) {\n              return false;\n            }\n          }\n          return true;\n        });\n    }\n\n    if (args.contentEquals) {\n      const equalsOb = {};\n      args.contentEquals.forEach(sm => (equalsOb[sm.key] = sm.values));\n      ret = ret.filter(\n        e => {\n          const contentOb = {};\n          e[2].forEach(st => (contentOb[st[0].filter(s => s.startsWith('kvField'))[0].split('/')[1]] = st[1].filter(i => i[0] === 'token').map(t => t[2]).join('')));\n\n          for (const mo of Object.entries(equalsOb)) {\n            const contentString = contentOb[mo[0]];\n\n            if (!contentString || !contentString.includes(mo[1])) {\n              return false;\n            }\n          }\n          return true;\n        });\n    }\n\n    return ret;\n  },\n  tags: root => Array.from(root.tags),\n  tagsKv: root => Array.from(root.tags).map(t => {\n    if (t.includes(':')) {\n      return [t.substring(0, t.indexOf(':')), t.substring(t.indexOf(':') + 1)];\n    } else {\n      return [t, ''];\n    }\n  }),\n  hasTag: (root, args) => root.tags.has(args.tagName),\n};\n\nmodule.exports = {\n  kvSequenceSchemaString,\n  kvSequenceResolvers,\n};\n", "const xre = require('xregexp');\nconst utils = require('../../util/index.cjs');\n\nconst tableSequenceSchemaString = `\n\"\"\"A contiguous flow of content for a table\"\"\"\ntype tableSequence {\n  \"\"\"The id of the sequence\"\"\"\n  id: String!\n  \"\"\"The number of cells in the table sequence\"\"\"\n  nCells: Int!\n  \"\"\"The number of rows in the table sequence\"\"\"\n  nRows: Int!\n  \"\"\"The number of columns in the table sequence\"\"\"\n  nColumns: Int!\n  \"\"\"The cells in the table sequence\"\"\"\n  cells: [cell!]!\n  \"\"\"The rows in the table sequence\"\"\"\n  rows(\n    \"\"\"Only return rows whose zero-indexed position is in the list\"\"\"\n    positions: [Int!]\n    \"\"\"Only return columns whose zero-indexed position is in the list\"\"\"\n    columns: [Int!]\n    \"\"\"Only return rows whose cells match the specification\"\"\"\n    matches: [rowMatchSpec!]\n    \"\"\"'Only return rows whose cells contain one of the values in the specification\"\"\"\n    equals: [rowEqualsSpec!]\n  ): [[cell!]!]!\n  \"\"\"A list of the tags of this sequence\"\"\"\n  tags: [String!]!\n  \"\"\"A list of the tags of this sequence as key/value tuples\"\"\"\n  tagsKv: [KeyValue!]!\n  \"\"\"Whether or not the sequence has the specified tag\"\"\"\n  hasTag(\n    \"\"\"The tag name\"\"\"\n    tagName: String\n  ): Boolean!\n  \"\"\"A list of column headings for this tableSequence, derived from the sequence tags\"\"\"\n  headings: [String!]!\n}\n`;\n\nconst tableSequenceResolvers = {\n  nCells: root => root.blocks.length,\n  nRows: (root, args, context) => {\n    const rowNs = new Set([]);\n\n    for (const block of root.blocks) {\n      // eslint-disable-next-line no-unused-vars\n      const [itemLength, itemType, itemSubtype] = utils.succinct.headerBytes(block.bs, 0);\n      const bsPayload = context.docSet.unsuccinctifyScope(block.bs, itemType, itemSubtype, 0)[2];\n      rowNs.add(bsPayload.split('/')[1]);\n    }\n    return rowNs.size;\n  },\n  nColumns: (root, args, context) => {\n    const columnNs = new Set([]);\n\n    for (const block of root.blocks) {\n      for (const scope of context.docSet.unsuccinctifyScopes(block.is).map(s => s[2])) {\n        if (scope.startsWith('tTableCol')) {\n          columnNs.add(scope.split('/')[1]);\n        }\n      }\n    }\n    return columnNs.size;\n  },\n  cells: (root, args, context) => {\n    const ret = [];\n\n    for (const block of root.blocks) {\n      ret.push([\n        context.docSet.unsuccinctifyScopes(block.bs)\n          .map(s => parseInt(s[2].split('/')[1])),\n        Array.from(new Set(\n          context.docSet.unsuccinctifyScopes(block.is)\n            .filter(s => s[2].startsWith('tTableCol'))\n            .map(s => parseInt(s[2].split('/')[1])),\n        )),\n        context.docSet.unsuccinctifyItems(block.c, {}, 0),\n      ]);\n    }\n    return ret;\n  },\n  rows: (root, args, context) => {\n    const rowMatches1 = (row, matchSpec) => {\n      if (row[matchSpec.colN] === undefined) {\n        return false;\n      }\n\n      const matchCellText = row[matchSpec.colN][2]\n        .filter(i => i[0] === 'token')\n        .map(i => i[2])\n        .join('');\n      return xre.test(matchCellText, xre(matchSpec.matching));\n    };\n\n    const rowMatches = (row, matchSpecs) => {\n      if (matchSpecs.length === 0) {\n        return true;\n      }\n\n      if (rowMatches1(row, matchSpecs[0])) {\n        return rowMatches(row, matchSpecs.slice(1));\n      }\n      return false;\n    };\n\n    const rowEquals1 = (row, matchSpec) => {\n      if (row[matchSpec.colN] === undefined) {\n        return false;\n      }\n\n      const matchCellText = row[matchSpec.colN][2]\n        .filter(i => i[0] === 'token')\n        .map(i => i[2])\n        .join('');\n      return matchSpec.values.includes(matchCellText);\n    };\n\n    const rowEquals = (row, matchSpecs) => {\n      if (matchSpecs.length === 0) {\n        return true;\n      }\n\n      if (rowEquals1(row, matchSpecs[0])) {\n        return rowEquals(row, matchSpecs.slice(1));\n      }\n      return false;\n    };\n\n    let ret = [];\n    let row = -1;\n\n    for (const block of root.blocks) {\n      const rows = context.docSet.unsuccinctifyScopes(block.bs)\n        .map(s => parseInt(s[2].split('/')[1]));\n\n      if (args.positions && !args.positions.includes(rows[0])) {\n        continue;\n      }\n\n      if (rows[0] !== row) {\n        ret.push([]);\n        row = rows[0];\n      }\n      ret[ret.length - 1].push([\n        rows,\n        Array.from(new Set(\n          context.docSet.unsuccinctifyScopes(block.is)\n            .filter(s => s[2].startsWith('tTableCol'))\n            .map(s => parseInt(s[2].split('/')[1])),\n        )),\n        context.docSet.unsuccinctifyItems(block.c, {}, 0),\n      ]);\n    }\n\n    if (args.matches) {\n      ret = ret.filter(row => rowMatches(row, args.matches));\n    }\n\n    if (args.equals) {\n      ret = ret.filter(row => rowEquals(row, args.equals));\n    }\n\n    if (args.columns) {\n      ret = ret.map(\n        row =>\n          [...row.entries()]\n            .filter(re => args.columns.includes(re[0]))\n            .map(re => re[1]));\n    }\n    return ret;\n  },\n  tags: root => Array.from(root.tags),\n  tagsKv: root => Array.from(root.tags).map(t => {\n    if (t.includes(':')) {\n      return [t.substring(0, t.indexOf(':')), t.substring(t.indexOf(':') + 1)];\n    } else {\n      return [t, ''];\n    }\n  }),\n  hasTag: (root, args) => root.tags.has(args.tagName),\n  headings: root => Array.from(root.tags)\n    .filter(t => t.startsWith('col'))\n    .sort((a, b) => parseInt(a.split(':')[0].substring(3)) - parseInt(b.split(':')[0].substring(3)))\n    .map(t => t.split(':')[1]),\n};\n\nmodule.exports = {\n  tableSequenceSchemaString,\n  tableSequenceResolvers,\n};\n", "const xre = require('xregexp');\n\nconst aggregateFunctions = {\n  equals: (docSet, node, a, b) => a === b,\n  notEqual: (docSet, node, a, b) => a !== b,\n  and: (docSet, node, ...args) => args.filter(a => !a).length === 0,\n  or: (docSet, node, ...args) => args.filter(a => a).length > 0,\n  not: (docSet, node, a) => !a,\n  idRef: (docSet, node) => docSet.unsuccinctifyScopes(node.bs)[0][2].split('/')[1],\n  parentIdRef: (docSet, node) => docSet.unsuccinctifyScopes(node.is).filter(s => s[2].startsWith('tTreeParent'))[0][2].split('/')[1],\n  nChildren: (docSet, node) => docSet.unsuccinctifyScopes(node.is).filter(s => s[2].startsWith('tTreeChild')).length,\n  contentRef: (docSet, node, label) => {\n    const labelIG = docSet.sequenceItemsByScopes([node], ['tTreeContent/'], false)\n      .filter(ig => {\n        const key = ig[0].filter(s => s.startsWith('tTreeContent'))[0].split('/')[1];\n        return key === label;\n      });\n    return labelIG[0] ?\n      labelIG[0][1].filter(i => i[0] === 'token').map(t => t[2]).join('') :\n      '';\n  },\n  hasContent: (docSet, node, label) => {\n    const labelIG = docSet.sequenceItemsByScopes([node], ['tTreeContent/'], false)\n      .filter(ig => {\n        const key = ig[0].filter(s => s.startsWith('tTreeContent'))[0].split('/')[1];\n        return key === label;\n      });\n    return labelIG.length > 0;\n  },\n  concat: (docSet, node, ...args) => args.join(''),\n  startsWith: (docSet, node, a, b) => a.startsWith(b),\n  endsWith: (docSet, node, a, b) => a.endsWith(b),\n  contains: (docSet, node, a, b) => a.includes(b),\n  matches: (docSet, node, a, b) => xre.test(a, xre(b)),\n  int: (docSet, node, str) => parseInt(str),\n  string: (docSet, node, int) => `${int}`,\n  left: (docSet, node, str, int) => str.substring(0, int),\n  right: (docSet, node, str, int) => str.substring(str.length - int),\n  length: (docSet, node, str) => str.length,\n  indexOf: (docSet, node, a, b) => a.indexOf(b),\n  add: (docSet, node, ...args) => args.reduce((x, y) => x + y),\n  mul: (docSet, node, ...args) => args.reduce((x, y) => x * y),\n  sub: (docSet, node, a, b) => a - b,\n  div: (docSet, node, a, b) => Math.floor(a / b),\n  mod: (docSet, node, a, b) => a % b,\n  gt: (docSet, node, a, b) => a > b,\n  lt: (docSet, node, a, b) => a < b,\n  ge: (docSet, node, a, b) => a >= b,\n  le: (docSet, node, a, b) => a <= b,\n};\n\nconst parseFunctions = {\n  quotedString: str => str.substring(1, str.length - 1),\n  int: str => parseInt(str),\n  true: () => true,\n  false: () => false,\n};\n\nconst splitArgs = str => {\n  const ret = [[]];\n  let pos = 0;\n  let nParen = 0;\n  let inQuote = false;\n\n  while (str && pos < str.length) {\n    switch (str[pos]) {\n    case '\\\\':\n      ret[ret.length - 1].push(str[pos]);\n\n      if (str[pos + 1] ==='\\'') {\n        ret[ret.length - 1].push(str[pos + 1]);\n        pos++;\n      }\n      break;\n    case '\\'':\n      ret[ret.length - 1].push(str[pos]);\n      inQuote = !inQuote;\n      break;\n    case '(':\n      if (inQuote) {\n        ret[ret.length - 1].push(str[pos]);\n      } else {\n        ret[ret.length - 1].push(str[pos]);\n        nParen++;\n      }\n      break;\n    case ')':\n      if (inQuote) {\n        ret[ret.length - 1].push(str[pos]);\n      } else {\n        ret[ret.length - 1].push(str[pos]);\n        nParen--;\n      }\n      break;\n    case ',':\n      if (!inQuote && nParen === 0) {\n        ret.push([]);\n\n        while (str[pos + 1] === ' ') {\n          pos++;\n        }\n      } else {\n        ret[ret.length - 1].push(str[pos]);\n      }\n      break;\n    default:\n      ret[ret.length - 1].push(str[pos]);\n    }\n    pos++;\n  }\n  return ret.map(e => e.join(''));\n};\n\nconst expressions = {\n  expression: { oneOf: ['stringExpression', 'intExpression', 'booleanExpression'] },\n  booleanExpression: { oneOf: ['booleanPrimitive', 'equals', 'notEqual', 'and', 'or', 'not', 'contains', 'startsWith', 'endsWith', 'matches', 'gt', 'lt', 'ge', 'le', 'hasContent'] },\n  stringExpression: { oneOf: ['concat', 'left', 'right', 'string', 'idRef', 'parentIdRef', 'contentRef', 'stringPrimitive'] },\n  intExpression: { oneOf: ['length', 'indexOf', 'int', 'nChildren', 'intPrimitive', 'add', 'sub', 'mul', 'div', 'mod'] },\n  equals: {\n    regex: xre('^==\\\\((.+)\\\\)$'),\n    doc: {\n      operator: '==',\n      args: ['expression', 'expression'],\n      result: 'boolean',\n      description: 'Are the arguments strictly equal?',\n    },\n    argStructure: [['expression', [2, 2]]],\n  },\n  notEqual: {\n    regex: xre('^!=\\\\((.+)\\\\)$'),\n    doc: {\n      operator: '!=',\n      args: ['expression', 'expression'],\n      result: 'boolean',\n      description: 'Are the arguments not strictly equal?',\n    },\n    argStructure: [['expression', [2, 2]]],\n  },\n  and: {\n    regex: xre('^and\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'and',\n      args: ['boolean', 'boolean', '...'],\n      result: 'boolean',\n      description: 'Are all the arguments true?',\n    },\n    breakOn: false,\n    argStructure: [['booleanExpression', [2, null]]],\n  },\n  or: {\n    regex: xre('^or\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'or',\n      args: ['boolean', 'boolean'],\n      result: 'boolean',\n      description: 'Are any arguments true?',\n    },\n    breakOn: true,\n    argStructure: [['booleanExpression', [2, null]]],\n  },\n  concat: {\n    regex: xre('^concat\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'concat',\n      args: ['string', 'string', '...'],\n      result: 'string',\n      description: 'Concatenates string arguments',\n    },\n    argStructure: [['stringExpression', [2, null]]],\n  },\n  contentRef: {\n    regex: xre('^content\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'content',\n      args: ['string'],\n      result: 'string',\n      description: 'String value of the specified content for the node',\n    },\n    argStructure: [['stringExpression', [1, 1]]],\n  },\n  hasContent: {\n    regex: xre('^hasContent\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'hasContent',\n      args: ['string'],\n      result: 'boolean',\n      description: 'Does the node have this content?',\n    },\n    argStructure: [['stringExpression', [1, 1]]],\n  },\n  contains: {\n    regex: xre('^contains\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'contains',\n      args: ['string', 'string'],\n      result: 'boolean',\n      description: 'Does the first string contain the second string?',\n    },\n    argStructure: [['stringExpression', [2, 2]]],\n  },\n  startsWith: {\n    regex: xre('^startsWith\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'startsWith',\n      args: ['string', 'string'],\n      result: 'boolean',\n      description: 'Does the first string start with the second string?',\n    },\n    argStructure: [['stringExpression', [2, 2]]],\n  },\n  endsWith: {\n    regex: xre('^endsWith\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'endsWith',\n      args: ['string', 'string'],\n      result: 'boolean',\n      description: 'Does the first string end with the second string?',\n    },\n    argStructure: [['stringExpression', [2, 2]]],\n  },\n  matches: {\n    regex: xre('^matches\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'matches',\n      args: ['string', 'regex'],\n      result: 'boolean',\n      description: 'Does the first string match the regex in the second string?',\n    },\n    argStructure: [['stringExpression', [2, 2]]],\n  },\n  left: {\n    regex: xre('^left\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'left',\n      args: ['string', 'integer'],\n      result: 'string',\n      description: 'The first n characters of the string',\n    },\n    argStructure: [['stringExpression', [1, 1]], ['intExpression', [1, 1]]],\n  },\n  right: {\n    regex: xre('^right\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'right',\n      args: ['string', 'integer'],\n      result: 'string',\n      description: 'The last n characters of the string',\n    },\n    argStructure: [['stringExpression', [1, 1]], ['intExpression', [1, 1]]],\n  },\n  length: {\n    regex: xre('^length\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'length',\n      args: ['string'],\n      result: 'integer',\n      description: 'The number of characters in the string',\n    },\n    argStructure: [['stringExpression', [1, 1]]],\n  },\n  indexOf: {\n    regex: xre('^indexOf\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'indexOf',\n      args: ['string', 'string'],\n      result: 'number',\n      description: 'The integer position at which the second string starts in the first string',\n    },\n    argStructure: [['stringExpression', [2, 2]]],\n  },\n  not: {\n    regex: xre('^not\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'not',\n      args: ['boolean'],\n      result: 'boolean',\n      description: 'The inverse boolean value of the argument',\n    },\n    argStructure: [['booleanExpression', [1, 1]]],\n  },\n  int: {\n    regex: xre('^int\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'int',\n      args: ['string'],\n      result: 'integer',\n      description: 'The integer value of the string',\n    },\n    argStructure: [['stringExpression', [1, 1]]],\n  },\n  string: {\n    regex: xre('^string\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'string',\n      args: ['integer'],\n      result: 'string',\n      description: 'The string value of the integer',\n    },\n    argStructure: [['intExpression', [1, 1]]],\n  },\n  idRef: {\n    regex: xre('^id$'),\n    doc: {\n      operator: 'id',\n      args: [],\n      result: 'string',\n      description: 'The node ID',\n    },\n    argStructure: [],\n  },\n  parentIdRef: {\n    regex: xre('^parentId$'),\n    doc: {\n      operator: 'parentId',\n      args: [],\n      result: 'string',\n      description: 'The node\\'s parent ID',\n    },\n    argStructure: [],\n  },\n  nChildren: {\n    regex:  xre('^nChildren$'),\n    doc: {\n      operator: 'nChildren',\n      args: [],\n      result: 'int',\n      description: 'The number of children of the node',\n    },\n    argStructure: [],\n  },\n  add: {\n    regex: xre('^add\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'add',\n      args: ['integer', '...'],\n      result: 'integer',\n      description: 'The numeric sum of the arguments',\n    },\n    argStructure: [['intExpression', [2, null]]],\n  },\n  mul: {\n    regex: xre('^mul\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'mul',\n      args: ['integer', '...'],\n      result: 'integer',\n      description: 'The numeric product of the arguments',\n    },\n    argStructure: [['intExpression', [2, null]]],\n  },\n  sub: {\n    regex: xre('^sub\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'sub',\n      args: ['integer', 'integer'],\n      result: 'integer',\n      description: 'The first integer minus the second',\n    },\n    argStructure: [['intExpression', [2, 2]]],\n  },\n  div: {\n    regex: xre('^div\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'div',\n      args: ['integer', 'integer'],\n      result: 'integer',\n      description: 'The first integer divided by the second',\n    },\n    argStructure: [['intExpression', [2, 2]]],\n  },\n  mod: {\n    regex: xre('^mod\\\\((.+)\\\\)$'),\n    doc: {\n      operator: 'mod',\n      args: ['integer', 'integer'],\n      result: 'integer',\n      description: 'The modulus of the first integer when divided by the second',\n    },\n    argStructure: [['intExpression', [2, 2]]],\n  },\n  gt: {\n    regex: xre('^>\\\\((.+)\\\\)$'),\n    doc: {\n      operator: '>',\n      args: ['integer', 'integer'],\n      result: 'boolean',\n      description: 'Is the first integer numerically greater than the second?',\n    },\n    argStructure: [['intExpression', [2, 2]]],\n  },\n  lt: {\n    regex: xre('^<\\\\((.+)\\\\)$'),\n    doc: {\n      operator: '<',\n      args: ['integer', 'integer'],\n      result: 'boolean',\n      description: 'Is the first integer numerically less than the second?',\n    },\n    argStructure: [['intExpression', [2, 2]]],\n  },\n  ge: {\n    regex: xre('^>=\\\\((.+)\\\\)$'),\n    doc: {\n      operator: '>=',\n      args: ['integer', 'integer'],\n      result: 'boolean',\n      description: 'Is the first integer numerically greater than or equal to the second?',\n    },\n    argStructure: [['intExpression', [2, 2]]],\n  },\n  le: {\n    regex: xre('^<=\\\\((.+)\\\\)$'),\n    doc: {\n      operator: '<=',\n      args: ['integer', 'integer'],\n      result: 'boolean',\n      description: 'Is the first integer numerically less than or equal to the second?',\n    },\n    argStructure: [['intExpression', [2, 2]]],\n  },\n  stringPrimitive: {\n    regex: xre('^(\\'([^\\']|\\\\\\\\\\')*\\')$'),\n    parseFunctions: [null, 'quotedString'],\n  },\n  intPrimitive: {\n    regex: xre('^(-?[0-9]+)$'),\n    parseFunctions: [null, 'int'],\n  },\n  booleanPrimitive: {\n    regex: xre('^(true)|(false)$'),\n    parseFunctions: [null, 'true', 'false'],\n  },\n};\n\nconst parseRegexExpression = (docSet, node, predicateString, expressionId, matches) => {\n  // console.log(`parseRegexExpression ${predicateString} ${expressionId} ${matches}`);\n  const expressionRecord = expressions[expressionId];\n\n  if (!expressionRecord) {\n    throw new Error(`Unknown expression ${expressionId} for predicate ${predicateString}`);\n  }\n\n  const nExpectedArgs = structure => [\n    structure.map(a => a[1][0]).reduce((a, b) => a + b),\n    structure.filter(a => a[1][1] === null).length > 0,\n  ];\n\n  if (expressionRecord.parseFunctions) {\n    let found = false;\n\n    for (const [n, parseFunction] of expressionRecord.parseFunctions.entries()) {\n      if (!parseFunction || !matches[n]) {\n        continue;\n      }\n      found = true;\n      return { data: parseFunctions[parseFunction](matches[n]) };\n    }\n\n    if (!found) {\n      return { errors: `Could not parse predicate ${predicateString}` };\n    }\n  } else {\n    const argRecords = splitArgs(matches[1]);\n    const argStructure = expressionRecord.argStructure;\n    const argResults = [];\n\n    if (argStructure.length > 0) {\n      const nExpected = nExpectedArgs(argStructure);\n\n      if (argRecords.length < nExpected[0]) {\n        return { errors: `Expected at least ${nExpected[0]} args for '${expressionId}', found ${argRecords.length}` };\n      }\n\n      if (!nExpected[1] && argRecords.length > nExpected[0]) {\n        return { errors: `Expected at most ${nExpected[0]} args for '${expressionId}', found ${argRecords.length}` };\n      }\n\n      let argRecordN = 0;\n      let argStructureN = 0;\n      let nOccs = 0;\n\n      while (argRecordN < argRecords.length) {\n        const argRecord = argRecords[argRecordN];\n        const argResult = parseExpression(docSet, node, argRecord, argStructure[argStructureN][0]);\n\n        if ('breakOn' in expressionRecord && !argRecord.errors && argResult.data === expressionRecord.breakOn) {\n          return argResult;\n        }\n        argResults.push(argResult);\n        argRecordN++;\n        nOccs++;\n\n        if (argStructure[argStructureN][1][1] && nOccs >= argStructure[argStructureN][1][1]) {\n          argStructureN++;\n          nOccs = 0;\n        }\n      }\n    }\n\n    if (argResults.filter(ar => ar.errors).length === 0) {\n      // console.log(expressionId);\n      const args = argResults.map(ar => ar.data);\n      const aggregated = aggregateFunctions[expressionId](docSet, node, ...args);\n      // console.log('aggregated', expressionId, argRecords, aggregated);\n      return { data:  aggregated };\n    }\n    return { errors: `Could not parse arguments to ${expressionId}: ${argRecords.filter(ar => ar.errors).map(ar => ar.errors).join('; ')}` };\n  }\n};\n\nconst parseExpression = (docSet, node, predicate, expressionId) => {\n  // console.log(`parseExpression ${predicate}, ${expressionId}`);\n  const expressionRecord = expressions[expressionId];\n\n  if (!expressionRecord) {\n    throw new Error(`Unknown expression ${expressionId} for predicate ${predicate}`);\n  }\n\n  if (expressionRecord.oneOf) {\n    let errors = null;\n\n    for (const option of expressionRecord.oneOf) {\n      const optionResult = parseExpression(docSet, node, predicate, option);\n\n      if (!optionResult.errors) {\n        return optionResult;\n      } else if (!errors || (optionResult.errors.length < errors.length)) {\n        errors = optionResult.errors;\n      }\n    }\n    return { errors: errors };\n  } else {\n    const matches = xre.exec(predicate, expressionRecord.regex);\n\n    if (matches) {\n      const reResult = parseRegexExpression(docSet, node, predicate, expressionId, matches);\n      return reResult;\n    } else {\n      return { errors: `Could not match ${predicate}` };\n    }\n  }\n};\n\nconst doPredicate = (docSet, result, predicateString) => ({\n  data: result.data.filter(node => {\n    const nodeResult = parseExpression(docSet, node, predicateString, 'booleanExpression');\n\n    // console.log();\n    if (nodeResult.errors) {\n      throw new Error(`Predicate - ${nodeResult.errors}`);\n    }\n    return nodeResult.data;\n  }),\n});\n\nmodule.exports = { expressions, doPredicate };\n", "const xre = require('xregexp');\n\nconst predicateRegex = '(\\\\[(([^\\\\]\\']|\\'([^\\']|\\\\\\\\\\')*\\')+)\\\\])*';\n\n// Nodes with one of the listed ids\nconst doAbsoluteIdStep = (docSet, allNodes, nodeLookup, result, queryStep, matches) => {\n  const values = matches[1].split(',').map(v => v.trim());\n  return { data: Array.from(values).map(nid => allNodes[nodeLookup.get(nid)]) };\n};\n\n// The root Node\nconst doAbsoluteRootStep = (docSet, allNodes) => ({ data: [allNodes[0]] });\n\n// All the nodes\nconst doAbsoluteNodesStep = (docSet, allNodes) => ({ data: allNodes });\n\n// Children of the nodes\nconst doChildrenStep = (docSet, allNodes, nodeLookup, result, queryStep, matches) => {\n  const childNo = matches[2];\n  const childNodeIds = new Set([]);\n\n  for (const parentNode of result.data) {\n    const children = docSet.unsuccinctifyScopes(parentNode.is)\n      .map(s => s[2].split('/'))\n      .filter(s => s[0] === 'tTreeChild')\n      .filter(s => !childNo || s[1] === childNo)\n      .map(s => s[2]);\n\n    for (const child of children) {\n      childNodeIds.add(child);\n    }\n  }\n  return { data: Array.from(childNodeIds).map(nid => allNodes[nodeLookup.get(nid)]) };\n};\n\n// The parent of each node\nconst doParentStep = (docSet, allNodes, nodeLookup, result) => {\n  const parentNodeIds = new Set([]);\n\n  for (const childNode of result.data) {\n    const parentId = docSet.unsuccinctifyScopes(childNode.is)\n      .filter(s => s[2].startsWith('tTreeParent'))\n      .map(s => s[2].split('/')[1])[0];\n    parentNodeIds.add(parentId);\n  }\n  return { data: Array.from(parentNodeIds).map(nid => allNodes[nodeLookup.get(nid)]) };\n};\n\n// The nth ancestor of each node (where 1 === parent)\nconst doAncestorStep = (docSet, allNodes, nodeLookup, result, queryStep, matches) => {\n  let ancestorNo = parseInt(matches[2]);\n\n  if (ancestorNo < 1) {\n    return { errors: `Expected a positive integer argument for ancestor, found ${queryStep}` };\n  }\n\n  let nodes = result.data;\n\n  while (ancestorNo > 0) {\n    const parentNodeIds = new Set([]);\n\n    for (const childNode of nodes) {\n      const parentId = docSet.unsuccinctifyScopes(childNode.is)\n        .filter(s => s[2].startsWith('tTreeParent'))\n        .map(s => s[2].split('/')[1])[0];\n      parentNodeIds.add(parentId);\n    }\n    nodes = Array.from(parentNodeIds).map(nid => allNodes[nodeLookup.get(nid)]);\n    ancestorNo--;\n  }\n  return { data: nodes };\n};\n\n// The nth-generation descendants of each node (where 1 === child)\nconst doDescendantsStep = (docSet, allNodes, nodeLookup, result, queryStep, matches) => {\n  const descendantIds = new Set([]);\n\n  const getDescendants = (node, depth) => {\n    const childIds = docSet.unsuccinctifyScopes(node.is)\n      .filter(s => s[2].startsWith('tTreeChild'))\n      .map(s => s[2].split('/')[2]);\n\n    if (depth <= 1 || depth === null) {\n      childIds.forEach(n => descendantIds.add(n));\n    }\n\n    if (depth === null || depth > 1) {\n      childIds.map(nid => allNodes[nodeLookup.get(nid)]).forEach(n => getDescendants(n, depth - 1));\n    }\n  };\n\n  let descendantGen = null;\n\n  if (matches[3]) {\n    descendantGen = parseInt(matches[3]);\n  }\n\n  let descendantNo = -1;\n\n  if (matches[5]) {\n    descendantNo = parseInt(matches[5]);\n  }\n\n  for (const node of result.data) {\n    getDescendants(node, descendantGen);\n  }\n  return {\n    data: [...Array.from(descendantIds).entries()]\n      .filter(n => descendantNo < 0 || n[0] === descendantNo)\n      .map(n => n[1])\n      .map(nid => allNodes[nodeLookup.get(nid)]),\n  };\n};\n\n// The leaves of each node\nconst doLeavesStep = (docSet, allNodes, nodeLookup, result) => {\n  const leafIds = new Set([]);\n\n  const getLeaves = node => {\n    const childIds = docSet.unsuccinctifyScopes(node.is)\n      .filter(s => s[2].startsWith('tTreeChild'))\n      .map(s => s[2].split('/')[2]);\n\n    if (childIds.length === 0) {\n      leafIds.add(docSet.unsuccinctifyScopes(node.bs)[0][2].split('/')[1]);\n    } else {\n      childIds.map(nid => allNodes[nodeLookup.get(nid)]).forEach(n => getLeaves(n));\n    }\n  };\n\n  for (const node of result.data) {\n    getLeaves(node);\n  }\n  return { data: Array.from(leafIds).map(nid => allNodes[nodeLookup.get(nid)]) };\n};\n\n// The children of the parent of each node\n// - get parent of starting node\n// - get children of parent node\nconst doSiblingsStep = (docSet, allNodes, nodeLookup, result) => {\n  const parentNodeIds = new Set([]);\n\n  for (const childNode of result.data) {\n    const parentId = docSet.unsuccinctifyScopes(childNode.is)\n      .filter(s => s[2].startsWith('tTreeParent'))\n      .map(s => s[2].split('/')[1])[0];\n    parentNodeIds.add(parentId);\n  }\n\n  const parentNodes = allNodes.filter(n => parentNodeIds.has(docSet.unsuccinctifyScopes(n.bs)[0][2].split('/')[1]));\n  const childNodeIds = new Set([]);\n\n  for (const parentNode of parentNodes) {\n    const children = docSet.unsuccinctifyScopes(parentNode.is)\n      .filter(s => s[2].startsWith('tTreeChild'))\n      .map(s => s[2].split('/')[2]);\n\n    for (const child of children) {\n      childNodeIds.add(child);\n    }\n  }\n  // return { data: allNodes.filter(n => childNodeIds.has(docSet.unsuccinctifyScopes(n.bs)[0][2].split('/')[1])) };\n  return { data: Array.from(childNodeIds).map(nid => allNodes[nodeLookup.get(nid)]) };\n};\n\nconst nodeDetails = (docSet, node, allNodes, nodeLookup, fields, isBranch) => {\n  const record = {};\n\n  if (fields.size === 0 || fields.has('id')) {\n    record.id = docSet.unsuccinctifyScopes(node.bs)[0][2].split('/')[1];\n  }\n\n  if (fields.size === 0 || fields.has('parentId')) {\n    record.parentId = docSet.unsuccinctifyScopes(node.is)\n      .filter(s => s[2].startsWith('tTreeParent'))\n      .map(s => s[2].split('/')[1])[0];\n  }\n\n  const content = {};\n\n  for (const [scopeLabels, items] of docSet.sequenceItemsByScopes([node], ['tTreeContent/'], false)) {\n    const key = scopeLabels.filter(s => s.startsWith('tTreeContent'))[0].split('/')[1];\n\n    if (fields.size === 0 || fields.has('content') || fields.has(`@${key}`)) {\n      content[key] = items.filter(i => i[0] === 'token').map(t => t[2]).join('');\n    }\n  }\n\n  if (Object.keys(content).length > 0) {\n    record.content = content;\n  }\n\n  const children = [];\n\n  if (fields.has('children')) {\n    for (const childScope of docSet.unsuccinctifyScopes(node.is)\n      .filter(s => s[2].startsWith('tTreeChild'))\n      .map(s => s[2].split('/')[2])) {\n      children.push(childScope);\n    }\n  }\n\n  if (children.length > 0) {\n    if (isBranch) {\n      record.children = children\n        .map(nid => allNodes[nodeLookup.get(nid)])\n        .map(n => nodeDetails(docSet, n, allNodes, nodeLookup, fields, true));\n    } else {\n      record.children = children;\n    }\n  }\n  return record;\n};\n\n\n// The node details included children\n// optional fields are id, parentId, content, @<contentName>, children\nconst doBranchStep = (docSet, allNodes, nodeLookup, result, queryStep, matches) => {\n  const ret = [];\n  let fields = new Set([]);\n\n  if (matches[2]) {\n    fields = new Set(\n      matches[2]\n        .split(',')\n        .map(f => f.trim()),\n    );\n  }\n\n  for (const node of result.data) {\n    ret.push(nodeDetails(docSet, node, allNodes, nodeLookup, fields, true));\n  }\n  return { data: ret };\n};\n\n// All values across nodes for the specified content fields\nconst doValuesStep = (docSet, allNodes, nodeLookup, result, queryStep, matches) => {\n  const nodeFields = [];\n  let fields = new Set([]);\n\n  if (matches[2]) {\n    fields = new Set(\n      matches[2]\n        .split(',')\n        .map(f => f.trim())\n        .filter(f => f.startsWith('@')),\n    );\n  }\n\n  for (const node of result.data) {\n    nodeFields.push(nodeDetails(docSet, node, allNodes, nodeLookup, fields, true));\n  }\n\n  const values = {};\n\n  for (const field of Array.from(fields).map(f => f.substring(1))) {\n    values[field] = Array.from(\n      new Set(\n        nodeFields\n          .filter(nd => nd.content)\n          .map(nd => nd.content)\n          .filter(nd => field in nd)\n          .map(nd => nd[field])\n          .sort(),\n      ),\n    );\n  }\n  return { data: values };\n};\n\n// The node details\n// optional fields are id, parentId, content, @<contentName>, children\nconst doNodeStep = (docSet, allNodes, nodeLookup, result, queryStep, matches) => {\n  const ret = [];\n  let fields = new Set([]);\n\n  if (matches[2]) {\n    fields = new Set(matches[2].split(',').map(f => f.trim()));\n  }\n\n  for (const node of result.data) {\n    ret.push(nodeDetails(docSet, node, allNodes, nodeLookup, fields, false));\n  }\n  return { data: ret };\n};\n\nconst stepActions = [\n  {\n    regex: xre(`^#\\\\{([^}]+)\\\\}${predicateRegex}$`),\n    doc: {\n      title: 'Nodes by Id',\n      syntax: '#(id, id, ...)',\n      description: 'Returns nodes whose id is listed',\n    },\n    predicateCapture: 3,\n    inputType: null,\n    outputType: 'nodes',\n    function: doAbsoluteIdStep,\n  },\n  {\n    regex: xre(`^root${predicateRegex}$`),\n    doc: {\n      title: 'Root Node',\n      syntax: 'root',\n      description: 'Returns the root node',\n    },\n    predicateCapture: 2,\n    inputType: null,\n    outputType: 'nodes',\n    function: doAbsoluteRootStep,\n  },\n  {\n    regex: xre(`^nodes${predicateRegex}$`),\n    doc: {\n      title: 'Nodes',\n      syntax: 'nodes',\n      description: 'Returns all the nodes',\n    },\n    predicateCapture: 2,\n    function: doAbsoluteNodesStep,\n    inputType: null,\n    outputType: 'nodes',\n  },\n  {\n    regex: xre(`^children(\\\\((\\\\d+)\\\\))?${predicateRegex}$`),\n    doc: {\n      title: 'Children',\n      syntax: 'children; children(pos)',\n      description: 'Returns the children of the current node(s), optionally filtered by position within the parent node',\n    },\n    predicateCapture: 4,\n    inputType: 'nodes',\n    outputType: 'nodes',\n    function: doChildrenStep,\n  },\n  {\n    regex: xre(`^descendants((\\\\((\\\\d+)(,\\\\s*(\\\\d+))?\\\\))?)${predicateRegex}$`),\n    doc: {\n      title: 'Descendants',\n      syntax: 'descendants; descendants(depth); descendants(depth, pos)',\n      description: 'Returns the descendants of the current node(s), optionally at the specified level, optionally filtered by position',\n    },\n    predicateCapture: 7,\n    inputType: 'nodes',\n    outputType: 'nodes',\n    function: doDescendantsStep,\n  },\n  {\n    regex: xre(`^leaves${predicateRegex}$`),\n    doc: {\n      title: 'Leaves',\n      syntax: 'leaves',\n      description: 'Returns the leaves (ie the nodes with no children) below the current node',\n    },\n    predicateCapture: 2,\n    inputType: 'nodes',\n    outputType: 'nodes',\n    function: doLeavesStep,\n  },\n  {\n    regex: xre(`^parent${predicateRegex}$`),\n    doc: {\n      title: 'Parent',\n      syntax: 'parent',\n      description: 'Returns the parent of the current node',\n    },\n    predicateCapture: 2,\n    inputType: 'nodes',\n    outputType: 'nodes',\n    function: doParentStep,\n  },\n  {\n    regex: xre(`^ancestor(\\\\((\\\\d+)\\\\))${predicateRegex}$`),\n    doc: {\n      title: 'Ancestor',\n      syntax: 'ancestor(depth)',\n      description: 'Returns the nth ancestor of the node',\n    },\n    predicateCapture: 5,\n    inputType: 'nodes',\n    outputType: 'nodes',\n    function: doAncestorStep,\n  },\n  {\n    regex: xre(`^siblings${predicateRegex}$`),\n    doc: {\n      title: 'Siblings',\n      syntax: 'siblings',\n      description: 'Returns the children of the parent of the current node',\n    },\n    predicateCapture: 2,\n    inputType: 'nodes',\n    outputType: 'nodes',\n    function: doSiblingsStep,\n  },\n  {\n    regex: xre(`^node(\\\\{([^}]+)\\\\})?${predicateRegex}$`),\n    doc: {\n      title: 'Node Details',\n      syntax: 'node; node{ id, parentId, content, children, @foo }',\n      description: 'Returns an object containing the specified content',\n    },\n    predicateCapture: 4,\n    inputType: 'nodes',\n    outputType: 'node',\n    function: doNodeStep,\n  },\n  {\n    regex: xre(`^branch(\\\\{([^}]+)\\\\})?${predicateRegex}$`),\n    doc: {\n      title: 'Branch',\n      syntax: 'branch; branch{ id, parentId, content, children, @foo }',\n      description: 'Returns nested objects containing the specified content',\n    },\n    predicateCapture: 4,\n    inputType: 'nodes',\n    outputType: 'node',\n    function: doBranchStep,\n  },\n  {\n    regex: xre(`^values(\\\\{([^}]+)\\\\})?${predicateRegex}$`),\n    doc: {\n      title: 'Values',\n      syntax: 'values{ @foo ... }',\n      description: 'Returns all values across nodes for the specified fields',\n    },\n    predicateCapture: 4,\n    inputType: 'nodes',\n    outputType: 'values',\n    function: doValuesStep,\n  },\n];\n\nmodule.exports = { stepActions };\n", "const xre = require('xregexp');\n\nconst { expressions, doPredicate } = require('./tribos_expression.cjs');\nconst { stepActions } = require('./tribos_step.cjs');\n\nclass Tribos {\n  constructor() {\n    this.currentStepType = null;\n  }\n\n  doStep(docSet, allNodes, nodeLookup, result, queryStep) {\n    for (const stepAction of stepActions) {\n      const matches = xre.exec(queryStep, stepAction.regex);\n\n      if (matches && stepAction.inputType === this.currentStepType) {\n        let ret = stepAction.function(docSet, allNodes, nodeLookup, result, queryStep, matches);\n\n        if (matches[stepAction.predicateCapture]) {\n          ret = doPredicate(docSet, ret, matches[stepAction.predicateCapture]);\n        }\n        this.currentStepType = stepAction.outputType;\n        return ret;\n      }\n    }\n    return { errors: `Unable to match step ${queryStep}` };\n  }\n\n  parse1(docSet, allNodes, nodeLookup, result, queryArray) {\n    if (queryArray.length > 0) {\n      const stepResult = this.doStep(docSet, allNodes, nodeLookup, result, queryArray[0]);\n\n      if (stepResult.errors || stepResult.data.length === 0) {\n        return stepResult;\n      } else {\n        return this.parse1(docSet, allNodes, nodeLookup, stepResult, queryArray.slice(1));\n      }\n    } else {\n      return result;\n    }\n  }\n\n  queryArray(qs) {\n    const ret = [];\n\n    for (const s of qs.split('/')) {\n      ret.push(s);\n    }\n    return ret;\n  }\n\n  indexNodes(docSet, nodes) {\n    const ret = new Map();\n\n    for (const [n, node] of nodes.entries()) {\n      const nodeId = docSet.unsuccinctifyScopes(node.bs)[0][2].split('/')[1];\n      ret.set(nodeId, n);\n    }\n    return ret;\n  }\n\n  doc() {\n    return '** Steps **\\n\\n' +\n    stepActions\n      .map(sa => sa.doc)\n      .map(d => `* ${d.title} *\\n${d.syntax}\\n${d.description}`)\n      .join('\\n\\n') +\n      '** Predicate Operators **\\n\\n' +\n      Object.values(expressions)\n        .filter(e => e.doc)\n        .map(e => `${e.doc.operator}(${e.doc.args.map(a => '<' + a + '>').join(', ')}) => ${e.doc.result}\\n${e.doc.description}`)\n        .join('\\n\\n');\n  }\n\n  parse(docSet, nodes, queryString) {\n    // console.log(`\\n===> ${queryString}\\n`);\n    const result = this.parse1(\n      docSet,\n      nodes,\n      this.indexNodes(docSet, nodes),\n      { data: nodes },\n      this.queryArray(queryString),\n    );\n\n    if (result.data) {\n      switch (this.currentStepType) {\n      case 'nodes':\n        result.data = result.data.map(n => ({ id: docSet.unsuccinctifyScopes(n.bs)[0][2].split('/')[1] }));\n      }\n    }\n\n    const ret = JSON.stringify(result, null, 2);\n    // console.log(`${ret}\\n`);\n    return ret;\n  }\n}\n\nmodule.exports = Tribos;\n", "const Tribos = require('../lib/tribos.cjs');\n\nconst treeSequenceSchemaString = `\n\"\"\"The nodes of a tree\"\"\"\ntype treeSequence {\n  \"\"\"The id of the sequence\"\"\"\n  id: String!\n  \"\"\"The number of nodes in the tree sequence\"\"\"\n  nNodes: Int!\n  \"\"\"The nodes in the tree sequence\"\"\"\n  nodes: [node!]!\n  \"\"\"The JSON result for a Tribos query, as a string\"\"\"\n  tribos(\n    \"\"\"The Tribos query string\"\"\"\n    query: String!\n  ): String!\n  \"\"\"The JSON results for the Tribos queries, as an array of strings\"\"\"\n  triboi(\n    \"\"\"The Tribos query strings\"\"\"\n    queries: [String!]!\n  ): [String!]!\n  \"\"\"Tribos documentation\"\"\"\n  tribosDoc: String!\n  \"\"\"A list of the tags of this sequence\"\"\"\n  tags: [String!]!\n  \"\"\"A list of the tags of this sequence as key/value tuples\"\"\"\n  tagsKv: [KeyValue!]!\n  \"\"\"Whether or not the sequence has the specified tag\"\"\"\n  hasTag(\n    \"\"\"The tag name\"\"\"\n    tagName: String\n  ): Boolean!\n}\n`;\n\nconst treeSequenceResolvers = {\n  nNodes: root => root.blocks.length,\n  nodes: root => root.blocks,\n  tribos: (root, args, context) =>\n    new Tribos().parse(context.docSet, root.blocks, args.query),\n  triboi: (root, args, context) =>\n    args.queries.map(q => new Tribos().parse(context.docSet, root.blocks, q)),\n  tribosDoc: () => new Tribos().doc(),\n  tags: root => Array.from(root.tags),\n  tagsKv: root => Array.from(root.tags).map(t => {\n    if (t.includes(':')) {\n      return [t.substring(0, t.indexOf(':')), t.substring(t.indexOf(':') + 1)];\n    } else {\n      return [t, ''];\n    }\n  }),\n  hasTag: (root, args) => root.tags.has(args.tagName),\n};\n\nmodule.exports = {\n  treeSequenceSchemaString,\n  treeSequenceResolvers,\n};\n", "const xre = require('xregexp');\nconst utils = require('../../util/index.cjs');\nconst { dumpBlock } = require('../lib/dump.cjs');\n\nconst scopeMatchesStartsWith = (sw, s) => {\n  if (sw.length === 0) {\n    return true;\n  }\n\n  for (const swv of sw) {\n    if (s.startsWith(swv)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst blockSchemaString = `\n\"\"\"Part of a sequence, roughly equivalent to a USFM paragraph\"\"\"\ntype Block {\n  \"\"\"The length in bytes of the succinct representation of c (block items)\"\"\"\n  cBL: Int!\n  \"\"\"The length in bytes of the succinct representation of bg (block grafts)\"\"\"\n  bgBL: Int!\n  \"\"\"The length in bytes of the succinct representation of os (open scopes)\"\"\"\n  osBL: Int!\n  \"\"\"The length in bytes of the succinct representation of is (included scopes)\"\"\"\n  isBL: Int!\n  \"\"\"The length in bytes of the succinct representation of nt (nextToken at the start of the block)\"\"\"\n  ntBL: Int!\n  \"\"\"The number of items in the succinct representation of c (block items)\"\"\"\n  cL: Int!\n  \"\"\"The number of items in the succinct representation of bg (block grafts)\"\"\"\n  bgL: Int!\n  \"\"\"The number of items in the succinct representation of os (open scopes)\"\"\"\n  osL: Int!\n  \"\"\"The number of items in the succinct representation of is (included scopes)\"\"\"\n  isL: Int!\n  \"\"\"A list of included scopes for this block\"\"\"\n  is: [Item!]!\n  \"\"\"A list of open scopes for this block\"\"\"\n  os: [Item!]!\n  \"\"\"The block scope for this block\"\"\"\n  bs: Item!\n  \"\"\"A list of block grafts for this block\"\"\"\n  bg: [Item!]!\n  \"\"\"The value of nextToken at the start of this block\"\"\"\n  nt: Int!\n  \"\"\"A list of items from the c (content) field of the block\"\"\"\n  items(\n    \"\"\"Only return items that are within specific scopes\"\"\"\n    withScopes: [String!]\n    \"\"\"If true, withScopes filtering matches items within at least one of the specified scopes\"\"\"\n    anyScope: Boolean\n    \"\"\"Only return items that are within a chapterVerse range (ch or ch:v or ch:v-v or ch:v-ch:v)\"\"\"\n    withScriptureCV: String\n    \"\"\"If true, adds scope and nextToken information to each token\"\"\"\n    includeContext: Boolean\n  ) : [Item!]! \n  \"\"\"A list of tokens from the c (content) field of the block\"\"\"\n  tokens(\n    \"\"\"Only return tokens that are within specific scopes\"\"\"\n    withScopes: [String!]\n    \"\"\"If true, withScopes filtering matches tokens within at least one of the specified scopes\"\"\"\n    anyScope: Boolean\n    \"\"\"Only return tokens that are within a chapterVerse range (ch or ch:v or ch:v-v or ch:v-ch:v)\"\"\"\n    withScriptureCV: String\n    \"\"\"If true, adds scope and nextToken information to each token\"\"\"\n    includeContext: Boolean\n    \"\"\"Return tokens whose payload is an exact match to one of the specified strings\"\"\"\n    withChars: [String!]\n    \"\"\"Return tokens whose payload matches one of the specified regexes\"\"\"\n    withMatchingChars: [String!]\n    \"\"\"Return tokens with one of the specified subTypes\"\"\"\n    withSubTypes: [String!]\n  ) : [Item!]!\n  \"\"\"The text of the block as a single string\"\"\"\n  text(\n    \"\"\"Only return text that is within a chapterVerse range (ch or ch:v or ch:v-v or ch:v-ch:v)\"\"\"\n    withScriptureCV: String\n    \"\"\"If true, converts each whitespace character to a single space\"\"\"\n    normalizeSpace: Boolean\n  ): String!\n  \"\"\"'Block items grouped by scopes or milestones\"\"\"\n  itemGroups(\n    \"\"\"Produce one itemGroup for every match of the list of scopes\"\"\"\n    byScopes: [String!]\n    \"\"\"Start a new itemGroup whenever a milestone in the list is encountered\"\"\"\n    byMilestones: [String!]\n  ): [ItemGroup]!\n  \"\"\"The block content as a string in a compact eyeballable format\"\"\"\n  dump: String!\n  \"\"\"A list of the labels for the block\\\\'s bs, os and is scopes\"\"\"\n  scopeLabels(\n    \"\"\"Only include scopes that begin with this value\"\"\"\n    startsWith: [String!]\n  ): [String!]!\n}\n`;\n\nconst blockResolvers = {\n  cBL: root => root.c.length,\n  bgBL: root => root.bg.length,\n  osBL: root => root.os.length,\n  isBL: root => root.is.length,\n  ntBL: root => root.nt.length,\n  cL: (root, args, context) => context.docSet.countItems(root.c),\n  bgL: (root, args, context) => context.docSet.countItems(root.bg),\n  osL: (root, args, context) => context.docSet.countItems(root.os),\n  isL: (root, args, context) => context.docSet.countItems(root.is),\n  is: (root, args, context) => context.docSet.unsuccinctifyScopes(root.is),\n  os: (root, args, context) => context.docSet.unsuccinctifyScopes(root.os),\n  bs: (root, args, context) => {\n    // eslint-disable-next-line no-unused-vars\n    const [itemLength, itemType, itemSubtype] = utils.succinct.headerBytes(root.bs, 0);\n    return context.docSet.unsuccinctifyScope(root.bs, itemType, itemSubtype, 0);\n  },\n  bg: (root, args, context) => context.docSet.unsuccinctifyGrafts(root.bg),\n  nt: root => root.nt.nByte(0),\n  items:\n    (root, args, context) => {\n      if (args.withScopes && args.withScriptureCV) {\n        throw new Error('Cannot specify both withScopes and withScriptureCV');\n      }\n\n      if (args.withScriptureCV) {\n        return context.docSet.unsuccinctifyItemsWithScriptureCV(root, args.withScriptureCV, {}, args.includeContext || false);\n      } else {\n        return context.docSet.unsuccinctifyPrunedItems(\n          root,\n          {\n            tokens: true,\n            scopes: true,\n            grafts: true,\n            requiredScopes: args.withScopes || [],\n            anyScope: args.anyScope || false,\n          },\n        );\n      }\n    },\n  tokens:\n    (root, args, context) => {\n      if (Object.keys(args).filter(a => a.includes('Chars')).length > 1) {\n        throw new Error('Only one of \"withChars\", \"withAnyCaseChars\" and \"withCharsMatchingRegex\" may be specified');\n      }\n\n      let ret;\n\n      if (args.withScriptureCV) {\n        ret = context.docSet.unsuccinctifyItemsWithScriptureCV(\n          root,\n          args.withScriptureCV,\n          { tokens: true },\n          args.includeContext || false,\n        );\n      } else {\n        ret = context.docSet.unsuccinctifyPrunedItems(\n          root,\n          {\n            tokens: true,\n            scopes: true,\n            requiredScopes: args.withScopes || [],\n            anyScope: args.anyScope || false,\n          },\n        );\n      }\n\n      if (args.withSubTypes) {\n        ret = ret.filter(i => args.withSubTypes.includes(i[1]));\n      }\n\n      if (args.withChars) {\n        ret = ret.filter(i => args.withChars.includes(i[2]));\n      } else if (args.withMatchingChars) {\n        ret = ret.filter(i => {\n          for (const re of args.withMatchingChars) {\n            if (xre.test(i, xre(re))) {\n              return true;\n            }\n          }\n          return false;\n        });\n      }\n\n      return ret.filter(i => i[0] === 'token');\n    },\n  text:\n    (root, args, context) => {\n      const tokens = args.withScriptureCV ?\n        context.docSet.unsuccinctifyItemsWithScriptureCV(\n          root,\n          args.withScriptureCV,\n          { tokens: true },\n          false,\n        ) :\n        context.docSet.unsuccinctifyItems(root.c, { tokens: true }, null);\n      let ret = tokens.map(t => t[2]).join('').trim();\n\n      if (args.normalizeSpace) {\n        ret = ret.replace(/[ \\t\\n\\r]+/g, ' ');\n      }\n      return ret;\n    },\n  itemGroups: (root, args, context) => {\n    if (args.byScopes && args.byMilestones) {\n      throw new Error('Cannot specify both byScopes and byMilestones');\n    }\n\n    if (!args.byScopes && !args.byMilestones) {\n      throw new Error('Must specify either byScopes or byMilestones');\n    }\n\n    if (args.byScopes) {\n      return context.docSet.sequenceItemsByScopes([root], args.byScopes);\n    } else {\n      return context.docSet.sequenceItemsByMilestones([root], args.byMilestones);\n    }\n  },\n  dump: (root, args, context) => dumpBlock(context.docSet.unsuccinctifyBlock(root, {}, null)),\n  scopeLabels: (root, args, context) =>\n    [...context.docSet.unsuccinctifyBlockScopeLabelsSet(root)]\n      .filter(s => !args.startsWith || scopeMatchesStartsWith(args.startsWith, s)),\n};\n\nmodule.exports = {\n  blockSchemaString,\n  blockResolvers,\n};\n", "const utils = require('../../util/index.cjs');\n\nconst exactSearchTermIndexes = (docSet, chars, allChars) => {\n  let charsIndexesArray = [\n    chars\n      .map(\n        c => [utils.enums.enumStringIndex(docSet.enums.wordLike, c)],\n      ),\n  ];\n\n  if (allChars) {\n    charsIndexesArray = charsIndexesArray[0];\n  } else {\n    charsIndexesArray = charsIndexesArray.map(ci => ci.reduce((a, b) => a.concat(b)));\n  }\n  return charsIndexesArray;\n};\n\nconst regexSearchTermIndexes = (docSet, chars, allChars) => {\n  let charsIndexesArray = [\n    chars\n      .map(\n        c =>\n          utils.enums.enumRegexIndexTuples(docSet.enums.wordLike, c)\n            .map(tup => tup[0]),\n      ),\n  ];\n\n  if (allChars) {\n    charsIndexesArray = charsIndexesArray[0];\n  } else {\n    charsIndexesArray = charsIndexesArray.map(ci => ci.reduce((a, b) => a.concat(b)));\n  }\n  return charsIndexesArray;\n};\n\nconst sequenceMatchesSearchTerms = (seq, charsIndexesArray, allChars) => {\n  if (allChars && charsIndexesArray.filter(i => i.length === 0).length > 0) {\n    return false;\n  }\n\n  charsIndexesArray = charsIndexesArray.filter(i => i.length > 0);\n\n  if (charsIndexesArray.length === 0) {\n    return false;\n  }\n\n  for (const charsIndexes of charsIndexesArray) {\n    let found = false;\n\n    for (const charsIndex of charsIndexes) {\n      const isPresent = charsIndex >= 0 && seq.tokensPresent.get(charsIndex) > 0;\n\n      if (isPresent) {\n        found = true;\n        break;\n      }\n    }\n\n    if (allChars && !found) {\n      return false;\n    } else if (!allChars && found) {\n      return true;\n    }\n  }\n  return allChars;\n};\n\nconst sequenceHasChars = (docSet, seq, chars, allChars) => {\n  let charsIndexesArray = exactSearchTermIndexes(docSet, chars, allChars);\n  return sequenceMatchesSearchTerms(seq, charsIndexesArray, allChars);\n};\n\nconst sequenceHasMatchingChars = (docSet, seq, chars, allChars) => {\n  let charsIndexesArray = regexSearchTermIndexes(docSet, chars, allChars);\n  return sequenceMatchesSearchTerms(seq, charsIndexesArray, allChars);\n};\n\nmodule.exports = {\n  sequenceHasChars,\n  sequenceHasMatchingChars,\n  regexSearchTermIndexes,\n  exactSearchTermIndexes,\n};\n", "const {\n  sequenceHasChars,\n  sequenceHasMatchingChars,\n  regexSearchTermIndexes,\n  exactSearchTermIndexes,\n} = require('../lib/sequence_chars.cjs');\n\nconst options = {\n  tokens: false,\n  scopes: true,\n  grafts: false,\n  requiredScopes: [],\n};\n\nconst blockHasAtts = (docSet, block, attSpecsArray, attValuesArray, requireAll) => {\n  let matched = new Set([]);\n\n  for (const item of docSet.unsuccinctifyPrunedItems(block, options, false)) {\n    const [att, attType, element, key, count, value] = item[2].split('/');\n\n    for (const [n, attSpecs] of attSpecsArray.entries()) {\n      for (const attSpec of attSpecs) {\n        if (\n          attType === attSpec.attType &&\n          element === attSpec.tagName &&\n          key === attSpec.attKey &&\n          parseInt(count) === attSpec.valueN &&\n          attValuesArray[n].includes(value)\n        ) {\n          if (!requireAll) {\n            return true;\n          }\n          matched.add(n);\n          break;\n        }\n      }\n\n      if (matched.size === attSpecsArray.length) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nconst sequenceSchemaString = `\n\"\"\"A contiguous flow of content\"\"\"\ntype Sequence {\n  \"\"\"The id of the sequence\"\"\"\n  id: String!\n  \"\"\"The type of the sequence (main, heading...)\"\"\"\n  type: String!\n  \"\"\"The number of blocks in the sequence\"\"\"\n  nBlocks: Int!\n  \"\"\"The blocks in the sequence\"\"\"\n  blocks(\n    \"\"\"Only return blocks where the list of scopes is open\"\"\"\n    withScopes: [String!]\n    \"\"\"Only return blocks whose zero-indexed position is in the list\"\"\"\n    positions: [Int!]\n    \"\"\"Only return blocks with the specified block scope (eg 'blockScope/p'\"\"\"\n    withBlockScope: String\n    \"\"\"Only return blocks that contain items within the specified chapter, verse or chapterVerse range\"\"\"\n    withScriptureCV: String\n    \"\"\"Ordered list of attribute specs whose values must match those in 'attValues'\"\"\"\n    attSpecs: [[AttSpec!]!]\n    \"\"\"Ordered list of attribute values, used in conjunction with \\\\'attSpecs\\\\'\"\"\"\n    attValues: [[String!]!]\n    \"\"\"If true, blocks where all attSpecs match will be included\"\"\"\n    allAtts: Boolean\n    \"\"\"Return blocks containing a token whose payload is an exact match to one of the specified strings\"\"\"\n    withChars: [String!]\n    \"\"\"Return blocks containing a token whose payload matches the specified regexes\"\"\"\n    withMatchingChars: [String!]\n    \"\"\"If true, blocks where all regexes match will be included\"\"\"\n    allChars: Boolean\n  ): [Block!]!\n  \"\"\"The items for each block in the sequence\"\"\"\n  blocksItems: [[Item!]!]\n  \"\"\"The tokens for each block in the sequence\"\"\"\n  blocksTokens: [[Item!]!]\n  \"\"\"The text for each block in the sequence\"\"\"\n  blocksText(\n    \"\"\"If true, converts each whitespace character to a single space\"\"\"\n    normalizeSpace: Boolean\n  ): [String!]\n  \"\"\"The text for the sequence\"\"\"\n  text(\n    \"\"\"If true, converts each whitespace character to a single space\"\"\"\n    normalizeSpace: Boolean\n  ) : String!\n  \"\"\"Sequence content grouped by scopes or milestones\"\"\"\n  itemGroups(\n    \"\"\"Produce one itemGroup for every different match of the list of scopes\"\"\"\n    byScopes: [String!]\n    \"\"\"Start a new itemGroup whenever a milestone in the list is encountered\"\"\"\n    byMilestones: [String!]\n  ) : [ItemGroup!]!\n  \"\"\"A list of the tags of this sequence\"\"\"\n  tags: [String!]!\n  \"\"\"A list of the tags of this sequence as key/value tuples\"\"\"\n  tagsKv: [KeyValue!]!\n  \"\"\"Whether or not the sequence has the specified tag\"\"\"\n  hasTag(\n    \"\"\"The specified tag\"\"\"\n    tagName: String!\n  ): Boolean!\n  \"\"\"A list of wordLike token strings in a main sequence\"\"\"\n  wordLikes(\n    \"\"\"Whether to coerce the strings (toLower|toUpper|none)\"\"\"\n    coerceCase: String\n  ) : [String!]!\n  \"\"\"Returns true if a main sequence contains the specified tokens\"\"\"\n  hasChars(\n    \"\"\"Token strings to be matched exactly\"\"\"\n    chars: [String!]\n    \"\"\"If true all tokens must match\"\"\"\n    allChars: Boolean\n  ): Boolean!\n  \"\"\"Returns true if a main sequence contains a match for specified regexes\"\"\"\n  hasMatchingChars(\n    \"\"\"Regexes to be matched\"\"\"\n    chars: [String!]\n    \"\"\"If true all regexes must match\"\"\"\n    allChars: Boolean\n  ): Boolean!\n}\n`;\n\nconst sequenceResolvers = {\n  nBlocks: root => root.blocks.length,\n  blocks: (root, args, context) => {\n    context.docSet.maybeBuildEnumIndexes();\n\n    if (args.withScopes && args.withScriptureCV) {\n      throw new Error('Cannot specify both withScopes and withScriptureCV');\n    }\n\n    if (args.attSpecs && !args.attValues) {\n      throw new Error('Cannot specify attSpecs without attValues');\n    }\n\n    if (!args.attSpecs && args.attValues) {\n      throw new Error('Cannot specify attValues without attSpecs');\n    }\n\n    if (args.attSpecs && args.attValues && (args.attSpecs.length !== args.attValues.length)) {\n      throw new Error('attSpecs and attValues must be same length');\n    }\n\n    if (args.withChars && args.withMatchingChars) {\n      throw new Error('Cannot specify both withChars and withMatchingChars');\n    }\n\n    let ret = root.blocks;\n\n    if (args.positions) {\n      ret = Array.from(ret.entries()).filter(b => args.positions.includes(b[0])).map(b => b[1]);\n    }\n\n    if (args.withScopes) {\n      ret = ret.filter(b => context.docSet.allScopesInBlock(b, args.withScopes));\n    }\n\n    if (args.withScriptureCV) {\n      ret = context.docSet.blocksWithScriptureCV(ret, args.withScriptureCV);\n    }\n\n    if (args.attSpecs) {\n      ret = ret.filter(b => blockHasAtts(context.docSet, b, args.attSpecs, args.attValues, args.allAtts || false));\n    }\n\n    if (args.withBlockScope) {\n      ret = ret.filter(b => context.docSet.blockHasBlockScope(b, args.withBlockScope));\n    }\n\n    if (args.withChars) {\n      if (\n        root.type === 'main' &&\n        !sequenceHasChars(context.docSet, root, args.withChars, args.allChars)\n      ) {\n        return [];\n      }\n\n      let charsIndexesArray = exactSearchTermIndexes(context.docSet, args.withChars, args.allChars);\n\n      for (const charsIndexes of charsIndexesArray) {\n        ret = ret.filter(b => context.docSet.blockHasChars(b, charsIndexes));\n      }\n    }\n\n    if (args.withMatchingChars) {\n      if (\n        root.type === 'main' &&\n        !sequenceHasMatchingChars(context.docSet, root, args.withMatchingChars, args.allChars)\n      ) {\n        return [];\n      }\n\n      let charsIndexesArray = regexSearchTermIndexes(context.docSet, args.withMatchingChars, args.allChars);\n\n      for (const charsIndexes of charsIndexesArray) {\n        ret = ret.filter(b => context.docSet.blockHasChars(b, charsIndexes));\n      }\n    }\n    return ret;\n  },\n  blocksItems: (root, args, context) =>\n    root.blocks.map(b => context.docSet.unsuccinctifyItems(b.c, {}, null)),\n  blocksTokens: (root, args, context) =>\n    root.blocks.map(b => context.docSet.unsuccinctifyItems(b.c, { tokens: true }, null)),\n  blocksText: (root, args, context) =>\n    root.blocks.map(\n      b => {\n        let ret = context.docSet\n          .unsuccinctifyItems(b.c, { tokens: true }, null)\n          .map(t => t[2])\n          .join('');\n\n        if (args.normalizeSpace) {\n          ret = ret.replace(/[ \\t\\n\\r]+/g, ' ');\n        }\n        return ret;\n      },\n    ),\n  text: (root, args, context) => {\n    let ret = root.blocks.map(b => context.docSet\n      .unsuccinctifyItems(b.c, { tokens: true }, null)\n      .map(t => t[2])\n      .join(''),\n    ).join('\\n');\n\n    if (args.normalizeSpace) {\n      ret = ret.replace(/[ \\t\\n\\r]+/g, ' ');\n    }\n    return ret;\n  },\n  itemGroups: (root, args, context) => {\n    if (args.byScopes && args.byMilestones) {\n      throw new Error('Cannot specify both byScopes and byMilestones');\n    }\n\n    if (!args.byScopes && !args.byMilestones) {\n      throw new Error('Must specify either byScopes or byMilestones');\n    }\n\n    if (args.byScopes) {\n      return context.docSet.sequenceItemsByScopes(\n        root.blocks,\n        args.byScopes,\n      );\n    } else {\n      return context.docSet.sequenceItemsByMilestones(root.blocks, args.byMilestones);\n    }\n  },\n  tags: root => Array.from(root.tags),\n  tagsKv: root => Array.from(root.tags).map(t => {\n    if (t.includes(':')) {\n      return [t.substring(0, t.indexOf(':')), t.substring(t.indexOf(':') + 1)];\n    } else {\n      return [t, ''];\n    }\n  }),\n  hasTag: (root, args) => root.tags.has(args.tagName),\n  wordLikes: (root, args, context) => {\n    if (root.type !== 'main') {\n      throw new Error(`Only available for the main sequence, not ${root.type}`);\n    }\n\n    if (args.coerceCase && !['toLower', 'toUpper', 'none'].includes(args.coerceCase)) {\n      throw new Error(`coerceCase, when present, must be 'toLower', 'toUpper' or 'none', not '${args.coerceCase}'`);\n    }\n    context.docSet.maybeBuildEnumIndexes();\n    let tokens = new Set();\n    let n = 0;\n\n    for (const b of root.tokensPresent) {\n      if (b) {\n        const enumOffset = context.docSet.enumIndexes['wordLike'][n];\n        let tokenString = context.docSet.enums['wordLike'].countedString(enumOffset);\n\n        if (args.coerceCase === 'toLower') {\n          tokenString = tokenString.toLowerCase();\n        }\n\n        if (args.coerceCase === 'toUpper') {\n          tokenString = tokenString.toUpperCase();\n        }\n        tokens.add(tokenString);\n      }\n      n++;\n    }\n    return Array.from(tokens).sort();\n  },\n  hasChars: (root, args, context) => {\n    if (root.type !== 'main') {\n      throw new Error(`Only available for the main sequence, not ${root.type}`);\n    }\n\n    return sequenceHasChars(context.docSet, root, args.chars, args.allChars || false);\n  },\n  hasMatchingChars: (root, args, context) => {\n    if (root.type !== 'main') {\n      throw new Error(`Only available for the main sequence, not ${root.type}`);\n    }\n\n    return sequenceHasMatchingChars(context.docSet, root, args.chars, args.allChars);\n  },\n};\n\nmodule.exports = {\n  sequenceSchemaString,\n  sequenceResolvers,\n};\n", "const xre = require('xregexp');\nconst utils = require('../../util/index.cjs');\n\nconst updatedOpenScopes = (openScopes, items) => {\n  let ret = openScopes;\n\n  for (const item of items) {\n    if (item[0] === 'scope') {\n      if (item[1] === 'start') {\n        const existingScopes = ret.filter(s => s === item[2]);\n\n        if (existingScopes.length === 0) {\n          ret.push(item[2]);\n        }\n      } else {\n        ret = ret.filter(s => s !== item[2]);\n      }\n    }\n  }\n  return ret;\n};\n\nconst do_chapter_cv = (root, context, mainSequence, chapterN, includeContext) => {\n  const ci = root.chapterIndex(chapterN);\n\n  if (ci) {\n    const block = mainSequence.blocks[ci.startBlock];\n    return [[\n      updatedOpenScopes(\n        context.docSet.unsuccinctifyScopes(block.os).map(s => s[2]),\n        context.docSet.unsuccinctifyItems(block.c, {}, 0, [])\n          .slice(0, ci.startItem + 1)\n          .filter(i => i[0] === 'scope'),\n      ),\n      context.docSet.itemsByIndex(mainSequence, ci, includeContext || false)\n        .reduce((a, b) => a.concat([['token', 'lineSpace', ' ']].concat(b))),\n    ]];\n  } else {\n    return [];\n  }\n};\n\nconst do_chapter_verse_array = (root, context, mainSequence, chapterN, verses, includeContext, doMap, mappedDocSetId) => {\n  let docSet = context.docSet;\n  let book = root.headers.bookCode;\n  let chapterVerses = verses.map(v => [parseInt(chapterN), parseInt(v)]);\n\n  if (doMap) {\n    const mappedDocSet = root.processor.docSets[mappedDocSetId];\n\n    if (mappedDocSet) {\n      docSet = mappedDocSet;\n    }\n\n    if ('forward' in mainSequence.verseMapping && chapterN in mainSequence.verseMapping.forward) {\n      let mappings = [];\n\n      for (const verse of verses) { // May handle multiple verses one day, but, eg, may map to multiple books\n        mappings.push(\n          utils.versification.mapVerse(\n            mainSequence.verseMapping.forward[chapterN],\n            root.headers.bookCode,\n            chapterN,\n            verse,\n          ),\n        );\n      }\n\n      const mapping = mappings[0];\n      book = mapping[0];\n      chapterVerses = mapping[1];\n    }\n\n    const mappedDocument = docSet.documentWithBook(book);\n\n    if (mappedDocument) {\n      const mappedMainSequence = mappedDocument.sequences[mappedDocument.mainId];\n\n      if (mappedMainSequence.verseMapping && 'reversed' in mappedMainSequence.verseMapping) {\n        const doubleMappings = [];\n\n        for (const [origC, origV] of chapterVerses) {\n          if (`${origC}` in mappedMainSequence.verseMapping.reversed) {\n            doubleMappings.push(\n              utils.versification.mapVerse(\n                mappedMainSequence.verseMapping.reversed[`${origC}`],\n                book,\n                origC,\n                origV,\n              ),\n            );\n          } else {\n            doubleMappings.push([book, [[origC, origV]]]);\n          }\n          book = doubleMappings[0][0];\n          chapterVerses = doubleMappings.map(bcv => bcv[1]).reduce((a, b) => a.concat(b));\n        }\n      }\n    }\n  }\n\n  const cvis = {};\n\n  const document = docSet.documentWithBook(book);\n\n  if (!document) {\n    return [];\n  }\n\n  const documentMainSequence = document.sequences[document.mainId];\n\n  for (const chapter of chapterVerses.map(cv => cv[0])) {\n    if (!(chapter in cvis)) {\n      cvis[chapter] = document.chapterVerseIndex(chapter);\n    }\n  }\n\n  const retItemGroups = [];\n\n  for (const [chapter, verse] of chapterVerses) {\n    if (cvis[chapter]) {\n      let retItems = [];\n      let firstStartBlock;\n      let firstStartItem;\n\n      if (cvis[chapter][verse]) {\n        for (const ve of cvis[chapter][verse]) {\n          if (!firstStartBlock) {\n            firstStartBlock = ve.startBlock;\n            firstStartItem = ve.startItem;\n          }\n          retItems = retItems.concat(docSet.itemsByIndex(documentMainSequence, ve, includeContext || null)\n            .reduce((a, b) => a.concat([['token', 'lineSpace', ' ']].concat(b))));\n        }\n\n        const block = documentMainSequence.blocks[firstStartBlock];\n\n        retItemGroups.push([\n          updatedOpenScopes(\n            docSet.unsuccinctifyScopes(block.os).map(s => s[2]),\n            docSet.unsuccinctifyItems(block.c, {}, 0, [])\n              .slice(0, firstStartItem + 1)\n              .filter(i => i[0] === 'scope'),\n          ),\n          retItems,\n        ]);\n      }\n    }\n  }\n  return retItemGroups;\n};\n\nconst scopesMatchAChapterSpec = (scopes, chapterSpecs) => {\n  if (chapterSpecs.length === 0) {\n    return false;\n  } else if (\n    scopes.includes(`chapter/${chapterSpecs[0][0]}`) &&\n    (!chapterSpecs[0][1] || scopes.filter(s => s.startsWith('verse/') && parseInt(s.split('/')[1]) >= chapterSpecs[0][1]).length > 0) &&\n    (!chapterSpecs[0][2] || scopes.filter(s => s.startsWith('verse/') && parseInt(s.split('/')[1]) <= chapterSpecs[0][2]).length > 0)\n  ) {\n    return true;\n  } else {\n    return scopesMatchAChapterSpec(scopes, chapterSpecs.slice(1));\n  }\n};\n\nconst do_chapterVerses = (root, context, mainSequence, fromCV, toCV, includeContext) => {\n  const [fromCInt, fromVInt] = fromCV.split(':').map(str => parseInt(str));\n  const [toCInt, toVInt] = toCV.split(':').map(str => parseInt(str));\n\n  if (toCInt < fromCInt) {\n    throw new Error(`cv chapterVerses requires fromChapter <= toChapter, not ${fromCInt} to ${toCInt}`);\n  }\n\n  const chapterSpecs = []; // [chN, minVN?, maxVN?]\n  let ch = fromCInt;\n\n  while (ch <= toCInt) {\n    chapterSpecs.push([\n      ch,\n      ch === fromCInt ? fromVInt : null,\n      ch === toCInt ? toVInt : null,\n    ]);\n    ch++;\n  }\n  return context.docSet.sequenceItemsByScopes(mainSequence.blocks, ['chapter/', 'verse/'], includeContext)\n    .filter(ig => scopesMatchAChapterSpec(ig[0], chapterSpecs));\n};\n\nconst do_cv_separate_args = (root, args, context, mainSequence, doMap, mappedDocSetId) => {\n  if (args.chapter && !args.verses) { // whole chapter\n    return do_chapter_cv(root, context, mainSequence, args.chapter, args.includeContext);\n  } else if (args.verses) { // c:v, c:v-v one day, may be mapped\n    return do_chapter_verse_array(root, context, mainSequence, args.chapter, args.verses, args.includeContext, doMap, mappedDocSetId);\n  } else {\n    throw new Error('Unexpected args to do_cv_separate_args');\n  }\n};\n\nconst do_cv_string_arg = (root, args, context, mainSequence) => {\n  if (xre.test(args.chapterVerses, xre('^[0-9]+:[0-9]+-[0-9]+:[0-9]+$'))) { // c:v-c:v\n    const [fromSpec, toSpec] = args.chapterVerses.split('-');\n    return do_chapterVerses(root, context, mainSequence, fromSpec, toSpec, args.includeContext);\n  } else if (xre.test(args.chapterVerses, xre('^[0-9]+:[0-9]+-[0-9]+$'))) { // c:v-v\n    const [ch, vRange] = args.chapterVerses.split(':');\n    const [fromV, toV] = vRange.split('-');\n    return do_chapterVerses(root, context, mainSequence, `${ch}:${fromV}`, `${ch}:${toV}`, args.includeContext);\n  } else if (xre.test(args.chapterVerses, xre('^[0-9]+:[0-9]+$'))) { // c:v\n    const [ch, v] = args.chapterVerses.split(':');\n    return do_chapterVerses(root, context, mainSequence, `${ch}:${v}`, `${ch}:${v}`, args.includeContext);\n  } else if (xre.test(args.chapterVerses, xre('^[0-9]+$'))) { // c\n    const ch = args.chapterVerses;\n    const cvi = root.chapterVerseIndex(ch);\n\n    if (!cvi) {\n      throw new Error(`No chapter ${ch} found`);\n    }\n\n    const verseNs = cvi.map((c, n) => [n, c]).filter(nc => nc[1].length > 0).map(nc => nc[0]);\n    return do_chapterVerses(root, context, mainSequence, `${ch}:${Math.min(verseNs)}`, `${ch}:${Math.max(verseNs)}`, args.includeContext);\n  } else {\n    throw new Error(`Could not parse chapterVerses string '${args.chapterVerses}'`);\n  }\n};\n\nconst do_cv = (root, args, context, doMap, mappedDocSetId) => {\n  context.docSet = root.processor.docSets[root.docSetId];\n  const mainSequence = root.sequences[root.mainId];\n\n  if (!args.chapter && !args.chapterVerses) {\n    throw new Error('Must specify either chapter or chapterVerses for cv');\n  }\n\n  if (args.chapter && args.chapterVerses) {\n    throw new Error('Must not specify both chapter and chapterVerses for cv');\n  }\n\n  if (args.chapterVerses && args.verses) {\n    throw new Error('Must not specify both chapterVerses and verses for cv');\n  }\n\n  if (args.chapter) {\n    return do_cv_separate_args(root, args, context, mainSequence, doMap, mappedDocSetId);\n  } else {\n    return do_cv_string_arg(root, args, context, mainSequence);\n  }\n};\n\nmodule.exports = { do_cv };\n", "const xre = require('xregexp');\n\nconst { do_cv } = require('../lib/do_cv.cjs');\n\nconst headerById = (root, id) =>\n  (id in root.headers) ? root.headers[id] : null;\n\nconst documentSchemaString = `\n\"\"\"A document, typically corresponding to USFM for one book\"\"\"\ntype Document {\n  \"\"\"The id of the document\"\"\"\n  id: String!\n  \"\"\"A parsed version of the id header\"\"\"\n  idParts: idParts!\n  \"\"\"The id of the docSet to which this document belongs\"\"\"\n  docSetId: String!\n  \"\"\"USFM header information such as TOC\"\"\"\n  headers: [KeyValue!]!\n  \"\"\"One USFM header\"\"\"\n  header(\n    \"\"\"The header id, corresponding to the tag name minus any trailing '1'\"\"\"\n    id: String!\n  ): String\n  \"\"\"The main sequence\"\"\"\n  mainSequence: Sequence!\n  \"\"\"The number of sequences\"\"\"\n  nSequences: Int!\n  \"\"\"A list of sequences for this document\"\"\"\n  sequences(\n    \"\"\"ids of sequences to include, if found\"\"\"\n    ids: [String!]\n    \"\"\"types of sequences to include, if found\"\"\"\n    types: [String!]\n    \"\"\"Only return sequences with all the specified tags\"\"\"\n    withTags: [String!]\n    \"\"\"Only return sequences with none of the specified tags\"\"\"\n    withoutTags: [String!]\n  ): [Sequence!]!\n  \"\"\"A list of table sequences for this document\"\"\"\n  tableSequences(\n    \"\"\"ids of sequences to include, if found\"\"\"\n    ids: [String!]\n    \"\"\"Only return sequences with all the specified tags\"\"\"\n    withTags: [String!]\n    \"\"\"Only return sequences with none of the specified tags\"\"\"\n    withoutTags: [String!]\n  ): [tableSequence!]!\n  \"\"\"A list of tree sequences for this document\"\"\"\n  treeSequences(\n    \"\"\"ids of sequences to include, if found\"\"\"\n    ids: [String!]\n    \"\"\"Only return sequences with all the specified tags\"\"\"\n    withTags: [String!]\n    \"\"\"Only return sequences with none of the specified tags\"\"\"\n    withoutTags: [String!]\n  ): [treeSequence!]!\n  \"\"\"A list of key-value sequences for this document\"\"\"\n  kvSequences(\n    \"\"\"ids of sequences to include, if found\"\"\"\n    ids: [String!]\n    \"\"\"Only return sequences with all the specified tags\"\"\"\n    withTags: [String!]\n    \"\"\"Only return sequences with none of the specified tags\"\"\"\n    withoutTags: [String!]\n  ): [kvSequence!]!\n  \"\"\"A list of text (ie non-table, non-tree, non-kv) sequences for this document\"\"\"\n  textSequences(\n    \"\"\"ids of sequences to include, if found\"\"\"\n    ids: [String!]\n    \"\"\"Only return sequences with all the specified tags\"\"\"\n    withTags: [String!]\n    \"\"\"Only return sequences with none of the specified tags\"\"\"\n    withoutTags: [String!]\n  ): [Sequence!]!\n  \"\"\"The sequence with the specified id\"\"\"\n  sequence(\n    \"\"\"id of the sequence\"\"\"\n    id: String!\n  ): Sequence\n  \"\"\"The table sequence with the specified id\"\"\"\n  tableSequence(\n    \"\"\"id of the sequence\"\"\"\n    id: String!\n  ): tableSequence\n  \"\"\"The tree sequence with the specified id\"\"\"\n  treeSequence(\n    \"\"\"id of the sequence\"\"\"\n    id: String!\n  ): treeSequence\n  \"\"\"The key-value sequence with the specified id\"\"\"\n  kvSequence(\n    \"\"\"id of the sequence\"\"\"\n    id: String!\n  ): kvSequence\n  \"\"\"The blocks of the main sequence\"\"\"\n  mainBlocks: [Block!]!\n  \"\"\"The items for each block of the main sequence\"\"\"\n  mainBlocksItems: [[Item!]!]!\n  \"\"\"The tokens for each block of the main sequence\"\"\"\n  mainBlocksTokens: [[Item!]!]!\n  \"\"\"The text for each block of the main sequence\"\"\"\n  mainBlocksText(\n    \"\"\"If true, converts each whitespace character to a single space\"\"\"\n    normalizeSpace: Boolean\n  ): [String!]!\n  \"\"\"The text for the main sequence\"\"\"\n  mainText(\n    \"\"\"If true, converts each whitespace character to a single space\"\"\"\n    normalizeSpace: Boolean\n  ): String!\n  \"\"\"A list of the tags of this document\"\"\"\n  tags: [String!]!\n  \"\"\"A list of the tags of this document as key/value tuples\"\"\"\n  tagsKv: [KeyValue!]!\n  \"\"\"'Whether or not the document has the specified tag\"\"\"\n  hasTag(\n    tagName: String!\n  ): Boolean!\n  \"\"\"Content for a Scripture reference within this document, using local versification\"\"\"\n  cv(\n    \"\"\"The chapter number (as a string)\"\"\"\n    chapter: String\n    \"\"\"'A list of verse numbers (as strings)\"\"\"\n    verses: [String!]\n    \"\"\"A chapterVerse Reference (ch:v-ch:v)\"\"\"\n    chapterVerses: String\n    \"\"\"If true, adds scope and nextToken information to each token\"\"\"\n    includeContext: Boolean\n  ): [ItemGroup!]!\n  \"\"\"Content for a Scripture reference within this document, using the versification of the specified docSet\"\"\"\n  mappedCv(\n    \"\"\"The chapter number (as a string)\"\"\"\n    chapter: String!\n    \"\"\"The id of the mapped docSet\"\"\"\n    mappedDocSetId: String!\n    \"\"\"A list of verse numbers (as strings)\"\"\"\n    verses: [String!]!\n    \"\"\"If true, adds scope and nextToken information to each token\"\"\"\n    includeContext: Boolean\n  ): [ItemGroup!]!\n  \"\"\"Content for each verse of a chapter within this document, using the versification of the specified docSet\"\"\"\n  mappedCvs(\n    \"\"\"The chapter number (as a string)\"\"\"\n    chapter: String!\n    \"\"\"The id of the mapped docSet\"\"\"\n    mappedDocSetId: String!\n    \"\"\"If true, adds scope and nextToken information to each token\"\"\"\n    includeContext: Boolean\n  ): [[ItemGroup!]!]!\n  \"\"\"What's previous and next with respect to the specified verse\"\"\"\n  cvNavigation(\n    \"\"\"The chapter number (as a string)\"\"\"\n    chapter: String!\n    \"\"\"A verse number (as a string)\"\"\"\n    verse: String!\n  ): cvNavigation\n  \"\"\"The content of the main sequence indexed by chapterVerse\"\"\"\n  cvIndexes: [cvIndex]!\n  \"\"\"The content of the specified chapter indexed by chapterVerse\"\"\"\n  cvIndex(\n    \"\"\"The chapter number\"\"\"\n    chapter: Int!\n  ): cvIndex!\n  \"\"\"The content of the main sequence indexed by chapter\"\"\"\n  cIndexes: [cIndex]!\n  \"\"\"The content of a chapter\"\"\"\n  cIndex(\n    \"\"\"'The chapter number\"\"\"\n    chapter: Int!\n  ): cIndex!\n  \"\"\"Verses matching the arguments\"\"\"\n  cvMatching(\n    \"\"\"Return verses containing a token whose payload is an exact match to one of the specified strings\"\"\"\n    withChars: [String!]\n    \"\"\"Return verses containing a token whose payload matches the specified regexes\"\"\"\n    withMatchingChars: [String!]\n    \"\"\"Only return blocks where the list of scopes is open\"\"\"\n    withScopes: [String!]\n    \"\"\"If true, verses where all regexes match will be included\"\"\"\n    allChars: Boolean\n    \"\"\"If true, verses where all scopes match will be included\"\"\"\n    allScopes: Boolean\n  ): [ItemGroup!]!\n  \"\"\"A string of PERF JSON for this document\"\"\"\n  perf(\n    \"\"\"Format JSON string with this indent\"\"\"\n    indent: Int\n  ): String! \n  \"\"\"A string of USFM for this document\"\"\"\n  usfm: String! \n  \"\"\"A string of SOFRIA JSON for this document\"\"\"\n  sofria(\n    \"\"\"Format JSON string with this indent\"\"\"\n    indent: Int\n    \"\"\"Return SOFRIA for this chapter only\"\"\"\n    chapter: Int\n  ): String! \n}\n`;\n\nconst documentResolvers = {\n  idParts: root => {\n    const idHeader = headerById(root, 'id');\n\n    if (!idHeader) {\n      return [null, null];\n    }\n\n    const periphMatch = xre.exec(idHeader, /^(P\\d\\d)\\s+([A-Z0-6]{3})\\s+(\\S+)\\s+-\\s+(.*)/);\n\n    if (periphMatch) {\n      return ['periph', periphMatch.slice(1)];\n    }\n\n    const bookMatch = xre.exec(idHeader, /^([A-Z0-6]{3})\\s+(.*)/);\n\n    if (bookMatch) {\n      return ['book', bookMatch.slice(1)];\n    }\n    return [null, [idHeader]];\n  },\n  headers: root => Object.entries(root.headers),\n  header: (root, args) => headerById(root, args.id),\n  mainSequence: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    return root.sequences[root.mainId];\n  },\n  nSequences: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    return Object.keys(root.sequences).length;\n  },\n  sequences: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    let ret = Object.values(root.sequences);\n\n    if (args.ids) {\n      ret = ret.filter(s => args.ids.includes(s.id));\n    }\n\n    if (args.types) {\n      ret = ret.filter(s => args.types.includes(s.type));\n    }\n\n    if (args.withTags) {\n      ret = ret.filter(s => args.withTags.filter(t => s.tags.has(t)).length === args.withTags.length);\n    }\n\n    if (args.withoutTags) {\n      ret = ret.filter(s => args.withoutTags.filter(t => s.tags.has(t)).length === 0);\n    }\n\n    return ret;\n  },\n  tableSequences: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    let ret = Object.values(root.sequences);\n\n    ret = ret.filter(s => s.type === 'table');\n\n    if (args.ids) {\n      ret = ret.filter(s => args.ids.includes(s.id));\n    }\n\n    if (args.withTags) {\n      ret = ret.filter(s => args.withTags.filter(t => s.tags.has(t)).length === args.withTags.length);\n    }\n\n    if (args.withoutTags) {\n      ret = ret.filter(s => args.withoutTags.filter(t => s.tags.has(t)).length === 0);\n    }\n\n    return ret;\n  },\n  treeSequences: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    let ret = Object.values(root.sequences);\n\n    ret = ret.filter(s => s.type === 'tree');\n\n    if (args.ids) {\n      ret = ret.filter(s => args.ids.includes(s.id));\n    }\n\n    if (args.withTags) {\n      ret = ret.filter(s => args.withTags.filter(t => s.tags.has(t)).length === args.withTags.length);\n    }\n\n    if (args.withoutTags) {\n      ret = ret.filter(s => args.withoutTags.filter(t => s.tags.has(t)).length === 0);\n    }\n\n    return ret;\n  },\n  kvSequences: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    let ret = Object.values(root.sequences);\n\n    ret = ret.filter(s => s.type === 'kv');\n\n    if (args.ids) {\n      ret = ret.filter(s => args.ids.includes(s.id));\n    }\n\n    if (args.withTags) {\n      ret = ret.filter(s => args.withTags.filter(t => s.tags.has(t)).length === args.withTags.length);\n    }\n\n    if (args.withoutTags) {\n      ret = ret.filter(s => args.withoutTags.filter(t => s.tags.has(t)).length === 0);\n    }\n\n    return ret;\n  },\n  textSequences: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    let ret = Object.values(root.sequences);\n\n    ret = ret.filter(s => s.type !== 'tree' && s.type !== 'table' && s.type !== 'kv');\n\n    if (args.ids) {\n      ret = ret.filter(s => args.ids.includes(s.id));\n    }\n\n    if (args.withTags) {\n      ret = ret.filter(s => args.withTags.filter(t => s.tags.has(t)).length === args.withTags.length);\n    }\n\n    if (args.withoutTags) {\n      ret = ret.filter(s => args.withoutTags.filter(t => s.tags.has(t)).length === 0);\n    }\n\n    return ret;\n  },\n  sequence: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    let ret = Object.values(root.sequences);\n    ret = ret.filter(s => args.id.includes(s.id));\n    return ret[0] || null;\n  },\n  tableSequence: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    let ret = Object.values(root.sequences);\n    ret = ret.filter(s => args.id.includes(s.id));\n\n    if (ret[0] && ret[0].type !== 'table') {\n      throw new Error(`Expected sequence id ${ret[0].id} to be of type 'table', not '${ret[0].type}'`);\n    }\n    return ret[0] || null;\n  },\n  treeSequence: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    let ret = Object.values(root.sequences);\n    ret = ret.filter(s => args.id.includes(s.id));\n\n    if (ret[0] && ret[0].type !== 'tree') {\n      throw new Error(`Expected sequence id ${ret[0].id} to be of type 'tree', not '${ret[0].type}'`);\n    }\n    return ret[0] || null;\n  },\n  kvSequence: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    let ret = Object.values(root.sequences);\n    ret = ret.filter(s => args.id.includes(s.id));\n\n    if (ret[0] && ret[0].type !== 'vk') {\n      throw new Error(`Expected sequence id ${ret[0].id} to be of type 'kv', not '${ret[0].type}'`);\n    }\n    return ret[0] || null;\n  },\n  mainBlocks: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    return root.sequences[root.mainId].blocks;\n  },\n  mainBlocksItems: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    return root.sequences[root.mainId].blocks.map(\n      b => context.docSet.unsuccinctifyItems(b.c, {}, null),\n    );\n  },\n  mainBlocksTokens: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    return root.sequences[root.mainId].blocks.map(\n      b => context.docSet.unsuccinctifyItems(b.c, { tokens: true }, null),\n    );\n  },\n  mainBlocksText: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    return root.sequences[root.mainId].blocks.map(\n      b => {\n        const tokens = context.docSet.unsuccinctifyItems(b.c, { tokens: true }, null);\n        let ret = tokens.map(t => t[2]).join('').trim();\n\n        if (args.normalizeSpace) {\n          ret = ret.replace(/[ \\t\\n\\r]+/g, ' ');\n        }\n        return ret;\n      },\n    );\n  },\n  mainText: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    return root.sequences[root.mainId].blocks.map(\n      b => {\n        const tokens = context.docSet.unsuccinctifyItems(b.c, { tokens: true }, null);\n        let ret = tokens.map(t => t[2]).join('').trim();\n\n        if (args.normalizeSpace) {\n          ret = ret.replace(/[ \\t\\n\\r]+/g, ' ');\n        }\n        return ret;\n      },\n    ).join('\\n');\n  },\n  tags: root => Array.from(root.tags),\n  tagsKv: root => Array.from(root.tags).map(t => {\n    if (t.includes(':')) {\n      return [t.substring(0, t.indexOf(':')), t.substring(t.indexOf(':') + 1)];\n    } else {\n      return [t, ''];\n    }\n  }),\n  hasTag: (root, args) => root.tags.has(args.tagName),\n  cv: (root, args, context) => do_cv(root, args, context, false),\n  mappedCv: (root, args, context) => {\n    if (args.verses.length !== 1) {\n      throw new Error(`mappedCv expects exactly one verse, not ${args.verses.length}`);\n    }\n    return do_cv(root, args, context, true, args.mappedDocSetId);\n  },\n  mappedCvs: (root, args, context) => {\n    const cvIndex = root.chapterVerseIndex(args.chapter);\n    const verses = cvIndex.filter(ve => ve.length > 0).map(ve => ve[0].verses);\n    let ret = [];\n\n    for (const verse of verses) {\n      ret.push(\n        do_cv(root, {\n          ...args,\n          verses: [verse],\n        }, context, true, args.mappedDocSetId)\n          .map(ig => [[`fromChapter/${args.chapter}`, `fromVerse/${verse}`, ...ig[0]], ig[1]]),\n      );\n    }\n    return ret;\n  },\n  cvNavigation:\n    (root, args) => [\n      args.chapter,\n      args.verse,\n      root.chapterVerseIndex((parseInt(args.chapter) - 1).toString()),\n      root.chapterVerseIndex(args.chapter),\n      root.chapterVerseIndex((parseInt(args.chapter) + 1).toString()),\n    ],\n  cvIndexes: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    context.doc = root;\n    return Object.entries(root.chapterVerseIndexes());\n  },\n  cvIndex: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    context.doc = root;\n    return [args.chapter, root.chapterVerseIndex(args.chapter) || []];\n  },\n  cIndexes: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    context.doc = root;\n    return Object.entries(root.chapterIndexes());\n  },\n  cIndex: (root, args, context) => {\n    context.docSet = root.processor.docSets[root.docSetId];\n    context.doc = root;\n    const ci = root.chapterIndex(args.chapter);\n    return [args.chapter, ci || {}];\n  },\n  cvMatching: (root, args, context) => {\n    if (!args.withChars && !args.withMatchingChars && !args.withScopes) {\n      throw new Error('Must specify at least one of withChars or withMatchingChars or withScopes');\n    }\n\n    if (args.withChars && args.withMatchingChars) {\n      throw new Error('Must not specify both withChars and withMatchingChars');\n    }\n\n    context.docSet = root.processor.docSets[root.docSetId];\n\n    let charsRegexes;\n\n    if (args.withChars && args.allChars) {\n      charsRegexes = args.withChars.map(s => xre(`^${s}$`));\n    } else if (args.withChars) {\n      charsRegexes = [xre.union(args.withChars.map(s => xre(`^${s}$`, 'i')))];\n    } else if (args.withMatchingChars && args.allChars) {\n      charsRegexes = args.withMatchingChars.map(s => xre(s, 'i'));\n    } else if (args.withMatchingChars) {\n      charsRegexes = [xre.union(args.withMatchingChars.map(s => xre(s, 'i')))];\n    }\n\n    const allScopesInGroup = scopes => {\n      for (const expectedScope of args.withScopes || []) {\n        if (!scopes.includes(expectedScope)) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    const anyScopesInGroup = scopes => {\n      const expectedScopes = args.withScopes || [];\n\n      for (const expectedScope of expectedScopes) {\n        if (scopes.includes(expectedScope)) {\n          return true;\n        }\n      }\n      return expectedScopes.length === 0;\n    };\n\n    const allRegexesInGroup = items => {\n      for (const regex of charsRegexes || []) {\n        let found = false;\n\n        for (const item of items) {\n          if (xre.test(item[2], regex)) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    const itemGroups = context.docSet.sequenceItemsByScopes(\n      root.sequences[root.mainId].blocks,\n      ['chapter/', 'verses/'],\n    );\n    return itemGroups.filter(\n      ig =>\n        (args.allScopes ? allScopesInGroup : anyScopesInGroup)(\n          ig[1].filter(i => i[0] === 'scope' && i[1] === 'start').map(s => s[2])) &&\n        allRegexesInGroup(ig[1]),\n    );\n  },\n  perf: (root, args) => root.perf(args.indent),\n  usfm: (root) => root.usfm(),\n  sofria: (root, args) => root.sofria(args.indent, args.chapter),\n};\n\nmodule.exports = {\n  documentSchemaString,\n  documentResolvers,\n};\n", "const utils = require('../../util/index.cjs');\n\nconst ptCompare = (a, b) => {\n  const bcA = a.headers.bookCode || 'GEN';\n  const bcB = b.headers.bookCode || 'GEN';\n  const posA = utils.canons.ptBooks[bcA] ? utils.canons.ptBooks[bcA].position : 999;\n  const posB = utils.canons.ptBooks[bcB] ? utils.canons.ptBooks[bcB].position : 999;\n  return posA - posB;\n};\n\nconst alphaCompare = (a, b) => {\n  const bcA = a.headers.bookCode || 'GEN';\n  const bcB = b.headers.bookCode || 'GEN';\n  return bcA.localeCompare(bcB);\n};\n\nconst alpha2Compare = (a, b) => {\n  const digits = [1, 2, 3, 4, 5, 6];\n  let bcA = a.headers.bookCode || 'GEN';\n\n  if (digits.includes(bcA[0])) {\n    bcA = bcA.substring(1) + bcA[0];\n  }\n\n  let bcB = b.headers.bookCode || 'GEN';\n\n  if (digits.includes(bcB[0])) {\n    bcB = bcB.substring(1) + bcB[0];\n  }\n  return bcA.localeCompare(bcB);\n};\n\nconst bookCodeCompareFunctions = {\n  paratext: ptCompare,\n  alpha: alphaCompare,\n  alpha2: alpha2Compare,\n};\n\nmodule.exports = { bookCodeCompareFunctions };\n", "const utils = require('../../util/index.cjs');\n\nconst { bookCodeCompareFunctions } = require('../lib/sort.cjs');\n\nconst {\n  sequenceHasChars,\n  sequenceHasMatchingChars,\n} = require('../lib/sequence_chars.cjs');\n\nconst docSetSchemaString = `\n\"\"\"A collection of documents that share the same set of selector values\"\"\"\ntype DocSet {\n  \"\"\"The id of the docSet, which is formed by concatenating the docSet's selector values\"\"\"\n  id: String!\n  \"\"\"The selectors of the docSet\"\"\"\n  selectors: [KeyValue!]!\n  \"\"\"A selector for this docSet\"\"\"\n  selector(\n    \"\"\"The id of the selector\"\"\"\n    id: String!\n  ): String!\n  \"\"\"A list of the tags of this docSet\"\"\"\n  tags: [String!]!\n  \"\"\"A list of the tags of this docSet as key/value tuples\"\"\"\n  tagsKv: [KeyValue!]!\n  \"\"\"Whether or not the docSet has the specified tag\"\"\"\n  hasTag(\n    \"\"\"The tag\"\"\"\n    tagName: String!\n  ): Boolean!\n  \"\"\"The documents in the docSet\"\"\"\n  documents(\n    \"\"\"A whitelist of ids of documents to include\"\"\"\n    ids: [String!]\n    \"\"\"A whitelist of ids of documents to include\"\"\"\n    withChars: [String!]\n    \"\"\"Return documents whose main sequence contains a token whose payload is an exact match to one of the specified strings\"\"\"\n    withMatchingChars: [String!]\n    \"\"\"If true, documents where all search terms match will be included\"\"\"\n    allChars: Boolean\n    \"\"\"Only return documents where the list of scopes is used\"\"\"\n    withScopes: [String!]\n    \"\"\"If true, documents where all scopes are found will be included\"\"\"\n    allScopes: Boolean\n    \"\"\"Only return documents with the specified header key/values\"\"\"\n    withHeaderValues: [InputKeyValue!]\n    \"\"\"Only return documents with all the specified tags\"\"\"\n    withTags: [String!]\n    \"\"\"Only return documents with none of the specified tags\"\"\"\n    withoutTags: [String!]\n    \"\"\"Sort returned documents by the designated method (currently ${Object.keys(bookCodeCompareFunctions).join(', ')})\\`\"\"\"\n    sortedBy: String\n  ): [Document!]!\n  \"\"\"The number of documents in the docSet\"\"\"\n  nDocuments: Int!\n  \"\"\"A document in the docSet, if present\"\"\"\n  document(\n    \"\"\"The book code of the required document\"\"\"\n    bookCode: String!\n  ): Document\n  \"\"\"Whether the docSet has versification information loaded\"\"\"\n  hasMapping: Boolean!\n  \"\"\"The internal index number corresponding to a string in a given docSet enum\"\"\"\n  enumIndexForString(\n    \"\"\"The enum to be searched\"\"\"\n    enumType: String!\n    \"\"\"The string to match\"\"\"\n    searchString: String!\n  ): Int!\n  \"\"\"Information about internal indexes matching the case-insensitive regex in a given docSet enum\"\"\"\n  enumRegexIndexesForString(\n    \"\"\"The enum to be searched\"\"\"\n    enumType: String!\n    \"\"\"The regex to match\"\"\"\n    searchRegex: String!\n  ): [regexIndex!]!\n  \"\"\"A list of wordLike token strings in the docSet\"\"\"\n  wordLikes(\n    \"\"\"Whether to coerce the strings (toLower|toUpper|none)\"\"\"\n    coerceCase: String\n  ): [String!]!\n  \"\"\"A list of unique characters in the docSet\"\"\"\n  uniqueChars: [String!]!\n  \"\"\"A string containing the unique characters in the docSet\"\"\"\n  uniqueCharsString: String!\n  }\n`;\n\nconst docSetResolvers = {\n  selectors: (root) => Object.entries(root.selectors),\n  selector: (root, args) => root.selectors[args.id],\n  tags: root => Array.from(root.tags),\n  tagsKv: root => Array.from(root.tags).map(t => {\n    if (t.includes(':')) {\n      return [t.substring(0, t.indexOf(':')), t.substring(t.indexOf(':') + 1)];\n    } else {\n      return [t, ''];\n    }\n  }),\n  hasTag: (root, args) => root.tags.has(args.tagName),\n  documents: (root, args, context) => {\n    const headerValuesMatch = (docHeaders, requiredHeaders) => {\n      for (const requiredHeader of requiredHeaders || []) {\n        if (!(requiredHeader.key in docHeaders) || docHeaders[requiredHeader.key] !== requiredHeader.value) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    if (args.withChars && args.withMatchingChars) {\n      throw new Error('Cannot specify both withChars and withMatchingChars');\n    }\n\n    context.docSet = root;\n    let ret = root.documents();\n\n    if (args.ids) {\n      ret = ret.filter(d => args.ids.includes(d.id));\n    }\n\n    if (args.withChars) {\n      ret = ret.filter(d => sequenceHasChars(root, d.sequences[d.mainId], args.withChars, args.allChars));\n    }\n\n    if (args.withMatchingChars) {\n      ret = ret.filter(d => sequenceHasMatchingChars(root, d.sequences[d.mainId], args.withMatchingChars, args.allChars));\n    }\n\n    if (args.withScopes) {\n      const allSequenceScopes = doc => new Set(\n        doc.sequences[doc.mainId].blocks\n          .map(b => context.docSet.unsuccinctifyBlockScopeLabelsSet(b))\n          .map(s => Array.from(s))\n          .reduce((a, b) => a.concat(b)),\n      );\n\n      ret = ret.filter(\n        d => {\n          const docScopes = allSequenceScopes(d);\n          const minHits = args.allScopes ? args.withScopes.length : 1;\n          return args.withScopes.filter(s => docScopes.has(s)).length >= minHits;\n        },\n      );\n    }\n\n    if (args.withHeaderValues) {\n      ret = ret.filter(d => headerValuesMatch(d.headers, args.withHeaderValues));\n    }\n\n    if (args.withTags) {\n      ret = ret.filter(d => args.withTags.filter(t => d.tags.has(t)).length === args.withTags.length);\n    }\n\n    if (args.withoutTags) {\n      ret = ret.filter(d => args.withoutTags.filter(t => d.tags.has(t)).length === 0);\n    }\n\n    if (args.sortedBy) {\n      if (!(args.sortedBy in bookCodeCompareFunctions)) {\n        throw new Error(`sortedBy value must be one of [${Object.keys(bookCodeCompareFunctions)}], not ${args.sortedBy}`);\n      }\n      ret.sort(bookCodeCompareFunctions[args.sortedBy]);\n    }\n\n    return ret;\n  },\n  nDocuments: (root, args, context) => {\n    context.docSet = root;\n    return root.documents().length;\n  },\n  document: (root, args) => root.documentWithBook(args.bookCode),\n  hasMapping: root => root.tags.has('hasMapping'),\n  enumIndexForString: (root, args) =>\n    utils.enums.enumStringIndex(root.enums[args.enumType], args.searchString),\n  enumRegexIndexesForString: (root, args) =>\n    utils.enums.enumRegexIndexTuples(root.enums[args.enumType], args.searchRegex),\n  wordLikes: (root, args) => {\n    if (args.coerceCase && !['toLower', 'toUpper', 'none'].includes(args.coerceCase)) {\n      throw new Error(`coerceCase, when present, must be 'toLower', 'toUpper' or 'none', not '${args.coerceCase}'`);\n    }\n\n    let tokens = utils.succinct.unpackEnum(root.enums.wordLike);\n\n    if (args.coerceCase === 'toLower') {\n      tokens = tokens.map(t => t.toLowerCase());\n    }\n\n    if (args.coerceCase === 'toUpper') {\n      tokens = tokens.map(t => t.toUpperCase());\n    }\n    return Array.from(new Set(tokens));\n  },\n  uniqueChars: root => {\n    const retSet = new Set([]);\n\n    for (const token of [...utils.succinct.unpackEnum(root.enums.wordLike), ...utils.succinct.unpackEnum(root.enums.notWordLike)]) {\n      for (const char of token.split('')) {\n        retSet.add(char);\n      }\n    }\n    return Array.from(retSet).sort();\n  },\n  uniqueCharsString: root => {\n    const retSet = new Set([]);\n\n    for (const token of [...utils.succinct.unpackEnum(root.enums.wordLike), ...utils.succinct.unpackEnum(root.enums.notWordLike)]) {\n      for (const char of token.split('')) {\n        retSet.add(char);\n      }\n    }\n    return Array.from(retSet).sort().join('');\n  },\n};\n\nmodule.exports = {\n  docSetSchemaString,\n  docSetResolvers,\n};\n\n", "const vrs = `# Versification  \"English\"\n# Version=2.0\n#\n# modifications by Reinier de Blois 13/March/2012\n# modified mappings Psalms by adding verse #0 to the mappings\n# many of the subscripts that are part of verses 1,2 in the original text end up as verse #0 in English translations\n\n# modifications by Studge 26/June/2009\n# book definitions are for all books printed in any English of Spanish Bible\n# this includes books for Protestant, Catholic and Protestant-Catholic-EasternOrthodox Interconfessional editions\n#\n# This is the versification used by most English (e.g. RSV) and Spanish Bibles (e.g. RVR)\n#\n# List of books, chapters, verses\n# One line per book.\n# One entry for each chapter.\n# Verse number is the maximum verse number for that chapter.\n# See the lines containing ='s below for verse mappings.\n#\n#--------------------------------------------------\n# Old Testament\nGEN 1:31 2:25 3:24 4:26 5:32 6:22 7:24 8:22 9:29 10:32 11:32 12:20 13:18 14:24 15:21 16:16 17:27 18:33 19:38 20:18 21:34 22:24 23:20 24:67 25:34 26:35 27:46 28:22 29:35 30:43 31:55 32:32 33:20 34:31 35:29 36:43 37:36 38:30 39:23 40:23 41:57 42:38 43:34 44:34 45:28 46:34 47:31 48:22 49:33 50:26\nEXO 1:22 2:25 3:22 4:31 5:23 6:30 7:25 8:32 9:35 10:29 11:10 12:51 13:22 14:31 15:27 16:36 17:16 18:27 19:25 20:26 21:36 22:31 23:33 24:18 25:40 26:37 27:21 28:43 29:46 30:38 31:18 32:35 33:23 34:35 35:35 36:38 37:29 38:31 39:43 40:38\nLEV 1:17 2:16 3:17 4:35 5:19 6:30 7:38 8:36 9:24 10:20 11:47 12:8 13:59 14:57 15:33 16:34 17:16 18:30 19:37 20:27 21:24 22:33 23:44 24:23 25:55 26:46 27:34\nNUM 1:54 2:34 3:51 4:49 5:31 6:27 7:89 8:26 9:23 10:36 11:35 12:16 13:33 14:45 15:41 16:50 17:13 18:32 19:22 20:29 21:35 22:41 23:30 24:25 25:18 26:65 27:23 28:31 29:40 30:16 31:54 32:42 33:56 34:29 35:34 36:13\nDEU 1:46 2:37 3:29 4:49 5:33 6:25 7:26 8:20 9:29 10:22 11:32 12:32 13:18 14:29 15:23 16:22 17:20 18:22 19:21 20:20 21:23 22:30 23:25 24:22 25:19 26:19 27:26 28:68 29:29 30:20 31:30 32:52 33:29 34:12\nJOS 1:18 2:24 3:17 4:24 5:15 6:27 7:26 8:35 9:27 10:43 11:23 12:24 13:33 14:15 15:63 16:10 17:18 18:28 19:51 20:9 21:45 22:34 23:16 24:33\nJDG 1:36 2:23 3:31 4:24 5:31 6:40 7:25 8:35 9:57 10:18 11:40 12:15 13:25 14:20 15:20 16:31 17:13 18:31 19:30 20:48 21:25\nRUT 1:22 2:23 3:18 4:22\n1SA 1:28 2:36 3:21 4:22 5:12 6:21 7:17 8:22 9:27 10:27 11:15 12:25 13:23 14:52 15:35 16:23 17:58 18:30 19:24 20:42 21:15 22:23 23:29 24:22 25:44 26:25 27:12 28:25 29:11 30:31 31:13\n2SA 1:27 2:32 3:39 4:12 5:25 6:23 7:29 8:18 9:13 10:19 11:27 12:31 13:39 14:33 15:37 16:23 17:29 18:33 19:43 20:26 21:22 22:51 23:39 24:25\n1KI 1:53 2:46 3:28 4:34 5:18 6:38 7:51 8:66 9:28 10:29 11:43 12:33 13:34 14:31 15:34 16:34 17:24 18:46 19:21 20:43 21:29 22:53\n2KI 1:18 2:25 3:27 4:44 5:27 6:33 7:20 8:29 9:37 10:36 11:21 12:21 13:25 14:29 15:38 16:20 17:41 18:37 19:37 20:21 21:26 22:20 23:37 24:20 25:30\n1CH 1:54 2:55 3:24 4:43 5:26 6:81 7:40 8:40 9:44 10:14 11:47 12:40 13:14 14:17 15:29 16:43 17:27 18:17 19:19 20:8 21:30 22:19 23:32 24:31 25:31 26:32 27:34 28:21 29:30\n2CH 1:17 2:18 3:17 4:22 5:14 6:42 7:22 8:18 9:31 10:19 11:23 12:16 13:22 14:15 15:19 16:14 17:19 18:34 19:11 20:37 21:20 22:12 23:21 24:27 25:28 26:23 27:9 28:27 29:36 30:27 31:21 32:33 33:25 34:33 35:27 36:23\nEZR 1:11 2:70 3:13 4:24 5:17 6:22 7:28 8:36 9:15 10:44\nNEH 1:11 2:20 3:32 4:23 5:19 6:19 7:73 8:18 9:38 10:39 11:36 12:47 13:31\nEST 1:22 2:23 3:15 4:17 5:14 6:14 7:10 8:17 9:32 10:3\nJOB 1:22 2:13 3:26 4:21 5:27 6:30 7:21 8:22 9:35 10:22 11:20 12:25 13:28 14:22 15:35 16:22 17:16 18:21 19:29 20:29 21:34 22:30 23:17 24:25 25:6 26:14 27:23 28:28 29:25 30:31 31:40 32:22 33:33 34:37 35:16 36:33 37:24 38:41 39:30 40:24 41:34 42:17\nPSA 1:6 2:12 3:8 4:8 5:12 6:10 7:17 8:9 9:20 10:18 11:7 12:8 13:6 14:7 15:5 16:11 17:15 18:50 19:14 20:9 21:13 22:31 23:6 24:10 25:22 26:12 27:14 28:9 29:11 30:12 31:24 32:11 33:22 34:22 35:28 36:12 37:40 38:22 39:13 40:17 41:13 42:11 43:5 44:26 45:17 46:11 47:9 48:14 49:20 50:23 51:19 52:9 53:6 54:7 55:23 56:13 57:11 58:11 59:17 60:12 61:8 62:12 63:11 64:10 65:13 66:20 67:7 68:35 69:36 70:5 71:24 72:20 73:28 74:23 75:10 76:12 77:20 78:72 79:13 80:19 81:16 82:8 83:18 84:12 85:13 86:17 87:7 88:18 89:52 90:17 91:16 92:15 93:5 94:23 95:11 96:13 97:12 98:9 99:9 100:5 101:8 102:28 103:22 104:35 105:45 106:48 107:43 108:13 109:31 110:7 111:10 112:10 113:9 114:8 115:18 116:19 117:2 118:29 119:176 120:7 121:8 122:9 123:4 124:8 125:5 126:6 127:5 128:6 129:8 130:8 131:3 132:18 133:3 134:3 135:21 136:26 137:9 138:8 139:24 140:13 141:10 142:7 143:12 144:15 145:21 146:10 147:20 148:14 149:9 150:6\nPRO 1:33 2:22 3:35 4:27 5:23 6:35 7:27 8:36 9:18 10:32 11:31 12:28 13:25 14:35 15:33 16:33 17:28 18:24 19:29 20:30 21:31 22:29 23:35 24:34 25:28 26:28 27:27 28:28 29:27 30:33 31:31\nECC 1:18 2:26 3:22 4:16 5:20 6:12 7:29 8:17 9:18 10:20 11:10 12:14\nSNG 1:17 2:17 3:11 4:16 5:16 6:13 7:13 8:14\nISA 1:31 2:22 3:26 4:6 5:30 6:13 7:25 8:22 9:21 10:34 11:16 12:6 13:22 14:32 15:9 16:14 17:14 18:7 19:25 20:6 21:17 22:25 23:18 24:23 25:12 26:21 27:13 28:29 29:24 30:33 31:9 32:20 33:24 34:17 35:10 36:22 37:38 38:22 39:8 40:31 41:29 42:25 43:28 44:28 45:25 46:13 47:15 48:22 49:26 50:11 51:23 52:15 53:12 54:17 55:13 56:12 57:21 58:14 59:21 60:22 61:11 62:12 63:19 64:12 65:25 66:24\nJER 1:19 2:37 3:25 4:31 5:31 6:30 7:34 8:22 9:26 10:25 11:23 12:17 13:27 14:22 15:21 16:21 17:27 18:23 19:15 20:18 21:14 22:30 23:40 24:10 25:38 26:24 27:22 28:17 29:32 30:24 31:40 32:44 33:26 34:22 35:19 36:32 37:21 38:28 39:18 40:16 41:18 42:22 43:13 44:30 45:5 46:28 47:7 48:47 49:39 50:46 51:64 52:34\nLAM 1:22 2:22 3:66 4:22 5:22\nEZK 1:28 2:10 3:27 4:17 5:17 6:14 7:27 8:18 9:11 10:22 11:25 12:28 13:23 14:23 15:8 16:63 17:24 18:32 19:14 20:49 21:32 22:31 23:49 24:27 25:17 26:21 27:36 28:26 29:21 30:26 31:18 32:32 33:33 34:31 35:15 36:38 37:28 38:23 39:29 40:49 41:26 42:20 43:27 44:31 45:25 46:24 47:23 48:35\nDAN 1:21 2:49 3:30 4:37 5:31 6:28 7:28 8:27 9:27 10:21 11:45 12:13\nHOS 1:11 2:23 3:5 4:19 5:15 6:11 7:16 8:14 9:17 10:15 11:12 12:14 13:16 14:9\nJOL 1:20 2:32 3:21\nAMO 1:15 2:16 3:15 4:13 5:27 6:14 7:17 8:14 9:15\nOBA 1:21\nJON 1:17 2:10 3:10 4:11\nMIC 1:16 2:13 3:12 4:13 5:15 6:16 7:20\nNAM 1:15 2:13 3:19\nHAB 1:17 2:20 3:19\nZEP 1:18 2:15 3:20\nHAG 1:15 2:23\nZEC 1:21 2:13 3:10 4:14 5:11 6:15 7:14 8:23 9:17 10:12 11:17 12:14 13:9 14:21\nMAL 1:14 2:17 3:18 4:6\n#-----------------------------------------------\n# New Testament\nMAT 1:25 2:23 3:17 4:25 5:48 6:34 7:29 8:34 9:38 10:42 11:30 12:50 13:58 14:36 15:39 16:28 17:27 18:35 19:30 20:34 21:46 22:46 23:39 24:51 25:46 26:75 27:66 28:20\nMRK 1:45 2:28 3:35 4:41 5:43 6:56 7:37 8:38 9:50 10:52 11:33 12:44 13:37 14:72 15:47 16:20\nLUK 1:80 2:52 3:38 4:44 5:39 6:49 7:50 8:56 9:62 10:42 11:54 12:59 13:35 14:35 15:32 16:31 17:37 18:43 19:48 20:47 21:38 22:71 23:56 24:53\nJHN 1:51 2:25 3:36 4:54 5:47 6:71 7:53 8:59 9:41 10:42 11:57 12:50 13:38 14:31 15:27 16:33 17:26 18:40 19:42 20:31 21:25\nACT 1:26 2:47 3:26 4:37 5:42 6:15 7:60 8:40 9:43 10:48 11:30 12:25 13:52 14:28 15:41 16:40 17:34 18:28 19:41 20:38 21:40 22:30 23:35 24:27 25:27 26:32 27:44 28:31\nROM 1:32 2:29 3:31 4:25 5:21 6:23 7:25 8:39 9:33 10:21 11:36 12:21 13:14 14:23 15:33 16:27\n1CO 1:31 2:16 3:23 4:21 5:13 6:20 7:40 8:13 9:27 10:33 11:34 12:31 13:13 14:40 15:58 16:24\n#2CO 1:24 2:17 3:18 4:18 5:21 6:18 7:16 8:24 9:15 10:18 11:33 12:21 13:14\n# Note sometimes 2CO 13 has 14 verses e.g. KJV. but 13 verses in modern translations\n2CO 1:24 2:17 3:18 4:18 5:21 6:18 7:16 8:24 9:15 10:18 11:33 12:21 13:14\nGAL 1:24 2:21 3:29 4:31 5:26 6:18\nEPH 1:23 2:22 3:21 4:32 5:33 6:24\nPHP 1:30 2:30 3:21 4:23\nCOL 1:29 2:23 3:25 4:18\n1TH 1:10 2:20 3:13 4:18 5:28\n2TH 1:12 2:17 3:18\n1TI 1:20 2:15 3:16 4:16 5:25 6:21\n2TI 1:18 2:26 3:17 4:22\nTIT 1:16 2:15 3:15\nPHM 1:25\nHEB 1:14 2:18 3:19 4:16 5:14 6:20 7:28 8:13 9:28 10:39 11:40 12:29 13:25\nJAS 1:27 2:26 3:18 4:17 5:20\n1PE 1:25 2:25 3:22 4:19 5:14\n2PE 1:21 2:22 3:18\n1JN 1:10 2:29 3:24 4:21 5:21\n2JN 1:13\n3JN 1:15\nJUD 1:25\nREV 1:20 2:29 3:22 4:11 5:14 6:17 7:17 8:13 9:21 10:11 11:19 12:18 13:18 14:20 15:8 16:21 17:18 18:24 19:21 20:15 21:27 22:21\n# sometimes called the Apocalypse\n#---------------------------------------------------------\n# Deuterocanonical books\nTOB 1:22 2:14 3:17 4:21 5:21 6:17 7:18 8:21 9:6 10:13 11:19 12:22 13:18 14:15\nJDT 1:16 2:28 3:10 4:15 5:24 6:21 7:32 8:36 9:14 10:23 11:23 12:20 13:20 14:19 15:13 16:25\n#-----------------------\n# This is the definition for \"Additions to Daniel\" as in the KJV [Studge]\n# ESG 1:13 2:12 3:6 4:18 5:19 6:16 7:24\n# more commonly UBS Bibles have ESG which is the full Esther Greek for modern Bibles e.g. RSV, CEV, GNB etc\nESG 1:39 2:23 3:22 4:47 5:28 6:14 7:10 8:39 9:32 10:13\n#-----------------------\nWIS 1:16 2:24 3:19 4:20 5:23 6:25 7:30 8:21 9:18 10:21 11:26 12:27 13:19 14:31 15:19 16:29 17:21 18:25 19:22\nSIR 1:30 2:18 3:31 4:31 5:15 6:37 7:36 8:19 9:18 10:31 11:34 12:18 13:26 14:27 15:20 16:30 17:32 18:33 19:30 20:32 21:28 22:27 23:27 24:34 25:26 26:29 27:30 28:26 29:28 30:25 31:31 32:24 33:31 34:26 35:20 36:26 37:31 38:34 39:35 40:30 41:23 42:25 43:33 44:23 45:26 46:20 47:25 48:25 49:16 50:29 51:30\n#\n# In English Bibles Baruch sometimes has 5 chapters and sometimes 6 in Catholic Bibles [Studge]\nBAR 1:21 2:35 3:37 4:37 5:9 6:73\n#\nLJE 1:73\nS3Y 1:68\nSUS 1:64\nBEL 1:42\n1MA 1:64 2:70 3:60 4:61 5:68 6:63 7:50 8:32 9:73 10:89 11:74 12:53 13:53 14:49 15:41 16:24\n2MA 1:36 2:32 3:40 4:50 5:27 6:31 7:42 8:36 9:29 10:38 11:38 12:45 13:26 14:46 15:39\n#-----------------------------------------------------\n# Additional Orthodox Books in Interconfessional Bibles e.g. RSV, NRSV\n3MA 1:29 2:33 3:30 4:21 5:51 6:41 7:23\n4MA 1:35 2:24 3:21 4:26 5:38 6:35 7:23 8:29 9:32 10:21 11:27 12:19 13:27 14:20 15:32 16:25 17:24 18:24\n1ES 1:58 2:30 3:24 4:63 5:73 6:34 7:15 8:96 9:55\n2ES 1:40 2:48 3:36 4:52 5:56 6:59 7:140 8:63 9:47 10:59 11:46 12:51 13:58 14:48 15:63 16:78\nMAN 1:15\nPS2 1:7\n#-----------------------------------------------------\n# ODA and PSS are only used in LXX and SYR projects and are not needed here\n# ODA 1:19 2:43 3:10 4:19 5:12 6:8 7:20 8:37 9:22 10:9 11:11 12:15 13:4 14:46\n# PSS 1:8 2:37 3:12 4:25 5:19 6:6 7:10 8:34 9:11 10:8 11:9 12:6 13:12 14:10 15:13 16:15 17:46 18:12\n#-----------------------------------------------------\n# Obselete books used for LXX variant texts, in LXX only in PT 6, and obselete in PT 7, not used in English, Spanish or any other Bibles.  If these codes were used they were used for the wrong books and these definitions were not relevant\nJSA 1:18 2:24 3:17 4:24 5:15 6:27 7:26 8:35 9:27 10:43 11:23 12:24 13:33 14:15 15:63 16:10 17:18 18:28 19:51 20:9 21:45 22:34 23:16 24:33\nJDB 1:36 2:23 3:31 4:24 5:31 6:40 7:25 8:35 9:57 10:18 11:40 12:15 13:25 14:20 15:20 16:31 17:13 18:31 19:30 20:48 21:25\nTBS 1:22 2:14 3:17 4:21 5:23 6:19 7:17 8:21 9:6 10:14 11:19 12:22 13:18 14:15\nSST 1:64\nDNT 1:21 2:49 3:97 4:37 5:30 6:29 7:28 8:27 9:27 10:21 11:45 12:13\nBLT 1:42\n#------------------------------------------------------\n# Daniel Greek used in some English Catholic Bibles\nDAG 1:21 2:49 3:97 4:37 5:31 6:28 7:28 8:27 9:27 10:21 11:45 12:13 13:64 14:42\n# Letter to the Laodiceans which was in the John Wycliffe Bible\nLAO 1:20\n#\n#-----------------------------------------------------\n# Mapping\n#-----------------------------------------------------\n# English = BHS (see org.vrs)\n#\n# (Note: ranges must not span a chapter, e.g. 4:10-5:11 is illegal)\n#\nGEN 31:55 = GEN 32:1\nGEN 32:1-32 = GEN 32:2-33\nEXO 8:1-4 = EXO 7:26-29\nEXO 8:5-32 = EXO 8:1-28\nEXO 22:1 = EXO 21:37\nEXO 22:2-31 = EXO 22:1-30\nLEV 6:1-7 = LEV 5:20-26\nLEV 6:8-30 = LEV 6:1-23\nNUM 16:36-50 = NUM 17:1-15\nNUM 17:1-13 = NUM 17:16-28\n# NUM 26:1a = NUM 25:19b  # no support for splits yet\n# NUM 26:1b = NUM 26:1  # no support for splits yet\nNUM 29:40 = NUM 30:1\nNUM 30:1-16 = NUM 30:2-17\nDEU 12:32 = DEU 13:1\nDEU 13:1-18 = DEU 13:2-19\nDEU 22:30 = DEU 23:1\nDEU 23:1-25 = DEU 23:2-26\nDEU 29:1 = DEU 28:69\nDEU 29:2-29 = DEU 29:1-28\n#\n# removed see PTSIL-113\n#1SA 20:42 = 1SA 20:41\n#\n1SA 20:42 = 1SA 21:1\n1SA 21:1-15 = 1SA 21:2-16\n1SA 23:29 = 1SA 24:1\n1SA 24:1-22 = 1SA 24:2-23\n2SA 18:33 = 2SA 19:1\n2SA 19:1-43 = 2SA 19:2-44\n1KI 4:21-34 = 1KI 5:1-14\n1KI 5:1-18 = 1KI 5:15-32\n# 1KI 18:33a = 1KI 18:33  # no support for splits yet\n# 1KI 18:33b = 1KI 18:34  # no support for splits yet\n# 1KI 22:43a = 1KI 22:43b  # no support for splits yet\n1KI 22:43-53 = 1KI 22:44-54\n2KI 11:21 = 2KI 12:1\n2KI 12:1-21 = 2KI 12:2-22\n1CH 6:1-15 = 1CH 5:27-41\n1CH 6:16-81 = 1CH 6:1-66\n# 1CH 12:4b = 1CH 12:4  # no support for splits yet\n1CH 12:4-40 = 1CH 12:5-41\n2CH 2:1 = 2CH 1:18\n2CH 2:2-18 = 2CH 2:1-17\n2CH 14:1 = 2CH 13:23\n2CH 14:2-15 = 2CH 14:1-14\nNEH 4:1-6 = NEH 3:33-38\nNEH 4:7-23 = NEH 4:1-17\nNEH 7:69-73 = NEH 7:68-72\nNEH 9:38 = NEH 10:1\nNEH 10:1-39 = NEH 10:2-40\nJOB 41:1-8 = JOB 40:25-32\nJOB 41:9-34 = JOB 41:1-26\nPSA 3:0-8 = PSA 3:1-9\nPSA 4:0-8 = PSA 4:1-9\nPSA 5:0-12 = PSA 5:1-13\nPSA 6:0-10 = PSA 6:1-11\nPSA 7:0-17 = PSA 7:1-18\nPSA 8:0-9 = PSA 8:1-10\nPSA 9:0-20 = PSA 9:1-21\nPSA 12:0-8 = PSA 12:1-9\nPSA 13:0-5 = PSA 13:1-6\nPSA 18:0-50 = PSA 18:1-51\nPSA 19:0-14 = PSA 19:1-15\nPSA 20:0-9 = PSA 20:1-10\nPSA 21:0-13 = PSA 21:1-14\nPSA 22:0-31 = PSA 22:1-32\nPSA 30:0-12 = PSA 30:1-13\nPSA 31:0-24 = PSA 31:1-25\nPSA 34:0-22 = PSA 34:1-23\nPSA 36:0-12 = PSA 36:1-13\nPSA 38:0-22 = PSA 38:1-23\nPSA 39:0-13 = PSA 39:1-14\nPSA 40:0-17 = PSA 40:1-18\nPSA 41:0-13 = PSA 41:1-14\nPSA 42:0-11 = PSA 42:1-12\nPSA 44:0-26 = PSA 44:1-27\nPSA 45:0-17 = PSA 45:1-18\nPSA 46:0-11 = PSA 46:1-12\nPSA 47:0-9 = PSA 47:1-10\nPSA 48:0-14 = PSA 48:1-15\nPSA 49:0-20 = PSA 49:1-21\nPSA 51:0 = PSA 51:1\nPSA 51:0 = PSA 51:2\nPSA 51:1-19 = PSA 51:3-21\nPSA 52:0 = PSA 52:1\nPSA 52:0 = PSA 52:2\nPSA 52:1-9 = PSA 52:3-11\nPSA 53:0-6 = PSA 53:1-7\nPSA 54:0 = PSA 54:1\nPSA 54:0 = PSA 54:2\nPSA 54:1-7 = PSA 54:3-9\nPSA 55:0-23 = PSA 55:1-24\nPSA 56:0-13 = PSA 56:1-14\nPSA 57:0-11 = PSA 57:1-12\nPSA 58:0-11 = PSA 58:1-12\nPSA 59:0-17 = PSA 59:1-18\nPSA 60:0 = PSA 60:1\nPSA 60:0 = PSA 60:2\nPSA 60:1-12 = PSA 60:3-14\nPSA 61:0-8 = PSA 61:1-9\nPSA 62:0-12 = PSA 62:1-13\nPSA 63:0-11 = PSA 63:1-12\nPSA 64:0-10 = PSA 64:1-11\nPSA 65:0-13 = PSA 65:1-14\nPSA 67:0-7 = PSA 67:1-8\nPSA 68:0-35 = PSA 68:1-36\nPSA 69:0-36 = PSA 69:1-37\nPSA 70:0-5 = PSA 70:1-6\nPSA 75:0-10 = PSA 75:1-11\nPSA 76:0-12 = PSA 76:1-13\nPSA 77:0-20 = PSA 77:1-21\nPSA 80:0-19 = PSA 80:1-20\nPSA 81:0-16 = PSA 81:1-17\nPSA 83:0-18 = PSA 83:1-19\nPSA 84:0-12 = PSA 84:1-13\nPSA 85:0-13 = PSA 85:1-14\nPSA 88:0-18 = PSA 88:1-19\nPSA 89:0-52 = PSA 89:1-53\nPSA 92:0-15 = PSA 92:1-16\nPSA 102:0-28 = PSA 102:1-29\nPSA 108:0-13 = PSA 108:1-14\nPSA 140:0-13 = PSA 140:1-14\nPSA 142:0-7 = PSA 142:1-8\nECC 5:1 = ECC 4:17\nECC 5:2-20 = ECC 5:1-19\nSNG 6:13 = SNG 7:1\nSNG 7:1-13 = SNG 7:2-14\nISA 9:1 = ISA 8:23\nISA 9:2-21 = ISA 9:1-20\nISA 64:2-12 = ISA 64:1-11\nJER 9:1 = JER 8:23\nJER 9:2-26 = JER 9:1-25\nEZK 20:45-46 = EZK 21:1-2\nEZK 20:47 = EZK 21:3\nEZK 20:48-49 = EZK 21:4-5\nEZK 21:1-32 = EZK 21:6-37\nDAN 4:1-3 = DAN 3:31-33\nDAN 4:4-37 = DAN 4:1-34\nDAN 5:31 = DAN 6:1\nDAN 6:1-28 = DAN 6:2-29\nHOS 1:10-11 = HOS 2:1-2\nHOS 2:1-23 = HOS 2:3-25\nHOS 11:12 = HOS 12:1\nHOS 12:1-14 = HOS 12:2-15\nHOS 13:16 = HOS 14:1\nHOS 14:1-9 = HOS 14:2-10\nJOL 2:28-32 = JOL 3:1-5\nJOL 3:1-21 = JOL 4:1-21\nJON 1:17 = JON 2:1\nJON 2:1-10 = JON 2:2-11\nMIC 5:1 = MIC 4:14\nMIC 5:2-15 = MIC 5:1-14\nNAM 1:15 = NAM 2:1\nNAM 2:1-13 = NAM 2:2-14\nZEC 1:18-21 = ZEC 2:1-4\nZEC 2:1-13 = ZEC 2:5-17\nMAL 4:1-6 = MAL 3:19-24\n# 40 + 41 -> 40 (per Peter Kirk)\n#! &ACT 19:40-41 = ACT 19:40\n#\n#---------------------------------\n# map Baruch 6 onto Letter of Jeremiah [Studge]\nBAR 6:1-73 = LJE 1:1-73\n#\n#------------------------------\n# Susanna\nDAG 13:1-63 = SUS 1:1-63\n# Bel and the Dragon\nDAG 14:1-42 = BEL 1:1-42\n#----------------------------------\n# Mapping Esther Greek onto LXX Esther Greek\n#\n# This maps the standard verses generated by Create Book\n# to the actual verse numbers and segments found in the LXX\n# ESG chapter 1\nESG 1:1 = ESG 1:1a\nESG 1:2 = ESG 1:1b\nESG 1:3 = ESG 1:1c\nESG 1:4 = ESG 1:1d\nESG 1:5 = ESG 1:1e\nESG 1:6 = ESG 1:1f\nESG 1:7 = ESG 1:1g\nESG 1:8 = ESG 1:1h\nESG 1:9 = ESG 1:1i\nESG 1:10 = ESG 1:1k\nESG 1:11 = ESG 1:1l\nESG 1:12 = ESG 1:1m\nESG 1:13 = ESG 1:1n\nESG 1:14 = ESG 1:1o\nESG 1:15 = ESG 1:1p\nESG 1:16 = ESG 1:1q\nESG 1:17 = ESG 1:1r\nESG 1:18 = ESG 1:1s\nESG 1:19-39 = ESG 1:2-22\n# ESG chapter 3\nESG 3:14 = ESG 3:13a\nESG 3:15 = ESG 3:13b\nESG 3:16 = ESG 3:13c\nESG 3:17 = ESG 3:13d\nESG 3:18 = ESG 3:13e\nESG 3:19 = ESG 3:13f\nESG 3:20 = ESG 3:13g\nESG 3:21 = ESG 3:14\nESG 3:22 = ESG 3:15\n# ESG chapter 4\nESG 4:18 = ESG 4:17a\nESG 4:19 = ESG 4:17b\nESG 4:20 = ESG 4:17c\nESG 4:21 = ESG 4:17c\nESG 4:22 = ESG 4:17d\nESG 4:23 = ESG 4:17d\nESG 4:24 = ESG 4:17e\nESG 4:25 = ESG 4:17f\nESG 4:26 = ESG 4:17g\nESG 4:27 = ESG 4:17h\nESG 4:28 = ESG 4:17i\nESG 4:29 = ESG 4:17k\nESG 4:30 = ESG 4:17k\nESG 4:31 = ESG 4:17k\nESG 4:32 = ESG 4:17l\nESG 4:33 = ESG 4:17m\nESG 4:34 = ESG 4:17n\nESG 4:35 = ESG 4:17n\nESG 4:36 = ESG 4:17o\nESG 4:37 = ESG 4:17o\nESG 4:38 = ESG 4:17p\nESG 4:39 = ESG 4:17q\nESG 4:40 = ESG 4:17r\nESG 4:41 = ESG 4:17s\nESG 4:42 = ESG 4:17t\nESG 4:43 = ESG 4:17u\nESG 4:44 = ESG 4:17w\nESG 4:45 = ESG 4:17x\nESG 4:46 = ESG 4:17y\nESG 4:47 = ESG 4:17z\n# ESG chapter 5\nESG 5:2 = ESG 5:1a\nESG 5:3 = ESG 5:1a\nESG 5:4 = ESG 5:1a\nESG 5:5 = ESG 5:1b\nESG 5:6 = ESG 5:1c\nESG 5:7 = ESG 5:1d\nESG 5:8 = ESG 5:1e\nESG 5:9 = ESG 5:1f\nESG 5:10 = ESG 5:1f\nESG 5:11 = ESG 5:2\nESG 5:12 = ESG 5:2\nESG 5:13 = ESG 5:2a\nESG 5:14 = ESG 5:2a\nESG 5:15 = ESG 5:2b\nESG 5:16 = ESG 5:2b\nESG 5:17-28 = ESG 5:3-14\n# ESG chapter 8\nESG 8:13 = ESG 8:12a\nESG 8:14 = ESG 8:12b\nESG 8:15 = ESG 8:12c\nESG 8:16 = ESG 8:12d\nESG 8:17 = ESG 8:12e\nESG 8:18 = ESG 8:12f\nESG 8:19 = ESG 8:12g\nESG 8:20 = ESG 8:12h\nESG 8:21 = ESG 8:12i\nESG 8:22 = ESG 8:12k\nESG 8:23 = ESG 8:12l\nESG 8:24 = ESG 8:12m\nESG 8:25 = ESG 8:12n\nESG 8:26 = ESG 8:12o\nESG 8:27 = ESG 8:12p\nESG 8:28 = ESG 8:12q\nESG 8:29 = ESG 8:12r\nESG 8:30 = ESG 8:12s\nESG 8:31 = ESG 8:12t\nESG 8:32 = ESG 8:12u\nESG 8:33 = ESG 8:12x\nESG 8:34 = ESG 8:12y\nESG 8:35 = ESG 8:12y\nESG 8:36 = ESG 8:12y\nESG 8:37-41 = ESG 8:13-17\n# ESG chapter 10\nESG 10:4 = ESG 10:3a\nESG 10:5 = ESG 10:3b\nESG 10:6 = ESG 10:3c\nESG 10:7 = ESG 10:3d\nESG 10:8 = ESG 10:3e\nESG 10:9 = ESG 10:3f\nESG 10:10 = ESG 10:3g\nESG 10:11 = ESG 10:3h\nESG 10:12 = ESG 10:3i\nESG 10:13 = ESG 10:3k\nESG 10:14 = ESG 10:3l\n# S3Y is a small section of the DAG LXX pulled out and translated as a separate book.\n# Map it back to the LXX.  This section allow's texts such as TOB (French) which do\n# this to scroll correctly with the LXX.\n# S3Y is not present in the GRK, HEB, or LXX(Ralphs) text.\n# If a text has DAG present, this section must NOT be included in its versification file because\n# that would cause references in other texts to DAG to be redirected to a non-existant S3Y.\nS3Y 1:1-29 = DAG 3:24-52\nS3Y 1:30-31 = DAG 3:52-53\nS3Y 1:33 = DAG 3:54\nS3Y 1:32 = DAG 3:55\nS3Y 1:34-35 = DAG 3:56-57\nS3Y 1:37 = DAG 3:58\nS3Y 1:36 = DAG 3:59\nS3Y 1:38-68 = DAG 3:60-90\n`;\n\nmodule.exports = vrs;\n", "module.exports = `# Versification  \"Septuagint\"\n# Version=1.7\n# \n# modifications by Studge 26/ June/ 2009\n# This should include the versifications for Bibles which follow LXX versificatio mainly Orthodox Bibles. [Studge]\n#\n# List of books, chapters, verses\n# One line per book.\n# One entry for each chapter.\n# Verse number is the maximum verse number for that chapter.\n# See the lines containing ='s below for verse mappings.\n#\n# modifications by Reinier 20/ April/ 2010\n# all data that are not part of the LXX itself have been commented out with ##\n#\n# modifications by Michael Lothers 1/ June/ 2011\n# added verse segment information in the format: *GEN 1:22,-,a,b\n# which indicates GEN 1:22 has three segments, the first has no marking followed by two segments: 1a and 1b\n# The lines are preceded by #! so that versions of Paratext prior to 7.3 will ignore them rather than crash.\n#\n# modifications by Tim Steenwyk 15/ September/ 2011\n# removed mapping references to PS3 since they shouldn't be in LXX (Septuagint)\n#------------------------------------------------\n# Old Testament\nGEN 1:31 2:25 3:24 4:26 5:32 6:22 7:24 8:22 9:29 10:32 11:32 12:20 13:18 14:24 15:21 16:16 17:27 18:33 19:38 20:18 21:34 22:24 23:20 24:67 25:34 26:35 27:46 28:22 29:35 30:43 31:54 32:33 33:20 34:31 35:29 36:43 37:36 38:30 39:23 40:23 41:57 42:38 43:34 44:34 45:28 46:34 47:31 48:22 49:33 50:26\nEXO 1:22 2:25 3:22 4:31 5:23 6:30 7:29 8:28 9:35 10:29 11:10 12:51 13:22 14:31 15:27 16:36 17:16 18:27 19:25 20:26 21:37 22:30 23:33 24:18 25:40 26:37 27:21 28:43 29:46 30:38 31:18 32:35 33:23 34:35 35:35 36:38 37:21 38:27 39:23 40:38\nLEV 1:17 2:16 3:17 4:35 5:26 6:23 7:38 8:36 9:24 10:20 11:47 12:8 13:59 14:57 15:33 16:34 17:16 18:30 19:37 20:27 21:24 22:33 23:44 24:23 25:55 26:46 27:34\nNUM 1:54 2:34 3:51 4:49 5:31 6:26 7:89 8:26 9:23 10:36 11:35 12:16 13:33 14:45 15:41 16:35 17:28 18:32 19:22 20:29 21:35 22:41 23:30 24:25 25:18 26:65 27:23 28:31 29:39 30:17 31:54 32:42 33:56 34:29 35:34 36:13\nDEU 1:46 2:37 3:29 4:49 5:33 6:25 7:26 8:20 9:29 10:22 11:32 12:31 13:19 14:29 15:23 16:22 17:20 18:22 19:21 20:20 21:23 22:29 23:26 24:22 25:19 26:19 27:26 28:69 29:28 30:20 31:30 32:52 33:29 34:12\nJOS 1:18 2:24 3:17 4:24 5:15 6:27 7:26 8:29 9:27 10:42 11:23 12:24 13:32 14:15 15:63 16:10 17:18 18:28 19:51 20:9 21:45 22:34 23:16 24:33\nJDG 1:36 2:23 3:31 4:24 5:31 6:40 7:25 8:35 9:57 10:18 11:40 12:15 13:25 14:20 15:20 16:31 17:13 18:31 19:30 20:48 21:25\nRUT 1:22 2:23 3:18 4:22\n1SA 1:28 2:36 3:21 4:22 5:12 6:21 7:17 8:22 9:27 10:27 11:15 12:25 13:23 14:52 15:35 16:23 17:54 18:29 19:24 20:42 21:16 22:23 23:28 24:23 25:44 26:25 27:12 28:25 29:11 30:31 31:13\n# 1SA called 1 Kings in the Orthodox tradition\n2SA 1:27 2:32 3:39 4:12 5:25 6:23 7:29 8:18 9:13 10:19 11:27 12:31 13:39 14:33 15:37 16:23 17:29 18:32 19:44 20:26 21:22 22:51 23:39 24:25\n# 2SA called 2 Kings in the Orthodox tradition\n1KI 1:53 2:46 3:28 4:19 5:32 6:36 7:50 8:66 9:28 10:29 11:43 12:33 13:34 14:31 15:34 16:34 17:24 18:46 19:21 20:29 21:43 22:54\n# 1KI called 3 Kings in the Orthodox tradition\n2KI 1:18 2:25 3:27 4:44 5:27 6:33 7:20 8:29 9:37 10:36 11:20 12:22 13:25 14:29 15:38 16:20 17:41 18:37 19:37 20:21 21:26 22:20 23:37 24:20 25:30\n# 2KI called 4 Kings in the Orthodox tradition\n1CH 1:54 2:55 3:24 4:43 5:41 6:66 7:40 8:40 9:44 10:14 11:47 12:41 13:14 14:17 15:29 16:43 17:27 18:17 19:19 20:8 21:30 22:19 23:32 24:31 25:31 26:32 27:34 28:21 29:30\n2CH 1:18 2:17 3:17 4:22 5:14 6:42 7:22 8:18 9:31 10:19 11:23 12:16 13:23 14:14 15:19 16:14 17:19 18:34 19:11 20:37 21:20 22:12 23:21 24:27 25:28 26:23 27:9 28:27 29:36 30:27 31:21 32:33 33:25 34:33 35:27 36:23\n#\n# Edited by Studge\n# Added EZR which is Ezra-Nehemiah, which had been put under 2ES by mistake\n# Edited chapters 13 and 20 / SS 14.6.2014\nEZR 1:11 2:70 3:13 4:24 5:17 6:22 7:28 8:36 9:15 10:44 11:11 12:20 13:37 14:23 15:19 16:19 17:73 18:18 19:38 20:40 21:36 22:47 23:31\n#\n# most projects based on LXX will use Nehemiah so we ought to add it in.\n##NEH 1:11 2:20 3:32 4:23 5:19 6:19 7:73 8:18 9:38 10:39 11:36 12:47 13:31\n#\n# Edited by Studge\n# should not have ESG here but amongst the Deuterocanonical books for PT order\n# ESG 1:22 2:23 3:15 4:17 5:14 6:14 7:10 8:17 9:32 10:3\n#\nJOB 1:22 2:13 3:26 4:21 5:27 6:30 7:21 8:22 9:35 10:22 11:20 12:25 13:28 14:22 15:35 16:22 17:16 18:21 19:29 20:29 21:34 22:30 23:17 24:25 25:6 26:14 27:23 28:28 29:25 30:31 31:40 32:22 33:33 34:37 35:16 36:33 37:24 38:41 39:30 40:32 41:26 42:17\nPSA 1:6 2:12 3:9 4:9 5:13 6:11 7:18 8:10 9:39 10:7 11:9 12:6 13:7 14:5 15:11 16:15 17:51 18:15 19:10 20:14 21:32 22:6 23:10 24:22 25:12 26:14 27:9 28:11 29:13 30:25 31:11 32:22 33:23 34:28 35:13 36:40 37:23 38:14 39:18 40:14 41:12 42:5 43:27 44:18 45:12 46:10 47:15 48:21 49:23 50:21 51:11 52:7 53:9 54:24 55:14 56:12 57:12 58:18 59:14 60:9 61:13 62:12 63:11 64:14 65:20 66:8 67:36 68:37 69:6 70:24 71:20 72:28 73:23 74:11 75:13 76:21 77:72 78:13 79:20 80:17 81:8 82:19 83:13 84:14 85:17 86:7 87:19 88:53 89:17 90:16 91:16 92:5 93:23 94:11 95:13 96:12 97:9 98:9 99:5 100:8 101:29 102:22 103:35 104:45 105:48 106:43 107:14 108:31 109:7 110:10 111:10 112:9 113:26 114:9 115:10 116:2 117:29 118:176 119:7 120:8 121:9 122:4 123:8 124:5 125:6 126:5 127:6 128:8 129:8 130:3 131:18 132:3 133:3 134:21 135:26 136:9 137:8 138:24 139:14 140:10 141:8 142:12 143:15 144:21 145:10 146:11 147:9 148:14 149:9 150:6 151:7\n# Psalms has 151 psalms in the Septuagint tradition\nPRO 1:33 2:22 3:35 4:27 5:23 6:35 7:27 8:36 9:18 10:32 11:31 12:28 13:25 14:35 15:33 16:33 17:28 18:22 19:29 20:30 21:31 22:29 23:35 24:34 25:28 26:28 27:27 28:28 29:27 30:33 31:31\nECC 1:18 2:26 3:22 4:17 5:19 6:12 7:29 8:17 9:18 10:20 11:10 12:14\nSNG 1:17 2:17 3:11 4:16 5:16 6:12 7:14 8:14\nISA 1:31 2:21 3:26 4:6 5:30 6:13 7:25 8:23 9:20 10:34 11:16 12:6 13:22 14:32 15:9 16:14 17:14 18:7 19:25 20:6 21:17 22:25 23:18 24:23 25:12 26:21 27:13 28:29 29:24 30:33 31:9 32:20 33:24 34:17 35:10 36:22 37:38 38:22 39:8 40:31 41:29 42:25 43:28 44:28 45:25 46:13 47:15 48:22 49:26 50:11 51:23 52:15 53:12 54:17 55:13 56:11 57:21 58:14 59:21 60:22 61:11 62:12 63:19 64:11 65:25 66:24\n#\n# Edited by SS 25.3.2003\n# Original: JER 1:19 2:37 3:25 4:31 5:31 6:30 7:34 8:23 9:25 10:25 11:23 12:17 13:27 14:22 15:21 16:21 17:27 18:23 19:15 20:18 21:14 22:30 23:40 24:10 25:38 26:24 27:22 28:17 29:32 30:24 31:40 32:44 33:26 34:22 35:19 36:32 37:21 38:28 39:18 40:16 41:18 42:22 43:13 44:30 45:5 46:28 47:7 48:47 49:39 50:46 51:64 52:34\n#\nJER 1:19 2:37 3:25 4:31 5:31 6:30 7:34 8:23 9:25 10:25 11:23 12:17 13:27 14:22 15:21 16:21 17:27 18:23 19:15 20:18 21:14 22:30 23:40 24:10 25:20 26:28 27:46 28:64 29:7 30:33 31:44 32:38 33:24 34:22 35:17 36:32 37:24 38:40 39:44 40:13 41:22 42:19 43:32 44:21 45:28 46:18 47:16 48:18 49:22 50:13 51:35 52:34\nLAM 1:22 2:22 3:66 4:22 5:22\nEZK 1:28 2:10 3:27 4:17 5:17 6:14 7:27 8:18 9:11 10:22 11:25 12:28 13:23 14:23 15:8 16:63 17:24 18:32 19:14 20:44 21:37 22:31 23:49 24:27 25:17 26:21 27:36 28:26 29:21 30:26 31:18 32:32 33:33 34:31 35:15 36:38 37:28 38:23 39:29 40:49 41:26 42:20 43:27 44:31 45:25 46:24 47:23 48:35\n#\n# There really should not be an entry for DAN in the LXX.vrs. All this material should be in DAG to match Ralhfs.\n# However, there are no doubt many projects that incorrectly but the material in DAN so we leave this here\n# for backward compatibility\n# Following line commented out and DAG-DAN mapping brought up from end of file to allow DAG text to sychronize with HEB where they match\n# Edited by Sarah Lind Oct 6 2015\n# DAN 1:21 2:49 3:97 4:37 5:30 6:29 7:28 8:27 9:27 10:21 11:45 12:13\nDAG 1:1-21 = DAN 1:1-21 \nDAG 2:1-49 = DAN 2:1-49\nDAG 3:1-23 = DAN 3:1-23\nDAG 3:91-97 = DAN 3:24-30\nDAG 4:1-3 = DAN 3:31-33\nDAG 4:4-37 = DAN 4:1-34\nDAG 4:1-2 = DAN 4:4-5\nDAG 5:1-30 = DAN 5:1-30\nDAG 6:1-29 = DAN 6:1-29\nDAG 7:1-28 = DAN 7:1-28\nDAG 8:1-27 = DAN 8:1-27\nDAG 9:1-27 = DAN 9:1-27\nDAG 10:1-21 = DAN 10:1-21\nDAG 11:1-45 = DAN 11:1-45\nDAG 12:1-13 = DAN 12:1-13\n#\nHOS 1:9 2:25 3:5 4:19 5:15 6:11 7:16 8:14 9:17 10:15 11:11 12:15 13:15 14:10\nJOL 1:20 2:27 3:5 4:21\nAMO 1:15 2:16 3:15 4:13 5:27 6:14 7:17 8:14 9:15\nOBA 1:21\nJON 1:16 2:11 3:10 4:11\nMIC 1:16 2:13 3:12 4:14 5:14 6:16 7:20\nNAM 1:14 2:14 3:19\nHAB 1:17 2:20 3:19\nZEP 1:18 2:15 3:20\nHAG 1:15 2:23\nZEC 1:17 2:17 3:10 4:14 5:11 6:15 7:14 8:23 9:17 10:12 11:17 12:14 13:9 14:21\nMAL 1:14 2:17 3:24\n#\n#  It feels a bit odd to include NT in \"Septuagint\" but I think there are\n#  Bibles that follow the _versification_ of OT LXX but also have a NT.\n#\n# ------------------------------------------------------\n# New Testament books\nMAT 1:25 2:23 3:17 4:25 5:48 6:34 7:29 8:34 9:38 10:42 11:30 12:50 13:58 14:36 15:39 16:28 17:27 18:35 19:30 20:34 21:46 22:46 23:39 24:51 25:46 26:75 27:66 28:20\nMRK 1:45 2:28 3:35 4:41 5:43 6:56 7:37 8:38 9:50 10:52 11:33 12:44 13:37 14:72 15:47 16:20\nLUK 1:80 2:52 3:38 4:44 5:39 6:49 7:50 8:56 9:62 10:42 11:54 12:59 13:35 14:35 15:32 16:31 17:37 18:43 19:48 20:47 21:38 22:71 23:56 24:53\nJHN 1:51 2:25 3:36 4:54 5:47 6:71 7:53 8:59 9:41 10:42 11:57 12:50 13:38 14:31 15:27 16:33 17:26 18:40 19:42 20:31 21:25\nACT 1:26 2:47 3:26 4:37 5:42 6:15 7:60 8:40 9:43 10:48 11:30 12:25 13:52 14:28 15:41 16:40 17:34 18:28 19:40 20:38 21:40 22:30 23:35 24:27 25:27 26:32 27:44 28:31\nROM 1:32 2:29 3:31 4:25 5:21 6:23 7:25 8:39 9:33 10:21 11:36 12:21 13:14 14:23 15:33 16:27\n1CO 1:31 2:16 3:23 4:21 5:13 6:20 7:40 8:13 9:27 10:33 11:34 12:31 13:13 14:40 15:58 16:24\n2CO 1:24 2:17 3:18 4:18 5:21 6:18 7:16 8:24 9:15 10:18 11:33 12:21 13:13\nGAL 1:24 2:21 3:29 4:31 5:26 6:18\nEPH 1:23 2:22 3:21 4:32 5:33 6:24\nPHP 1:30 2:30 3:21 4:23\nCOL 1:29 2:23 3:25 4:18\n1TH 1:10 2:20 3:13 4:18 5:28\n2TH 1:12 2:17 3:18\n1TI 1:20 2:15 3:16 4:16 5:25 6:21\n2TI 1:18 2:26 3:17 4:22\nTIT 1:16 2:15 3:15\nPHM 1:25\nHEB 1:14 2:18 3:19 4:16 5:14 6:20 7:28 8:13 9:28 10:39 11:40 12:29 13:25\nJAS 1:27 2:26 3:18 4:17 5:20\n1PE 1:25 2:25 3:22 4:19 5:14\n2PE 1:21 2:22 3:18\n1JN 1:10 2:29 3:24 4:21 5:21\n2JN 1:13\n3JN 1:15\nJUD 1:25\nREV 1:20 2:29 3:22 4:11 5:14 6:17 7:17 8:13 9:21 10:11 11:19 12:18 13:18 14:20 15:8 16:21 17:18 18:24 19:21 20:15 21:27 22:21\n#--------------------------------------------------\n# Deuterocanonical Books\nTOB 1:22 2:14 3:17 4:21 5:23 6:19 7:17 8:21 9:6 10:14 11:19 12:22 13:18 14:15\nJDT 1:16 2:28 3:10 4:15 5:24 6:21 7:32 8:36 9:14 10:23 11:23 12:20 13:20 14:19 15:14 16:25\n# added ESG definition in its right PT order\nESG 1:22 2:23 3:15 4:17 5:14 6:14 7:10 8:17 9:32 10:3\n# note chapter 4 v17 is 17a-z\n# note chapter 8 v12 is 12a-x\n# note chapter 10 v3 is 3a-l\nWIS 1:16 2:24 3:19 4:20 5:23 6:25 7:30 8:21 9:18 10:21 11:26 12:27 13:19 14:31 15:19 16:29 17:20 18:25 19:22\nSIR 1:30 2:18 3:31 4:31 5:15 6:37 7:36 8:19 9:18 10:31 11:34 12:18 13:26 14:27 15:20 16:30 17:32 18:33 19:30 20:31 21:28 22:27 23:27 24:34 25:26 26:29 27:30 28:26 29:28 30:25 31:31 32:24 33:33 34:26 35:24 36:27 37:31 38:34 39:35 40:30 41:27 42:25 43:33 44:23 45:26 46:20 47:25 48:25 49:16 50:29 51:30\nBAR 1:22 2:35 3:38 4:37 5:9\nLJE 1:72\n# Edited SUS / SS 14.6.2014\nSUS 1:64\nBEL 1:42\n1MA 1:64 2:70 3:60 4:61 5:68 6:63 7:50 8:32 9:73 10:89 11:74 12:53 13:53 14:49 15:41 16:24\n2MA 1:36 2:32 3:40 4:50 5:27 6:31 7:42 8:36 9:29 10:38 11:38 12:45 13:26 14:46 15:39\n3MA 1:29 2:33 3:30 4:21 5:51 6:41 7:23\n4MA 1:35 2:24 3:21 4:26 5:38 6:35 7:23 8:29 9:32 10:21 11:27 12:19 13:27 14:20 15:32 16:25 17:24 18:24\n# 1ES Ezra (Greek)\n1ES 1:55 2:26 3:24 4:63 5:71 6:33 7:15 8:92 9:55\n#-----------------------------------------------------\n# Edited by Studge - Had the wrong definition of 2ES\n# 2ES 1:11 2:70 3:13 4:24 5:17 6:22 7:28 8:36 9:15 10:44 11:11 12:20 13:37 14:17 15:19 16:19 17:73 18:18 19:37 20:40 21:36 22:47 23:31\n# 2ES is not a LXX book but is from the Vulgate and has 16 chapters\n# edited by Studge added the correct definition of 2ES\n2ES 1:40 2:48 3:36 4:52 5:56 6:59 7:140 8:63 9:47 10:59 11:46 12:51 13:58 14:48 15:63 16:78\n#\n# Edited by Studge\n#MAN and PS2 were not defined which are in LXX\nMAN 1:15\nPS2 1:7\n#-------------------------------------------------------\n# ODA and PSS are in the PT 6 files but now missing from the LXX files in PT 7\nODA 1:19 2:43 3:10 4:19 5:12 6:8 7:20 8:37 9:22 10:9 11:11 12:15 13:4 14:46\nPSS 1:8 2:37 3:12 4:25 5:19 6:6 7:10 8:34 9:11 10:8 11:9 12:6 13:12 14:10 15:13 16:15 17:46 18:12\n#-------------------------------------------------------\n# NR: LXX variant texts now obselete, kep for backward compatability\nJSA 1:18 2:24 3:17 4:24 5:15 6:27 7:26 8:35 9:27 10:43 11:23 12:24 13:33 14:15 15:63 16:10 17:18 18:28 19:45 20:9 21:45 22:34 23:16 24:33\nJDB 1:36 2:23 3:31 4:24 5:31 6:40 7:25 8:35 9:57 10:18 11:40 12:15 13:25 14:20 15:20 16:31 17:13 18:31 19:30 20:48 21:25\nTBS 1:22 2:14 3:17 4:21 5:23 6:19 7:17 8:21 9:6 10:14 11:19 12:22 13:18 14:15\nSST 1:64\nDNT 1:21 2:49 3:97 4:37 5:30 6:29 7:28 8:27 9:27 10:21 11:45 12:13\nBLT 1:42\n#--------------------------------------------------------\n# Greek Daniel\n# Edited chapter 5 and 6 and removed chapters 13 and 14 that are not in Rahlfs / SS 14.6.2014\nDAG 1:21 2:49 3:97 4:37 5:30 6:29 7:28 8:27 9:27 10:21 11:45 12:13\n#--------------------------------------------------------\n# Syriac books for Peshitta projects SYR and SYA\n#\n# Syriac Psalms 152-155\n##PS3 1:17 2:20 3:6 4:6\n#\n# Apocalypse of Baruch\n##2BA 1:5 2:2 3:9 4:7 5:7 6:10 7:2 8:5 9:1 10:19 11:7 12:5 13:12 14:19 15:8 16:1 17:4 18:2 19:8 20:6 21:26 22:8 23:7 24:4 25:4 26:1 27:15 28:7 29:8 30:5 31:5 32:9 33:3 34:1 35:5 36:10 37:1 38:4 39:8 40:4 41:6 42:8 43:3 44:15 45:2 46:7 47:2 48:50 49:3 50:4 51:16 52:8 53:12 54:22 55:8 56:16 57:3 58:2 59:12 60:2 61:8 62:8 63:11 64:10 65:2 66:8 67:9 68:8 69:5 70:10 71:3 72:6 73:7 74:4 75:8 76:5 77:26\n#\n# Letter of Baruch\n##LBA 78:7 79:3 80:7 81:4 82:9 83:23 84:11 85:15 86:3\n#--------------------------------------------------------\n# Books for Ethiopian Canon\n# Jubilees (Ethiopian canon)\n##JUB 1:26 2:17 3:19 4:24 5:36 6:34 7:37 8:40 9:27 10:48 11:39 12:56 13:34 14:55 15:20 16:28 17:30 18:31 19:59 20:66 21:30 22:38 23:59 24:30 25:50 26:48 27:37 28:38 29:27 30:29 31:31 32:24 33:30 34:20\n# Enoch (Ethiopian canon)\n##ENO 1:28 2:42 3:30 4:88 5:40 6:42 7:39 8:46 9:42 10:16 11:19 12:40 13:34 14:35 15:45 16:41 17:69 18:42 19:29 20:53 21:57 22:14 23:26 24:16 25:30 26:37 27:21 28:34 29:28 30:23 31:29 32:82 33:59 34:49 35:36 36:30 37:34 38:36 39:24 40:40 41:22 42:16\n# 1 Meqabyan (Ethiopian canon)\n##1MQ 1:28 2:28 3:38 4:37 5:39 6:38 7:33 8:35 9:10 10:8 11:8 12:44 13:27 14:23 15:20 16:9 17:8 18:12 19:17 20:4 21:31 22:11 23:7 4:22 25:18 26:5 27:20 28:49 29:17 30:16 31:7 32:4 33:11 34:18 35:8 36:46\n# 2 Meqabyan (Ethiopian canon)\n##2MQ 1:13 2:11 3:29 4:32 5:18 6:24 7:9 8:24 9:27 10:28 11:25 12:15 13:14 14:36 15:21 16:15 17:12 18:14 19:15 20:14 \n# 3 Meqabyan (Ethiopian canon)\n##3MQ 1:24 2:23 3:11 4:36 5:16 6:16 7:5 8:12 9:36 10:29\n# Reproof (Ethiopian canon)\n##REP 1:28 2:28 3:27 4:28 5:27 6:22\n# 4 Baruch / Rest of the Words of Baruch (Ethiopian canon)\n##4BA 1:30 2:29 3:30 4:33 5:62\n#---------------------------------------------------------\n# Edited by SS 14.6.2014 added deliberatelly omitted verses\n-GEN 31:51\n-GEN 35:21\n\n-EXO 25:6\n-EXO 28:23\n-EXO 28:24\n-EXO 28:25\n-EXO 28:26\n-EXO 28:27\n-EXO 28:28\n-EXO 32:9\n-EXO 35:8\n-EXO 35:15\n-EXO 35:17\n-EXO 35:18\n-EXO 40:7\n-EXO 40:11\n-EXO 40:28\n-EXO 40:30\n-EXO 40:31\n-EXO 40:32\n\n-JOS 6:4\n-JOS 8:13\n-JOS 8:26\n-JOS 10:15\n-JOS 20:4\n-JOS 20:5\n-JOS 20:6\n\n-1SA 13:1\n-1SA 17:21\n-1SA 17:22\n-1SA 17:23\n-1SA 17:24\n-1SA 17:25\n-1SA 17:26\n-1SA 17:27\n-1SA 17:28\n-1SA 17:29\n-1SA 17:30\n-1SA 17:31\n-1SA 17:41\n-1SA 17:50\n-1SA 18:1\n-1SA 18:2\n-1SA 18:3\n-1SA 18:4\n-1SA 18:5\n-1SA 18:10\n-1SA 18:11\n-1SA 18:17\n-1SA 18:18\n-1SA 18:19\n-1SA 23:12\n\n-1KI 3:1\n-1KI 5:5\n-1KI 5:6\n-1KI 5:7\n-1KI 5:8\n-1KI 5:31\n-1KI 6:11\n-1KI 6:12\n-1KI 6:13\n-1KI 6:14\n-1KI 6:18\n-1KI 8:12\n-1KI 8:13\n-1KI 9:15\n-1KI 9:16\n-1KI 9:17\n-1KI 9:18\n-1KI 9:19\n-1KI 9:20\n-1KI 9:21\n-1KI 9:22\n-1KI 9:23\n-1KI 9:24\n-1KI 9:25\n-1KI 11:3\n-1KI 11:23\n-1KI 11:24\n-1KI 11:39\n-1KI 12:2\n-1KI 12:17\n-1KI 13:27\n-1KI 14:1\n-1KI 14:2\n-1KI 14:3\n-1KI 14:4\n-1KI 14:5\n-1KI 14:6\n-1KI 14:7\n-1KI 14:8\n-1KI 14:9\n-1KI 14:10\n-1KI 14:11\n-1KI 14:12\n-1KI 14:13\n-1KI 14:14\n-1KI 14:15\n-1KI 14:16\n-1KI 14:17\n-1KI 14:18\n-1KI 14:19\n-1KI 14:20\n-1KI 15:6\n-1KI 15:32\n-1KI 22:47\n-1KI 22:48\n-1KI 22:49\n-1KI 22:50\n\n-1SA 17:12\n-1SA 17:13\n-1SA 17:14\n-1SA 17:15\n-1SA 17:16\n-1SA 17:17\n-1SA 17:18\n-1SA 17:19\n-1SA 17:20\n\n-1CH 1:11\n-1CH 1:12\n-1CH 1:13\n-1CH 1:14\n-1CH 1:15\n-1CH 1:16\n-1CH 1:18\n-1CH 1:19\n-1CH 1:20\n-1CH 1:21\n-1CH 1:22\n-1CH 1:23\n-1CH 16:24\n\n-2CH 27:8\n\n-EZR 13:7\n-EZR 14:18\n-EZR 14:19\n-EZR 14:20\n-EZR 14:21\n-EZR 14:22\n-EZR 14:23\n-EZR 19:38\n-EZR 21:16\n-EZR 21:20\n-EZR 21:21\n-EZR 21:28\n-EZR 21:29\n-EZR 21:32\n-EZR 21:33\n-EZR 21:34\n-EZR 21:35\n-EZR 22:4\n-EZR 22:5\n-EZR 22:6\n\n-JOB 23:14\n\n-PSA 115:5\n\n-PRO 4:7\n-PRO 8:33\n-PRO 11:4\n-PRO 15:31\n-PRO 16:1\n-PRO 16:3\n-PRO 16:4\n-PRO 16:6\n-PRO 19:1\n-PRO 19:2\n-PRO 20:14\n-PRO 20:15\n-PRO 20:16\n-PRO 20:17\n-PRO 20:18\n-PRO 20:19\n-PRO 20:20\n-PRO 20:21\n-PRO 20:22\n-PRO 21:5\n-PRO 22:6\n-PRO 23:23\n\n-JER 2:1\n-JER 7:1\n-JER 8:11\n-JER 8:12\n-JER 10:6\n-JER 10:7\n-JER 10:8\n-JER 10:10\n-JER 11:7\n-JER 17:1\n-JER 17:2\n-JER 17:3\n-JER 17:4\n-JER 26:1\n-JER 26:26\n-JER 28:45\n-JER 28:46\n-JER 28:47\n-JER 28:48\n-JER 30:22\n-JER 32:1\n-JER 32:2\n-JER 32:3\n-JER 32:4\n-JER 32:5\n-JER 32:6\n-JER 32:7\n-JER 32:8\n-JER 32:9\n-JER 32:10\n-JER 32:11\n-JER 32:12\n-JER 32:14\n-JER 34:1\n-JER 34:7\n-JER 34:13\n-JER 34:17\n-JER 34:21\n-JER 36:16\n-JER 36:17\n-JER 36:18\n-JER 36:19\n-JER 36:20\n-JER 37:10\n-JER 37:11\n-JER 37:15\n-JER 37:22\n-JER 46:4\n-JER 46:5\n-JER 46:6\n-JER 46:7\n-JER 46:8\n-JER 46:9\n-JER 46:10\n-JER 46:11\n-JER 46:12\n-JER 46:13\n-JER 52:2\n-JER 52:3\n-JER 52:15\n-JER 52:28\n-JER 52:29\n-JER 52:30\n\n-LAM 3:22\n-LAM 3:23\n-LAM 3:24\n-LAM 3:29\n\n-EZK 1:14\n-EZK 10:14\n-EZK 27:31\n-EZK 32:19\n-EZK 33:26\n-EZK 40:30\n\n#------------- DC books ------------\n\n-TOB 4:8\n-TOB 4:9\n-TOB 4:10\n-TOB 4:11\n-TOB 4:12\n-TOB 4:13\n-TOB 4:14\n-TOB 4:15\n-TOB 4:16\n-TOB 4:17\n-TOB 4:18\n-TOB 13:8\n-TOB 13:9\n-TOB 13:10\n\n-ESG 4:6\n-ESG 9:5\n-ESG 9:30\n\n-SIR 1:5\n-SIR 1:7\n-SIR 1:21\n-SIR 3:19\n-SIR 3:25\n-SIR 6:1\n-SIR 10:21\n-SIR 11:15\n-SIR 11:16\n-SIR 13:14\n-SIR 16:15\n-SIR 16:16\n-SIR 17:5\n-SIR 17:9\n-SIR 17:16\n-SIR 17:18\n-SIR 17:21\n-SIR 18:3\n-SIR 19:18\n-SIR 19:19\n-SIR 19:21\n-SIR 22:7\n-SIR 22:8\n-SIR 24:18\n-SIR 24:24\n-SIR 25:12\n-SIR 26:19\n-SIR 26:20\n-SIR 26:21\n-SIR 26:22\n-SIR 26:23\n-SIR 26:24\n-SIR 26:25\n-SIR 26:26\n-SIR 26:27\n\n-4MA 10:4\n-4MA 11:7\n-4MA 11:8\n\n#---------------------------------------------------------\n# Mapping\n# LXX = BHS (see org.vrs)\n#\n# (Note: for performance reasons ranges must not span a chapter, e.g. 4:10-5:11 is illegal)\n#\n# 2ES = EZR and NEH\n#\nEXO 20:13 = EXO 20:14\nEXO 20:14 = EXO 20:15\nEXO 20:15 = EXO 20:13\nEXO 21:16 = EXO 21:17\nEXO 21:17 = EXO 21:16\nEXO 36:9 = EXO 39:2\nEXO 36:10 = EXO 39:3\nEXO 36:11 = EXO 39:4\nEXO 36:12 = EXO 39:5\nEXO 36:13 = EXO 39:6\nEXO 36:14 = EXO 39:7\nEXO 36:15 = EXO 39:8\nEXO 36:16 = EXO 39:9\nEXO 36:17 = EXO 39:10\nEXO 36:20 = EXO 39:13\nEXO 36:21 = EXO 39:14\nEXO 36:22 = EXO 39:15\nEXO 36:23 = EXO 39:16\nEXO 36:25 = EXO 39:17\nEXO 36:26 = EXO 39:18\nEXO 36:27 = EXO 39:19\nEXO 36:28 = EXO 39:20\nEXO 36:29 = EXO 39:21\nEXO 36:30 = EXO 39:22\nEXO 36:31 = EXO 39:23\nEXO 36:32 = EXO 39:24\nEXO 36:33 = EXO 39:25\nEXO 36:34 = EXO 39:26\nEXO 36:35 = EXO 39:27\nEXO 36:36 = EXO 39:28\nEXO 36:37 = EXO 39:29\nEXO 36:38 = EXO 39:30\n\nDEU 5:17 = DEU 5:18\nDEU 5:18 = DEU 5:17\n\n1KI 20:1-29 = 1KI 21:1-29 \n1KI 21:1-43 = 1KI 20:1-43\n\n#\n# Map The Greek versioin of Esther onto the Hebrew version of Esther\n# using the Hebrew version as the reference point.\n# Normally DC material would not have any entries in this part of the lxx.vrs file\n# because the LXX serves as the reference point for DC material.\n# Material which is placed in separate books in HEB and LXX (i.e. EST and ESG)\n# is however placed here and referenced to the HEB reference points.\nESG 1:1-22 = EST 1:1-22\nESG 2:1-23 = EST 2:1-23\nESG 3:1-15 = EST 3:1-15\nESG 4:1-17 = EST 4:1-17\nESG 5:1-14 = EST 5:1-14\nESG 6:1-14 = EST 6:1-14\nESG 7:1-10 = EST 7:1-10\nESG 8:1-17 = EST 8:1-17\nESG 9:1-32 = EST 9:1-32\nESG 10:1-3 = EST 10:1-3\n#\n# PSA 9 = 9+10\nPSA 9:22 = PSA 10:0\nPSA 9:22-39 = PSA 10:1-18\nPSA 10:0-7 = PSA 11:0-7\nPSA 11:0-9 = PSA 12:0-9\nPSA 12:0-6 = PSA 13:0-6\nPSA 13:0-7 = PSA 14:0-7\nPSA 14:0-5 = PSA 15:0-5\nPSA 15:0-11 = PSA 16:0-11\nPSA 16:0-15 = PSA 17:0-15\nPSA 17:0-51 = PSA 18:0-51\nPSA 18:0-15 = PSA 19:0-15\nPSA 19:0-10 = PSA 20:0-10\nPSA 20:0-14 = PSA 21:0-14\nPSA 21:0-32 = PSA 22:0-32\nPSA 22:0-6 = PSA 23:0-6\nPSA 23:0-10 = PSA 24:0-10\nPSA 24:0-22 = PSA 25:0-22\nPSA 25:0-12 = PSA 26:0-12\nPSA 26:0-14 = PSA 27:0-14\nPSA 27:0-9 = PSA 28:0-9\nPSA 28:0-11 = PSA 29:0-11\nPSA 29:0-13 = PSA 30:0-13\nPSA 30:0-25 = PSA 31:0-25\nPSA 31:0-11 = PSA 32:0-11\nPSA 32:0-22 = PSA 33:0-22\nPSA 33:0-23 = PSA 34:0-23\nPSA 34:0-28 = PSA 35:0-28\nPSA 35:0-13 = PSA 36:0-13\nPSA 36:0-40 = PSA 37:0-40\nPSA 37:0-23 = PSA 38:0-23\nPSA 38:0-14 = PSA 39:0-14\nPSA 39:0-18 = PSA 40:0-18\nPSA 40:0-14 = PSA 41:0-14\nPSA 41:0-12 = PSA 42:0-12\nPSA 42:0-5 = PSA 43:0-5\nPSA 43:0-27 = PSA 44:0-27\nPSA 44:0-18 = PSA 45:0-18\nPSA 45:0-12 = PSA 46:0-12\nPSA 46:0-10 = PSA 47:0-10\nPSA 47:0-15 = PSA 48:0-15\nPSA 48:0-21 = PSA 49:0-21\nPSA 49:0-23 = PSA 50:0-23\nPSA 50:0-21 = PSA 51:0-21\nPSA 51:0-11 = PSA 52:0-11\nPSA 52:0-7 = PSA 53:0-7\nPSA 53:0-9 = PSA 54:0-9\nPSA 54:0-24 = PSA 55:0-24\nPSA 55:0-14 = PSA 56:0-14\nPSA 56:0-12 = PSA 57:0-12\nPSA 57:0-12 = PSA 58:0-12\nPSA 58:0-18 = PSA 59:0-18\nPSA 59:0-14 = PSA 60:0-14\nPSA 60:0-9 = PSA 61:0-9\nPSA 61:0-13 = PSA 62:0-13\nPSA 62:0-12 = PSA 63:0-12\nPSA 63:0-11 = PSA 64:0-11\nPSA 64:0-14 = PSA 65:0-14\nPSA 65:0-20 = PSA 66:0-20\nPSA 66:0-8 = PSA 67:0-8\nPSA 67:0-36 = PSA 68:0-36\nPSA 68:0-37 = PSA 69:0-37\nPSA 69:0-6 = PSA 70:0-6\nPSA 70:0-24 = PSA 71:0-24\nPSA 71:0-20 = PSA 72:0-20\nPSA 72:0-28 = PSA 73:0-28\nPSA 73:0-23 = PSA 74:0-23\nPSA 74:0-11 = PSA 75:0-11\nPSA 75:0-13 = PSA 76:0-13\nPSA 76:0-21 = PSA 77:0-21\nPSA 77:0-72 = PSA 78:0-72\nPSA 78:0-13 = PSA 79:0-13\nPSA 79:0-20 = PSA 80:0-20\nPSA 80:0-17 = PSA 81:0-17\nPSA 81:0-8 = PSA 82:0-8\nPSA 82:0-19 = PSA 83:0-19\nPSA 83:0-13 = PSA 84:0-13\nPSA 84:0-14 = PSA 85:0-14\nPSA 85:0-17 = PSA 86:0-17\nPSA 86:0-7 = PSA 87:0-7\nPSA 87:0-19 = PSA 88:0-19\nPSA 88:0-53 = PSA 89:0-53\nPSA 89:0-17 = PSA 90:0-17\nPSA 90:0-16 = PSA 91:0-16\nPSA 91:0-16 = PSA 92:0-16\nPSA 92:0-5 = PSA 93:0-5\nPSA 93:0-23 = PSA 94:0-23\nPSA 94:0-11 = PSA 95:0-11\nPSA 95:0-13 = PSA 96:0-13\nPSA 96:0-12 = PSA 97:0-12\nPSA 97:0-9 = PSA 98:0-9\nPSA 98:0-9 = PSA 99:0-9\nPSA 99:0-5 = PSA 100:0-5\nPSA 100:0-8 = PSA 101:0-8\nPSA 101:0-29 = PSA 102:0-29\nPSA 102:0-22 = PSA 103:0-22\nPSA 103:0-35 = PSA 104:0-35\nPSA 104:0-45 = PSA 105:0-45\nPSA 105:0-48 = PSA 106:0-48\nPSA 106:0-43 = PSA 107:0-43\nPSA 107:0-14 = PSA 108:0-14\nPSA 108:0-31 = PSA 109:0-31\nPSA 109:0-7 = PSA 110:0-7\nPSA 110:0-10 = PSA 111:0-10\nPSA 111:0-10 = PSA 112:0-10\nPSA 112:0-9 = PSA 113:0-9\nPSA 113:0-8 = PSA 114:0-8\nPSA 113:9 = PSA 115:0\nPSA 113:9-26 = PSA 115:1-18\nPSA 114:0-9 = PSA 116:0-9\nPSA 115:0 = PSA 116:10\nPSA 115:1-10 = PSA 116:10-19\t\nPSA 116:0-2 = PSA 117:0-2\nPSA 117:0-29 = PSA 118:0-29\nPSA 118:0-176 = PSA 119:0-176\nPSA 119:0-7 = PSA 120:0-7\nPSA 120:0-8 = PSA 121:0-8\nPSA 121:0-9 = PSA 122:0-9\nPSA 122:0-4 = PSA 123:0-4\nPSA 123:0-8 = PSA 124:0-8\nPSA 124:0-5 = PSA 125:0-5\nPSA 125:0-6 = PSA 126:0-6\nPSA 126:0-5 = PSA 127:0-5\nPSA 127:0-6 = PSA 128:0-6\nPSA 128:0-8 = PSA 129:0-8\nPSA 129:0-8 = PSA 130:0-8\nPSA 130:0-3 = PSA 131:0-3\nPSA 131:0-18 = PSA 132:0-18\nPSA 132:0-3 = PSA 133:0-3\nPSA 133:0-3 = PSA 134:0-3\nPSA 134:0-21 = PSA 135:0-21\nPSA 135:0-26 = PSA 136:0-26\nPSA 136:0-9 = PSA 137:0-9\nPSA 137:0-8 = PSA 138:0-8\nPSA 138:0-24 = PSA 139:0-24\nPSA 139:0-14 = PSA 140:0-14\nPSA 140:0-10 = PSA 141:0-10\nPSA 141:0-8 = PSA 142:0-8\nPSA 142:0-12 = PSA 143:0-12\nPSA 143:0-15 = PSA 144:0-15\nPSA 144:0-21 = PSA 145:0-21\nPSA 145:0-10 = PSA 146:0-10\n# 146 + 147 -> 147\nPSA 146:0-11 = PSA 147:0-11\nPSA 147:0 = PSA 147:12\nPSA 147:1-9 = PSA 147:12-20\n# PSA 151 -> PS2\nPSA 151:0-7 = PS2 1:0-7\n#\n# Jeremiah according to Rahlfs\n# Added by SS 25.3.2003\n#\n# JER 1-25:13 = JER 1-25:13\n# JER 25:14 = part of JER 49:34\n# JER 25:20 = part of JER 49:34\n# JER 52 = JER 52\n#\nJER 25:14-19 = JER 49:34-39\nJER 25:20 = JER 49:34\nJER 26:1-28 = JER 46:1-28\nJER 27:1-46 = JER 50:1-46\nJER 28:1-64 = JER 51:1-64\nJER 29:1-7 = JER 47:1-7\nJER 30:1-16 = JER 49:7-22\nJER 30:17-22 = JER 49:1-6\nJER 30:23-28 = JER 49:28-33\nJER 30:29-33 = JER 49:23-27\nJER 31:1-44 = JER 48:1-44\n# Verses 31:1-13 do not exist\nJER 32:13 = JER 25:13\n# Verse 32:14 does not exist\nJER 32:15-38 = JER 25:15-38\nJER 33:1-24 = JER 26:1-24\nJER 34:1-22 = JER 27:1-22\nJER 35:1-17 = JER 28:1-17\nJER 36:1-32 = JER 29:1-32\nJER 37:1-24 = JER 30:1-24\nJER 38:1-40 = JER 31:1-40\nJER 39:1-44 = JER 32:1-44\nJER 40:1-13 = JER 33:1-13\nJER 41:1-22 = JER 34:1-22\nJER 42:1-19 = JER 35:1-19\nJER 43:1-32 = JER 36:1-32\nJER 44:1-21 = JER 37:1-21\nJER 45:1-28 = JER 38:1-28\nJER 46:1-3 = JER 39:1-3\n# Verses 46:4-13 do not exist\nJER 46:14-18 = JER 39:14-18\nJER 47:1-16 = JER 40:1-16\nJER 48:1-18 = JER 41:1-18\nJER 49:1-22 = JER 42:1-22\nJER 50:1-13 = JER 43:1-13\nJER 51:1-30 = JER 44:1-30\nJER 51:31-35 = JER 45:1-5\n#\n# Map The Greek versioin of Daniel onto the Hebrew version of Daniel\n# using the Hebrew version as the reference point.\n# Normally DC material would not have any entries in this part of the lxx.vrs file\n# because the LXX serves as the reference point for DC material.\n# Material which is placed in separate books in HEB and LXX (i.e. DAN and DAG)\n# is however placed here and referenced to the HEB reference point.\n#\n# If you have a text in which the DAG material has been (incorrectly) placed into DAN\n# you must create a versification file in which DAN appears as the first book in \n# the following section.  You cannot have both DAN = DAN and DAG = DAN entries\n# in a single file.\nDAG 1:1-21 = DAN 1:1-21\nDAG 2:1-49 = DAN 2:1-49\nDAG 3:1-23 = DAN 3:1-23\nDAG 3:91-97 = DAN 3:24-30\nDAG 4:1-3 = DAN 3:31-33\nDAG 4:4-37 = DAN 4:1-34\nDAG 5:1-31 = DAN 5:1-31\nDAG 6:1-28 = DAN 6:1-28\nDAG 7:1-28 = DAN 7:1-28\nDAG 8:1-27 = DAN 8:1-27\nDAG 9:1-27 = DAN 9:1-27\nDAG 10:1-21 = DAN 10:1-21\nDAG 11:1-45 = DAN 11:1-45 \nDAG 12:1-13 = DAN 12:1-13\n#\n# No entries present for S3Y because this book would not normally be present in a text based\n# on the LXX versification. The S3Y material would instead start at DAG 3:24.\n#\n# When Ezra-Nehemiah is one book Ezra 11-23 maps onto Nehemiah\n# LXX mapping onto BHS\nEZR 11:1-11 = NEH 1:1-11\nEZR 12:1-20 = NEH 2:1-20\nEZR 13:1-38 = NEH 3:1-38\nEZR 14:1-17 = NEH 4:1-17\nEZR 15:1-19 = NEH 5:1-19\nEZR 16:1-19 = NEH 6:1-19\nEZR 17:1-72 = NEH 7:1-72\nEZR 18:1-18 = NEH 8:1-18\nEZR 19:1-37 = NEH 9:1-37\nEZR 20:1-40 = NEH 10:1-40\nEZR 21:1-36 = NEH 11:1-36\nEZR 22:1-47 = NEH 12:1-47\nEZR 23:1-31 = NEH 13:1-31\n#---------------------------\n# Mapping 2 Esdras onto the older Apocalypse of Ezra [Studge]\n2ES 3:1-36 = EZA 1:1-36\n2ES 4:1-52 = EZA 2:1-52\n2ES 5:1-56 = EZA 3:1-56\n2ES 6:1-59 = EZA 4:1-59\n2ES 7:1-35 = EZA 5:1-35\n2ES 7:106-140 = EZA 5:36-70\n2ES 8:1-63 = EZA 6:1-63\n2ES 9:1-47 = EZA 7:1-47\n2ES 10:1-60 = EZA 8:1-60\n2ES 11:1-46 = EZA 9:1-46\n2ES 12:1-51 = EZA 10:1-51\n2ES 13:1-58 = EZA 11:1-58\n2ES 14:1-48 = EZA 12:1-48\n#----------------------------\n# Some texts (but not LXX) contain SUS and BEL as chapters 13 and 14 of DAG.\n# There should not be any entries for DAG 13 and DAG 14 in the lxx.vrs because these chapters do not \n# exist in the LXX.\n# If you have a text which has DAG 13 and 14 you will need to have a .vrs file that includes the following\n# two mapping.\n#\n# Susanna\n# DAG 13:1-63 = SUS 1:1-63\n# Bel and the Dragon\n# DAG 14:1-42 = BEL 1:1-42\n#\n#----------------------------\n# Verse segment information for the Septuagint.\n# The verse segment information is preceded by a '#!' so that it will be ignored by versions \n# of Paratext prior to Paratext 7.3 (and thus avoid crashing it with an unexpected format). \n#! *EXO 28:29,-,a \n#! *EXO 35:12,-,a \n#! *JOS 9:2,-,a,b,c,d,e,f \n#! *JOS 15:59,-,a \n#! *JOS 19:47,-,a \n#! *JOS 19:48,-,a \n#! *JOS 21:42,-,a,b,c,d \n#! *JOS 24:31,-,a \n#! *JOS 24:33,-,a,b \n#! *1SA 30:28,-,a \n#! *2SA 5:16,-,a \n#! *1KI 2:35,-,a,b,c,d,e,f,g,h,i,k,l,m,n,o \n#! *1KI 2:46,-,a,b,c,d,e,f,g,h,i,k,l \n#! *1KI 5:14,-,a,b \n#! *1KI 6:1,-,a,b,c,d \n#! *1KI 6:36,-,a \n#! *1KI 8:53,-,a \n#! *1KI 9:9,-,a \n#! *1KI 10:22,-,a,b,c \n#! *1KI 10:26,-,a \n#! *1KI 12:24,-,a,b,c,d,e,f,g,h,i,k,l,m,n,o,p,q,r,s,t,u,x,y,z \n#! *1KI 16:28,-,a,b,c,d,e,f,g,h \n#! *2KI 1:18,-,a,b,c,d \n#! *2CH 35:19,-,a,b,c,d \n#! *2CH 36:2,-,a,b,c \n#! *2CH 36:4,-,a \n#! *2CH 36:5,-,a,b,c,d \n#! *JOB 2:9,-,a,b,c,d,e \n#! *JOB 19:4,-,a \n#! *JOB 23:15,-,a \n#! *JOB 36:28,-,a,b \n#! *JOB 42:17,-,a,b,c,d,e \n#! *PSA 144:13,-,a \n#! *PRO 3:16,-,a \n#! *PRO 3:22,-,a \n#! *PRO 4:27,-,a,b \n#! *PRO 6:8,-,a,b,c \n#! *PRO 6:11,-,a \n#! *PRO 7:1,-,a \n#! *PRO 8:21,-,a \n#! *PRO 9:10,-,a \n#! *PRO 9:12,-,a,b,c \n#! *PRO 9:18,-,a,b,c,d \n#! *PRO 10:4,-,a \n#! *PRO 12:11,-,a \n#! *PRO 12:13,-,a \n#! *PRO 13:9,-,a \n#! *PRO 13:13,-,a \n#! *PRO 15:18,-,a \n#! *PRO 15:27,-,a \n#! *PRO 15:28,-,a \n#! *PRO 15:29,-,a,b \n#! *PRO 17:6,-,a \n#! *PRO 17:16,-,a \n#! *PRO 18:22,-,a \n#! *PRO 20:9,-,a,b,c \n#! *PRO 22:8,-,a \n#! *PRO 22:9,-,a \n#! *PRO 22:14,-,a \n#! *PRO 24:22,-,a,b,c,d,e \n#! *PRO 25:10,-,a \n#! *PRO 25:20,-,a \n#! *PRO 26:11,-,a \n#! *PRO 27:20,-,a \n#! *PRO 27:21,-,a \n#! *PRO 28:17,-,a \n#! *ESG 1:1,-,b,c,d,e,f,g,h,i,k,l,m,n,o,p,q,r,s \n#! *ESG 3:13,-,a,b,c,d,e,f,g \n#! *ESG 4:17,-,a,b,c,d,e,f,g,h,i,k,l,m,n,o,p,q,r,s,t,u,w,x,y,z \n#! *ESG 5:1,-,a,b,c,d,e,f \n#! *ESG 5:2,-,a,b \n#! *ESG 8:12,-,a,b,c,d,e,f,g,h,i,k,l,m,n,o,p,q,r,s,t,u,x \n#! *ESG 10:3,-,a,b,c,d,e,f,g,h,i,k,l \n#! *SIR 1:1,-,a,b,c,d,e,f,g,h \n`;\n", "module.exports = `# Versification  \"Original\" \n# Version=1.200\n# (not a very good name but I have not heard a better suggestion)\n#\n# modifications by Studge 26/June/2009\n#\n# BHS versification for OT, UBS GNT versification for NT\n# following the Masoretic order\n# OT translations using Masorteic verse structures should map onto this text\n# NT versifications maps onto Nestle-Aland\n#\n# List of books, chapters, verses\n# One line per book.\n# One entry for each chapter.\n# Verse number is the maximum verse number for that chapter.\n# See the lines containing ='s below for verse mappings.\n#\n#---------------------------------------------------------------\n# Old Testament\nGEN 1:31 2:25 3:24 4:26 5:32 6:22 7:24 8:22 9:29 10:32 11:32 12:20 13:18 14:24 15:21 16:16 17:27 18:33 19:38 20:18 21:34 22:24 23:20 24:67 25:34 26:35 27:46 28:22 29:35 30:43 31:54 32:33 33:20 34:31 35:29 36:43 37:36 38:30 39:23 40:23 41:57 42:38 43:34 44:34 45:28 46:34 47:31 48:22 49:33 50:26\nEXO 1:22 2:25 3:22 4:31 5:23 6:30 7:29 8:28 9:35 10:29 11:10 12:51 13:22 14:31 15:27 16:36 17:16 18:27 19:25 20:26 21:37 22:30 23:33 24:18 25:40 26:37 27:21 28:43 29:46 30:38 31:18 32:35 33:23 34:35 35:35 36:38 37:29 38:31 39:43 40:38\nLEV 1:17 2:16 3:17 4:35 5:26 6:23 7:38 8:36 9:24 10:20 11:47 12:8 13:59 14:57 15:33 16:34 17:16 18:30 19:37 20:27 21:24 22:33 23:44 24:23 25:55 26:46 27:34\nNUM 1:54 2:34 3:51 4:49 5:31 6:27 7:89 8:26 9:23 10:36 11:35 12:16 13:33 14:45 15:41 16:35 17:28 18:32 19:22 20:29 21:35 22:41 23:30 24:25 25:19 26:65 27:23 28:31 29:39 30:17 31:54 32:42 33:56 34:29 35:34 36:13\nDEU 1:46 2:37 3:29 4:49 5:33 6:25 7:26 8:20 9:29 10:22 11:32 12:31 13:19 14:29 15:23 16:22 17:20 18:22 19:21 20:20 21:23 22:29 23:26 24:22 25:19 26:19 27:26 28:69 29:28 30:20 31:30 32:52 33:29 34:12\nJOS 1:18 2:24 3:17 4:24 5:15 6:27 7:26 8:35 9:27 10:43 11:23 12:24 13:33 14:15 15:63 16:10 17:18 18:28 19:51 20:9 21:45 22:34 23:16 24:33\nJDG 1:36 2:23 3:31 4:24 5:31 6:40 7:25 8:35 9:57 10:18 11:40 12:15 13:25 14:20 15:20 16:31 17:13 18:31 19:30 20:48 21:25\nRUT 1:22 2:23 3:18 4:22\n1SA 1:28 2:36 3:21 4:22 5:12 6:21 7:17 8:22 9:27 10:27 11:15 12:25 13:23 14:52 15:35 16:23 17:58 18:30 19:24 20:42 21:16 22:23 23:28 24:23 25:44 26:25 27:12 28:25 29:11 30:31 31:13\n2SA 1:27 2:32 3:39 4:12 5:25 6:23 7:29 8:18 9:13 10:19 11:27 12:31 13:39 14:33 15:37 16:23 17:29 18:32 19:44 20:26 21:22 22:51 23:39 24:25\n1KI 1:53 2:46 3:28 4:20 5:32 6:38 7:51 8:66 9:28 10:29 11:43 12:33 13:34 14:31 15:34 16:34 17:24 18:46 19:21 20:43 21:29 22:54\n2KI 1:18 2:25 3:27 4:44 5:27 6:33 7:20 8:29 9:37 10:36 11:20 12:22 13:25 14:29 15:38 16:20 17:41 18:37 19:37 20:21 21:26 22:20 23:37 24:20 25:30\n1CH 1:54 2:55 3:24 4:43 5:41 6:66 7:40 8:40 9:44 10:14 11:47 12:41 13:14 14:17 15:29 16:43 17:27 18:17 19:19 20:8 21:30 22:19 23:32 24:31 25:31 26:32 27:34 28:21 29:30\n2CH 1:18 2:17 3:17 4:22 5:14 6:42 7:22 8:18 9:31 10:19 11:23 12:16 13:23 14:14 15:19 16:14 17:19 18:34 19:11 20:37 21:20 22:12 23:21 24:27 25:28 26:23 27:9 28:27 29:36 30:27 31:21 32:33 33:25 34:33 35:27 36:23\nEZR 1:11 2:70 3:13 4:24 5:17 6:22 7:28 8:36 9:15 10:44\nNEH 1:11 2:20 3:38 4:17 5:19 6:19 7:72 8:18 9:37 10:40 11:36 12:47 13:31\nEST 1:22 2:23 3:15 4:17 5:14 6:14 7:10 8:17 9:32 10:3\nJOB 1:22 2:13 3:26 4:21 5:27 6:30 7:21 8:22 9:35 10:22 11:20 12:25 13:28 14:22 15:35 16:22 17:16 18:21 19:29 20:29 21:34 22:30 23:17 24:25 25:6 26:14 27:23 28:28 29:25 30:31 31:40 32:22 33:33 34:37 35:16 36:33 37:24 38:41 39:30 40:32 41:26 42:17\nPSA 1:6 2:12 3:9 4:9 5:13 6:11 7:18 8:10 9:21 10:18 11:7 12:9 13:6 14:7 15:5 16:11 17:15 18:51 19:15 20:10 21:14 22:32 23:6 24:10 25:22 26:12 27:14 28:9 29:11 30:13 31:25 32:11 33:22 34:23 35:28 36:13 37:40 38:23 39:14 40:18 41:14 42:12 43:5 44:27 45:18 46:12 47:10 48:15 49:21 50:23 51:21 52:11 53:7 54:9 55:24 56:14 57:12 58:12 59:18 60:14 61:9 62:13 63:12 64:11 65:14 66:20 67:8 68:36 69:37 70:6 71:24 72:20 73:28 74:23 75:11 76:13 77:21 78:72 79:13 80:20 81:17 82:8 83:19 84:13 85:14 86:17 87:7 88:19 89:53 90:17 91:16 92:16 93:5 94:23 95:11 96:13 97:12 98:9 99:9 100:5 101:8 102:29 103:22 104:35 105:45 106:48 107:43 108:14 109:31 110:7 111:10 112:10 113:9 114:8 115:18 116:19 117:2 118:29 119:176 120:7 121:8 122:9 123:4 124:8 125:5 126:6 127:5 128:6 129:8 130:8 131:3 132:18 133:3 134:3 135:21 136:26 137:9 138:8 139:24 140:14 141:10 142:8 143:12 144:15 145:21 146:10 147:20 148:14 149:9 150:6\nPRO 1:33 2:22 3:35 4:27 5:23 6:35 7:27 8:36 9:18 10:32 11:31 12:28 13:25 14:35 15:33 16:33 17:28 18:24 19:29 20:30 21:31 22:29 23:35 24:34 25:28 26:28 27:27 28:28 29:27 30:33 31:31\nECC 1:18 2:26 3:22 4:17 5:19 6:12 7:29 8:17 9:18 10:20 11:10 12:14\nSNG 1:17 2:17 3:11 4:16 5:16 6:12 7:14 8:14\nISA 1:31 2:22 3:26 4:6 5:30 6:13 7:25 8:23 9:20 10:34 11:16 12:6 13:22 14:32 15:9 16:14 17:14 18:7 19:25 20:6 21:17 22:25 23:18 24:23 25:12 26:21 27:13 28:29 29:24 30:33 31:9 32:20 33:24 34:17 35:10 36:22 37:38 38:22 39:8 40:31 41:29 42:25 43:28 44:28 45:25 46:13 47:15 48:22 49:26 50:11 51:23 52:15 53:12 54:17 55:13 56:12 57:21 58:14 59:21 60:22 61:11 62:12 63:19 64:11 65:25 66:24\nJER 1:19 2:37 3:25 4:31 5:31 6:30 7:34 8:23 9:25 10:25 11:23 12:17 13:27 14:22 15:21 16:21 17:27 18:23 19:15 20:18 21:14 22:30 23:40 24:10 25:38 26:24 27:22 28:17 29:32 30:24 31:40 32:44 33:26 34:22 35:19 36:32 37:21 38:28 39:18 40:16 41:18 42:22 43:13 44:30 45:5 46:28 47:7 48:47 49:39 50:46 51:64 52:34\nLAM 1:22 2:22 3:66 4:22 5:22\nEZK 1:28 2:10 3:27 4:17 5:17 6:14 7:27 8:18 9:11 10:22 11:25 12:28 13:23 14:23 15:8 16:63 17:24 18:32 19:14 20:44 21:37 22:31 23:49 24:27 25:17 26:21 27:36 28:26 29:21 30:26 31:18 32:32 33:33 34:31 35:15 36:38 37:28 38:23 39:29 40:49 41:26 42:20 43:27 44:31 45:25 46:24 47:23 48:35\nDAN 1:21 2:49 3:33 4:34 5:30 6:29 7:28 8:27 9:27 10:21 11:45 12:13\nHOS 1:9 2:25 3:5 4:19 5:15 6:11 7:16 8:14 9:17 10:15 11:11 12:15 13:15 14:10\nJOL 1:20 2:27 3:5 4:21\nAMO 1:15 2:16 3:15 4:13 5:27 6:14 7:17 8:14 9:15\nOBA 1:21\nJON 1:16 2:11 3:10 4:11\nMIC 1:16 2:13 3:12 4:14 5:14 6:16 7:20\nNAM 1:14 2:14 3:19\nHAB 1:17 2:20 3:19\nZEP 1:18 2:15 3:20\nHAG 1:15 2:23\nZEC 1:17 2:17 3:10 4:14 5:11 6:15 7:14 8:23 9:17 10:12 11:17 12:14 13:9 14:21\nMAL 1:14 2:17 3:24\n#---------------------------------------------------------\n# New Testament books\nMAT 1:25 2:23 3:17 4:25 5:48 6:34 7:29 8:34 9:38 10:42 11:30 12:50 13:58 14:36 15:39 16:28 17:27 18:35 19:30 20:34 21:46 22:46 23:39 24:51 25:46 26:75 27:66 28:20\nMRK 1:45 2:28 3:35 4:41 5:43 6:56 7:37 8:38 9:50 10:52 11:33 12:44 13:37 14:72 15:47 16:20\nLUK 1:80 2:52 3:38 4:44 5:39 6:49 7:50 8:56 9:62 10:42 11:54 12:59 13:35 14:35 15:32 16:31 17:37 18:43 19:48 20:47 21:38 22:71 23:56 24:53\nJHN 1:51 2:25 3:36 4:54 5:47 6:71 7:53 8:59 9:41 10:42 11:57 12:50 13:38 14:31 15:27 16:33 17:26 18:40 19:42 20:31 21:25\nACT 1:26 2:47 3:26 4:37 5:42 6:15 7:60 8:40 9:43 10:48 11:30 12:25 13:52 14:28 15:41 16:40 17:34 18:28 19:40 20:38 21:40 22:30 23:35 24:27 25:27 26:32 27:44 28:31\nROM 1:32 2:29 3:31 4:25 5:21 6:23 7:25 8:39 9:33 10:21 11:36 12:21 13:14 14:23 15:33 16:27\n1CO 1:31 2:16 3:23 4:21 5:13 6:20 7:40 8:13 9:27 10:33 11:34 12:31 13:13 14:40 15:58 16:24\n2CO 1:24 2:17 3:18 4:18 5:21 6:18 7:16 8:24 9:15 10:18 11:33 12:21 13:13\nGAL 1:24 2:21 3:29 4:31 5:26 6:18\nEPH 1:23 2:22 3:21 4:32 5:33 6:24\nPHP 1:30 2:30 3:21 4:23\nCOL 1:29 2:23 3:25 4:18\n1TH 1:10 2:20 3:13 4:18 5:28\n2TH 1:12 2:17 3:18\n1TI 1:20 2:15 3:16 4:16 5:25 6:21\n2TI 1:18 2:26 3:17 4:22\nTIT 1:16 2:15 3:15\nPHM 1:25\nHEB 1:14 2:18 3:19 4:16 5:14 6:20 7:28 8:13 9:28 10:39 11:40 12:29 13:25\nJAS 1:27 2:26 3:18 4:17 5:20\n1PE 1:25 2:25 3:22 4:19 5:14\n2PE 1:21 2:22 3:18\n1JN 1:10 2:29 3:24 4:21 5:21\n2JN 1:13\n3JN 1:15\nJUD 1:25\nREV 1:20 2:29 3:22 4:11 5:14 6:17 7:17 8:13 9:21 10:11 11:19 12:18 13:18 14:20 15:8 16:21 17:18 18:24 19:21 20:15 21:27 22:21\n#------------------------------------------------\n# Deuterocanonical books from the LXX which are in the Catholic tradition\nTOB 1:22 2:14 3:17 4:21 5:23 6:19 7:17 8:21 9:6 10:14 11:19 12:22 13:18 14:15\nJDT 1:16 2:28 3:10 4:15 5:24 6:21 7:32 8:36 9:14 10:23 11:23 12:20 13:20 14:19 15:14 16:25\nESG 1:39 2:23 3:22 4:47 5:28 6:14 7:10 8:39 9:32 10:13\nWIS 1:16 2:24 3:19 4:20 5:23 6:25 7:30 8:21 9:18 10:21 11:26 12:27 13:19 14:31 15:19 16:29 17:20 18:25 19:22\nSIR 1:30 2:18 3:31 4:31 5:15 6:37 7:36 8:19 9:18 10:31 11:34 12:18 13:26 14:27 15:20 16:30 17:32 18:33 19:30 20:31 21:28 22:27 23:27 24:34 25:26 26:29 27:30 28:26 29:28 30:25 31:31 32:24 33:33 34:26 35:24 36:27 37:31 38:34 39:35 40:30 41:27 42:25 43:33 44:23 45:26 46:20 47:25 48:25 49:16 50:29 51:30\nBAR 1:22 2:35 3:38 4:37 5:9\nLJE 1:72\nS3Y 1:67\nSUS 1:64\nBEL 1:42\n1MA 1:64 2:70 3:60 4:61 5:68 6:63 7:50 8:32 9:73 10:89 11:74 12:53 13:53 14:49 15:41 16:24\n2MA 1:36 2:32 3:40 4:50 5:27 6:31 7:42 8:36 9:29 10:38 11:38 12:45 13:26 14:46 15:39\n#---------------------------------------------------\n# Additional Orthodox books from the LXX\n3MA 1:29 2:33 3:30 4:21 5:51 6:41 7:23\n4MA 1:35 2:24 3:21 4:26 5:38 6:35 7:23 8:29 9:32 10:21 11:27 12:19 13:27 14:20 15:32 16:25 17:24 18:24\n1ES 1:55 2:26 3:24 4:63 5:71 6:33 7:15 8:92 9:55\n# This was the wrong definition for 2ES\n# 2ES 1:11 2:70 3:13 4:24 5:17 6:22 7:28 8:36 9:15 10:44 11:11 12:20 13:37 14:17 15:19 16:19 17:73 18:18 19:37 20:40 21:36 22:47 23:31\n# This is the correct definition of 2ES, the \"original\" book was EZA\n2ES 1:40 2:48 3:36 4:52 5:56 6:59 7:140 8:63 9:47 10:59 11:46 12:51 13:58 14:48 15:63 16:78\nMAN 1:15\nPS2 1:7\n#-------------------------------------------------------\n# ODA and PSS are only in the LXX and SYR projects. \nODA 1:19 2:43 3:10 4:19 5:12 6:8 7:20 8:37 9:22 10:9 11:11 12:15 13:4 14:46\nPSS 1:8 2:37 3:12 4:25 5:19 6:6 7:10 8:34 9:11 10:8 11:9 12:6 13:12 14:10 15:13 16:15 17:46 18:12\n#-------------------------------------------------------\n# the following codes are for obselete LXX variants only in LXX and not supported in PT 7\nJSA 1:18 2:24 3:17 4:24 5:15 6:27 7:26 8:35 9:27 10:43 11:23 12:24 13:33 14:15 15:63 16:10 17:18 18:28 19:51 20:9 21:45 22:34 23:16 24:33\nJDB 1:36 2:23 3:31 4:24 5:31 6:40 7:25 8:35 9:57 10:18 11:40 12:15 13:25 14:20 15:20 16:31 17:13 18:31 19:30 20:48 21:25\nTBS 1:22 2:14 3:17 4:21 5:23 6:19 7:17 8:21 9:6 10:14 11:19 12:22 13:18 14:15\nSST 1:64\nDNT 1:21 2:49 3:97 4:37 5:30 6:29 7:28 8:27 9:27 10:21 11:45 12:13\nBLT 1:42\n#\n# No mappings are present for this versification since it represents\n# the \"standard\" versification to which all OT and NT texts are mapped in these files.\n# (DC texts follow the LXX)\n#\n#-------------------------------------------------------\n# Apocalypse of Ezra [Studge]\nEZA 1:36 2:52 3:56 4:59 5:139 6:63 7:47 8:60 9:46 10:51 11:58 12:48\n#--------------------------------------------------------\n# Jubilees and Enoch have both been found in the Hebrew [Studge]\n# might be needed if we add Dead Sea Scrolls\n# Jubilees (Ethiopian canon)\nJUB 1:26 2:17 3:19 4:24 5:36 6:34 7:37 8:40 9:27 10:48 11:39 12:56 13:34 14:55 15:20 16:28 17:30 18:31 19:59 20:66 21:30 22:38 23:59 24:30 25:50 26:48 27:37 28:38 29:27 30:29 31:31 32:24 33:30 34:20\n# Enoch (Ethiopian canon)\nENO 1:28 2:42 3:30 4:88 5:40 6:42 7:39 8:46 9:42 10:16 11:19 12:40 13:34 14:35 15:45 16:41 17:69 18:42 19:29 20:53 21:57 22:14 23:26 24:16 25:30 26:37 27:21 28:34 29:28 30:23 31:29 32:82 33:59 34:49 35:36 36:30 37:34 38:36 39:24 40:40 41:22 42:16\n#\n# S3Y is a small section of the DAG LXX pulled out and translated as a separate book.\n# Map it back to the LXX.  This section allow's texts such as TOB (French) which do\n# this to scroll correctly with the LXX.\n# S3Y is not present in the GRK, HEB, or LXX(Ralphs) text.\n# If a text has DAG present, this section must NOT be included in its versification file because\n# that would cause references in other texts to DAG to be redirected to a non-existant S3Y.\nS3Y 1:1-29 = DAG 3:24-52\nS3Y 1:30-31 = DAG 3:52-53\nS3Y 1:33 = DAG 3:54\nS3Y 1:32 = DAG 3:55\nS3Y 1:34-35 = DAG 3:56-57\nS3Y 1:37 = DAG 3:58\nS3Y 1:36 = DAG 3:59\nS3Y 1:38-68 = DAG 3:60-90\n`;\n", "module.exports = `# Versification  \"Russian Protestant\"\n# Version=1.4\n#\n# This is the versification used by the \"Canonical\" (Protestant) edition of the Russian Synodal Bible\n# Initial version provided by Peter_Kirk@sil.org\n# Corrected 27/May/2003 by matjaz.crnivec@drustvo-svds.si:\n#   Number of vss: ISA 3; REV 12\n#   Mappings: LEV 14; 1KI 22; 1CH 12; NEH 7; ISA 3; 2CO 11; REV 13\n#\n# List of books, chapters, verses\n# One line per book.\n# One entry for each chapter.\n# Verse number is the maximum verse number for that chapter.\n# See the lines containing ='s below for verse mappings.\n#\n#------------------------------------------------------------\n# Old Testament\nGEN 1:31 2:25 3:24 4:26 5:32 6:22 7:24 8:22 9:29 10:32 11:32 12:20 13:18 14:24 15:21 16:16 17:27 18:33 19:38 20:18 21:34 22:24 23:20 24:67 25:34 26:35 27:46 28:22 29:35 30:43 31:55 32:32 33:20 34:31 35:29 36:43 37:36 38:30 39:23 40:23 41:57 42:38 43:34 44:34 45:28 46:34 47:31 48:22 49:33 50:26\nEXO 1:22 2:25 3:22 4:31 5:23 6:30 7:25 8:32 9:35 10:29 11:10 12:51 13:22 14:31 15:27 16:36 17:16 18:27 19:25 20:26 21:36 22:31 23:33 24:18 25:40 26:37 27:21 28:43 29:46 30:38 31:18 32:35 33:23 34:35 35:35 36:38 37:29 38:31 39:43 40:38\nLEV 1:17 2:16 3:17 4:35 5:19 6:30 7:38 8:36 9:24 10:20 11:47 12:8 13:59 14:56 15:33 16:34 17:16 18:30 19:37 20:27 21:24 22:33 23:44 24:23 25:55 26:46 27:34\nNUM 1:54 2:34 3:51 4:49 5:31 6:27 7:89 8:26 9:23 10:36 11:35 12:15 13:34 14:45 15:41 16:50 17:13 18:32 19:22 20:29 21:35 22:41 23:30 24:25 25:18 26:65 27:23 28:31 29:39 30:17 31:54 32:42 33:56 34:29 35:34 36:13\nDEU 1:46 2:37 3:29 4:49 5:33 6:25 7:26 8:20 9:29 10:22 11:32 12:32 13:18 14:29 15:23 16:22 17:20 18:22 19:21 20:20 21:23 22:30 23:25 24:22 25:19 26:19 27:26 28:68 29:29 30:20 31:30 32:52 33:29 34:12\nJOS 1:18 2:24 3:17 4:24 5:16 6:26 7:26 8:35 9:27 10:43 11:23 12:24 13:33 14:15 15:63 16:10 17:18 18:28 19:51 20:9 21:45 22:34 23:16 24:33\nJDG 1:36 2:23 3:31 4:24 5:31 6:40 7:25 8:35 9:57 10:18 11:40 12:15 13:25 14:20 15:20 16:31 17:13 18:31 19:30 20:48 21:25\nRUT 1:22 2:23 3:18 4:22\n1SA 1:28 2:36 3:21 4:22 5:12 6:21 7:17 8:22 9:27 10:27 11:15 12:25 13:23 14:52 15:35 16:23 17:58 18:30 19:24 20:43 21:15 22:23 23:28 24:23 25:44 26:25 27:12 28:25 29:11 30:31 31:13\n2SA 1:27 2:32 3:39 4:12 5:25 6:23 7:29 8:18 9:13 10:19 11:27 12:31 13:39 14:33 15:37 16:23 17:29 18:33 19:43 20:26 21:22 22:51 23:39 24:25\n1KI 1:53 2:46 3:28 4:34 5:18 6:38 7:51 8:66 9:28 10:29 11:43 12:33 13:34 14:31 15:34 16:34 17:24 18:46 19:21 20:43 21:29 22:53\n2KI 1:18 2:25 3:27 4:44 5:27 6:33 7:20 8:29 9:37 10:36 11:21 12:21 13:25 14:29 15:38 16:20 17:41 18:37 19:37 20:21 21:26 22:20 23:37 24:20 25:30\n1CH 1:54 2:55 3:24 4:43 5:26 6:81 7:40 8:40 9:44 10:14 11:47 12:40 13:14 14:17 15:29 16:43 17:27 18:17 19:19 20:8 21:30 22:19 23:32 24:31 25:31 26:32 27:34 28:21 29:30\n2CH 1:17 2:18 3:17 4:22 5:14 6:42 7:22 8:18 9:31 10:19 11:23 12:16 13:22 14:15 15:19 16:14 17:19 18:34 19:11 20:37 21:20 22:12 23:21 24:27 25:28 26:23 27:9 28:27 29:36 30:27 31:21 32:33 33:25 34:33 35:27 36:23\nEZR 1:11 2:70 3:13 4:24 5:17 6:22 7:28 8:36 9:15 10:44\nNEH 1:11 2:20 3:32 4:23 5:19 6:19 7:73 8:18 9:38 10:39 11:36 12:47 13:31\nEST 1:22 2:23 3:15 4:17 5:14 6:14 7:10 8:17 9:32 10:3\nJOB 1:22 2:13 3:26 4:21 5:27 6:30 7:21 8:22 9:35 10:22 11:20 12:25 13:28 14:22 15:35 16:22 17:16 18:21 19:29 20:29 21:34 22:30 23:17 24:25 25:6 26:14 27:23 28:28 29:25 30:31 31:40 32:22 33:33 34:37 35:16 36:33 37:24 38:41 39:35 40:27 41:26 42:17\nPSA 1:6 2:12 3:9 4:9 5:13 6:11 7:18 8:10 9:39 10:7 11:9 12:6 13:7 14:5 15:11 16:15 17:51 18:15 19:10 20:14 21:32 22:6 23:10 24:22 25:12 26:14 27:9 28:11 29:13 30:25 31:11 32:22 33:23 34:28 35:13 36:40 37:23 38:14 39:18 40:14 41:12 42:5 43:27 44:18 45:12 46:10 47:15 48:21 49:23 50:21 51:11 52:7 53:9 54:24 55:14 56:12 57:12 58:18 59:14 60:9 61:13 62:12 63:11 64:14 65:20 66:8 67:36 68:37 69:6 70:24 71:20 72:28 73:23 74:11 75:13 76:21 77:72 78:13 79:20 80:17 81:8 82:19 83:13 84:14 85:17 86:7 87:19 88:53 89:17 90:16 91:16 92:5 93:23 94:11 95:13 96:12 97:9 98:9 99:5 100:8 101:29 102:22 103:35 104:45 105:48 106:43 107:14 108:31 109:7 110:10 111:10 112:9 113:26 114:9 115:10 116:2 117:29 118:176 119:7 120:8 121:9 122:4 123:8 124:5 125:6 126:5 127:6 128:8 129:8 130:3 131:18 132:3 133:3 134:21 135:26 136:9 137:8 138:24 139:14 140:10 141:7 142:12 143:15 144:21 145:10 146:11 147:9 148:14 149:9 150:6\nPRO 1:33 2:22 3:35 4:27 5:23 6:35 7:27 8:36 9:18 10:32 11:31 12:28 13:25 14:35 15:33 16:33 17:28 18:24 19:29 20:30 21:31 22:29 23:35 24:34 25:28 26:28 27:27 28:28 29:27 30:33 31:31\nECC 1:18 2:26 3:22 4:17 5:19 6:12 7:29 8:17 9:18 10:20 11:10 12:14\nSNG 1:16 2:17 3:11 4:16 5:16 6:12 7:14 8:14\nISA 1:31 2:22 3:25 4:6 5:30 6:13 7:25 8:22 9:21 10:34 11:16 12:6 13:22 14:32 15:9 16:14 17:14 18:7 19:25 20:6 21:17 22:25 23:18 24:23 25:12 26:21 27:13 28:29 29:24 30:33 31:9 32:20 33:24 34:17 35:10 36:22 37:38 38:22 39:8 40:31 41:29 42:25 43:28 44:28 45:25 46:13 47:15 48:22 49:26 50:11 51:23 52:15 53:12 54:17 55:13 56:12 57:21 58:14 59:21 60:22 61:11 62:12 63:19 64:12 65:25 66:24\nJER 1:19 2:37 3:25 4:31 5:31 6:30 7:34 8:22 9:26 10:25 11:23 12:17 13:27 14:22 15:21 16:21 17:27 18:23 19:15 20:18 21:14 22:30 23:40 24:10 25:38 26:24 27:22 28:17 29:32 30:24 31:40 32:44 33:26 34:22 35:19 36:32 37:21 38:28 39:18 40:16 41:18 42:22 43:13 44:30 45:5 46:28 47:7 48:47 49:39 50:46 51:64 52:34\nLAM 1:22 2:22 3:66 4:22 5:22\nEZK 1:28 2:10 3:27 4:17 5:17 6:14 7:27 8:18 9:11 10:22 11:25 12:28 13:23 14:23 15:8 16:63 17:24 18:32 19:14 20:49 21:32 22:31 23:49 24:27 25:17 26:21 27:36 28:26 29:21 30:26 31:18 32:32 33:33 34:31 35:15 36:38 37:28 38:23 39:29 40:49 41:26 42:20 43:27 44:31 45:25 46:24 47:23 48:35\nDAN 1:21 2:49 3:33 4:34 5:31 6:28 7:28 8:27 9:27 10:21 11:45 12:13\nHOS 1:11 2:23 3:5 4:19 5:15 6:11 7:16 8:14 9:17 10:15 11:12 12:14 13:15 14:10\nJOL 1:20 2:32 3:21\nAMO 1:15 2:16 3:15 4:13 5:27 6:14 7:17 8:14 9:15\nOBA 1:21\nJON 1:16 2:11 3:10 4:11\nMIC 1:16 2:13 3:12 4:13 5:15 6:16 7:20\nNAM 1:15 2:13 3:19\nHAB 1:17 2:20 3:19\nZEP 1:18 2:15 3:20\nHAG 1:15 2:23\nZEC 1:21 2:13 3:10 4:14 5:11 6:15 7:14 8:23 9:17 10:12 11:17 12:14 13:9 14:21\nMAL 1:14 2:17 3:18 4:6\n#-------------------------------------------------------\n# New Testament books\nMAT 1:25 2:23 3:17 4:25 5:48 6:34 7:29 8:34 9:38 10:42 11:30 12:50 13:58 14:36 15:39 16:28 17:27 18:35 19:30 20:34 21:46 22:46 23:39 24:51 25:46 26:75 27:66 28:20\nMRK 1:45 2:28 3:35 4:41 5:43 6:56 7:37 8:38 9:50 10:52 11:33 12:44 13:37 14:72 15:47 16:20\nLUK 1:80 2:52 3:38 4:44 5:39 6:49 7:50 8:56 9:62 10:42 11:54 12:59 13:35 14:35 15:32 16:31 17:37 18:43 19:48 20:47 21:38 22:71 23:56 24:53\nJHN 1:51 2:25 3:36 4:54 5:47 6:71 7:53 8:59 9:41 10:42 11:57 12:50 13:38 14:31 15:27 16:33 17:26 18:40 19:42 20:31 21:25\nACT 1:26 2:47 3:26 4:37 5:42 6:15 7:60 8:40 9:43 10:48 11:30 12:25 13:52 14:28 15:41 16:40 17:34 18:28 19:40 20:38 21:40 22:30 23:35 24:27 25:27 26:32 27:44 28:31\nROM 1:32 2:29 3:31 4:25 5:21 6:23 7:25 8:39 9:33 10:21 11:36 12:21 13:14 14:26 15:33 16:24\n1CO 1:31 2:16 3:23 4:21 5:13 6:20 7:40 8:13 9:27 10:33 11:34 12:31 13:13 14:40 15:58 16:24\n2CO 1:24 2:17 3:18 4:18 5:21 6:18 7:16 8:24 9:15 10:18 11:32 12:21 13:13\nGAL 1:24 2:21 3:29 4:31 5:26 6:18\nEPH 1:23 2:22 3:21 4:32 5:33 6:24\nPHP 1:30 2:30 3:21 4:23\nCOL 1:29 2:23 3:25 4:18\n1TH 1:10 2:20 3:13 4:18 5:28\n2TH 1:12 2:17 3:18\n1TI 1:20 2:15 3:16 4:16 5:25 6:21\n2TI 1:18 2:26 3:17 4:22\nTIT 1:16 2:15 3:15\nPHM 1:25\nHEB 1:14 2:18 3:19 4:16 5:14 6:20 7:28 8:13 9:28 10:39 11:40 12:29 13:25\nJAS 1:27 2:26 3:18 4:17 5:20\n1PE 1:25 2:25 3:22 4:19 5:14\n2PE 1:21 2:22 3:18\n1JN 1:10 2:29 3:24 4:21 5:21\n2JN 1:13\n3JN 1:15\nJUD 1:25\nREV 1:20 2:29 3:22 4:11 5:14 6:17 7:17 8:13 9:21 10:11 11:19 12:17 13:18 14:20 15:8 16:21 17:18 18:24 19:21 20:15 21:27 22:21\n#\n#------------------------------------------------------------\n# Mapping\n#-------------------------------------------------------------\n# Russian = BHS (see org.vrs)\n#\n# (Note: ranges must not span a chapter, e.g. 4:10-5:11 is illegal)\n#\nGEN 31:55 = GEN 32:1\nGEN 32:1-32 = GEN 32:2-33\nEXO 8:1-4 = EXO 7:26-29\nEXO 8:5-32 = EXO 8:1-28\nEXO 22:1 = EXO 21:37\nEXO 22:2-31 = EXO 22:1-30\nLEV 6:1-7 = LEV 5:20-26\nLEV 6:8-30 = LEV 6:1-23\n# LEV 14:55b = LEV 14:56   # cant handle split verses yet\nLEV 14:55 = LEV 14:55\nLEV 14:55 = LEV 14:56\nLEV 14:56 = LEV 14:57\nNUM 13:1 = NUM 12:16\nNUM 13:2-34 = NUM 13:1-33\nNUM 16:36-50 = NUM 17:1-15\nNUM 17:1-13 = NUM 17:16-28\nNUM 26:1 = NUM 25:19\nNUM 26:1 = NUM 26:1\nDEU 12:32 = DEU 13:1\nDEU 13:1-18 = DEU 13:2-19\nDEU 22:30 = DEU 23:1\nDEU 23:1-25 = DEU 23:2-26\nDEU 29:1 = DEU 28:69\nDEU 29:2-29 = DEU 29:1-28\nJOS 5:16 = JOS 6:1\nJOS 6:1-26 = JOS 6:2-27\n1SA 20:43 = 1SA 21:1\n1SA 21:1-15 = 1SA 21:2-16\n2SA 18:33 = 2SA 19:1\n2SA 19:1-43 = 2SA 19:2-44\n1KI 4:21-34 = 1KI 5:1-14\n1KI 5:1-18 = 1KI 5:15-32\n#1KI 22:43b = 1KI 22:44   # cant handle split verses yet\n1KI 22:43 = 1KI 22:43\n1KI 22:43 = 1KI 22:44\n1KI 22:44-53 = 1KI 22:45-54\n2KI 11:21 = 2KI 12:1\n2KI 12:1-21 = 2KI 12:2-22\n1CH 6:1-15 = 1CH 5:27-41\n1CH 6:16-81 = 1CH 6:1-66\n# 1CH 12:4b = 1CH 12:5   # cant handle split verses yet\n1CH 12:4 = 1CH 12:4\n1CH 12:4 = 1CH 12:5\n1CH 12:5-40 = 1CH 12:6-41\n2CH 2:1 = 2CH 1:18\n2CH 2:2-18 = 2CH 2:1-17\n2CH 14:1 = 2CH 13:23\n2CH 14:2-15 = 2CH 14:1-14\nNEH 4:1-6 = NEH 3:33-38\nNEH 4:7-23 = NEH 4:1-17\n# NEH 7:68 = NEH 7:67b   # cant handle split verses yet\nNEH 7:67 = NEH 7:67\nNEH 7:68 = NEH 7:67\nNEH 7:69-73 = NEH 7:68-72\nNEH 9:38 = NEH 10:1\nNEH 10:1-39 = NEH 10:2-40\nJOB 39:31-35 = JOB 40:1-5\nJOB 40:1-19 = JOB 40:6-24\nJOB 40:20-27 = JOB 40:25-32\n# PSA 9 = 9+10\nPSA 9:22 = PSA 10:0\nPSA 9:22-39 = PSA 10:1-18\nPSA 10:0-7 = PSA 11:0-7\nPSA 11:0-9 = PSA 12:0-9\nPSA 12:0-6 = PSA 13:0-6\nPSA 13:0-7 = PSA 14:0-7\nPSA 14:0-5 = PSA 15:0-5\nPSA 15:0-11 = PSA 16:0-11\nPSA 16:0-15 = PSA 17:0-15\nPSA 17:0-51 = PSA 18:0-51\nPSA 18:0-15 = PSA 19:0-15\nPSA 19:0-10 = PSA 20:0-10\nPSA 20:0-14 = PSA 21:0-14\nPSA 21:0-32 = PSA 22:0-32\nPSA 22:0-6 = PSA 23:0-6\nPSA 23:0-10 = PSA 24:0-10\nPSA 24:0-22 = PSA 25:0-22\nPSA 25:0-12 = PSA 26:0-12\nPSA 26:0-14 = PSA 27:0-14\nPSA 27:0-9 = PSA 28:0-9\nPSA 28:0-11 = PSA 29:0-11\nPSA 29:0-13 = PSA 30:0-13\nPSA 30:0-25 = PSA 31:0-25\nPSA 31:0-11 = PSA 32:0-11\nPSA 32:0-22 = PSA 33:0-22\nPSA 33:0-23 = PSA 34:0-23\nPSA 34:0-28 = PSA 35:0-28\nPSA 35:0-13 = PSA 36:0-13\nPSA 36:0-40 = PSA 37:0-40\nPSA 37:0-23 = PSA 38:0-23\nPSA 38:0-14 = PSA 39:0-14\nPSA 39:0-18 = PSA 40:0-18\nPSA 40:0-14 = PSA 41:0-14\nPSA 41:0-12 = PSA 42:0-12\nPSA 42:0-5 = PSA 43:0-5\nPSA 43:0-27 = PSA 44:0-27\nPSA 44:0-18 = PSA 45:0-18\nPSA 45:0-12 = PSA 46:0-12\nPSA 46:0-10 = PSA 47:0-10\nPSA 47:0-15 = PSA 48:0-15\nPSA 48:0-21 = PSA 49:0-21\nPSA 49:0-23 = PSA 50:0-23\nPSA 50:0-21 = PSA 51:0-21\nPSA 51:0-11 = PSA 52:0-11\nPSA 52:0-7 = PSA 53:0-7\nPSA 53:0-9 = PSA 54:0-9\nPSA 54:0-24 = PSA 55:0-24\nPSA 55:0-14 = PSA 56:0-14\nPSA 56:0-12 = PSA 57:0-12\nPSA 57:0-12 = PSA 58:0-12\nPSA 58:0-18 = PSA 59:0-18\nPSA 59:0-14 = PSA 60:0-14\nPSA 60:0-9 = PSA 61:0-9\nPSA 61:0-13 = PSA 62:0-13\nPSA 62:0-12 = PSA 63:0-12\nPSA 63:0-11 = PSA 64:0-11\nPSA 64:0-14 = PSA 65:0-14\nPSA 65:0-20 = PSA 66:0-20\nPSA 66:0-8 = PSA 67:0-8\nPSA 67:0-36 = PSA 68:0-36\nPSA 68:0-37 = PSA 69:0-37\nPSA 69:0-6 = PSA 70:0-6\nPSA 70:0-24 = PSA 71:0-24\nPSA 71:0-20 = PSA 72:0-20\nPSA 72:0-28 = PSA 73:0-28\nPSA 73:0-23 = PSA 74:0-23\nPSA 74:0-11 = PSA 75:0-11\nPSA 75:0-13 = PSA 76:0-13\nPSA 76:0-21 = PSA 77:0-21\nPSA 77:0-72 = PSA 78:0-72\nPSA 78:0-13 = PSA 79:0-13\nPSA 79:0-20 = PSA 80:0-20\nPSA 80:0-17 = PSA 81:0-17\nPSA 81:0-8 = PSA 82:0-8\nPSA 82:0-19 = PSA 83:0-19\nPSA 83:0-13 = PSA 84:0-13\nPSA 84:0-14 = PSA 85:0-14\nPSA 85:0-17 = PSA 86:0-17\nPSA 86:0-1 = PSA 87:0-1\nPSA 86:2 = PSA 87:1\nPSA 86:2-7 = PSA 87:2-7\nPSA 87:0-19 = PSA 88:0-19\nPSA 88:0-53 = PSA 89:0-53\nPSA 89:0-1 = PSA 90:0\nPSA 89:2-6 = PSA 90:1-5\nPSA 89:6 = PSA 90:6\nPSA 89:7-17 = PSA 90:7-17\nPSA 90:0-16 = PSA 91:0-16\nPSA 91:0-16 = PSA 92:0-16\nPSA 92:0-5 = PSA 93:0-5\nPSA 93:0-23 = PSA 94:0-23\nPSA 94:0-11 = PSA 95:0-11\nPSA 95:0-13 = PSA 96:0-13\nPSA 96:0-12 = PSA 97:0-12\nPSA 97:0-9 = PSA 98:0-9\nPSA 98:0-9 = PSA 99:0-9\nPSA 99:0-5 = PSA 100:0-5\nPSA 100:0-8 = PSA 101:0-8\nPSA 101:0-29 = PSA 102:0-29\nPSA 102:0-22 = PSA 103:0-22\nPSA 103:0-35 = PSA 104:0-35\nPSA 104:0-45 = PSA 105:0-45\nPSA 105:0-48 = PSA 106:0-48\nPSA 106:0-43 = PSA 107:0-43\nPSA 107:0-14 = PSA 108:0-14\nPSA 108:0-31 = PSA 109:0-31\nPSA 109:0-7 = PSA 110:0-7\nPSA 110:0-10 = PSA 111:0-10\nPSA 111:0-10 = PSA 112:0-10\nPSA 112:0-9 = PSA 113:0-9\nPSA 113:0-8 = PSA 114:0-8\nPSA 113:9 = PSA 115:0\nPSA 113:9-26 = PSA 115:1-18\nPSA 114:0-9 = PSA 116:0-9\nPSA 115:0 = PSA 116:10\nPSA 115:1-10 = PSA 116:10-19\t\nPSA 116:0-2 = PSA 117:0-2\nPSA 117:0-29 = PSA 118:0-29\nPSA 118:0-176 = PSA 119:0-176\nPSA 119:0-7 = PSA 120:0-7\nPSA 120:0-8 = PSA 121:0-8\nPSA 121:0-9 = PSA 122:0-9\nPSA 122:0-4 = PSA 123:0-4\nPSA 123:0-8 = PSA 124:0-8\nPSA 124:0-5 = PSA 125:0-5\nPSA 125:0-6 = PSA 126:0-6\nPSA 126:0-5 = PSA 127:0-5\nPSA 127:0-6 = PSA 128:0-6\nPSA 128:0-8 = PSA 129:0-8\nPSA 129:0-8 = PSA 130:0-8\nPSA 130:0-3 = PSA 131:0-3\nPSA 131:0-18 = PSA 132:0-18\nPSA 132:0-3 = PSA 133:0-3\nPSA 133:0-3 = PSA 134:0-3\nPSA 134:0-21 = PSA 135:0-21\nPSA 135:0-26 = PSA 136:0-26\nPSA 136:0-9 = PSA 137:0-9\nPSA 137:0-8 = PSA 138:0-8\nPSA 138:0-24 = PSA 139:0-24\nPSA 139:0-14 = PSA 140:0-14\nPSA 140:0-10 = PSA 141:0-10\nPSA 141:0 = PSA 142:0-1\nPSA 141:1-7 = PSA 142:2-8\nPSA 142:0-12 = PSA 143:0-12\nPSA 143:0-15 = PSA 144:0-15\nPSA 144:0-21 = PSA 145:0-21\nPSA 145:0-10 = PSA 146:0-10\n# 146 + 147 -> 147\nPSA 146:0-11 = PSA 147:0-11\nPSA 147:0 = PSA 147:12\nPSA 147:1-9 = PSA 147:12-20\nSNG 1:1-16 = SNG 1:2-17\n# ISA 3:19b = ISA 3:20   # cant handle split verses yet\nISA 3:19 = ISA 3:19\nISA 3:19 = ISA 3:20\nISA 3:20-25 = ISA 3:21-26\nISA 9:1 = ISA 8:23\nISA 9:2-21 = ISA 9:1-20\nISA 63:19 = ISA 63:19\nISA 64:1 = ISA 63:19\nISA 64:2-12 = ISA 64:1-11\nJER 9:1 = JER 8:23\nJER 9:2-26 = JER 9:1-25\nEZK 20:45-49 = EZK 21:1-5\nEZK 21:1-32 = EZK 21:6-37\nDAN 5:31 = DAN 6:1\nDAN 6:1-28 = DAN 6:2-29\nHOS 1:10-11 = HOS 2:1-2\nHOS 2:1-23 = HOS 2:3-25\nHOS 11:12 = HOS 12:1\nHOS 12:1-14 = HOS 12:2-15\nJOL 2:28-32 = JOL 3:1-5\nJOL 3:1-21 = JOL 4:1-21\nMIC 5:1 = MIC 4:14\nMIC 5:2-15 = MIC 5:1-14\nNAM 1:15 = NAM 2:1\nNAM 2:1-13 = NAM 2:2-14\nZEC 1:18-21 = ZEC 2:1-4\nZEC 2:1-13 = ZEC 2:5-17\nMAL 4:1-6 = MAL 3:19-24\nROM 14:24-26 = ROM 16:25-27\n# 2CO 11:32b = 2CO 11:33   # cant handle split verses yet\n2CO 11:32 = 2CO 11:32\n2CO 11:32 = 2CO 11:33\n# REV 13:1a = REV 12:18   # cant handle split verses yet\n# REV 13:1b = REV 13:1    # cant handle split verses yet\nREV 13:1 = REV 12:18\nREV 13:1 = REV 13:1\n`;\n", "module.exports = `# Versification  \"Russian Orthodox\"\n# Version=1.3\n#\n# This is the versification used by the Orthodox (or \"non-canonical\") edition of the Russian Synodal Bible\n# Initial version provided by Peter_Kirk@sil.org\n# Corrected 27/May/2003 by matjaz.crnivec@drustvo-svds.si:\n#   Number of vss: 2CH 37; PSA 114; ISA 3; REV 12; 2ES (whole book added),\n#   Mappings: LEV 14; 1KI 22; 1CH 12; 2CH 37; NEH 7; PSA 114; ISA 3; 2CO 11; REV 13; 2ES 7; 10\n#\n# modifications by Studge 26/June/2009\n# amended by HAB April 2010\n#\n# List of books, chapters, verses\n# One line per book.\n# One entry for each chapter.\n# Verse number is the maximum verse number for that chapter.\n# See the lines containing ='s below for verse mappings.\n#\n#----------------------------------------------------------\nGEN 1:31 2:25 3:24 4:26 5:32 6:22 7:24 8:22 9:29 10:32 11:32 12:20 13:18 14:24 15:21 16:16 17:27 18:33 19:38 20:18 21:34 22:24 23:20 24:67 25:34 26:35 27:46 28:22 29:35 30:43 31:55 32:32 33:20 34:31 35:29 36:43 37:36 38:30 39:23 40:23 41:57 42:38 43:34 44:34 45:28 46:34 47:31 48:22 49:33 50:26\nEXO 1:22 2:25 3:22 4:31 5:23 6:30 7:25 8:32 9:35 10:29 11:10 12:51 13:22 14:31 15:27 16:36 17:16 18:27 19:25 20:26 21:36 22:31 23:33 24:18 25:40 26:37 27:21 28:43 29:46 30:38 31:18 32:35 33:23 34:35 35:35 36:38 37:29 38:31 39:43 40:38\nLEV 1:17 2:16 3:17 4:35 5:19 6:30 7:38 8:36 9:24 10:20 11:47 12:8 13:59 14:56 15:33 16:34 17:16 18:30 19:37 20:27 21:24 22:33 23:44 24:23 25:55 26:46 27:34\nNUM 1:54 2:34 3:51 4:49 5:31 6:27 7:89 8:26 9:23 10:36 11:35 12:15 13:34 14:45 15:41 16:50 17:13 18:32 19:22 20:29 21:35 22:41 23:30 24:25 25:18 26:65 27:23 28:31 29:39 30:17 31:54 32:42 33:56 34:29 35:34 36:13\nDEU 1:46 2:37 3:29 4:49 5:33 6:25 7:26 8:20 9:29 10:22 11:32 12:32 13:18 14:29 15:23 16:22 17:20 18:22 19:21 20:20 21:23 22:30 23:25 24:22 25:19 26:19 27:26 28:68 29:29 30:20 31:30 32:52 33:29 34:12\nJOS 1:18 2:24 3:17 4:24 5:16 6:26 7:26 8:35 9:27 10:43 11:23 12:24 13:33 14:15 15:63 16:10 17:18 18:28 19:51 20:9 21:45 22:34 23:16 24:36\nJDG 1:36 2:23 3:31 4:24 5:31 6:40 7:25 8:35 9:57 10:18 11:40 12:15 13:25 14:20 15:20 16:31 17:13 18:31 19:30 20:48 21:25\nRUT 1:22 2:23 3:18 4:22\n1SA 1:28 2:36 3:21 4:22 5:12 6:21 7:17 8:22 9:27 10:27 11:15 12:25 13:23 14:52 15:35 16:23 17:58 18:30 19:24 20:43 21:15 22:23 23:28 24:23 25:44 26:25 27:12 28:25 29:11 30:31 31:13\n2SA 1:27 2:32 3:39 4:12 5:25 6:23 7:29 8:18 9:13 10:19 11:27 12:31 13:39 14:33 15:37 16:23 17:29 18:33 19:43 20:26 21:22 22:51 23:39 24:25\n1KI 1:53 2:46 3:28 4:34 5:18 6:38 7:51 8:66 9:28 10:29 11:43 12:33 13:34 14:31 15:34 16:34 17:24 18:46 19:21 20:43 21:29 22:53\n2KI 1:18 2:25 3:27 4:44 5:27 6:33 7:20 8:29 9:37 10:36 11:21 12:21 13:25 14:29 15:38 16:20 17:41 18:37 19:37 20:21 21:26 22:20 23:37 24:20 25:30\n1CH 1:54 2:55 3:24 4:43 5:26 6:81 7:40 8:40 9:44 10:14 11:47 12:40 13:14 14:17 15:29 16:43 17:27 18:17 19:19 20:8 21:30 22:19 23:32 24:31 25:31 26:32 27:34 28:21 29:30\n2CH 1:17 2:18 3:17 4:22 5:14 6:42 7:22 8:18 9:31 10:19 11:23 12:16 13:22 14:15 15:19 16:14 17:19 18:34 19:11 20:37 21:20 22:12 23:21 24:27 25:28 26:23 27:9 28:27 29:36 30:27 31:21 32:33 33:25 34:33 35:27 36:23 37:12\nEZR 1:11 2:70 3:13 4:24 5:17 6:22 7:28 8:36 9:15 10:44\nNEH 1:11 2:20 3:32 4:23 5:19 6:19 7:73 8:18 9:38 10:39 11:36 12:47 13:31\n#--------------\n# Notes EST is the Greek Esther which should have been under ESG\nEST 1:22 2:23 3:15 4:17 5:14 6:14 7:10 8:17 9:32 10:3\n#--------------\nJOB 1:22 2:13 3:26 4:21 5:27 6:30 7:21 8:22 9:35 10:22 11:20 12:25 13:28 14:22 15:35 16:22 17:16 18:21 19:29 20:29 21:34 22:30 23:17 24:25 25:6 26:14 27:23 28:28 29:25 30:31 31:40 32:22 33:33 34:37 35:16 36:33 37:24 38:41 39:35 40:27 41:26 42:17\nPSA 1:6 2:12 3:9 4:9 5:13 6:11 7:18 8:10 9:39 10:7 11:9 12:6 13:7 14:5 15:11 16:15 17:51 18:15 19:10 20:14 21:32 22:6 23:10 24:22 25:12 26:14 27:9 28:11 29:13 30:25 31:11 32:22 33:23 34:28 35:13 36:40 37:23 38:14 39:18 40:14 41:12 42:5 43:27 44:18 45:12 46:10 47:15 48:21 49:23 50:21 51:11 52:7 53:9 54:24 55:14 56:12 57:12 58:18 59:14 60:9 61:13 62:12 63:11 64:14 65:20 66:8 67:36 68:37 69:6 70:24 71:20 72:28 73:23 74:11 75:13 76:21 77:72 78:13 79:20 80:17 81:8 82:19 83:13 84:14 85:17 86:7 87:19 88:53 89:17 90:16 91:16 92:5 93:23 94:11 95:13 96:12 97:9 98:9 99:5 100:8 101:29 102:22 103:35 104:45 105:48 106:43 107:14 108:31 109:7 110:10 111:10 112:9 113:26 114:8 115:10 116:2 117:29 118:176 119:7 120:8 121:9 122:4 123:8 124:5 125:6 126:5 127:6 128:8 129:8 130:3 131:18 132:3 133:3 134:21 135:26 136:9 137:8 138:24 139:14 140:10 141:7 142:12 143:15 144:21 145:10 146:11 147:9 148:14 149:9 150:6 151:7\nPRO 1:33 2:22 3:35 4:29 5:23 6:35 7:27 8:36 9:18 10:32 11:31 12:28 13:26 14:35 15:33 16:33 17:28 18:25 19:29 20:30 21:31 22:29 23:35 24:34 25:28 26:28 27:27 28:28 29:27 30:33 31:31\nECC 1:18 2:26 3:22 4:17 5:19 6:12 7:29 8:17 9:18 10:20 11:10 12:14\nSNG 1:16 2:17 3:11 4:16 5:16 6:12 7:14 8:14\nISA 1:31 2:22 3:25 4:6 5:30 6:13 7:25 8:22 9:21 10:34 11:16 12:6 13:22 14:32 15:9 16:14 17:14 18:7 19:25 20:6 21:17 22:25 23:18 24:23 25:12 26:21 27:13 28:29 29:24 30:33 31:9 32:20 33:24 34:17 35:10 36:22 37:38 38:22 39:8 40:31 41:29 42:25 43:28 44:28 45:25 46:13 47:15 48:22 49:26 50:11 51:23 52:15 53:12 54:17 55:13 56:12 57:21 58:14 59:21 60:22 61:11 62:12 63:19 64:12 65:25 66:24\nJER 1:19 2:37 3:25 4:31 5:31 6:30 7:34 8:22 9:26 10:25 11:23 12:17 13:27 14:22 15:21 16:21 17:27 18:23 19:15 20:18 21:14 22:30 23:40 24:10 25:38 26:24 27:22 28:17 29:32 30:24 31:40 32:44 33:26 34:22 35:19 36:32 37:21 38:28 39:18 40:16 41:18 42:22 43:13 44:30 45:5 46:28 47:7 48:47 49:39 50:46 51:64 52:34\nLAM 1:22 2:22 3:66 4:22 5:22\nEZK 1:28 2:10 3:27 4:17 5:17 6:14 7:27 8:18 9:11 10:22 11:25 12:28 13:23 14:23 15:8 16:63 17:24 18:32 19:14 20:49 21:32 22:31 23:49 24:27 25:17 26:21 27:36 28:26 29:21 30:26 31:18 32:32 33:33 34:31 35:15 36:38 37:28 38:23 39:29 40:49 41:26 42:20 43:27 44:31 45:25 46:24 47:23 48:35\nDAN 1:21 2:49 3:100 4:34 5:31 6:28 7:28 8:27 9:27 10:21 11:45 12:13 13:64 14:42\nHOS 1:11 2:23 3:5 4:19 5:15 6:11 7:16 8:14 9:17 10:15 11:12 12:14 13:15 14:10\nJOL 1:20 2:32 3:21\nAMO 1:15 2:16 3:15 4:13 5:27 6:14 7:17 8:14 9:15\nOBA 1:21\nJON 1:16 2:11 3:10 4:11\nMIC 1:16 2:13 3:12 4:13 5:15 6:16 7:20\nNAM 1:15 2:13 3:19\nHAB 1:17 2:20 3:19\nZEP 1:18 2:15 3:20\nHAG 1:15 2:23\nZEC 1:21 2:13 3:10 4:14 5:11 6:15 7:14 8:23 9:17 10:12 11:17 12:14 13:9 14:21\nMAL 1:14 2:17 3:18 4:6\n#----------------------------------------------------\nMAT 1:25 2:23 3:17 4:25 5:48 6:34 7:29 8:34 9:38 10:42 11:30 12:50 13:58 14:36 15:39 16:28 17:27 18:35 19:30 20:34 21:46 22:46 23:39 24:51 25:46 26:75 27:66 28:20\nMRK 1:45 2:28 3:35 4:41 5:43 6:56 7:37 8:38 9:50 10:52 11:33 12:44 13:37 14:72 15:47 16:20\nLUK 1:80 2:52 3:38 4:44 5:39 6:49 7:50 8:56 9:62 10:42 11:54 12:59 13:35 14:35 15:32 16:31 17:37 18:43 19:48 20:47 21:38 22:71 23:56 24:53\nJHN 1:51 2:25 3:36 4:54 5:47 6:71 7:53 8:59 9:41 10:42 11:57 12:50 13:38 14:31 15:27 16:33 17:26 18:40 19:42 20:31 21:25\nACT 1:26 2:47 3:26 4:37 5:42 6:15 7:60 8:40 9:43 10:48 11:30 12:25 13:52 14:28 15:41 16:40 17:34 18:28 19:40 20:38 21:40 22:30 23:35 24:27 25:27 26:32 27:44 28:31\nROM 1:32 2:29 3:31 4:25 5:21 6:23 7:25 8:39 9:33 10:21 11:36 12:21 13:14 14:26 15:33 16:24\n1CO 1:31 2:16 3:23 4:21 5:13 6:20 7:40 8:13 9:27 10:33 11:34 12:31 13:13 14:40 15:58 16:24\n2CO 1:24 2:17 3:18 4:18 5:21 6:18 7:16 8:24 9:15 10:18 11:32 12:21 13:13\nGAL 1:24 2:21 3:29 4:31 5:26 6:18\nEPH 1:23 2:22 3:21 4:32 5:33 6:24\nPHP 1:30 2:30 3:21 4:23\nCOL 1:29 2:23 3:25 4:18\n1TH 1:10 2:20 3:13 4:18 5:28\n2TH 1:12 2:17 3:18\n1TI 1:20 2:15 3:16 4:16 5:25 6:21\n2TI 1:18 2:26 3:17 4:22\nTIT 1:16 2:15 3:15\nPHM 1:25\nHEB 1:14 2:18 3:19 4:16 5:14 6:20 7:28 8:13 9:28 10:39 11:40 12:29 13:25\nJAS 1:27 2:26 3:18 4:17 5:20\n1PE 1:25 2:25 3:22 4:19 5:14\n2PE 1:21 2:22 3:18\n1JN 1:10 2:29 3:24 4:21 5:21\n2JN 1:13\n3JN 1:15\nJUD 1:25\nREV 1:20 2:29 3:22 4:11 5:14 6:17 7:17 8:13 9:21 10:11 11:19 12:17 13:18 14:20 15:8 16:21 17:18 18:24 19:21 20:15 21:27 22:21\n#---------------------------------------------\nTOB 1:22 2:14 3:17 4:21 5:22 6:18 7:17 8:21 9:6 10:13 11:18 12:22 13:18 14:15\nJDT 1:16 2:28 3:10 4:15 5:24 6:21 7:32 8:36 9:14 10:23 11:23 12:20 13:20 14:19 15:14 16:25\n# ESG added which ought to replace EST\nESG 1:22 2:23 3:15 4:17 5:14 6:14 7:10 8:17 9:32 10:3\nWIS 1:16 2:24 3:19 4:20 5:24 6:27 7:30 8:21 9:19 10:21 11:27 12:28 13:19 14:31 15:19 16:29 17:20 18:25 19:21\nSIR 1:30 2:18 3:31 4:35 5:18 6:37 7:39 8:22 9:23 10:34 11:34 12:18 13:32 14:27 15:20 16:31 17:31 18:33 19:28 20:31 21:31 22:31 23:37 24:37 25:29 26:27 27:33 28:30 29:31 30:27 31:37 32:25 33:33 34:26 35:23 36:29 37:34 38:39 39:42 40:32 41:29 42:26 43:36 44:27 45:31 46:23 47:31 48:28 49:18 50:31 51:38\nBAR 1:22 2:35 3:38 4:37 5:9\nLJE 1:72\n1MA 1:64 2:70 3:60 4:61 5:68 6:63 7:50 8:32 9:73 10:89 11:74 12:53 13:53 14:49 15:41 16:24\n2MA 1:36 2:33 3:40 4:50 5:27 6:31 7:42 8:36 9:29 10:38 11:38 12:45 13:26 14:46 15:39\n3MA 1:25 2:24 3:22 4:16 5:36 6:37 7:20\n1ES 1:58 2:31 3:24 4:63 5:70 6:34 7:15 8:92 9:55\n# in the Russian tradition the book of 1ES is called 2 Esdras [Studge]\n2ES 1:40 2:48 3:36 4:52 5:56 6:59 7:70 8:63 9:47 10:60 11:46 12:51 13:58 14:48 15:63 16:78\n# in the Russian tradition the book of 2ES is called 3 Esdras [Studge]\n# added Prayer of Manasseh which is appended to 2 Chronicles in RSO\nMAN 1:15\n#\n#----------------------------------------------\n# Mapping\n#----------------------------------------------\n# Russian = BHS (see org.vrs)\n#\n# (Note: ranges must not span a chapter, e.g. 4:10-5:11 is illegal)\n#\nGEN 31:55 = GEN 32:1\nGEN 32:1-32 = GEN 32:2-33\nEXO 8:1-4 = EXO 7:26-29\nEXO 8:5-32 = EXO 8:1-28\nEXO 22:1 = EXO 21:37\nEXO 22:2-31 = EXO 22:1-30\nLEV 6:1-7 = LEV 5:20-26\nLEV 6:8-30 = LEV 6:1-23\n# LEV 14:55 = LEV 14:55-56\nLEV 14:55 = LEV 14:55\nLEV 14:55 = LEV 14:56\nLEV 14:56 = LEV 14:57\nNUM 13:1 = NUM 12:16\nNUM 13:2-34 = NUM 13:1-33\nNUM 16:36-50 = NUM 17:1-15\nNUM 17:1-13 = NUM 17:16-28\nNUM 26:1 = NUM 25:19\nNUM 26:1 = NUM 26:1\nDEU 12:32 = DEU 13:1\nDEU 13:1-18 = DEU 13:2-19\nDEU 22:30 = DEU 23:1\nDEU 23:1-25 = DEU 23:2-26\nDEU 29:1 = DEU 28:69\nDEU 29:2-29 = DEU 29:1-28\nJOS 5:16 = JOS 6:1\nJOS 6:1-26 = JOS 6:2-27\n1SA 20:43 = 1SA 21:1\n1SA 21:1-15 = 1SA 21:2-16\n2SA 18:33 = 2SA 19:1\n2SA 19:1-43 = 2SA 19:2-44\n1KI 4:21-34 = 1KI 5:1-14\n1KI 5:1-18 = 1KI 5:15-32\n# 1KI 22:43 = 1KI 22:43-44\n1KI 22:43 = 1KI 22:43\n1KI 22:43 = 1KI 22:44\n1KI 22:44-53 = 1KI 22:45-54\n2KI 11:21 = 2KI 12:1\n2KI 12:1-21 = 2KI 12:2-22\n1CH 6:1-15 = 1CH 5:27-41\n1CH 6:16-81 = 1CH 6:1-66\n# 1CH 12:4 = 1CH 12:4-5\n1CH 12:4 = 1CH 12:4\n1CH 12:4 = 1CH 12:5\n1CH 12:5-40 = 1CH 12:6-41\n2CH 2:1 = 2CH 1:18\n2CH 2:2-18 = 2CH 2:1-17\n2CH 14:1 = 2CH 13:23\n2CH 14:2-15 = 2CH 14:1-14\n# All the 37th chapter maps across verse boundaries!\n#-----------------------\n# Prayer of Manasseh\n2CH 37:1 = MAN 1:1\n2CH 37:2 = MAN 1:2\n2CH 37:2 = MAN 1:3\n2CH 37:2 = MAN 1:4\n2CH 37:2 = MAN 1:5\n2CH 37:3 = MAN 1:5\n2CH 37:4 = MAN 1:6\n2CH 37:5 = MAN 1:7\n2CH 37:6 = MAN 1:7\n2CH 37:6 = MAN 1:8\n2CH 37:7 = MAN 1:8\n2CH 37:7 = MAN 1:9\n2CH 37:8 = MAN 1:9\n2CH 37:8 = MAN 1:10\n2CH 37:9 = MAN 1:10\n2CH 37:10 = MAN 1:10\n2CH 37:10 = MAN 1:11\n2CH 37:11 = MAN 1:12\n2CH 37:11 = MAN 1:13\n2CH 37:11 = MAN 1:14\n2CH 37:11 = MAN 1:15\n2CH 37:12 = MAN 1:15\n#--------------------------\nNEH 4:1-6 = NEH 3:33-38\nNEH 4:7-23 = NEH 4:1-17\n# NEH 7:67-68 = NEH 7:67\nNEH 7:67 = NEH 7:67\nNEH 7:68 = NEH 7:67\nNEH 7:69-73 = NEH 7:68-72\nNEH 9:38 = NEH 10:1\nNEH 10:1-39 = NEH 10:2-40\nJOB 39:31-35 = JOB 40:1-5\nJOB 40:1-19 = JOB 40:6-24\nJOB 40:20-27 = JOB 40:25-32\n# PSA 9 = 9+10\nPSA 9:22 = PSA 10:0\nPSA 9:22-39 = PSA 10:1-18\nPSA 10:0-7 = PSA 11:0-7\nPSA 11:0-9 = PSA 12:0-9\nPSA 12:0-6 = PSA 13:0-6\nPSA 13:0-7 = PSA 14:0-7\nPSA 14:0-5 = PSA 15:0-5\nPSA 15:0-11 = PSA 16:0-11\nPSA 16:0-15 = PSA 17:0-15\nPSA 17:0-51 = PSA 18:0-51\nPSA 18:0-15 = PSA 19:0-15\nPSA 19:0-10 = PSA 20:0-10\nPSA 20:0-14 = PSA 21:0-14\nPSA 21:0-32 = PSA 22:0-32\nPSA 22:0-6 = PSA 23:0-6\nPSA 23:0-10 = PSA 24:0-10\nPSA 24:0-22 = PSA 25:0-22\nPSA 25:0-12 = PSA 26:0-12\nPSA 26:0-14 = PSA 27:0-14\nPSA 27:0-9 = PSA 28:0-9\nPSA 28:0-11 = PSA 29:0-11\nPSA 29:0-13 = PSA 30:0-13\nPSA 30:0-25 = PSA 31:0-25\nPSA 31:0-11 = PSA 32:0-11\nPSA 32:0-22 = PSA 33:0-22\nPSA 33:0-23 = PSA 34:0-23\nPSA 34:0-28 = PSA 35:0-28\nPSA 35:0-13 = PSA 36:0-13\nPSA 36:0-40 = PSA 37:0-40\nPSA 37:0-23 = PSA 38:0-23\nPSA 38:0-14 = PSA 39:0-14\nPSA 39:0-18 = PSA 40:0-18\nPSA 40:0-14 = PSA 41:0-14\nPSA 41:0-12 = PSA 42:0-12\nPSA 42:0-5 = PSA 43:0-5\nPSA 43:0-27 = PSA 44:0-27\nPSA 44:0-18 = PSA 45:0-18\nPSA 45:0-12 = PSA 46:0-12\nPSA 46:0-10 = PSA 47:0-10\nPSA 47:0-15 = PSA 48:0-15\nPSA 48:0-21 = PSA 49:0-21\nPSA 49:0-23 = PSA 50:0-23\nPSA 50:0-21 = PSA 51:0-21\nPSA 51:0-11 = PSA 52:0-11\nPSA 52:0-7 = PSA 53:0-7\nPSA 53:0-9 = PSA 54:0-9\nPSA 54:0-24 = PSA 55:0-24\nPSA 55:0-14 = PSA 56:0-14\nPSA 56:0-12 = PSA 57:0-12\nPSA 57:0-12 = PSA 58:0-12\nPSA 58:0-18 = PSA 59:0-18\nPSA 59:0-14 = PSA 60:0-14\nPSA 60:0-9 = PSA 61:0-9\nPSA 61:0-13 = PSA 62:0-13\nPSA 62:0-12 = PSA 63:0-12\nPSA 63:0-11 = PSA 64:0-11\nPSA 64:0-14 = PSA 65:0-14\nPSA 65:0-20 = PSA 66:0-20\nPSA 66:0-8 = PSA 67:0-8\nPSA 67:0-36 = PSA 68:0-36\nPSA 68:0-37 = PSA 69:0-37\nPSA 69:0-6 = PSA 70:0-6\nPSA 70:0-24 = PSA 71:0-24\nPSA 71:0-20 = PSA 72:0-20\nPSA 72:0-28 = PSA 73:0-28\nPSA 73:0-23 = PSA 74:0-23\nPSA 74:0-11 = PSA 75:0-11\nPSA 75:0-13 = PSA 76:0-13\nPSA 76:0-21 = PSA 77:0-21\nPSA 77:0-72 = PSA 78:0-72\nPSA 78:0-13 = PSA 79:0-13\nPSA 79:0-20 = PSA 80:0-20\nPSA 80:0-17 = PSA 81:0-17\nPSA 81:0-8 = PSA 82:0-8\nPSA 82:0-19 = PSA 83:0-19\nPSA 83:0-13 = PSA 84:0-13\nPSA 84:0-14 = PSA 85:0-14\nPSA 85:0-17 = PSA 86:0-17\nPSA 86:0-1 = PSA 87:1\nPSA 86:2 = PSA 87:1\nPSA 86:2-7 = PSA 87:2-7\nPSA 87:0-19 = PSA 88:0-19\nPSA 88:0-53 = PSA 89:0-53\nPSA 89:0-1 = PSA 90:0-1\nPSA 89:2-6 = PSA 90:1-6\nPSA 89:7-17 = PSA 90:7-17\nPSA 90:0-16 = PSA 91:0-16\nPSA 91:0-16 = PSA 92:0-16\nPSA 92:0-5 = PSA 93:0-5\nPSA 93:0-23 = PSA 94:0-23\nPSA 94:0-11 = PSA 95:0-11\nPSA 95:0-13 = PSA 96:0-13\nPSA 96:0-12 = PSA 97:0-12\nPSA 97:0-9 = PSA 98:0-9\nPSA 98:0-9 = PSA 99:0-9\nPSA 99:0-5 = PSA 100:0-5\nPSA 100:0-8 = PSA 101:0-8\nPSA 101:0-29 = PSA 102:0-29\nPSA 102:0-22 = PSA 103:0-22\nPSA 103:0-35 = PSA 104:0-35\nPSA 104:0-45 = PSA 105:0-45\nPSA 105:0-48 = PSA 106:0-48\nPSA 106:0-43 = PSA 107:0-43\nPSA 107:0-14 = PSA 108:0-14\nPSA 108:0-31 = PSA 109:0-31\nPSA 109:0-7 = PSA 110:0-7\nPSA 110:0-10 = PSA 111:0-10\nPSA 111:0-10 = PSA 112:0-10\nPSA 112:0-9 = PSA 113:0-9\nPSA 113:0-8 = PSA 114:0-8\nPSA 113:9 = PSA 115:0\nPSA 113:9-26 = PSA 115:1-18\nPSA 114:0-8 = PSA 116:0-8\nPSA 114:8 = PSA 116:9\nPSA 115:0-10 = PSA 116:10-19\t\nPSA 116:0-2 = PSA 117:0-2\nPSA 117:0-29 = PSA 118:0-29\nPSA 118:0-176 = PSA 119:0-176\nPSA 119:0-7 = PSA 120:0-7\nPSA 120:0-8 = PSA 121:0-8\nPSA 121:0-9 = PSA 122:0-9\nPSA 122:0-4 = PSA 123:0-4\nPSA 123:0-8 = PSA 124:0-8\nPSA 124:0-5 = PSA 125:0-5\nPSA 125:0-6 = PSA 126:0-6\nPSA 126:0-5 = PSA 127:0-5\nPSA 127:0-6 = PSA 128:0-6\nPSA 128:0-8 = PSA 129:0-8\nPSA 129:0-8 = PSA 130:0-8\nPSA 130:0-3 = PSA 131:0-3\nPSA 131:0-18 = PSA 132:0-18\nPSA 132:0-3 = PSA 133:0-3\nPSA 133:0-3 = PSA 134:0-3\nPSA 134:0-21 = PSA 135:0-21\nPSA 135:0-26 = PSA 136:0-26\nPSA 136:0-9 = PSA 137:0-9\nPSA 137:0-8 = PSA 138:0-8\nPSA 138:0-24 = PSA 139:0-24\nPSA 139:0-14 = PSA 140:0-14\nPSA 140:0-10 = PSA 141:0-10\nPSA 141:0 = PSA 142:0\nPSA 141:1-7 = PSA 142:2-8\nPSA 142:0-12 = PSA 143:0-12\nPSA 143:0-15 = PSA 144:0-15\nPSA 144:0-21 = PSA 145:0-21\nPSA 145:0-10 = PSA 146:0-10\n# 146 + 147 -> 147\nPSA 146:0-11 = PSA 147:0-11\nPSA 147:0 = PSA 147:12\nPSA 147:1-9 = PSA 147:12-20\n#---------------------------\n# additional LXX Psalm\nPSA 151:1-7 = PS2 1:1-7\n#----------------------------\nPRO 13:15-26 = PRO 13:14-25\nPRO 18:9-25 = PRO 18:8-24\nSNG 1:1-16 = SNG 1:2-17\n# ISA 3:19 = ISA 3:19-20\nISA 3:19 = ISA 3:19\nISA 3:19 = ISA 3:20\nISA 3:20-25 = ISA 3:16-21\nISA 9:1 = ISA 8:23\nISA 9:2-21 = ISA 9:1-20\nISA 63:19 = ISA 63:19\nISA 64:1 = ISA 63:19\nISA 64:2-12 = ISA 64:1-11\nJER 9:1 = JER 8:23\nJER 9:2-26 = JER 9:1-25\nEZK 20:45-49 = EZK 21:1-5\nEZK 21:1-32 = EZK 21:6-37\nHOS 1:10-11 = HOS 2:1-2\nHOS 2:1-23 = HOS 2:3-25\nHOS 11:12 = HOS 12:1\nHOS 12:1-14 = HOS 12:2-15\nJOL 2:28-32 = JOL 3:1-5\nJOL 3:1-21 = JOL 4:1-21\nMIC 5:1 = MIC 4:14\nMIC 5:2-15 = MIC 5:1-14\nNAM 1:15 = NAM 2:1\nNAM 2:1-13 = NAM 2:2-14\nZEC 1:18-21 = ZEC 2:1-4\nZEC 2:1-13 = ZEC 2:5-17\nMAL 4:1-6 = MAL 3:19-24\nROM 14:24-26 = ROM 16:25-27\n# 2CO 11:32 = 2CO 11:32-33\n2CO 11:32 = 2CO 11:32\n2CO 11:32 = 2CO 11:33\n# REV 13:1 = REV 12:18-13:1\nREV 13:1 = REV 12:18\nREV 13:1 = REV 13:1\n#----------------------------\n2ES 7:36-70 = 2ES 7:106-140\n# 2ES 10:59-60 = 2ES 10:59\n2ES 10:59 = 2ES 10:59\n2ES 10:60 = 2ES 10:59\n#---------------------------------------------------------\n# Mapping 2 Esdras onto the older Apocalypse of Ezra [Studge]\n2ES 3:1-36 = EZA 1:1-36\n2ES 4:1-52 = EZA 2:1-52\n2ES 5:1-56 = EZA 3:1-56\n2ES 6:1-59 = EZA 4:1-59\n2ES 7:1-35 = EZA 5:1-35\n2ES 7:106-140 = EZA 5:36-70\n2ES 8:1-63 = EZA 6:1-63\n2ES 9:1-47 = EZA 7:1-47\n2ES 10:1-60 = EZA 8:1-60\n2ES 11:1-46 = EZA 9:1-46\n2ES 12:1-51 = EZA 10:1-51\n2ES 13:1-58 = EZA 11:1-58\n2ES 14:1-48 = EZA 12:1-48\n#----------------------------------------------------\n# Mapping Daniel to Hebrew Daniel and Greek additions [HAB]\nDAN 3:24-90 = DAG 3:24-90\nDAN 3:91-100 = DAN 3:24-33\n# Susanna\nDAN 13:1-64 = SUS 1:1-64\n# Bel and the Dragon\nDAN 14:1-42 = BEL 1:1-42\n#--------------------------------------------------\n# Mapping Esther Greek onto LXX Esther Greek\n#\n# This maps the standard verses generated by Create Book\n# to the actual verse numbers and segments found in the LXX\n# ESG chapter 1\nESG 1:1 = ESG 1:1a\nESG 1:2 = ESG 1:1b\nESG 1:3 = ESG 1:1c\nESG 1:4 = ESG 1:1d\nESG 1:5 = ESG 1:1e\nESG 1:6 = ESG 1:1f\nESG 1:7 = ESG 1:1g\nESG 1:8 = ESG 1:1h\nESG 1:9 = ESG 1:1i\nESG 1:10 = ESG 1:1k\nESG 1:11 = ESG 1:1l\nESG 1:12 = ESG 1:1m\nESG 1:13 = ESG 1:1n\nESG 1:14 = ESG 1:1o\nESG 1:15 = ESG 1:1p\nESG 1:16 = ESG 1:1q\nESG 1:17 = ESG 1:1r\nESG 1:18 = ESG 1:1s\nESG 1:19-39 = ESG 1:2-22\n# ESG chapter 3\nESG 3:14 = ESG 3:13a\nESG 3:15 = ESG 3:13b\nESG 3:16 = ESG 3:13c\nESG 3:17 = ESG 3:13d\nESG 3:18 = ESG 3:13e\nESG 3:19 = ESG 3:13f\nESG 3:20 = ESG 3:13g\nESG 3:21 = ESG 3:14\nESG 3:22 = ESG 3:15\n# ESG chapter 4\nESG 4:18 = ESG 4:17a\nESG 4:19 = ESG 4:17b\nESG 4:20 = ESG 4:17c\nESG 4:21 = ESG 4:17c\nESG 4:22 = ESG 4:17d\nESG 4:23 = ESG 4:17d\nESG 4:24 = ESG 4:17e\nESG 4:25 = ESG 4:17f\nESG 4:26 = ESG 4:17g\nESG 4:27 = ESG 4:17h\nESG 4:28 = ESG 4:17i\nESG 4:29 = ESG 4:17k\nESG 4:30 = ESG 4:17k\nESG 4:31 = ESG 4:17k\nESG 4:32 = ESG 4:17l\nESG 4:33 = ESG 4:17m\nESG 4:34 = ESG 4:17n\nESG 4:35 = ESG 4:17n\nESG 4:36 = ESG 4:17o\nESG 4:37 = ESG 4:17o\nESG 4:38 = ESG 4:17p\nESG 4:39 = ESG 4:17q\nESG 4:40 = ESG 4:17r\nESG 4:41 = ESG 4:17s\nESG 4:42 = ESG 4:17t\nESG 4:43 = ESG 4:17u\nESG 4:44 = ESG 4:17w\nESG 4:45 = ESG 4:17x\nESG 4:46 = ESG 4:17y\nESG 4:47 = ESG 4:17z\n# ESG chapter 5\nESG 5:2 = ESG 5:1a\nESG 5:3 = ESG 5:1a\nESG 5:4 = ESG 5:1a\nESG 5:5 = ESG 5:1b\nESG 5:6 = ESG 5:1c\nESG 5:7 = ESG 5:1d\nESG 5:8 = ESG 5:1e\nESG 5:9 = ESG 5:1f\nESG 5:10 = ESG 5:1f\nESG 5:11 = ESG 5:2\nESG 5:12 = ESG 5:2\nESG 5:13 = ESG 5:2a\nESG 5:14 = ESG 5:2a\nESG 5:15 = ESG 5:2b\nESG 5:16 = ESG 5:2b\nESG 5:17-28 = ESG 5:3-14\n# ESG chapter 8\nESG 8:13 = ESG 8:12a\nESG 8:14 = ESG 8:12b\nESG 8:15 = ESG 8:12c\nESG 8:16 = ESG 8:12d\nESG 8:17 = ESG 8:12e\nESG 8:18 = ESG 8:12f\nESG 8:19 = ESG 8:12g\nESG 8:20 = ESG 8:12h\nESG 8:21 = ESG 8:12i\nESG 8:22 = ESG 8:12k\nESG 8:23 = ESG 8:12l\nESG 8:24 = ESG 8:12m\nESG 8:25 = ESG 8:12n\nESG 8:26 = ESG 8:12o\nESG 8:27 = ESG 8:12p\nESG 8:28 = ESG 8:12q\nESG 8:29 = ESG 8:12r\nESG 8:30 = ESG 8:12s\nESG 8:31 = ESG 8:12t\nESG 8:32 = ESG 8:12u\nESG 8:33 = ESG 8:12x\nESG 8:34 = ESG 8:12y\nESG 8:35 = ESG 8:12y\nESG 8:36 = ESG 8:12y\nESG 8:37-41 = ESG 8:13-17\n# ESG chapter 10\nESG 10:4 = ESG 10:3a\nESG 10:5 = ESG 10:3b\nESG 10:6 = ESG 10:3c\nESG 10:7 = ESG 10:3d\nESG 10:8 = ESG 10:3e\nESG 10:9 = ESG 10:3f\nESG 10:10 = ESG 10:3g\nESG 10:11 = ESG 10:3h\nESG 10:12 = ESG 10:3i\nESG 10:13 = ESG 10:3k\nESG 10:14 = ESG 10:3l\n`;\n", "module.exports = `# Versification  \"Vulgate\"\n# Version=1.5\n# \n# modifications by Studge 26/June/2009\n# this is for Bibles which follow the versification of the Vulgate, mainly Catholic Bibles\n# therefore this includes deuterocanonical books from Vulgate and Latin manuscripts\n# Vulgate projects in Paratext are VUL83 (Stuttgart text) and NVL98 (Nova Vulgata) [Studge]\n#\n# mapping for XXA -> PSA has been deleted  [requested by RdB - Barb]\n# XXB has been moved to LAO [Barb] Jan 2011\n#\n# No mapping done for TOB, JDT and SIR, since they seem to follow another 'vorlage' than LXX\n# The versification of 2ES present here should become THE standard/original versification of this book! (Vulgate is 'the original' text of this book)\n#\n# List of books, chapters, verses\n# One line per book.\n# One entry for each chapter.\n# Verse number is the maximum verse number for that chapter.\n# See the lines containing ='s below for verse mappings.\n#\n#-----------------------------------------------------------\n# Old Testament\nGEN 1:31 2:25 3:24 4:26 5:32 6:22 7:24 8:22 9:29 10:32 11:32 12:20 13:18 14:24 15:21 16:16 17:27 18:33 19:38 20:18 21:34 22:24 23:20 24:67 25:34 26:35 27:46 28:22 29:35 30:43 31:55 32:32 33:20 34:31 35:29 36:43 37:36 38:30 39:23 40:23 41:57 42:38 43:34 44:34 45:28 46:34 47:31 48:22 49:32 50:25\nEXO 1:22 2:25 3:22 4:31 5:23 6:30 7:25 8:32 9:35 10:29 11:10 12:51 13:22 14:31 15:27 16:36 17:16 18:27 19:25 20:26 21:36 22:31 23:33 24:18 25:40 26:37 27:21 28:43 29:46 30:38 31:18 32:35 33:23 34:35 35:35 36:38 37:29 38:31 39:43 40:36\nLEV 1:17 2:16 3:17 4:35 5:19 6:30 7:38 8:36 9:24 10:20 11:47 12:8 13:59 14:57 15:33 16:34 17:16 18:30 19:37 20:27 21:24 22:33 23:44 24:23 25:55 26:45 27:34\nNUM 1:54 2:34 3:51 4:49 5:31 6:27 7:89 8:26 9:23 10:36 11:34 12:15 13:34 14:45 15:41 16:50 17:13 18:32 19:22 20:30 21:35 22:41 23:30 24:25 25:18 26:65 27:23 28:31 29:39 30:17 31:54 32:42 33:56 34:29 35:34 36:13\nDEU 1:46 2:37 3:29 4:49 5:33 6:25 7:26 8:20 9:29 10:22 11:32 12:32 13:18 14:29 15:23 16:22 17:20 18:22 19:21 20:20 21:23 22:30 23:25 24:22 25:19 26:19 27:26 28:68 29:29 30:20 31:30 32:52 33:29 34:12\nJOS 1:18 2:24 3:17 4:25 5:16 6:27 7:26 8:35 9:27 10:43 11:23 12:24 13:33 14:15 15:63 16:10 17:18 18:28 19:51 20:9 21:43 22:34 23:16 24:33\nJDG 1:36 2:23 3:31 4:24 5:32 6:40 7:25 8:35 9:57 10:18 11:40 12:15 13:25 14:20 15:20 16:31 17:13 18:31 19:30 20:48 21:24\nRUT 1:22 2:23 3:18 4:22\n1SA 1:28 2:36 3:21 4:22 5:12 6:21 7:17 8:22 9:27 10:27 11:15 12:25 13:23 14:52 15:35 16:23 17:58 18:30 19:24 20:43 21:15 22:23 23:28 24:23 25:44 26:25 27:12 28:25 29:11 30:31 31:13\n2SA 1:27 2:32 3:39 4:12 5:25 6:23 7:29 8:18 9:13 10:19 11:27 12:31 13:39 14:33 15:37 16:23 17:29 18:33 19:43 20:26 21:22 22:51 23:39 24:25\n1KI 1:53 2:46 3:28 4:34 5:18 6:38 7:51 8:66 9:28 10:29 11:43 12:33 13:34 14:31 15:34 16:34 17:24 18:46 19:21 20:43 21:29 22:54\n2KI 1:18 2:25 3:27 4:44 5:27 6:33 7:20 8:29 9:37 10:36 11:21 12:21 13:25 14:29 15:38 16:20 17:41 18:37 19:37 20:21 21:26 22:20 23:37 24:20 25:30\n1CH 1:54 2:55 3:24 4:43 5:26 6:81 7:40 8:40 9:44 10:14 11:46 12:40 13:14 14:17 15:29 16:43 17:27 18:17 19:19 20:7 21:30 22:19 23:32 24:31 25:31 26:32 27:34 28:21 29:30\n2CH 1:17 2:18 3:17 4:22 5:14 6:42 7:22 8:18 9:31 10:19 11:23 12:16 13:22 14:15 15:19 16:14 17:19 18:34 19:11 20:37 21:20 22:12 23:21 24:27 25:28 26:23 27:9 28:27 29:36 30:27 31:21 32:33 33:25 34:33 35:27 36:23\nEZR 1:11 2:70 3:13 4:24 5:17 6:22 7:28 8:36 9:15 10:44\n# EZR is for the Vulgate book called 1 Esdras\nNEH 1:11 2:20 3:31 4:23 5:19 6:19 7:73 8:18 9:38 10:39 11:36 12:46 13:31\n# NEH is for the Vulgate book called 2 Esdras\n#------------------------------------\n# In the Vulgate projects VUL83 Esther is the Greek Esther not Hebrew Esther, this definition is for Greek Esther. The book has been put under EST instead of ESG [Studge]\n# in VUL83 the definition of EST is\n#EST 1:22 2:23 3:15 4:17 5:14 6:14 7:10 8:17 9:32 10:13 11:12 12:6 13:18 14:19 15:19 16:24\n# in NVL98 Nova Vulgata the definition of EST is\nEST 1:32 2:23 3:15 4:47 5:28 6:14 7:10 8:41 9:32 10:13 \n# Note that chapter 3 v 15 is 15a-i\n# Note that chapter 4 v 47 is 17aa-kk\n#-----------------------------------\nJOB 1:22 2:13 3:26 4:21 5:27 6:30 7:21 8:22 9:35 10:22 11:20 12:25 13:28 14:22 15:35 16:23 17:16 18:21 19:29 20:29 21:34 22:30 23:17 24:25 25:6 26:14 27:23 28:28 29:25 30:31 31:40 32:22 33:33 34:37 35:16 36:33 37:24 38:41 39:35 40:28 41:25 42:16\nPSA 1:6 2:13 3:9 4:10 5:13 6:11 7:18 8:10 9:39 10:8 11:9 12:6 13:7 14:5 15:10 16:15 17:51 18:15 19:10 20:14 21:32 22:6 23:10 24:22 25:12 26:14 27:9 28:11 29:13 30:25 31:11 32:22 33:23 34:28 35:13 36:40 37:23 38:14 39:18 40:14 41:12 42:5 43:26 44:18 45:12 46:10 47:15 48:21 49:23 50:21 51:11 52:7 53:9 54:24 55:13 56:12 57:12 58:18 59:14 60:9 61:13 62:12 63:11 64:14 65:20 66:8 67:36 68:37 69:6 70:24 71:20 72:28 73:23 74:11 75:13 76:21 77:72 78:13 79:20 80:17 81:8 82:19 83:13 84:14 85:17 86:7 87:19 88:53 89:17 90:16 91:16 92:5 93:23 94:11 95:13 96:12 97:9 98:9 99:5 100:8 101:29 102:22 103:35 104:45 105:48 106:43 107:14 108:31 109:7 110:10 111:10 112:9 113:26 114:9 115:19 116:2 117:29 118:176 119:7 120:8 121:9 122:4 123:8 124:5 125:6 126:5 127:6 128:8 129:8 130:3 131:18 132:3 133:3 134:21 135:26 136:9 137:8 138:24 139:14 140:10 141:8 142:12 143:15 144:21 145:10 146:11 147:20 148:14 149:9 150:6\nPRO 1:33 2:22 3:35 4:27 5:23 6:35 7:27 8:36 9:18 10:32 11:31 12:28 13:25 14:35 15:33 16:33 17:28 18:24 19:29 20:30 21:31 22:29 23:35 24:34 25:28 26:28 27:27 28:28 29:27 30:33 31:31\nECC 1:18 2:26 3:22 4:17 5:19 6:11 7:30 8:17 9:18 10:20 11:10 12:14\nSNG 1:16 2:17 3:11 4:16 5:17 6:12 7:13 8:14\nISA 1:31 2:22 3:26 4:6 5:30 6:13 7:25 8:22 9:21 10:34 11:16 12:6 13:22 14:32 15:9 16:14 17:14 18:7 19:25 20:6 21:17 22:25 23:18 24:23 25:12 26:21 27:13 28:29 29:24 30:33 31:9 32:20 33:24 34:17 35:10 36:22 37:38 38:22 39:8 40:31 41:29 42:25 43:28 44:28 45:25 46:13 47:15 48:22 49:26 50:11 51:23 52:15 53:12 54:17 55:13 56:12 57:21 58:14 59:21 60:22 61:11 62:12 63:19 64:12 65:25 66:24\nJER 1:19 2:37 3:25 4:31 5:31 6:30 7:34 8:22 9:26 10:25 11:23 12:17 13:27 14:22 15:21 16:21 17:27 18:23 19:15 20:18 21:14 22:30 23:40 24:10 25:38 26:24 27:22 28:17 29:32 30:24 31:40 32:44 33:26 34:22 35:19 36:32 37:20 38:28 39:18 40:16 41:18 42:22 43:13 44:30 45:5 46:28 47:7 48:47 49:39 50:46 51:64 52:34\nLAM 1:22 2:22 3:66 4:22 5:22\nEZK 1:28 2:9 3:27 4:17 5:17 6:14 7:27 8:18 9:11 10:22 11:25 12:28 13:23 14:23 15:8 16:63 17:24 18:32 19:14 20:49 21:32 22:31 23:49 24:27 25:17 26:21 27:36 28:26 29:21 30:26 31:18 32:32 33:33 34:31 35:15 36:38 37:28 38:23 39:29 40:49 41:26 42:20 43:27 44:31 45:25 46:24 47:23 48:35\n#-------------------\n# Daniel in NVL98 has 14 chapters and is Greek LXX Daniel\n# the Additions to Daniel are repeated in S3Y, SUS and BEL in NVL98\n# in NVL98 and VUL83, DAN is used for Greek Daniel and it should be under DAG\nDAN 1:21 2:49 3:100 4:34 5:31 6:28 7:28 8:27 9:27 10:21 11:45 12:13 13:65 14:41\n#\n#--------------------\nHOS 1:11 2:24 3:5 4:19 5:15 6:11 7:16 8:14 9:17 10:15 11:12 12:14 13:15 14:10\nJOL 1:20 2:32 3:21\nAMO 1:15 2:16 3:15 4:13 5:27 6:15 7:17 8:14 9:15\nOBA 1:21\nJON 1:16 2:11 3:10 4:11\nMIC 1:16 2:13 3:12 4:13 5:14 6:16 7:20\nNAM 1:15 2:13 3:19\nHAB 1:17 2:20 3:19\nZEP 1:18 2:15 3:20\nHAG 1:14 2:24\nZEC 1:21 2:13 3:10 4:14 5:11 6:15 7:14 8:23 9:17 10:12 11:17 12:14 13:9 14:21\nMAL 1:14 2:17 3:18 4:6\n#--------------------------------------\n# New Testament books\nMAT 1:25 2:23 3:17 4:25 5:48 6:34 7:29 8:34 9:38 10:42 11:30 12:50 13:58 14:36 15:39 16:28 17:26 18:35 19:30 20:34 21:46 22:46 23:39 24:51 25:46 26:75 27:66 28:20\nMRK 1:45 2:28 3:35 4:40 5:43 6:56 7:37 8:39 9:49 10:52 11:33 12:44 13:37 14:72 15:47 16:20\nLUK 1:80 2:52 3:38 4:44 5:39 6:49 7:50 8:56 9:62 10:42 11:54 12:59 13:35 14:35 15:32 16:31 17:37 18:43 19:48 20:47 21:38 22:71 23:56 24:53\nJHN 1:51 2:25 3:36 4:54 5:47 6:72 7:53 8:59 9:41 10:42 11:57 12:50 13:38 14:31 15:27 16:33 17:26 18:40 19:42 20:31 21:25\nACT 1:26 2:47 3:26 4:37 5:42 6:15 7:59 8:40 9:43 10:48 11:30 12:25 13:52 14:27 15:41 16:40 17:34 18:28 19:40 20:38 21:40 22:30 23:35 24:27 25:27 26:32 27:44 28:31\nROM 1:32 2:29 3:31 4:25 5:21 6:23 7:25 8:39 9:33 10:21 11:36 12:21 13:14 14:23 15:33 16:27\n1CO 1:31 2:16 3:23 4:21 5:13 6:20 7:40 8:13 9:27 10:33 11:34 12:31 13:13 14:40 15:58 16:24\n2CO 1:24 2:17 3:18 4:18 5:21 6:18 7:16 8:24 9:15 10:18 11:33 12:21 13:13\nGAL 1:24 2:21 3:29 4:31 5:26 6:18\nEPH 1:23 2:22 3:21 4:32 5:33 6:24\nPHP 1:30 2:30 3:21 4:23\nCOL 1:29 2:23 3:25 4:18\n1TH 1:10 2:20 3:13 4:18 5:28\n2TH 1:12 2:17 3:18\n1TI 1:20 2:15 3:16 4:16 5:25 6:21\n2TI 1:18 2:26 3:17 4:22\nTIT 1:16 2:15 3:15\nPHM 1:25\nHEB 1:14 2:18 3:19 4:16 5:14 6:20 7:28 8:13 9:28 10:39 11:40 12:29 13:25\nJAS 1:27 2:26 3:18 4:17 5:20\n1PE 1:25 2:25 3:22 4:19 5:14\n2PE 1:21 2:22 3:18\n1JN 1:10 2:29 3:24 4:21 5:21\n2JN 1:13\n3JN 1:15\nJUD 1:25\nREV 1:20 2:29 3:22 4:11 5:14 6:17 7:17 8:13 9:21 10:11 11:19 12:18 13:18 14:20 15:8 16:21 17:18 18:24 19:21 20:15 21:27 22:21\n#-------------------------------------------------\n# Deuterocanonical books in the Catholic tradition\nTOB 1:25 2:23 3:25 4:23 5:28 6:22 7:20 8:24 9:12 10:13 11:21 12:22 13:23 14:17\nJDT 1:12 2:18 3:15 4:17 5:29 6:21 7:25 8:34 9:19 10:20 11:21 12:20 13:31 14:18 15:15 16:31\n#---------\n# ESG for Esther Greek has been put under EST in NVL98, a blank ESG was included in VUL83\n# this definition for ESG is for the full Esther Greek which is in the Vulgate NVL98 [Studge]\nESG 1:39 2:23 3:22 4:47 5:28 6:14 7:10 8:39 9:32 10:13\n#---------\nWIS 1:16 2:25 3:19 4:20 5:24 6:27 7:30 8:21 9:19 10:21 11:27 12:27 13:19 14:31 15:19 16:29 17:20 18:25 19:20\nSIR 1:40 2:23 3:34 4:36 5:18 6:37 7:40 8:22 9:25 10:34 11:36 12:19 13:32 14:27 15:22 16:31 17:31 18:33 19:28 20:33 21:31 22:33 23:38 24:47 25:36 26:28 27:33 28:30 29:35 30:27 31:42 32:28 33:33 34:31 35:26 36:28 37:34 38:39 39:41 40:32 41:28 42:26 43:37 44:27 45:31 46:23 47:31 48:28 49:19 50:31 51:38 52:13\nBAR 1:22 2:35 3:38 4:37 5:9 6:72\nLJE 1:72\n# NB Letter of Jeremiah is chapter 6 of Baruch in the Vulgate tradition [Studge]\n# the 3 additions to Daniel are part of Daniel in the Vulgate tradition [Studge]\nS3Y 1:67\nSUS 1:64\nBEL 1:42\n1MA 1:67 2:70 3:60 4:61 5:68 6:63 7:50 8:32 9:73 10:89 11:74 12:54 13:54 14:49 15:41 16:24\n2MA 1:36 2:33 3:40 4:50 5:27 6:31 7:42 8:36 9:29 10:38 11:38 12:46 13:26 14:46 15:40\n#--------------------------------------------------\n# Note that 3MA and 4MA are in the LXX tradition but not in the Vulgate, and not in VUL83 Latin critical text, but maybe in Interconfessional editions [Studge]\n3MA 1:29 2:33 3:30 4:21 5:51 6:41 7:23\n4MA 1:35 2:24 3:21 4:26 5:38 6:35 7:23 8:29 9:32 10:21 11:27 12:19 13:27 14:20 15:32 16:25 17:24 18:24\n#----------------------------------------------------\n# 1ES, 2ES, MAN and PS2 are in the Vulgate Apocrypha, but not in modern Catholic Bibles, but maybe in Interconfessional editions [Studge]\n1ES 1:58 2:31 3:24 4:63 5:73 6:34 7:15 8:97 9:56\n# 1ES is for the Vulgate book called 3 Esdras\n2ES 1:40 2:48 3:36 4:52 5:55 6:59 7:139 8:63 9:47 10:60 11:46 12:51 13:58 14:47 15:63 16:78\n# 2ES is for the Vulgate book called 4 Esdras\nMAN 1:15\nPS2 1:7\n#-----------------------------------------------------\n# ODA and PSS are only in LXX and SYR and not needed in any Vulgate manuscripts or any Catholic Bibles, I am not convinced they are needed in this versification file [Studge]\n#ODA 1:19 2:43 3:10 4:19 5:12 6:8 7:20 8:37 9:22 10:9 11:11 12:15 13:4 14:46\n#PSS 1:8 2:37 3:12 4:25 5:19 6:6 7:10 8:34 9:11 10:8 11:9 12:6 13:12 14:10 15:13 16:15 17:46 18:12\n#------------------------------------------------------\n# Variant LXX books, only used in LXX, now obselete in Paratext 7, never part of Vulgate\n# if these codes were used in any Vulgate versification projects they used the wrong code, and so the definitions are not relevant [Studge]\n# JSA 1:18 2:24 3:17 4:24 5:15 6:27 7:26 8:35 9:27 10:43 11:23 12:24 13:33 14:15 15:63 16:10 17:18 18:28 19:51 20:9 21:45 22:34 23:16 24:33\n# JDB 1:36 2:23 3:31 4:24 5:31 6:40 7:25 8:35 9:57 10:18 11:40 12:15 13:25 14:20 15:20 16:31 17:13 18:31 19:30 20:48 21:25\n# TBS 1:22 2:14 3:17 4:21 5:23 6:19 7:17 8:21 9:6 10:14 11:19 12:22 13:18 14:15\n# SST 1:64\n# DNT 1:21 2:49 3:97 4:37 5:30 6:29 7:28 8:27 9:27 10:21 11:45 12:13\n# BLT 1:42\n#------------------------------------------------------\n# add in versifications for 4,5 & 6 Ezra which are in Latin manuscripts [Studge]\n5EZ 1:40 2:48 \nEZA 1:36 2:52 3:55 4:59 5:139 6:63 7:47 8:60 9:46 10:51 11:58 12:47 \n6EZ 1:63 12:78\n#------------------------------------------------------\n# XXA and XXB books in project VUL83, left for backward compatability\n# XXA was used for a variant form of Psalms, but should be in a Latin Variant project [Studge]\n# XXA 1:6 2:13 3:9 4:10 5:13 6:11 7:18 8:10 9:39 10:8 11:9 12:6 13:7 14:5 15:10 16:15 17:51 18:15 19:10 20:14 21:32 22:6 23:10 24:22 25:12 26:14 27:9 28:11 29:13 30:25 31:11 32:22 33:23 34:28 35:13 36:40 37:23 38:14 39:18 40:14 41:12 42:5 43:26 44:18 45:12 46:10 47:15 48:21 49:23 50:21 51:11 52:7 53:9 54:24 55:13 56:12 57:12 58:18 59:14 60:9 61:13 62:12 63:11 64:14 65:20 66:8 67:36 68:37 69:6 70:24 71:20 72:28 73:23 74:11 75:13 76:21 77:72 78:13 79:20 80:17 81:8 82:19 83:13 84:14 85:17 86:7 87:19 88:53 89:17 90:16 91:16 92:5 93:23 94:11 95:13 96:12 97:9 98:9 99:5 100:8 101:29 102:22 103:35 104:45 105:48 106:43 107:14 108:31 109:7 110:10 111:10 112:9 113:26 114:9 115:19 116:2 117:29 118:176 119:7 120:8 121:9 122:4 123:8 124:5 125:6 126:5 127:6 128:8 129:8 130:3 131:18 132:3 133:3 134:21 135:26 136:9 137:8 138:24 139:14 140:10 141:8 142:12 143:15 144:21 145:10 146:11 147:20 148:14 149:9 150:6\n# XXB was used for the Letter to the Laodiceans, but should be under LAO [Studge]\n# XXB 1:20\n#----------------------------------------------------------\n# Daniel Greek is currently under DAN [Studge]\nDAG 1:21 2:49 3:97 4:37 5:31 6:28 7:28 8:27 9:27 10:21 11:45 12:13 13:64 14:42\n# Letter to the Laodiceans in the VUL83 and some mediaeval translations of the Vulgate e.g. John Wycliffe's English Bible, appeared after Revelation [Studge]\nLAO 1:20\n#----------------------------------------------------------\n# Mapping\n#----------------------------------------------------------\n# Vulgate = BHS (see org.vrs)\n#\n# (Note: for performance reasons ranges must not span a chapter, e.g. 4:10-5:11 is illegal)\n#\nGEN 31:55 = GEN 32:1\nGEN 32:1-32 = GEN 32:2-33\n# missing <- GEN 49:32\nGEN 49:31 = GEN 49:31\nGEN 49:31 = GEN 49:32\nGEN 49:32 = GEN 49:33\n# GEN 50:22 <- GEN 50:22-23\nGEN 50:22 = GEN 50:22\nGEN 50:22 = GEN 50:23\nGEN 50:23-25 = GEN 50:24-26\nEXO 8:1-4 = EXO 7:26-29\nEXO 8:5-32 = EXO 8:1-28\nEXO 22:1 = EXO 21:37\nEXO 22:2-31 = EXO 22:1-30\n# EXO 40:13 <- EXO 40:13-15\nEXO 40:13 = EXO 40:13\nEXO 40:13 = EXO 40:14\nEXO 40:13 = EXO 40:15\nEXO 40:14-36 = EXO 40:16-38\nLEV 6:1-7 = LEV 5:20-26\nLEV 6:8-30 = LEV 6:1-23\n# LEV 26:45 <- LEV 26:45-46\nLEV 26:45 = LEV 26:45\nLEV 26:45 = LEV 26:46\n# NUM 11:34 <- NUM 11:34-35\nNUM 11:34 = NUM 11:34\nNUM 11:34 = NUM 11:35\nNUM 13:1 = NUM 12:16\nNUM 13:2-34 = NUM 13:1-33\nNUM 16:36-50 = NUM 17:1-15\nNUM 17:1-13 = NUM 17:16-28\n# NUM 20:28-29 -> NUM 20:28\nNUM 20:28 = NUM 20:28\nNUM 20:29 = NUM 20:28\nNUM 20:30 = NUM 20:29\n# NUM 26:1 <- NUM 25:19--26:1\nNUM 26:1 = NUM 25:19\nNUM 26:1 = NUM 26:1\nDEU 12:32 = DEU 13:1\nDEU 13:1-18 = DEU 13:2-19\nDEU 22:30 = DEU 23:1\nDEU 23:1-25 = DEU 23:2-26\nDEU 29:1 = DEU 28:69\nDEU 29:2-29 = DEU 29:1-28\n# JOS 4:23-24 -> JOS 4:23\nJOS 4:23 = JOS 4:23\nJOS 4:24 = JOS 4:23\nJOS 4:25 = JOS 4:24\n# JOS 5:14-15 -> JOS 5:14\nJOS 5:14 = JOS 5:14\nJOS 5:15 = JOS 5:14\nJOS 5:16 = JOS 5:15\n# JOS 21:36 (missing) <- JOS 21:36-37\nJOS 21:36 = JOS 21:36\nJOS 21:36 = JOS 21:37\n# JOS 21:37 <- JOS 21:38-39\nJOS 21:37 = JOS 21:38\nJOS 21:37 = JOS 21:39\nJOS 21:38-43 = JOS 21:40-45\n# JDG 5:31-32 -> JDG 5:31\nJDG 5:31 = JDG 5:31\nJDG 5:32 = JDG 5:31\n# JDG 21:24 <- JDG 21:24-25\nJDG 21:24 = JDG 21:24\nJDG 21:24 = JDG 21:25\n1SA 20:43 = 1SA 21:1\n1SA 21:1-15 = 1SA 21:2-16\n2SA 18:33 = 2SA 19:1\n2SA 19:1-43 = 2SA 19:2-44\n1KI 4:21-34 = 1KI 5:1-14\n1KI 5:1-18 = 1KI 5:15-32\n2KI 11:21 = 2KI 12:1\n2KI 12:1-21 = 2KI 12:2-22\n1CH 6:1-15 = 1CH 5:27-41\n1CH 6:16-81 = 1CH 6:1-66\n# 1CH 11:46 <- 1CH 11:46-47\n1CH 11:46 = 1CH 11:46\n1CH 11:46 = 1CH 11:47\n# 1CH 12:4 <- 1CH 12:4-5\n1CH 12:4 = 1CH 12:4\n1CH 12:4 = 1CH 12:5\n1CH 12:5-40 = 1CH 12:6-41\n# 1CH 20:7 <- 1CH 20:7-8\n1CH 20:7 = 1CH 20:7\n1CH 20:7 = 1CH 20:8\n2CH 2:1 = 2CH 1:18\n2CH 2:2-18 = 2CH 2:1-17\n2CH 14:1 = 2CH 13:23\n2CH 14:2-15 = 2CH 14:1-14\n# NEH 3:30 <- NEH 3:30-31\nNEH 3:30 = NEH 3:30\nNEH 3:30 = NEH 3:31\nNEH 3:31 = NEH 3:32\nNEH 4:1-6 = NEH 3:33-38\nNEH 4:7-23 = NEH 4:1-17\n# NEH 7:68 (missing) -> NEH 7:67b\nNEH 7:67 = NEH 7:67\nNEH 7:68 = NEH 7:67\nNEH 7:69-73 = NEH 7:68-72\nNEH 9:38 = NEH 10:1\nNEH 10:1-39 = NEH 10:2-40\n# NEH 12:33 <- NEH 12:33-34\nNEH 12:33 = NEH 12:33\nNEH 12:33 = NEH 12:34\nNEH 12:34-46 = NEH 12:35-47\n# mapping EST onto ESG, it should map ESG onto EST\n#EST 10:4-13 = ESG 1:4-13\n#EST 11:1-12 = ESG 2:1-12\n#EST 12:1-6 = ESG 3:1-6\n#EST 13:1-18 = ESG 4:1-18\n#EST 14:1-19 = ESG 5:1-19\n#EST 15:1-16 = ESG 6:1-16\n#EST 16:1-24 = ESG 7:1-24\n# JOB 16:4-5 -> JOB 16:4\nJOB 16:4 = JOB 16:4\nJOB 16:5 = JOB 16:4\nJOB 16:6-23 = JOB 16:5-22\nJOB 39:31-35 = JOB 40:1-5\nJOB 40:1-27 = JOB 40:6-32\nJOB 40:28 = JOB 41:1\nJOB 41:1-25 = JOB 41:2-26\n# JOB 42:16 <- JOB 42:16-17\nJOB 42:16 = JOB 42:16\nJOB 42:16 = JOB 42:17\n# In PSA, the equivalent mappings (in chs. 1-9; 147-150) are given too, because XXA is mapped to PSA as well !!!\n# There could still be some errors regarding the irregular mapping of psalm titles (like in PSA 12:1 <- PSA 13:1-2)\nPSA 1:0-6 = PSA 1:0-6\nPSA 2:0-11 = PSA 2:0-11\n# PSA 2:12-13 -> PSA 2:12\nPSA 2:12 = PSA 2:12\nPSA 2:13 = PSA 2:12\nPSA 3:0-9 = PSA 3:0-9\nPSA 4:0-8 = PSA 4:0-8\n# PSA 4:9-10 -> PSA 4:9\nPSA 4:9 = PSA 4:9\nPSA 4:10 = PSA 4:9\nPSA 5:0-13 = PSA 5:0-13\nPSA 6:0-11 = PSA 6:0-11\nPSA 7:0-18 = PSA 7:0-18\nPSA 8:0-10 = PSA 8:0-10\nPSA 9:0-21 = PSA 9:0-21\nPSA 9:22 = PSA 10:0\nPSA 9:22-39 = PSA 10:1-18\n# PSA 10:1-2 -> PSA 11:1\nPSA 10:0-1 = PSA 11:0-1\nPSA 10:2 = PSA 11:1\nPSA 10:3-8 = PSA 11:2-7\nPSA 11:0-9 = PSA 12:0-9\n# PSA 12:1 <- PSA 13:1-2\nPSA 12:0-1 = PSA 13:0-1\nPSA 12:1 = PSA 13:2\n# PSA 12:2-3 -> PSA 13:3\nPSA 12:2 = PSA 13:3\nPSA 12:3 = PSA 13:3\nPSA 12:4-6 = PSA 13:4-6\nPSA 13:0-7 = PSA 14:0-7\nPSA 14:0-1 = PSA 15:0-1\n# PSA 14:3a = PSA 15:2b\nPSA 14:2 = PSA 15:2\nPSA 14:3 = PSA 15:2\nPSA 14:3 = PSA 15:3\nPSA 14:4-5 = PSA 15:4-5\nPSA 15:0-9 = PSA 16:0-9\n# PSA 15:10 <- PSA 16:10-11\nPSA 15:10 = PSA 16:10\nPSA 15:10 = PSA 16:11\nPSA 16:0-15 = PSA 17:0-15\nPSA 17:0-51 = PSA 18:0-51\nPSA 18:0-15 = PSA 19:0-15\nPSA 19:0-10 = PSA 20:0-10\nPSA 20:0-14 = PSA 21:0-14\nPSA 21:0-32 = PSA 22:0-32\nPSA 22:0-6 = PSA 23:0-6\nPSA 23:0-10 = PSA 24:0-10\nPSA 24:0-22 = PSA 25:0-22\nPSA 25:0-12 = PSA 26:0-12\nPSA 26:0-14 = PSA 27:0-14\nPSA 27:0-9 = PSA 28:0-9\nPSA 28:0-11 = PSA 29:0-11\nPSA 29:0-13 = PSA 30:0-13\nPSA 30:0-25 = PSA 31:0-25\nPSA 31:0-11 = PSA 32:0-11\nPSA 32:0-22 = PSA 33:0-22\nPSA 33:0-23 = PSA 34:0-23\nPSA 34:0-28 = PSA 35:0-28\nPSA 35:0-13 = PSA 36:0-13\nPSA 36:0-40 = PSA 37:0-40\nPSA 37:0-23 = PSA 38:0-23\nPSA 38:0-14 = PSA 39:0-14\nPSA 39:0-18 = PSA 40:0-18\nPSA 40:0-14 = PSA 41:0-14\nPSA 41:0-12 = PSA 42:0-12\nPSA 42:0-5 = PSA 43:0-5\nPSA 43:0-21 = PSA 44:0-21\n# PSA 43:22 <- PSA 44:22-23\nPSA 43:22 = PSA 44:22\nPSA 43:22 = PSA 44:23\nPSA 43:23-26 = PSA 44:24-27\nPSA 44:0-18 = PSA 45:0-18\nPSA 45:0-12 = PSA 46:0-12\nPSA 46:0-10 = PSA 47:0-10\nPSA 47:0-15 = PSA 48:0-15\nPSA 48:0-21 = PSA 49:0-21\nPSA 49:0-23 = PSA 50:0-23\nPSA 50:0-21 = PSA 51:0-21\nPSA 51:0-11 = PSA 52:0-11\nPSA 52:0-7 = PSA 53:0-7\nPSA 53:0-9 = PSA 54:0-9\nPSA 54:0-24 = PSA 55:0-24\nPSA 55:0-10 = PSA 56:0-10\n# PSA 55:11 <- PSA 56:11-12\nPSA 55:11 = PSA 56:11\nPSA 55:11 = PSA 56:12\nPSA 55:12-13 = PSA 56:13-14\nPSA 56:0-12 = PSA 57:0-12\nPSA 57:0-12 = PSA 58:0-12\nPSA 58:0-18 = PSA 59:0-18\nPSA 59:0-14 = PSA 60:0-14\nPSA 60:0-9 = PSA 61:0-9\nPSA 61:0-13 = PSA 62:0-13\nPSA 62:0-12 = PSA 63:0-12\nPSA 63:0-11 = PSA 64:0-11\nPSA 64:0-14 = PSA 65:0-14\nPSA 65:0-20 = PSA 66:0-20\nPSA 66:0-8 = PSA 67:0-8\nPSA 67:0-36 = PSA 68:0-36\nPSA 68:0-37 = PSA 69:0-37\nPSA 69:0-6 = PSA 70:0-6\nPSA 70:0-24 = PSA 71:0-24\nPSA 71:0-20 = PSA 72:0-20\nPSA 72:0-28 = PSA 73:0-28\nPSA 73:0-23 = PSA 74:0-23\nPSA 74:0-11 = PSA 75:0-11\nPSA 75:0-13 = PSA 76:0-13\nPSA 76:0-21 = PSA 77:0-21\nPSA 77:0-72 = PSA 78:0-72\nPSA 78:0-13 = PSA 79:0-13\nPSA 79:0-20 = PSA 80:0-20\nPSA 80:0-17 = PSA 81:0-17\nPSA 81:0-8 = PSA 82:0-8\nPSA 82:0-19 = PSA 83:0-19\nPSA 83:0-13 = PSA 84:0-13\nPSA 84:0-14 = PSA 85:0-14\nPSA 85:0-17 = PSA 86:0-17\nPSA 86:0-7 = PSA 87:0-7\nPSA 87:0-19 = PSA 88:0-19\nPSA 88:0-53 = PSA 89:0-53\nPSA 89:0-17 = PSA 90:0-17\nPSA 90:0-16 = PSA 91:0-16\nPSA 91:0-16 = PSA 92:0-16\nPSA 92:0-5 = PSA 93:0-5\nPSA 93:0-23 = PSA 94:0-23\nPSA 94:0-11 = PSA 95:0-11\nPSA 95:0-13 = PSA 96:0-13\nPSA 96:0-12 = PSA 97:0-12\nPSA 97:0-9 = PSA 98:0-9\nPSA 98:0-9 = PSA 99:0-9\nPSA 99:0-5 = PSA 100:0-5\nPSA 100:0-8 = PSA 101:0-8\nPSA 101:0-29 = PSA 102:0-29\nPSA 102:0-22 = PSA 103:0-22\nPSA 103:0-35 = PSA 104:0-35\nPSA 104:0-45 = PSA 105:0-45\nPSA 105:0-48 = PSA 106:0-48\nPSA 106:0-43 = PSA 107:0-43\nPSA 107:0-14 = PSA 108:0-14\nPSA 108:0-31 = PSA 109:0-31\nPSA 109:0-7 = PSA 110:0-7\nPSA 110:0-10 = PSA 111:0-10\nPSA 111:0-10 = PSA 112:0-10\nPSA 112:0-9 = PSA 113:0-9\nPSA 113:0-8 = PSA 114:0-8\nPSA 113:9 = PSA 115:0\nPSA 113:9-26 = PSA 115:1-18\nPSA 114:1-9 = PSA 116:1-9\n# What does 115:1-9 map to?  this seems very wrong\nPSA 115:10-19 = PSA 116:10-19\nPSA 116:0-2 = PSA 117:0-2\nPSA 117:0-29 = PSA 118:0-29\nPSA 118:0-176 = PSA 119:0-176\nPSA 119:0-7 = PSA 120:0-7\nPSA 120:0-8 = PSA 121:0-8\nPSA 121:0-9 = PSA 122:0-9\nPSA 122:0-4 = PSA 123:0-4\nPSA 123:0-8 = PSA 124:0-8\nPSA 124:0-5 = PSA 125:0-5\nPSA 125:0-6 = PSA 126:0-6\nPSA 126:0-5 = PSA 127:0-5\nPSA 127:0-6 = PSA 128:0-6\nPSA 128:0-8 = PSA 129:0-8\nPSA 129:0-8 = PSA 130:0-8\nPSA 130:0-3 = PSA 131:0-3\nPSA 131:0-18 = PSA 132:0-18\nPSA 132:0-3 = PSA 133:0-3\nPSA 133:0-3 = PSA 134:0-3\nPSA 134:0-21 = PSA 135:0-21\nPSA 135:0-26 = PSA 136:0-26\nPSA 136:0-9 = PSA 137:0-9\nPSA 137:0-8 = PSA 138:0-8\nPSA 138:0-24 = PSA 139:0-24\nPSA 139:0-14 = PSA 140:0-14\nPSA 140:0-10 = PSA 141:0-10\nPSA 141:0-8 = PSA 142:0-8\nPSA 142:0-12 = PSA 143:0-12\nPSA 143:0-15 = PSA 144:0-15\nPSA 144:0-21 = PSA 145:0-21\n# PSA 145:2a = PSA 146:1b\nPSA 145:0-1 = PSA 146:0-1\nPSA 145:2 = PSA 146:1\nPSA 145:2 = PSA 146:2\nPSA 145:3-10 = PSA 146:3-10\nPSA 146:0-11 = PSA 147:0-11\nPSA 147:12-20 = PSA 147:12-20\nPSA 148:0-14 = PSA 148:0-14\nPSA 149:0-9 = PSA 149:0-9\nPSA 150:0-6 = PSA 150:0-6\nECC 7:1 = ECC 6:12\nECC 7:2-30 = ECC 7:1-29\nSNG 1:1 = SNG 1:1\nSNG 1:1-16 = SNG 1:2-17\nSNG 5:17 = SNG 6:1\nSNG 6:1-11 = SNG 6:2-12\n# SNG 6:12 -> SNG 7:1a\n# SNG 7:1 <- SNG 7:1b-2\n# or:  SNG 6:12--7:1 = SNG 7:1-2\nSNG 6:12 = SNG 7:1\nSNG 7:1 = SNG 7:1\nSNG 7:1 = SNG 7:2\nSNG 7:2-13 = SNG 7:3-14\n# ISA 8:22d = ISA 8:23a\nISA 8:22 = ISA 8:22\nISA 8:22 = ISA 8:23\nISA 9:1 = ISA 8:23\nISA 9:2-21 = ISA 9:1-20\n# ISA 9:20d = ISA 9:20ab\nISA 9:20 = ISA 9:19\nISA 9:20 = ISA 9:20\nISA 9:21 = ISA 9:20\n# ISA 64:1 -> ISA 63:19cd\nISA 63:19 = ISA 63:19\nISA 64:1 = ISA 63:19\nISA 64:2-12 = ISA 64:1-11\nJER 9:1 = JER 8:23\nJER 9:2-26 = JER 9:1-25\n# JER 37:4 <- JER 37:4-5\nJER 37:4 = JER 37:4\nJER 37:4 = JER 37:5\nJER 37:5-20 = JER 37:6-21\n# EZK 2:9 <- EZK 2:9-10\nEZK 2:9 = EZK 2:9\nEZK 2:9 = EZK 2:10\nEZK 20:45-49 = EZK 21:1-5\nEZK 21:1-32 = EZK 21:6-37\nDAN 3:24-90 = S3Y 1:1-67\nDAN 3:91-100 = DAN 3:24-33\nDAN 5:31 = DAN 6:1\nDAN 6:1-28 = DAN 6:2-29\nDAN 13:1-64 = SUS 1:1-64\nDAN 13:65 = BEL 1:1\nDAN 14:1 = BEL 1:1\nDAN 14:2-41 = BEL 1:2-41\nHOS 1:10-11 = HOS 2:1-2\nHOS 2:1-22 = HOS 2:3-24\n# HOS 2:23-24 -> HOS 2:25\nHOS 2:23 = HOS 2:25\nHOS 2:24 = HOS 2:25\nHOS 11:12 = HOS 12:1\nHOS 12:1-14 = HOS 12:2-15\nJOL 2:28-32 = JOL 3:1-5\nJOL 3:1-21 = JOL 4:1-21\n# AMO 6:10-11 -> AMO 6:10\nAMO 6:10 = AMO 6:10\nAMO 6:11 = AMO 6:10\nAMO 6:12-15 = AMO 6:11-14\nMIC 5:1 = MIC 4:14\nMIC 5:2-10 = MIC 5:1-9\n# MIC 5:11 <- MIC 5:10-11\nMIC 5:11 = MIC 5:10\nMIC 5:11 = MIC 5:11\n# MIC 5:12-14 = MIC 5:12-14\nJON 1:17 = JON 2:1\nJON 2:1-10 = JON 2:2-11\nNAM 1:15 = NAM 2:1\nNAM 2:1-13 = NAM 2:2-14\nHAG 2:1 = HAG 1:15\nHAG 2:2-24 = HAG 2:1-23\nZEC 1:18-21 = ZEC 2:1-4\nZEC 2:1-13 = ZEC 2:5-17\nMAL 4:1-6 = MAL 3:19-24\n#\n#\n# Mapping\n# Vulgate = UBS GNT\n#\n#\n# MAT 17:14 <- MAT 17:14-15\nMAT 17:15-26 = MAT 17:16-27\n# MRK 4:40 <- MRK 4:40-41\nMRK 4:40 = MRK 4:40\nMRK 4:40 = MRK 4:41\nMRK 8:39 = MRK 9:1\nMRK 9:1-49 = MRK 9:2-50\n# JHN 6:51-52 -> JHN 6:51\nJHN 6:51 = JHN 6:51\nJHN 6:52 = JHN 6:51\nJHN 6:53-72 = JHN 6:52-71\n# ACT 7:55 <- ACT 7:55-56\nACT 7:55 = ACT 7:55\nACT 7:55 = ACT 7:56\nACT 7:56-59 = ACT 7:57-60\n# ACT 14:6 <- ACT 14:6-7\nACT 14:6 = ACT 14:6\nACT 14:6 = ACT 14:7\nACT 14:7-27 = ACT 14:8-28\n#\n#\n#\n# Mapping\n# Vulgate = +/-LXX\n#\n#\n# WIS 2:24-25 -> WIS 2:24\nWIS 2:24 = WIS 2:24\nWIS 2:25 = WIS 2:24\n# WIS 5:13-14 -> WIS 5:13\nWIS 5:13 = WIS 5:13\nWIS 5:14 = WIS 5:13\nWIS 5:15-24 = WIS 5:14-23\n# WIS 6:1 -> missing\nWIS 6:2-21 = WIS 6:1-20\nWIS 6:22 = WIS 6:21\nWIS 6:23 = WIS 6:21\n# WIS 6:23 -> missing\nWIS 6:24-27 = WIS 6:22-25\n# WIS 9:18-19 -> WIS 9:18\nWIS 9:18 = WIS 9:18\nWIS 9:19 = WIS 9:18\n# WIS 11:5-6 -> WIS 11:5\nWIS 11:5 = WIS 11:5\nWIS 11:6 = WIS 11:5\nWIS 11:7-27 = WIS 11:6-26\n# WIS 19:12 <- WIS 19:12-13\nWIS 19:12 = WIS 19:12\nWIS 19:12 = WIS 19:13\nWIS 19:13-19 = WIS 19:14-20\n# WIS 19:20 <- WIS 19:21-22\nWIS 19:20 = WIS 19:21\nWIS 19:20 = WIS 19:22\nBAR 6:1-72 = LJE 1:1-72\n# 1MA 1:4-5 -> 1MA 1:4\n1MA 1:4 = 1MA 1:4\n1MA 1:5 = 1MA 1:4\n1MA 1:6-31 = 1MA 1:5-30\n# 1MA 1:31-32 -> 1MA 1:30\n1MA 1:31 = 1MA 1:30\n1MA 1:32 = 1MA 1:30\n1MA 1:33-35 = 1MA 1:31-33\n# 1MA 1:36ab <- 1MA 1:34\n# 1MA 1:36bc = 1MA 1:35a\n# 1MA 1:37 -> 1MA 1:35b\n1MA 1:36 = 1MA 1:34\n1MA 1:36 = 1MA 1:35\n1MA 1:37 = 1MA 1:35\n1MA 1:38-46 = 1MA 1:36-44\n# 1MA 1:47-48 -> 1MA 1:45\n1MA 1:47 = 1MA 1:45\n1MA 1:48 = 1MA 1:45\n1MA 1:49-67 = 1MA 1:46-64\n# 1MA 12:53-54 -> 1MA 12:53\n1MA 12:53 = 1MA 12:53\n1MA 12:54 = 1MA 12:53\n# 1MA 13:52-53 -> 1MA 13:52\n1MA 13:52 = 1MA 13:52\n1MA 13:53 = 1MA 13:52\n1MA 13:54 = 1MA 13:53\n# 2MA 2:18-19 -> 2MA 2:18\n2MA 2:18 = 2MA 2:18\n2MA 2:19 = 2MA 2:18\n2MA 2:20-33 = 2MA 2:19-32\n# 2MA 12:45-46 -> 2MA 12:45\n2MA 12:45 = 2MA 12:45\n2MA 12:46 = 2MA 12:45\n# 2MA 15:36-37 -> 2MA 15:36\n2MA 15:36 = 2MA 15:36\n2MA 15:37 = 2MA 15:36\n2MA 15:38-40 = 2MA 15:37-39\n#\n#\n# For 1ES the mapping info is taken from the Bible Works program\n# mapping Vulgate onto LXX\n#\n1ES 1:4 = 1ES 1:3\n1ES 1:4 = 1ES 1:4\n1ES 1:5 = 1ES 1:4\n1ES 1:5 = 1ES 1:5\n1ES 1:10 = 1ES 1:10\n1ES 1:10 = 1ES 1:11\n1ES 1:11 = 1ES 1:12\n1ES 1:12 = 1ES 1:13\n1ES 1:13 = 1ES 1:13\n1ES 1:13 = 1ES 1:14\n1ES 1:14 = 1ES 1:14\n1ES 1:15 = 1ES 1:15\n1ES 1:16 = 1ES 1:15\n1ES 1:17 = 1ES 1:16\n1ES 1:18 = 1ES 1:16\n1ES 1:19-50 = 1ES 1:17-48\n1ES 1:51 = 1ES 1:49\n1ES 1:52 = 1ES 1:49\n1ES 1:53-58 = 1ES 1:50-55\n1ES 2:1 = 1ES 2:1\n1ES 2:2 = 1ES 2:1\n1ES 2:3 = 1ES 2:2\n1ES 2:4 = 1ES 2:2\n1ES 2:5 = 1ES 2:3\n1ES 2:6 = 1ES 2:4\n1ES 2:7 = 1ES 2:4\n1ES 2:8 = 1ES 2:5\n1ES 2:9 = 1ES 2:6\n1ES 2:10 = 1ES 2:7\n1ES 2:11 = 1ES 2:8\n1ES 2:12 = 1ES 2:8\n1ES 2:13 = 1ES 2:9\n1ES 2:13 = 1ES 2:10\n1ES 2:14 = 1ES 2:11\n1ES 2:15 = 1ES 2:11\n1ES 2:16-19 = 1ES 2:12-15\n1ES 2:20 = 1ES 2:16\n1ES 2:21 = 1ES 2:16\n1ES 2:22 = 1ES 2:17\n1ES 2:23 = 1ES 2:17\n1ES 2:24 = 1ES 2:18\n1ES 2:25 = 1ES 2:19\n1ES 2:26 = 1ES 2:20\n1ES 2:26 = 1ES 2:21\n1ES 2:27 = 1ES 2:21\n1ES 2:27 = 1ES 2:22\n1ES 2:28 = 1ES 2:23\n1ES 2:29 = 1ES 2:24\n1ES 2:30 = 1ES 2:25\n1ES 2:30 = 1ES 2:26\n1ES 3:14 = 1ES 3:14\n1ES 3:15 = 1ES 3:14\n1ES 3:16 = 1ES 3:15\n1ES 3:17 = 1ES 3:16\n1ES 3:17 = 1ES 3:17\n1ES 4:10 = 1ES 4:10\n1ES 4:10 = 1ES 4:11\n1ES 4:11 = 1ES 4:11\n1ES 4:33 = 1ES 4:33\n1ES 4:33 = 1ES 4:34\n1ES 4:39 = 1ES 4:39\n1ES 4:40 = 1ES 4:39\n1ES 4:40 = 1ES 4:40\n1ES 5:41 = 1ES 5:41\n1ES 5:42 = 1ES 5:41\n1ES 5:43-53 = 1ES 5:42-52\n1ES 5:54 = 1ES 5:53\n1ES 5:55 = 1ES 5:53\n1ES 5:56 = 1ES 5:54\n1ES 5:57 = 1ES 5:55\n1ES 5:58 = 1ES 5:56\n1ES 5:58 = 1ES 5:57\n1ES 5:59 = 1ES 5:57\n1ES 5:60 = 1ES 5:57\n1ES 5:61-72 = 1ES 5:58-69\n1ES 5:73 = 1ES 5:70\n1ES 5:73 = 1ES 5:71\n1ES 6:8 = 1ES 6:8\n1ES 6:9 = 1ES 6:8\n1ES 6:10-34 = 1ES 6:9-33\n1ES 8:5 = 1ES 8:5\n1ES 8:6 = 1ES 8:5\n1ES 8:6 = 1ES 8:6\n1ES 8:13 = 1ES 8:13\n1ES 8:14 = 1ES 8:13\n1ES 8:14 = 1ES 8:14\n1ES 8:19 = 1ES 8:19\n1ES 8:20 = 1ES 8:19\n1ES 8:20 = 1ES 8:20\n1ES 8:43 = 1ES 8:43\n1ES 8:44 = 1ES 8:43\n1ES 8:45-49 = 1ES 8:44-48\n1ES 8:50 = 1ES 8:49\n1ES 8:50 = 1ES 8:50\n1ES 8:56 = 1ES 8:56\n1ES 8:57 = 1ES 8:56\n1ES 8:58-62 = 1ES 8:57-61\n1ES 8:63 = 1ES 8:62\n1ES 8:64 = 1ES 8:62\n1ES 8:65 = 1ES 8:63\n1ES 8:66 = 1ES 8:63\n1ES 8:67-85 = 1ES 8:64-82\n1ES 8:86 = 1ES 8:83\n1ES 8:86 = 1ES 8:84\n1ES 8:87 = 1ES 8:84\n1ES 8:88-92 = 1ES 8:85-89\n1ES 8:93 = 1ES 8:90\n1ES 8:94 = 1ES 8:90\n1ES 8:95 = 1ES 8:91\n1ES 8:96 = 1ES 8:92\n#\n#--------------------------------------------------------------------------\n# mapping XXA onto PSA, XXA should be in a variant Vulgate project [Studge]\n# Both PSA and XXA are synchronized to PSA in the original versification.\n# Is this allowed???\n# by request of RdB, XXA mapping to PSA has been deleted - [Barb] 20110127\n# XXA has been moved to PSA and the old PSA is now the Resource VULGP83 [Barb]\n# There could still be some errors regarding the irregular mapping of psalm titles (like in PSA 12:1 <- PSA 13:1-2)\n#\n#\n#-------------------------------------------------------\n# Removing the following lines (FB 52696)\n#2ES 3:1-36 = EZA 1:1-36\n#2ES 4:1-52 = EZA 2:1-52\n#2ES 5:1-56 = EZA 3:1-56\n#2ES 6:1-59 = EZA 4:1-59\n#2ES 7:1-35 = EZA 5:1-35\n#2ES 7:106-140 = EZA 5:36-70\n#2ES 8:1-63 = EZA 6:1-63\n#2ES 9:1-47 = EZA 7:1-47\n#2ES 10:1-60 = EZA 8:1-60\n#2ES 11:1-46 = EZA 9:1-46\n#2ES 12:1-51 = EZA 10:1-51\n#2ES 13:1-58 = EZA 11:1-58\n#2ES 14:1-48 = EZA 12:1-48\n#-----------------------------------------------------\n# map Letter to the Laodiceans [Studge]\n# XXB 1:1-7 = LAO 1:1-7\n#-----------------------------------------------------\n# map Esther Greek onto Hebrew Esther [Studge]\n# to be added in\n#-----------------------------------------------------\n# Mapping Additions to Daniel onto Hebrew Daniel [Studge]\nDAG 1:1-21 = DAN 1:1-21\nDAG 2:1-49 = DAN 2:1-49\nDAG 3:24-52 = S3Y 1:1-29\nDAG 3:52-23 = S3Y 1:30-31\nDAG 3:54 = S3Y 1:33\nDAG 3:55 = S3Y 1:32\nDAG 3:56-57 = S3Y 1:34-35\nDAG 3:58 = S3Y 1:37\nDAG 3:59 = S3Y 1:36\nDAG 3:60-90 = S3Y 1:38-68\nDAG 3:91-97 = DAN 3:24-30\nDAG 4:1-3 = DAN 3:31-33\nDAG 4:4-37 = DAN 4:1-34\nDAG 5:1-31 = DAN 5:1-31\nDAG 6:1-28 = DAN 6:1-28\nDAG 7:1-28 = DAN 7:1-28\nDAG 8:1-27 = DAN 8:1-27\nDAG 9:1-27 = DAN 9:1-27\nDAG 10:1-21 = DAN 10:1-21\nDAG 11:1-45 = DAN 11:1-45 \nDAG 12:1-13 = DAN 12:1-13\n# Susanna\nDAG 13:1-63 = SUS 1:63\n# Bel and the Dragon\nDAG 14:1-42 = BEL 1:42\n#-------------------------------------------------------\n`;\n", "const engText = require('./eng_vrs.cjs');\nconst lxxText = require('./lxx_vrs.cjs');\nconst orgText = require('./org_vrs.cjs');\nconst rscText = require('./rsc_vrs.cjs');\nconst rsoText = require('./rso_vrs.cjs');\nconst vulText = require('./vul_vrs.cjs');\n\nconst exporting = {\n  eng: { raw: engText },\n  lxx: { raw: lxxText },\n  org: { raw: orgText },\n  rsc: { raw: rscText },\n  rso: { raw: rsoText },\n  vul: { raw: vulText },\n};\n\nconst cvRegex = /^([A-Z0-9]{3}) (([0-9]+:[0-9]+) ?)*$/;\n\nfor (const [vrsName, vrsRecord] of Object.entries(exporting)) {\n  vrsRecord.cv = {};\n  const lineMatches = vrsRecord.raw.split('\\n').filter(l => l.match(cvRegex));\n\n  if (!lineMatches) {\n    continue;\n  }\n\n  for (const line of lineMatches) {\n    const cvBook = line.slice(0,3);\n    vrsRecord.cv[cvBook] = {};\n\n    for (const cvString of line.substr(4).split(' ')) {\n      const [c, v] = cvString.split(':');\n      vrsRecord.cv[cvBook][c] = v;\n    }\n  }\n}\n\nmodule.exports = exporting;\n", "const { bookCodeCompareFunctions } = require('../lib/sort.cjs');\nconst versifications = require('../../model/versifications/index.cjs');\n\nconst querySchemaString = `\n\"\"\"The top level of Proskomma queries\"\"\"\ntype Query {\n  \"\"\"The id of the processor, which is different for each Proskomma instance\"\"\"\n  id: String!\n  \"\"\"A string describing the processor class\"\"\"\n  processor: String!\n  \"\"\"The NPM package version\"\"\"\n  packageVersion: String!\n  \"\"\"The selectors used to define docSets\"\"\"\n  selectors: [selectorSpec!]!\n  \"\"\"The number of docSets\"\"\"\n  nDocSets: Int!\n  \"\"\"The docSets in the processor\"\"\"\n  docSets(\n    \"\"\"A whitelist of ids of docSets to include\"\"\"\n    ids: [String!]\n    \"\"\"Only return docSets that match the list of selector values\"\"\"\n    withSelectors: [InputKeyValue!]\n    \"\"\"Only return docSets containing a document with the specified bookCode\"\"\"\n    withBook: String\n    \"\"\"Only return docSets with all the specified tags\"\"\"\n    withTags: [String!]\n    \"\"\"Only return docSets with none of the specified tags\"\"\"\n    withoutTags: [String!]\n  ): [DocSet!]!\n  \"\"\"The docSet with the specified id\"\"\"\n  docSet(\n    \"\"\"The id of the docSet\"\"\"\n    id: String!\n  ): DocSet\n  \"\"\"The number of documents in the processor\"\"\"\n  nDocuments: Int!\n  \"\"\"The documents in the processor\"\"\"\n  documents(\n    \"\"\"A whitelist of ids of documents to include\"\"\"\n    ids: [String!]\n    \"\"\"Only return documents with the specified bookCode\"\"\"\n    withBook: String\n    \"\"\"Only return documents with the specified header key/values\"\"\"\n    withHeaderValues: [InputKeyValue!]\n    \"\"\"Only return documents with all the specified tags\"\"\"\n    withTags: [String!]\n    \"\"\"Only return documents with none of the specified tags\"\"\"\n    withoutTags: [String!]\n    \"\"\"Sort returned documents by the designated method (currently ${Object.keys(bookCodeCompareFunctions).join(', ')})\"\"\"\n    sortedBy: String\n  ): [Document!]!\n  \"\"\"The document with the specified id, or the specified docSet and withBook\"\"\"\n  document(\n    \"\"\"The id of the document\"\"\"\n    id: String\n    \"\"\"The docSet of the document (use with withBook)\"\"\"\n    docSetId: String\n    \"\"\"The book of the document (use with docSetId)\"\"\"\n    withBook: String\n  ) : Document\n  \"\"\"Reference information about standard versifications\"\"\"\n  versifications: [versification!]!\n  \"\"\"Reference information about a named, standard versification\"\"\"\n  versification(\n    \"\"\"The id of the versification\"\"\"\n    id: String!\n  ) : versification!\n}\n`;\nconst queryResolvers = {\n  id: root => root.processorId,\n  selectors: root => root.selectors,\n  docSets: (root, args) => {\n    const docSetMatchesSelectors = (ds, selectors) => {\n      for (const selector of selectors) {\n        if (ds.selectors[selector.key].toString() !== selector.value) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    let ret = ('withBook' in args ? root.docSetsWithBook(args.withBook) : Object.values(root.docSets))\n      .filter(ds => !args.ids || args.ids.includes(ds.id));\n\n    if (args.withSelectors) {\n      ret = ret.filter(ds => docSetMatchesSelectors(ds, args.withSelectors));\n    }\n\n    if (args.withTags) {\n      ret = ret.filter(ds => args.withTags.filter(t => ds.tags.has(t)).length === args.withTags.length);\n    }\n\n    if (args.withoutTags) {\n      ret = ret.filter(ds => args.withoutTags.filter(t => ds.tags.has(t)).length === 0);\n    }\n\n    return ret;\n  },\n  docSet: (root, args) => root.docSetById(args.id),\n  documents: (root, args) => {\n    const headerValuesMatch = (docHeaders, requiredHeaders) => {\n      for (const requiredHeader of requiredHeaders || []) {\n        if (!(requiredHeader.key in docHeaders) || docHeaders[requiredHeader.key] !== requiredHeader.value) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    let ret = args.withBook ? root.documentsWithBook(args.withBook) : root.documentList();\n    ret = ret.filter(d => !args.ids || args.ids.includes(d.id));\n\n    if (args.withHeaderValues) {\n      ret = ret.filter(d => headerValuesMatch(d.headers, args.withHeaderValues));\n    }\n\n    if (args.withTags) {\n      ret = ret.filter(d => args.withTags.filter(t => d.tags.has(t)).length === args.withTags.length);\n    }\n\n    if (args.withoutTags) {\n      ret = ret.filter(d => args.withoutTags.filter(t => d.tags.has(t)).length === 0);\n    }\n\n    if (args.sortedBy) {\n      if (!(args.sortedBy in bookCodeCompareFunctions)) {\n        throw new Error(`sortedBy value must be one of [${Object.keys(bookCodeCompareFunctions).join(', ')}], not ${args.sortedBy}`);\n      }\n      ret.sort(bookCodeCompareFunctions[args.sortedBy]);\n    }\n\n    return ret;\n  },\n  document: (root, args) => {\n    if (args.id && !args.docSetId && !args.withBook) {\n      return root.documentById(args.id);\n    } else if (!args.id && args.docSetId && args.withBook) {\n      return root.documentsWithBook(args.withBook).filter(d => d.docSetId === args.docSetId)[0];\n    } else {\n      throw new Error('document requires either id or both docSetId and withBook (but not all three)');\n    }\n  },\n  versifications: () => Object.entries(versifications),\n  versification: (root, args) => Object.entries(versifications).filter(v => v[0] === args.id)[0],\n};\n\nmodule.exports = {\n  querySchemaString,\n  queryResolvers,\n};\n", "const selectorSpecSchemaString = `\n\"\"\"Specification of a selector\"\"\"\ntype selectorSpec {\n  \"\"\"Name (ie the key)\"\"\"\n  name: String!\n  \"\"\"Data type (string or integer)\"\"\"\n  type: String!\n  \"\"\"Regex for validating string selector\"\"\"\n  regex: String\n  \"\"\"Inclusive minimum value for integer selector\"\"\"\n  min: String\n  \"\"\"Inclusive maximum value for integer selector\"\"\"\n  max: String\n  \"\"\"Enum of permitted string values\"\"\"\n  enum: [String!]\n}\n`;\n\nconst selectorSpecResolvers = {\n  regex: root => root.regex || null,\n  min: root => root.min || null,\n  max: root => root.max || null,\n  enum: root => root.enum || null,\n};\n\nmodule.exports = {\n  selectorSpecSchemaString,\n  selectorSpecResolvers,\n};\n", "const inputSelectorSpecSchemaString = `\n\"\"\"Input specification of a selector\"\"\"\ninput inputSelectorSpec {\n  \"\"\"Name (ie the key)\"\"\"\n  name: String!\n  \"\"\"Data type (string or integer)\"\"\"\n  type: String!\n  \"\"\"Regex for validating string selector\"\"\"\n  regex: String\n  \"\"\"Inclusive minimum value for integer selector\"\"\"\n  min: String\n  \"\"\"Inclusive maximum value for integer selector\"\"\"\n  max: String\n  \"\"\"Enum of permitted string values\"\"\"\n  enum: [String!]\n}\n`;\n\nmodule.exports = { inputSelectorSpecSchemaString };\n", "const remakeBlocks = (docSet, document, sequence, blocksSpec) => {\n  const nBlocks = sequence.blocks.length;\n\n  for (let blockN = 0; blockN < nBlocks; blockN++) {\n    document.deleteBlock(sequence.id, 0, false);\n  }\n\n  for (let blockN = 0; blockN < blocksSpec.length; blockN++) {\n    const block = blocksSpec[blockN];\n    document.newBlock(sequence.id, blockN, block.bs.payload, null, false);\n    const bgResult = docSet.updateBlockGrafts(\n      document.id,\n      sequence.id,\n      blockN,\n      block.bg,\n    );\n\n    if (!bgResult) {\n      return false;\n    }\n\n    const osResult = docSet.updateOpenScopes(\n      document.id,\n      sequence.id,\n      blockN,\n      block.os,\n    );\n\n    if (!osResult) {\n      return false;\n    }\n\n    const isResult = docSet.updateIncludedScopes(\n      document.id,\n      sequence.id,\n      blockN,\n      block.is,\n    );\n\n    if (!isResult) {\n      return false;\n    }\n\n    const itemsResult = docSet.updateItems(\n      document.id,\n      sequence.id,\n      blockN,\n      block.items,\n    );\n\n    if (!itemsResult) {\n      return false;\n    }\n  }\n};\n\nmodule.exports = { remakeBlocks };\n", "const utils = require('../../util/index.cjs');\nconst { remakeBlocks } = require('../lib/remake_blocks.cjs');\n\nconst addMutationsSchemaString = `\n  \"\"\"Adds a document which will be assigned to an existing or new docSet on the basis of the specified selectors\"\"\"\n  addDocument(\n    \"\"\"The selectors for this document, the keys of which must match those of the Proskomma instance\"\"\"\n    selectors: [InputKeyValue!]!\n    \"\"\"The format of the content (probably usfm or usx)\"\"\"\n    contentType: String!\n    \"\"\"The document content as a string\"\"\"\n    content: String!\n    \"\"\"A list of tags to be added\"\"\"\n    tags: [String!]\n  ): Boolean!\n  \"\"\"Creates a new, empty sequence\"\"\"\n  newSequence(\n    \"\"\"The id of the document to which the sequence will be added\"\"\"\n    documentId: String!\n    \"\"\"The type of the new sequence (main, heading...)\"\"\"\n    type: String!\n    \"\"\"The JSON describing blocks, if any, for the new sequence\"\"\"\n    blocksSpec: [inputBlockSpec!]\n    \"\"\"If true, graft to the first block of the main sequence\"\"\"\n    graftToMain: Boolean\n    \"\"\"'A list of tags to be added\"\"\"\n    tags: [String!]\n  ): String!\n  \"\"\"Adds a new block to a sequence\"\"\"\n  newBlock(\n    \"\"\"The id of the document containing the sequence to which the block will be added\"\"\"\n    documentId: String!\n    \"\"\"The id of the sequence to which the block will be added\"\"\"\n    sequenceId: String!\n    \"\"\"The zero-indexed position at which to add the block\"\"\"\n    blockN: Int!\n    \"\"\"The scope to be applied to the block, eg blockScope/p\"\"\"\n    blockScope: String!\n  ): Boolean!\n`;\n\nconst addMutationsResolvers = {\n  addDocument: (root, args) => {\n    const selectorsObject = {};\n\n    args.selectors.forEach(\n      s => {\n        selectorsObject[s.key] = s.value;\n      },\n    );\n    return !!root.importDocument(selectorsObject, args.contentType, args.content, null, null, null, args.tags || []);\n  },\n  newSequence: (root, args) => {\n    const document = root.documents[args.documentId];\n    const docSet = document.processor.docSets[document.docSetId];\n\n    if (!document) {\n      throw new Error(`Document '${args.documentId}' not found`);\n    }\n\n    const newSeqId = document.newSequence(args.type, args.tags);\n\n    if (args.blocksSpec) {\n      remakeBlocks(docSet, document, document.sequences[newSeqId], args.blocksSpec);\n      document.buildChapterVerseIndex();\n    }\n\n    if (args.graftToMain) {\n      docSet.maybeBuildPreEnums();\n      const mainSequenceBG = document.sequences[document.mainId].blocks[0].bg;\n      const graftTypeEnumIndex = docSet.enumForCategoryValue('graftTypes', args.type, true);\n      const seqEnumIndex = docSet.enumForCategoryValue('ids', newSeqId, true);\n      utils.succinct.pushSuccinctGraftBytes(mainSequenceBG, graftTypeEnumIndex, seqEnumIndex);\n    }\n    return newSeqId;\n  },\n  newBlock: (root, args) => {\n    const document = root.documents[args.documentId];\n\n    if (!document) {\n      throw new Error(`Document '${args.documentId}' not found`);\n    }\n\n    return document.newBlock(args.sequenceId, args.blockN, args.blockScope);\n  },\n};\n\nmodule.exports = {\n  addMutationsSchemaString,\n  addMutationsResolvers,\n};\n", "const deleteMutationsSchemaString = `\n  \"\"\"Deletes a docSet\"\"\"\n  deleteDocSet(\n    \"\"\"The id of the docSet containing the document to be deleted\"\"\"\n    docSetId: String!\n  ): Boolean\n  \"\"\"Deletes a document\"\"\"\n  deleteDocument(\n    \"\"\"The id of the docSet containing the document to be deleted\"\"\"\n    docSetId: String!\n    \"\"\"The id of the document to be deleted\"\"\"\n    documentId: String!\n  ): Boolean\n  \"\"\"Deletes a sequence from a document\"\"\"\n  deleteSequence(\n    \"\"\"The id of the document containing the sequence to be deleted\"\"\"\n    documentId: String!\n    \"\"\"The id of the sequence to be deleted\"\"\"\n    sequenceId: String!\n  ): Boolean\n  \"\"\"Deletes a block from a sequence\"\"\"\n  deleteBlock(\n    \"\"\"The id of the document containing the sequence from which the block will be deleted\"\"\"\n    documentId: String!\n    \"\"\"The id of the sequence from which the block will be deleted\"\"\"\n    sequenceId: String!\n    \"\"\"The zero-indexed number of the block to be deleted\"\"\"\n    blockN: Int!\n  ): Boolean\n`;\n\nconst deleteMutationsResolvers = {\n  deleteDocSet: (root, args) =>\n    root.deleteDocSet(args.docSetId),\n  deleteDocument: (root, args) =>\n    root.deleteDocument(args.docSetId, args.documentId),\n  deleteSequence: (root, args) => {\n    const document = root.documents[args.documentId];\n\n    if (!document) {\n      throw new Error(`Document '${args.documentId}' not found`);\n    }\n\n    return document.deleteSequence(args.sequenceId);\n  },\n  deleteBlock: (root, args) => {\n    const document = root.documents[args.documentId];\n\n    if (!document) {\n      throw new Error(`Document '${args.documentId}' not found`);\n    }\n\n    return document.deleteBlock(args.sequenceId, args.blockN);\n  },\n};\n\n\nmodule.exports = {\n  deleteMutationsSchemaString,\n  deleteMutationsResolvers,\n};\n", "const rehashMutationsSchemaString = `\n  \"\"\"Explicitly rebuild the text lookup tables for a docSet. (You probably don't need to do this)\"\"\"\n  rehashDocSet(\n    \"\"\"The id of the docSet\"\"\"\n    docSetId: String!\n  ): Boolean!\n`;\n\nconst rehashMutationsResolvers = {\n  rehashDocSet: (root, args) =>\n    root.rehashDocSet(args.docSetId),\n};\n\nmodule.exports = {\n  rehashMutationsSchemaString,\n  rehashMutationsResolvers,\n};\n", "const utils = require('../../util/index.cjs');\n\nconst tagMutationsSchemaString = `\n  \"\"\"Add one or more tags to a docSet, if they are not already present\"\"\"\n  addDocSetTags(\n    \"\"\"The id of the docSet to which the tags will be added\"\"\"\n    docSetId: String!\n    \"\"\"A list of tags to be added\"\"\"\n    tags: [String]!\n  ): [String!]!\n  \"\"\"Add one or more tags to a document, if they are not already present\"\"\"\n  addDocumentTags(\n    \"\"\"The id of the docSet containing the document to which the tags will be added\"\"\"\n    docSetId: String!\n    \"\"\"The id of the document to which the tags will be added\"\"\"\n    documentId: String!\n    \"\"\"A list of tags to be added\"\"\"\n    tags: [String]!\n  ): [String!]\n  \"\"\"Add one or more tags to a sequence, if they are not already present\"\"\"\n  addSequenceTags(\n    \"\"\"The id of the docSet containing the document containing the sequence to which the tags will be added\"\"\"\n    docSetId: String!\n    \"\"\"The id of the document containing the sequence to which the tags will be added\"\"\"\n    documentId: String!\n    \"\"\"The id of the sequence to which the tags will be added\"\"\"\n    sequenceId: String!\n    \"\"\"A list of tags to be added\"\"\"\n    tags: [String]!\n  ) : [String!]\n  \"\"\"Remove one or more tags from a docSet, if they are present\"\"\"\n  removeDocSetTags(\n    \"\"\"The id of the docSet from which the tags will be removed\"\"\"\n    docSetId: String!\n    \"\"\"A list of tags to be removed\"\"\"\n    tags: [String]!\n  ): [String!]\n  \"\"\"Remove one or more tags from a document, if they are present\"\"\"\n  removeDocumentTags(\n    \"\"\"The id of the docSet containing the document from which the tags will be removed\"\"\"\n    docSetId: String!\n    \"\"\"The id of the document from which the tags will be removed\"\"\"\n    documentId: String!\n    \"\"\"A list of tags to be removed\"\"\"\n    tags: [String]!\n  ): [String!]\n  \"\"\"Remove one or more tags from a sequence, if they are present\"\"\"\n  removeSequenceTags(\n    \"\"\"The id of the docSet containing the document containing the sequence from which the tags will be removed\"\"\"\n    docSetId: String!\n    \"\"\"The id of the document containing the sequence from which the tags will be removed\"\"\"\n    documentId: String!\n    \"\"\"The id of the sequence from which the tags will be removed\"\"\"\n    sequenceId: String!\n    \"\"\"A list of tags to be removed\"\"\"\n    tags: [String]!\n  ) : [String!]\n`;\n\nconst tagMutationsResolvers = {\n  addDocSetTags: (root, args) => {\n    const docSet = root.docSets[args.docSetId];\n\n    for (const tag of args.tags) {\n      docSet.addTag(tag);\n    }\n    return Array.from(docSet.tags);\n  },\n  addDocumentTags: (root, args) => {\n    const docSet = root.docSets[args.docSetId];\n    const document = docSet.processor.documents[args.documentId];\n\n    for (const tag of args.tags) {\n      document.addTag(tag);\n    }\n    return Array.from(document.tags);\n  },\n  addSequenceTags: (root, args) => {\n    const docSet = root.docSets[args.docSetId];\n    const document = docSet.processor.documents[args.documentId];\n    const sequence = document.sequences[args.sequenceId];\n\n    for (const tag of args.tags) {\n      utils.tags.addTag(sequence.tags, tag);\n    }\n    return Array.from(sequence.tags);\n  },\n  removeDocSetTags: (root, args) => {\n    const docSet = root.docSets[args.docSetId];\n\n    for (const tag of args.tags) {\n      docSet.removeTag(tag);\n    }\n    return Array.from(docSet.tags);\n  },\n  removeDocumentTags: (root, args) => {\n    const docSet = root.docSets[args.docSetId];\n    const document = docSet.processor.documents[args.documentId];\n\n    for (const tag of args.tags) {\n      document.removeTag(tag);\n    }\n    return Array.from(document.tags);\n  },\n  removeSequenceTags: (root, args) => {\n    const docSet = root.docSets[args.docSetId];\n    const document = docSet.processor.documents[args.documentId];\n    const sequence = document.sequences[args.sequenceId];\n\n    for (const tag of args.tags) {\n      utils.tags.removeTag(sequence.tags, tag);\n    }\n    return Array.from(sequence.tags);\n  },\n};\n\nmodule.exports = {\n  tagMutationsSchemaString,\n  tagMutationsResolvers,\n};\n", "const { PipelineHandler } = require('proskomma-json-tools');\nconst { remakeBlocks } = require('../lib/remake_blocks.cjs');\nconst pipelines = require('../../pipelines/perf2x/index.cjs');\nconst customTransforms = require('../../transforms/index.cjs');\n\nconst updateMutationsSchemaString = `\n  \"\"\"Replaces the items of a block with a new set of items\"\"\"\n  updateItems(\n    \"\"\"The id of the docSet containing the document containing the sequence containing the block for which the items will be updated\"\"\"\n    docSetId: String!\n    \"\"\"The id of the document containing the sequence containing the block for which the items will be updated\"\"\"\n    documentId: String!\n    \"\"\"The id of the sequence containing the block for which the items will be updated (defaults to the main sequence)\"\"\"\n    sequenceId: String\n    \"\"\"The zero-indexed number of the block for which the items will be updated\"\"\"\n    blockPosition: Int!\n    \"\"\"The new content for the block as item objects\"\"\"\n    items: [InputItemObject!]\n    \"\"\"BlockGrafts for the block as item objects\"\"\"\n    blockGrafts: [InputItemObject!]\n    \"\"\"Optional blockScope for the block as an item object\"\"\"\n    blockScope: InputItemObject\n  ): Boolean!\n  \"\"\"Replaces all the blocks of a sequence with a new set of blocks\"\"\"\n  updateAllBlocks(\n    \"\"\"The id of the docSet containing the document containing the sequence for which the blocks will be updated\"\"\"\n    docSetId: String!\n    \"\"\"The id of the document containing the sequence for which the blocks will be updated\"\"\"\n    documentId: String!\n    \"\"\"The id of the sequence for which the blocks will be updated (defaults to the main sequence)\"\"\"\n    sequenceId: String\n    \"\"\"The JSON describing blocks\"\"\"\n    blocksSpec: [inputBlockSpec!]!\n  ): Boolean!\n  \"\"\"Replaces all the blocks of a sequence with a new set of blocks derived from PERF\"\"\"\n  updateSequenceFromPerf(\n    \"\"\"The id of the docSet containing the document containing the sequence for which the blocks will be updated\"\"\"\n    docSetId: String!\n    \"\"\"The id of the document containing the sequence for which the blocks will be updated\"\"\"\n    documentId: String!\n    \"\"\"The id of the sequence for which the blocks will be updated (defaults to the main sequence)\"\"\"\n    sequenceId: String\n    \"\"\"The JSON describing blocks\"\"\"\n    perf: String!\n  ): Boolean!\n  \"\"\"Garbage collects unused sequences within a document. (You probably don\\\\'t need to do this.)\"\"\"\n  gcSequences(\n    \"\"\"The id of the docSet containing the document to be garbage collected\"\"\"\n    docSetId: String!\n    \"\"\"The id of the document to be garbage collected\"\"\"\n    documentId: String!\n  ) : Boolean!\n \n`;\nconst updateMutationsResolvers = {\n  updateItems: (root, args) => {\n    const docSet = root.docSets[args.docSetId];\n\n    if (!docSet) {\n      throw new Error(`DocSet '${args.docSetId}' not found`);\n    }\n\n    if (!args.items) {\n      throw new Error('Must provide items');\n    }\n\n    const itemsResult = docSet.updateItems(\n      args.documentId,\n      args.sequenceId,\n      args.blockPosition,\n      args.items,\n    );\n\n    if (!itemsResult) {\n      return false;\n    }\n\n    if (args.blockGrafts) {\n      const bgResult = docSet.updateBlockGrafts(\n        args.documentId,\n        args.sequenceId,\n        args.blockPosition,\n        args.blockGrafts,\n      );\n\n      if (!bgResult) {\n        return false;\n      }\n    }\n\n    if (args.blockScope) {\n      const bsResult = docSet.updateBlockScope(\n        args.documentId,\n        args.sequenceId,\n        args.blockPosition,\n        args.blockScope,\n      );\n\n      if (!bsResult) {\n        return false;\n      }\n    }\n    return true;\n  },\n  updateAllBlocks: (root, args) => {\n    const docSet = root.docSets[args.docSetId];\n\n    if (!docSet) {\n      throw new Error(`DocSet '${args.docSetId}' not found`);\n    }\n\n    const document = root.documents[args.documentId];\n\n    if (!document) {\n      throw new Error(`Document '${args.documentId}' not found`);\n    }\n\n    const sequence = document.sequences[args.sequenceId || document.mainId];\n\n    if (!sequence) {\n      throw new Error(`Sequence '${args.sequenceId || document.mainId}' not found`);\n    }\n    remakeBlocks(docSet, document, sequence, args.blocksSpec);\n    document.buildChapterVerseIndex();\n    return true;\n  },\n  updateSequenceFromPerf: async (root, args) => {\n    const docSet = root.docSets[args.docSetId];\n\n    if (!docSet) {\n      throw new Error(`DocSet '${args.docSetId}' not found`);\n    }\n\n    const document = root.documents[args.documentId];\n\n    if (!document) {\n      throw new Error(`Document '${args.documentId}' not found`);\n    }\n\n    const sequence = document.sequences[args.sequenceId || document.mainId];\n\n    if (!sequence) {\n      throw new Error(`Sequence '${args.sequenceId || document.mainId}' not found`);\n    }\n\n    const sequencePerf = JSON.parse(args.perf);\n    const perf = {\n      'schema': {\n        'structure': 'flat',\n        'structure_version': '0.3.0',\n        'constraints': [\n          {\n            'name': 'perf',\n            'version': '0.3.0',\n          },\n        ],\n      },\n      'metadata': {\n        'translation': {},\n        'document': {},\n      },\n      'sequences': {},\n      'main_sequence_id': args.sequenceId,\n    };\n    perf.sequences[args.sequenceId] = sequencePerf;\n\n    let blocksSpec = {};\n\n    try {\n      const pipelineHandler = new PipelineHandler({\n        pipelines:pipelines,\n        transforms:customTransforms,\n        proskomma:root,\n      });\n      const output = await pipelineHandler.runPipeline('perf2PkJsonPipeline', { perf });\n      blocksSpec = Object.values(output.pkJson)[0];\n    } catch (err) {\n      console.error('pipelineHandler Error :\\n', err);\n      return false;\n    }\n    remakeBlocks(docSet, document, sequence, blocksSpec);\n    document.buildChapterVerseIndex();\n    return true;\n  },\n  gcSequences: (root, args) => {\n    const docSet = root.docSets[args.docSetId];\n\n    if (!docSet) {\n      throw new Error(`DocSet '${args.docSetId}' not found`);\n    }\n\n    const document = root.documents[args.documentId];\n\n    if (!document) {\n      throw new Error(`Document '${args.documentId}' not found`);\n    }\n\n    if (document.gcSequences()) {\n      docSet.rehash();\n      return true;\n    } else {\n      return false;\n    }\n  },\n};\n\nmodule.exports = {\n  updateMutationsSchemaString,\n  updateMutationsResolvers,\n};\n", "const utils = require('../../util/index.cjs');\n\nconst versificationMutationsSchemaString = `\n  \"\"\"Adds verse mapping tables to the documents in a docSet, where the verse mapping may be provided in legacy .vrs or JSON format\"\"\"\n  setVerseMapping(\n    \"\"\"the id of the docSet to which the verse mapping will be added\"\"\"\n    docSetId: String!\n    \"\"\"The verse mapping, in legacy .vrs format (as a string)\"\"\"\n    vrsSource: String\n    \"\"\"The verse mapping, in JSON format (as a string)\"\"\"\n    jsonSource: String\n  ): Boolean!\n  \"\"\"Removes verse mapping tables from the documents in a docSet\"\"\"\n  unsetVerseMapping(\n    \"\"\"The id of the docSet from which verse mapping will be removed\"\"\"\n    docSetId: String!\n  ): Boolean!\n`;\nconst versificationMutationsResolvers = {\n  setVerseMapping: (root, args) => {\n    if (args.vrsSource && args.jsonSource) {\n      throw new Error('Cannot specify both vrsSource and jsonSource');\n    } else if (!args.vrsSource && !args.jsonSource) {\n      throw new Error('Must specify either vrsSource or jsonSource');\n    }\n\n    const docSet = root.docSets[args.docSetId];\n\n    if (!docSet) {\n      return false;\n    }\n\n    let jsonSource;\n\n    if (args.vrsSource) {\n      jsonSource = utils.versification.vrs2json(args.vrsSource);\n    } else {\n      jsonSource = args.jsonSource;\n    }\n\n    const forwardSuccinctTree = utils.versification.succinctifyVerseMappings(\n      jsonSource.mappedVerses,\n    );\n\n    const reversedJsonSource = utils.versification.reverseVersification(jsonSource);\n    const reversedSuccinctTree = utils.versification.succinctifyVerseMappings(\n      reversedJsonSource.reverseMappedVerses,\n    );\n\n    for (const document of docSet.documents().filter(doc => 'bookCode' in doc.headers)) {\n      const bookCode = document.headers['bookCode'];\n      const bookDocument = docSet.documentWithBook(bookCode);\n\n      if (!bookDocument) {\n        continue;\n      }\n\n      const bookMainSequence = bookDocument.sequences[bookDocument.mainId];\n      bookMainSequence.verseMapping = {};\n\n      if (bookCode in forwardSuccinctTree) {\n        bookMainSequence.verseMapping.forward = forwardSuccinctTree[bookCode];\n      }\n\n      if (bookCode in reversedSuccinctTree) {\n        bookMainSequence.verseMapping.reversed = reversedSuccinctTree[bookCode];\n      }\n    }\n    docSet.tags.add('hasMapping');\n    return true;\n  },\n  unsetVerseMapping: (root, args) => {\n    const docSet = root.docSets[args.docSetId];\n\n    if (!docSet) {\n      return false;\n    }\n\n    for (const document of docSet.documents().filter(doc => 'bookCode' in doc.headers)) {\n      const bookCode = document.headers['bookCode'];\n      const bookDocument = docSet.documentWithBook(bookCode);\n\n      if (bookDocument) {\n        const bookMainSequence = bookDocument.sequences[bookDocument.mainId];\n        bookMainSequence.verseMapping = {};\n      }\n    }\n    docSet.tags.delete('hasMapping');\n    return true;\n  },\n};\n\nmodule.exports = {\n  versificationMutationsSchemaString,\n  versificationMutationsResolvers,\n};\n", "const {\n  addMutationsSchemaString,\n  addMutationsResolvers,\n} = require('./add.cjs');\n\nconst {\n  deleteMutationsSchemaString,\n  deleteMutationsResolvers,\n} = require('./delete.cjs');\n\nconst {\n  rehashMutationsSchemaString,\n  rehashMutationsResolvers,\n} = require('./rehash.cjs');\n\nconst {\n  tagMutationsSchemaString,\n  tagMutationsResolvers,\n} = require('./tags.cjs');\n\nconst {\n  updateMutationsSchemaString,\n  updateMutationsResolvers,\n} = require('./update.cjs');\n\nconst {\n  versificationMutationsSchemaString,\n  versificationMutationsResolvers,\n} = require('./versification.cjs');\n\nconst mutationsSchemaString = `\ntype Mutation {\n${addMutationsSchemaString}\n${deleteMutationsSchemaString}\n${rehashMutationsSchemaString}\n${tagMutationsSchemaString}\n${updateMutationsSchemaString}\n${versificationMutationsSchemaString}\n}`;\n\nconst mutationsResolvers = {\n  ...addMutationsResolvers,\n  ...deleteMutationsResolvers,\n  ...rehashMutationsResolvers,\n  ...tagMutationsResolvers,\n  ...updateMutationsResolvers,\n  ...versificationMutationsResolvers,\n};\n\n\nmodule.exports = {\n  mutationsSchemaString,\n  mutationsResolvers,\n};\n", "const versificationSchemaString = `\n\"\"\"Information about a standard versification scheme\"\"\"\ntype versification {\n  \"\"\"id, derived from the Paratext vrs filename\"\"\"\n  id: String!\n  \"\"\"A string of the original vrs file\"\"\"\n  vrs: String!\n  \"\"\"Chapter/verse information for each book\"\"\"\n  cvBooks: [cvBook!]!\n  \"\"\"Chapter/verse information for one book\"\"\"\n  cvBook(\n    \"\"\"The bookCode\"\"\"\n    bookCode: String!\n  ): cvBook!\n}\n`;\n\nconst versificationResolvers = {\n  id: root => root[0],\n  vrs: root => root[1].raw,\n  cvBooks: root => Object.entries(root[1].cv),\n  cvBook: (root, args) => Object.entries(root[1].cv).filter(b => b[0] === args.bookCode)[0],\n};\n\nmodule.exports = { versificationSchemaString, versificationResolvers };\n", "const cvBookSchemaString = `\n\"\"\"Chapter/verse information for a book\"\"\"\ntype cvBook {\n  \"\"\"The bookCode\"\"\"\n  bookCode: String!\n  \"\"\"The chapter records\"\"\"\n  chapters: [cvChapter!]!\n}\n`;\n\nconst cvBookResolvers = {\n  bookCode: root => root[0],\n  chapters: root => Object.entries(root[1]),\n}\n\nmodule.exports = { cvBookSchemaString, cvBookResolvers };\n", "const cvChapterSchemaString = `\n\"\"\"Information for a chapter\"\"\"\ntype cvChapter {\n  \"\"\"The chapter\"\"\"\n  chapter: Int!\n  \"\"\"The maximum verse number\"\"\"\n  maxVerse: Int!\n}\n`;\n\nconst cvChapterResolvers = {\n  chapter: root => parseInt(root[0]),\n  maxVerse: root => parseInt(root[1]),\n};\n\nmodule.exports = { cvChapterSchemaString, cvChapterResolvers };\n", "const {\n  keyValueSchemaString,\n  keyValueResolvers,\n} = require('./queries/key_value.cjs');\nconst {\n  cvSchemaString,\n  cvResolvers,\n} = require('./queries/cv.cjs');\nconst {\n  idPartsSchemaString,\n  idPartsResolvers,\n} = require('./queries/idParts.cjs');\nconst { inputAttSpecSchemaString } = require('./queries/input_att_spec.cjs');\nconst { keyMatchesSchemaString } = require('./queries/input_key_matches.cjs');\nconst { inputKeyValueSchemaString } = require('./queries/input_key_value.cjs');\nconst { keyValuesSchemaString } = require('./queries/input_key_values.cjs');\nconst { inputItemObjectSchemaString } = require('./queries/inputItemObject.cjs');\nconst {\n  itemSchemaString,\n  itemResolvers,\n} = require('./queries/item.cjs');\nconst {\n  itemGroupSchemaString,\n  itemGroupResolvers,\n} = require('./queries/itemGroup.cjs');\nconst {\n  kvEntrySchemaString,\n  kvEntryResolvers,\n} = require('./queries/kv_entry.cjs');\nconst {\n  regexIndexSchemaString,\n  regexIndexResolvers,\n} = require('./queries/regex_index.cjs');\nconst { rowEqualsSpecSchemaString } = require('./queries/row_equals_spec.cjs');\nconst { rowMatchSpecSchemaString } = require('./queries/row_match_spec.cjs');\nconst { verseRangeSchemaString } = require('./queries/verseRange.cjs');\nconst { origSchemaString } = require('./queries/orig.cjs');\nconst {\n  verseNumberSchemaString,\n  verseNumberResolvers,\n} = require('./queries/verseNumber.cjs');\nconst {\n  cellSchemaString,\n  cellResolvers,\n} = require('./queries/cell.cjs');\nconst {\n  cIndexSchemaString,\n  cIndexResolvers,\n} = require('./queries/cIndex.cjs');\nconst {\n  cvVerseElementSchemaString,\n  cvVerseElementResolvers,\n} = require('./queries/cvVerseElement.cjs');\nconst {\n  cvVersesSchemaString,\n  cvVersesResolvers,\n} = require('./queries/cvVerses.cjs');\nconst {\n  cvIndexSchemaString,\n  cvIndexResolvers,\n} = require('./queries/cvIndex.cjs');\nconst {\n  cvNavigationSchemaString,\n  cvNavigationResolvers,\n} = require('./queries/cvNavigation.cjs');\nconst { inputBlockSpecSchemaString } = require('./queries/inputBlockSpec.cjs');\nconst {\n  nodeSchemaString,\n  nodeResolvers,\n} = require('./queries/node.cjs');\nconst {\n  kvSequenceSchemaString,\n  kvSequenceResolvers,\n} = require('./queries/kv_sequence.cjs');\nconst {\n  tableSequenceSchemaString,\n  tableSequenceResolvers,\n} = require('./queries/table_sequence.cjs');\nconst {\n  treeSequenceSchemaString,\n  treeSequenceResolvers,\n} = require('./queries/tree_sequence.cjs');\nconst {\n  blockSchemaString,\n  blockResolvers,\n} = require('./queries/block.cjs');\nconst {\n  sequenceSchemaString,\n  sequenceResolvers,\n} = require('./queries/sequence.cjs');\nconst {\n  documentSchemaString,\n  documentResolvers,\n} = require('./queries/document.cjs');\nconst {\n  docSetSchemaString,\n  docSetResolvers,\n} = require('./queries/doc_set.cjs');\nconst {\n  querySchemaString,\n  queryResolvers,\n} = require('./queries/index.cjs');\nconst {\n  selectorSpecSchemaString,\n  selectorSpecResolvers,\n} = require('./queries/selector_spec.cjs');\nconst { inputSelectorSpecSchemaString } = require('./queries/input_selector_spec.cjs');\nconst {\n  mutationsSchemaString,\n  mutationsResolvers,\n} = require('./mutations/index.cjs');\nconst {\n  versificationSchemaString,\n  versificationResolvers,\n} = require('./queries/versification.cjs');\nconst {\n  cvBookSchemaString,\n  cvBookResolvers,\n} = require('./queries/cvBook.cjs');\nconst {\n  cvChapterSchemaString,\n  cvChapterResolvers,\n} = require('./queries/cvChapter.cjs');\n\nconst typeDefs = `\n      ${querySchemaString}\n      ${mutationsSchemaString}\n      ${keyValueSchemaString}\n      ${cvSchemaString}\n      ${idPartsSchemaString}\n      ${inputAttSpecSchemaString}\n      ${keyMatchesSchemaString}\n      ${inputKeyValueSchemaString}\n      ${keyValuesSchemaString}\n      ${inputItemObjectSchemaString}\n      ${itemSchemaString}\n      ${itemGroupSchemaString}\n      ${kvEntrySchemaString}\n      ${regexIndexSchemaString}\n      ${rowEqualsSpecSchemaString}\n      ${rowMatchSpecSchemaString}\n      ${verseRangeSchemaString}\n      ${origSchemaString}\n      ${verseNumberSchemaString}\n      ${cellSchemaString}\n      ${cIndexSchemaString}\n      ${cvVerseElementSchemaString}\n      ${cvVersesSchemaString}\n      ${cvIndexSchemaString}\n      ${cvNavigationSchemaString}\n      ${inputBlockSpecSchemaString}\n      ${nodeSchemaString}\n      ${kvSequenceSchemaString}\n      ${tableSequenceSchemaString}\n      ${treeSequenceSchemaString}\n      ${blockSchemaString}\n      ${sequenceSchemaString}\n      ${documentSchemaString}\n      ${docSetSchemaString}\n      ${selectorSpecSchemaString}\n      ${inputSelectorSpecSchemaString}\n      ${versificationSchemaString}\n      ${cvBookSchemaString}\n      ${cvChapterSchemaString}\n  `;\n\nconst resolvers = {\n  Mutation: mutationsResolvers,\n  Query: queryResolvers,\n  KeyValue: keyValueResolvers,\n  cv: cvResolvers,\n  idParts: idPartsResolvers,\n  Item: itemResolvers,\n  ItemGroup: itemGroupResolvers,\n  kvEntry: kvEntryResolvers,\n  regexIndex: regexIndexResolvers,\n  verseNumber: verseNumberResolvers,\n  cell: cellResolvers,\n  cIndex: cIndexResolvers,\n  cvVerseElement: cvVerseElementResolvers,\n  cvVerses: cvVersesResolvers,\n  cvIndex: cvIndexResolvers,\n  cvNavigation: cvNavigationResolvers,\n  node: nodeResolvers,\n  kvSequence: kvSequenceResolvers,\n  tableSequence: tableSequenceResolvers,\n  treeSequence: treeSequenceResolvers,\n  Block: blockResolvers,\n  Sequence: sequenceResolvers,\n  Document: documentResolvers,\n  DocSet: docSetResolvers,\n  selectorSpec: selectorSpecResolvers,\n  versification: versificationResolvers,\n  cvBook: cvBookResolvers,\n  cvChapter: cvChapterResolvers,\n};\n\nmodule.exports = {\n  typeDefs,\n  resolvers,\n};\n", "const utils = require('../index.cjs');\nconst { labelForScope } = utils.scopeDefs;\nconst { tokenizeString } = require('../../parser/lib/tokenize.cjs');\nconst {\n  flattenNodes,\n  numberNodes,\n} = require('../../parser/lexers/nodes.cjs');\n\nconst tsvToInputBlock = (tsv, hasHeadings) => {\n  const ret = [];\n  const rows = tsv.split(/[\\n\\r]+/);\n\n  for (const [rowN, rowTSV] of rows.entries()) {\n    if (hasHeadings && rowN === 0) {\n      continue;\n    }\n\n    const row = rowTSV.split('\\t');\n\n    for (const [cellN, cellString] of row.entries()) {\n      const cellRecord = {\n        os: [],\n        bg: [],\n        bs: {\n          type: 'scope',\n          subType: 'start',\n          payload: labelForScope('tTableRow', [`${rowN}`]),\n        },\n        is: [],\n        items: [],\n      };\n      const colScope = `tTableCol/${cellN}`;\n\n      cellRecord.is.push({\n        type: 'scope',\n        subType: 'start',\n        payload: colScope,\n      });\n      cellRecord.items.push({\n        type: 'scope',\n        subType: 'start',\n        payload: colScope,\n      });\n\n      for (const [token, tokenType] of tokenizeString(cellString)) {\n        cellRecord.items.push({\n          type: 'token',\n          subType: tokenType,\n          payload: token,\n        });\n      }\n      cellRecord.items.push({\n        type: 'scope',\n        subType: 'end',\n        payload: colScope,\n      });\n      ret.push(cellRecord);\n    }\n  }\n  return ret;\n};\n\nconst tsvHeadingTags = tsv => {\n  const firstRow = tsv.split(/[\\n\\r]+/)[0];\n  return firstRow.split('\\t').map((c, n) => `col${n}:${c.trim()}`);\n};\n\nconst treeToInputBlock = treeJson => {\n  const ret = [];\n\n  for (const node of flattenNodes(numberNodes(treeJson))) {\n    const nodeRecord = {\n      os: [],\n      bg: [],\n      bs: {\n        type: 'scope',\n        subType: 'start',\n        payload: labelForScope('tTreeNode', [`${node.id}`]),\n      },\n      is: [],\n      items: [],\n    };\n    const scopePayload = labelForScope('tTreeParent', [`${node.parentId}`]);\n\n    nodeRecord.items.push({\n      type: 'scope',\n      subType: 'start',\n      payload: scopePayload,\n    });\n\n    nodeRecord.is.push({\n      type: 'scope',\n      subType: 'start',\n      payload: scopePayload,\n    });\n\n    if (node.content) {\n      for (const [name, content] of Object.entries(node.content)) {\n        const treeContentStart = nodeRecord.items.length;\n        const tokenized = tokenizeString(content);\n        const scopePayload = labelForScope('tTreeContent', [name, node.id, `${treeContentStart}`, `${tokenized.length}`]);\n\n        nodeRecord.items.push({\n          type: 'scope',\n          subType: 'start',\n          payload: scopePayload,\n        });\n\n        nodeRecord.is.push({\n          type: 'scope',\n          subType: 'start',\n          payload: scopePayload,\n        });\n\n        for (const [payload, subType] of tokenized) {\n          nodeRecord.items.push({\n            type: 'token',\n            subType,\n            payload,\n          });\n        }\n        nodeRecord.items.push({\n          type: 'scope',\n          subType: 'end',\n          payload: scopePayload,\n        });\n      }\n    }\n\n    if (node.children) {\n      for (const [childN, childNodeN] of node.children.entries()) {\n        const scopePayload = labelForScope('tTreeChild', [childN, childNodeN]);\n\n        nodeRecord.items.push({\n          type: 'scope',\n          subType: 'start',\n          payload: scopePayload,\n        });\n        nodeRecord.is.push({\n          type: 'scope',\n          subType: 'start',\n          payload: scopePayload,\n        });\n        nodeRecord.items.push({\n          type: 'scope',\n          subType: 'end',\n          payload: scopePayload,\n        });\n      }\n    }\n    nodeRecord.items.push({\n      type: 'scope',\n      subType: 'end',\n      payload: scopePayload,\n    });\n    ret.push(nodeRecord);\n  }\n  return ret;\n};\n\nconst escapePayload =\n    str =>\n      str.replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g, '\\\\\"')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\r/g, '\\\\r');\n\nconst object2Query = obs =>\n  '[' +\n  obs.map(\n    ob => `\\n    {\\n      type: \"${ob.type}\" \\n      subType: \"${ob.subType}\" \\n      payload: \"${escapePayload(ob.payload)}\"\\n    }`,\n  ).join(',') +\n  ']';\nconst oneObject2Query = ob => `{\\n      type: \"${ob.type}\" \\n      subType: \"${ob.subType}\" \\n      payload: \"${escapePayload(ob.payload)}\"}`;\nconst blocksSpec2Query =\n    bSpec =>\n      '[\\n' +\n      bSpec.map(\n        b =>\n          `  {\\n    bs: ${oneObject2Query(b.bs)}, \\n    bg: ${object2Query(b.bg)}, \\n    os: ${object2Query(b.os)}, \\n    is: ${object2Query(b.is)}, \\n    items: ${object2Query(b.items)}}\\n`) +\n      ']';\n\nmodule.exports = {\n  tokenizeString,\n  tsvToInputBlock,\n  tsvHeadingTags,\n  treeToInputBlock,\n  blocksSpec2Query,\n  object2Query,\n  oneObject2Query,\n};\n", "const xre = require('xregexp');\nconst { makeExecutableSchema } = require('@graphql-tools/schema');\n\nconst { Mutex } =require('async-mutex');\nconst checksum = require('checksum');\nconst {\n  graphql,\n  graphqlSync,\n} = require('graphql');\nconst BitSet = require('bitset');\n\nconst packageJson = require('../package.json');\nconst utils = require('./util/index.cjs');\nconst { DocSet } = require('./model/doc_set.cjs');\nconst { Document } = require('./model/document.cjs');\nconst {\n  typeDefs,\n  resolvers,\n} = require('./graph/index.cjs');\n\nconst { lexingRegexes } = require('./parser/lexers/lexingRegexes.cjs');\nconst blocksSpecUtils = require('./util/scriptlike/blocksSpec.cjs');\nconst {\n  flattenNodes,\n  numberNodes,\n} = require('./parser/lexers/nodes.cjs');\n\nconst tree2nodes = tree => flattenNodes(numberNodes(tree));\n\nconst executableSchema =\n  makeExecutableSchema({\n    typeDefs,\n    resolvers,\n  });\n\nclass Proskomma {\n  constructor(selectors) {\n    this.processorId = utils.generateId();\n    this.documents = {};\n    this.docSetsBySelector = {};\n    this.docSets = {};\n    this.filters = {};\n    this.customTags = {\n      heading: [],\n      paragraph: [],\n      char: [],\n      word: [],\n      intro: [],\n      introHeading: [],\n    };\n    this.emptyBlocks = [];\n    this.selectors = selectors || [\n      {\n        name: 'lang',\n        type: 'string',\n        regex: '[a-z]{3}',\n      },\n      {\n        name: 'abbr',\n        type: 'string',\n      },\n    ];\n    this.validateSelectorSpec(this.selectors);\n    this.mutex = new Mutex();\n    this.nextPeriph = 0;\n    this.nextTable = 0;\n    this.nextNodes = 0;\n  }\n\n  validateSelectors() {\n    if (this.selectors.length === 0) {\n      throw new Error('No selectors found');\n    }\n\n    for (const [n, selector] of this.selectors.entries()) {\n      if (!('name' in selector)) {\n        throw new Error(`Selector ${n} has no name`);\n      }\n\n      if (!('type' in selector)) {\n        throw new Error(`Selector ${n} has no type`);\n      }\n\n      if (!['string', 'integer'].includes(selector.type)) {\n        throw new Error(`Type for selector ${n} must be string or number, not ${selector.type}`);\n      }\n\n      if (selector.type === 'string') {\n        if ('min' in selector) {\n          throw new Error('String selector should not include \\'min\\'');\n        }\n\n        if ('max' in selector) {\n          throw new Error('String selector should not include \\'max\\'');\n        }\n\n        if ('regex' in selector) {\n          try {\n            xre(selector.regex);\n          } catch (err) {\n            throw new Error(`Regex '${selector.regex}' is not valid: ${err}`);\n          }\n        }\n\n        if ('enum' in selector) {\n          for (const enumElement of selector.enum) {\n            if (typeof enumElement !== 'string') {\n              throw new Error(`Enum values for selector ${selector.name} should be strings, not '${enumElement}'`);\n            }\n          }\n        }\n      } else {\n        if ('regex' in selector) {\n          throw new Error('Integer selector should not include \\'regex\\'');\n        }\n\n        if ('min' in selector && typeof selector.min !== 'number') {\n          throw new Error(`'min' must be a number, not '${selector.min}'`);\n        }\n\n        if ('max' in selector && typeof selector.max !== 'number') {\n          throw new Error(`'max' must be a number, not '${selector.max}'`);\n        }\n\n        if ('min' in selector && 'max' in selector && selector.min > selector.max) {\n          throw new Error(`'min' cannot be greater than 'max' (${selector.min} > ${selector.max})`);\n        }\n\n        if ('enum' in selector) {\n          for (const enumElement of selector.enum) {\n            if (typeof enumElement !== 'number') {\n              throw new Error(`Enum values for selector ${selector.name} should be numbers, not '${enumElement}'`);\n            }\n          }\n        }\n      }\n\n      for (const selectorKey of Object.keys(selector)) {\n        if (!['name', 'type', 'regex', 'min', 'max', 'enum'].includes(selectorKey)) {\n          throw new Error(`Unexpected key '${selectorKey}' in selector ${n}`);\n        }\n      }\n    }\n  }\n\n  validateSelectorSpec(spec) {\n    for (const specElement of spec) {\n      if (!specElement['name']) {\n        throw new Error(`name not found in selector spec element '${JSON.stringify(specElement)}'`);\n      }\n\n      if (!specElement['type']) {\n        throw new Error(`type not found in selector spec element '${JSON.stringify(specElement)}'`);\n      }\n\n      if (!['string', 'integer'].includes(specElement.type)) {\n        throw new Error(`Type for spec element must be string or number, not ${specElement.type}`);\n      }\n\n      for (const selectorKey of Object.keys(specElement)) {\n        if (!['name', 'type', 'regex', 'min', 'max', 'enum'].includes(selectorKey)) {\n          throw new Error(`Unexpected key '${selectorKey}' in selectorSpec`);\n        }\n      }\n    }\n  }\n\n  selectorString(docSetSelectors) {\n    // In root so it can be easily subclassed\n    return this.selectors.map(s => s.name).map(n => `${docSetSelectors[n]}`).join('_');\n  }\n\n  processor() {\n    return 'Proskomma JS';\n  }\n\n  packageVersion() {\n    return packageJson.version;\n  }\n\n  docSetList() {\n    return Object.values(this.docSets);\n  }\n\n  docSetsById(ids) {\n    return Object.values(this.docSets).filter(ds => ids.includes(ds.id));\n  }\n\n  docSetById(id) {\n    return this.docSets[id];\n  }\n\n  docSetsWithBook(bookCode) {\n    const docIdsWithBook = Object.values(this.documents)\n      .filter(doc => 'bookCode' in doc.headers && doc.headers['bookCode'] === bookCode)\n      .map(doc => doc.id);\n\n    const docIdWithBookInDocSet = (ds) => {\n      for (const docId of docIdsWithBook) {\n        if (ds.docIds.includes(docId)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    return Object.values(this.docSets).filter(ds => docIdWithBookInDocSet(ds));\n  }\n\n  nDocSets() {\n    return this.docSetList().length;\n  }\n\n  nDocuments() {\n    return this.documentList().length;\n  }\n\n  documentList() {\n    return Object.values(this.documents);\n  }\n\n  documentById(id) {\n    return this.documents[id];\n  }\n\n  documentsById(ids) {\n    return Object.values(this.documents).filter(doc => ids.includes(doc.id));\n  }\n\n  documentsWithBook(bookCode) {\n    return Object.values(this.documents).filter(doc => 'bookCode' in doc.headers && doc.headers['bookCode'] === bookCode);\n  }\n\n  importDocument(selectors, contentType, contentString, filterOptions, customTags, emptyBlocks, tags) {\n    return this.importDocuments(selectors, contentType, [contentString], filterOptions, customTags, emptyBlocks, tags)[0];\n  }\n\n  importDocuments(selectors, contentType, contentStrings, filterOptions, customTags, emptyBlocks, tags) {\n    if (!filterOptions) {\n      filterOptions = this.filters;\n    }\n\n    if (!customTags) {\n      customTags = this.customTags;\n    }\n\n    if (!emptyBlocks) {\n      emptyBlocks = this.emptyBlocks;\n    }\n\n    if (!tags) {\n      tags = [];\n    }\n\n    const docSetId = this.findOrMakeDocSet(selectors);\n    const docSet = this.docSets[docSetId];\n    docSet.buildPreEnums();\n    const docs = [];\n\n    for (const contentString of contentStrings) {\n      let doc = new Document(this, docSetId, contentType, contentString, filterOptions, customTags, emptyBlocks, tags);\n      const bookCode = doc.headers.bookCode;\n      const existingBookCodes = Object.values(this.documents)\n        .filter(d => docSet.docIds.includes(d.id))\n        .map(d => d.headers.bookCode);\n\n      if (existingBookCodes.includes(bookCode)) {\n        throw new Error(`Attempt to import document with bookCode '${bookCode}' which already exists in docSet ${docSetId}`);\n      }\n      this.addDocument(doc, docSetId);\n      docs.push(doc);\n    }\n    docSet.preEnums = {};\n    return docs;\n  }\n\n  importUsfmPeriph(selectors, contentString, filterOptions, customTags, emptyBlocks, tags) {\n    const lines = contentString.toString().split(/[\\n\\r]+/);\n    const bookCode = lines[0].substring(4, 7);\n\n    if (!['FRT', 'BAK', 'INT'].includes(bookCode)) {\n      throw new Error(`importUsfmInt() expected bookCode of FRT, BAK or INT, not '${bookCode}'`);\n    }\n\n    let periphs = [];\n\n    for (const line of lines) {\n      if (line.substring(0, 7) === '\\\\periph') {\n        let matchedBits = xre.exec(line, xre('^\\\\\\\\periph (.*)\\\\|\\\\s*id\\\\s*=\\\\s*\"([^\"]+)\"\\\\s*$'));\n\n        if (!matchedBits) {\n          throw new Error(`Unable to parse periph line '${line}'`);\n        }\n\n        const periphDesc = matchedBits[1];\n        const periphId = matchedBits[2];\n        const periphBookCode = `\\\\id P${this.nextPeriph > 9 ? this.nextPeriph : '0' + this.nextPeriph}`;\n        periphs.push([`${periphBookCode} INT ${periphId} - ${periphDesc}`]);\n        this.nextPeriph++;\n      } else if (periphs.length > 0 && line.substring(0, 3) !== '\\\\id') {\n        periphs[periphs.length - 1].push(line);\n      }\n    }\n    this.importDocuments(\n      selectors,\n      'usfm',\n      periphs.map(p => p.join('\\n')),\n      filterOptions,\n      customTags,\n      emptyBlocks,\n      tags,\n    );\n  }\n\n  cleanUsfm(usfm, options) {\n    options = options || {};\n    const lines = usfm.toString().split(/[\\n\\r]+/);\n    const ret = [];\n    let inHeaders = true;\n    const headers = ['\\\\id', '\\\\ide', '\\\\usfm', '\\\\sts', '\\\\rem', '\\\\h', '\\\\toc'];\n\n    for (const line of lines) {\n      const firstWord = line.split(' ')[0]\n        .replace(/[0-9]+/g, '');\n\n      if ('remove' in options && options.remove.includes(firstWord)) {\n        continue;\n      }\n\n      const isHeaderLine = headers.includes(firstWord);\n\n      if (inHeaders && !isHeaderLine && firstWord !== '\\\\mt') {\n        ret.push('\\\\mt1 USFM');\n      }\n      ret.push(line);\n\n      if (!isHeaderLine) {\n        inHeaders = false;\n      }\n    }\n    return ret.join('\\n');\n  }\n\n  deleteDocSet(docSetId) {\n    if (!(docSetId in this.docSets)) {\n      return false;\n    }\n\n    for (const docId of Object.entries(this.documents).filter(tup => tup[1].docSetId === docSetId).map(tup => tup[0])) {\n      this.deleteDocument(docSetId, docId, false, false);\n    }\n\n    let selected = this.docSetsBySelector;\n    const parentSelectors = this.selectors.slice(0, this.selectors.length - 1);\n\n    for (const selector of parentSelectors) {\n      selected = selected[this.docSets[docSetId].selectors[selector.name]];\n    }\n\n    const lastSelectorName = this.selectors[this.selectors.length - 1].name;\n    const lastSelectorValue = this.docSets[docSetId].selectors[lastSelectorName];\n\n    if (!selected[lastSelectorValue]) {\n      throw new Error(`Could not find docSetId '${docSetId}' in docSetsBySelector in deleteDocSet`);\n    }\n    delete selected[lastSelectorValue];\n    delete this.docSets[docSetId];\n    return true;\n  }\n\n  deleteDocument(docSetId, documentId, maybeDeleteDocSet, maybeRehashDocSet) {\n    maybeDeleteDocSet = maybeDeleteDocSet === undefined ? true : maybeDeleteDocSet;\n    maybeRehashDocSet = maybeRehashDocSet === undefined ? true : maybeRehashDocSet;\n\n    if (!(docSetId in this.docSets)) {\n      return false;\n    }\n\n    if (!(documentId in this.documents)) {\n      return false;\n    }\n\n    delete this.documents[documentId];\n\n    if (this.docSets[docSetId].docIds.length > 1) {\n      this.docSets[docSetId].docIds = this.docSets[docSetId].docIds.filter(i => i !== documentId);\n\n      if (maybeRehashDocSet) {\n        this.rehashDocSet(docSetId);\n      }\n    } else if (maybeDeleteDocSet) {\n      this.deleteDocSet(docSetId);\n    }\n    return true;\n  }\n\n  rehashDocSet(docSetId) {\n    if (!(docSetId in this.docSets)) {\n      return false;\n    }\n\n    const docSet = this.docSets[docSetId];\n    return docSet.rehash();\n  }\n\n  addDocument(doc, docSetId) {\n    this.documents[doc.id] = doc;\n    this.docSets[docSetId].docIds.push(doc.id);\n    this.docSets[docSetId].buildEnumIndexes();\n  }\n\n  loadSuccinctDocSet(succinctOb) {\n    const succinctId = succinctOb.id;\n\n    if (succinctId in this.docSets) {\n      throw new Error(`Attempting to succinct load docSet ${succinctId} which is already loaded`);\n    }\n\n    const docSet = new DocSet(this, null, null, succinctOb);\n    const docSetId = docSet.id;\n    this.docSets[docSetId] = docSet;\n    let selectorTree = this.docSetsBySelector;\n    const selectors = succinctOb.metadata.selectors;\n\n    for (const selector of this.selectors) {\n      if (selector.name === this.selectors[this.selectors.length - 1].name) {\n        if (!(selectors[selector.name] in selectorTree)) {\n          selectorTree[selectors[selector.name]] = docSet;\n          this.docSets[docSet.id] = docSet;\n        }\n      } else {\n        if (!(selectors[selector.name] in selectorTree)) {\n          selectorTree[selectors[selector.name]] = {};\n        }\n        selectorTree = selectorTree[selectors[selector.name]];\n      }\n    }\n    docSet.buildPreEnums();\n    const docs = [];\n\n    for (const docId of Object.keys(succinctOb.docs)) {\n      let doc = this.newDocumentFromSuccinct(docId, succinctOb);\n      docs.push(doc);\n    }\n    docSet.preEnums = {};\n    return docs;\n  }\n\n  newDocumentFromSuccinct(docId, succinctOb) {\n    const doc = new Document(this, succinctOb.id);\n    doc.id = docId;\n    const succinctDocOb = succinctOb.docs[docId];\n    doc.filterOptions = {};\n    doc.customTags = [];\n    doc.emptyBlocks = [];\n    doc.tags = new Set(succinctDocOb.tags);\n    doc.headers = succinctDocOb.headers;\n    doc.mainId = succinctDocOb.mainId;\n    doc.sequences = {};\n\n    for (const [seqId, seq] of Object.entries(succinctDocOb.sequences)) {\n      doc.sequences[seqId] = {\n        id: seqId,\n        type: seq.type,\n        tags: new Set(seq.tags),\n        blocks: [],\n      };\n\n      if (seq.type === 'main') {\n        doc.sequences[seqId].chapters = {};\n\n        if (!('chapters' in seq)) {\n          throw new Error('chapters not found in main sequence');\n        }\n\n        for (const [chK, chV] of Object.entries(seq.chapters)) {\n          const bA = new utils.ByteArray();\n          bA.fromBase64(chV);\n          doc.sequences[seqId].chapters[chK] = bA;\n        }\n        doc.sequences[seqId].chapterVerses = {};\n\n        if (!('chapterVerses' in seq)) {\n          throw new Error('chapterVerses not found in main sequence');\n        }\n\n        for (const [chvK, chvV] of Object.entries(seq.chapterVerses)) {\n          const bA = new utils.ByteArray();\n          bA.fromBase64(chvV);\n          doc.sequences[seqId].chapterVerses[chvK] = bA;\n        }\n\n        if (!('tokensPresent' in seq)) {\n          throw new Error('tokensPresent not found in main sequence');\n        }\n\n        doc.sequences[seqId].tokensPresent = new BitSet(seq.tokensPresent);\n      }\n\n      for (const succinctBlock of seq.blocks) {\n        const block = {};\n\n        for (const [blockField, blockSuccinct] of Object.entries(succinctBlock)) {\n          const ba = new utils.ByteArray(256);\n          ba.fromBase64(blockSuccinct);\n          block[blockField] = ba;\n        }\n        doc.sequences[seqId].blocks.push(block);\n      }\n    }\n    this.addDocument(doc, succinctOb.id);\n    return doc;\n  }\n\n  findOrMakeDocSet(selectors) {\n    let selectorTree = this.docSetsBySelector;\n    let docSet;\n\n    for (const selector of this.selectors) {\n      if (selector.name === this.selectors[this.selectors.length - 1].name) {\n        if (selectors[selector.name] in selectorTree) {\n          docSet = selectorTree[selectors[selector.name]];\n        } else {\n          docSet = new DocSet(this, selectors);\n          selectorTree[selectors[selector.name]] = docSet;\n          this.docSets[docSet.id] = docSet;\n        }\n      } else {\n        if (!(selectors[selector.name] in selectorTree)) {\n          selectorTree[selectors[selector.name]] = {};\n        }\n        selectorTree = selectorTree[selectors[selector.name]];\n      }\n    }\n    return docSet.id;\n  }\n\n  async gqlQuery(query, callback) {\n    const release = await this.mutex.acquire();\n\n    try {\n      const result = await graphql({\n        schema: executableSchema, source: query, rootValue:this, contextValue:{},\n      });\n\n      if (callback) {\n        callback(result);\n      }\n      return result;\n    } finally {\n      release();\n    }\n  }\n\n  gqlQuerySync(query, callback) {\n    const result = graphqlSync({\n      schema: executableSchema, source: query, rootValue:this, contextValue:{},\n    });\n\n    if (callback) {\n      callback(result);\n    }\n    return result;\n  }\n\n  serializeSuccinct(docSetId) {\n    return this.docSets[docSetId].serializeSuccinct();\n  }\n\n  checksum() {\n    const dsChecksums = Object.values(this.docSets).map(ds => ds.checksum()).sort().join(' ');\n    return checksum(dsChecksums);\n  }\n}\n\nmodule.exports = {\n  Proskomma,\n  typeDefs,\n  resolvers,\n  lexingRegexes,\n  blocksSpecUtils,\n  tree2nodes,\n  utils,\n};\n", "const { Proskomma, lexingRegexes } = require('./src/index.cjs');\nconst blocksSpecUtils = require('./src/util/scriptlike/blocksSpec.cjs');\n\nmodule.exports = {\n  Proskomma, lexingRegexes, blocksSpecUtils,\n};\n", "import cjsModule from '../index.cjs';\n// Proskomma, lexingRegexes, blocksSpecUtils\nexport const Proskomma = cjsModule.Proskomma;\nexport const lexingRegexes = cjsModule.lexingRegexes;\nexport const blocksSpecUtils = cjsModule.blocksSpecUtils;\n"],
  "mappings": "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CA;AAAA,QACI,QAAQ;AAAA,QACR,OAAO;AAAA,MACX;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,OAAO;AAAA,MACX;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,OAAO;AAAA,MACX;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,OAAO;AAAA,MACX;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,OAAO;AAAA,MACX;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,OAAO;AAAA,MACX;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,MACA;AAAA,QACI,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,MA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AA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA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",
  "names": ["toString", "global", "global", "process", "versions", "version", "isObject", "global", "global", "hasOwnProperty", "toString", "global", "Symbol", "isObject", "global", "isObject", "document", "isObject", "global", "Object", "defineProperty", "require_define_property", "require_define_property", "isArray", "noop", "isArray", "isObject", "slice", "require_slice", "require_slice", "require_slice", "toString", "global", "WeakMap", "keys", "global", "isObject", "TypeError", "WeakMap", "indexOf", "keys", "keys", "activeXDocument", "isObject", "toString", "toString", "keys", "done", "toString", "from", "from", "require_from", "require_from", "isArray", "isObject", "isArray", "isObject", "concat", "Symbol", "Symbol", "self", "global", "TypeError", "wrap", "keys", "Symbol", "toString", "toString", "isArray", "isObject", "global", "global", "require_symbol", "require_symbol", "require_get_iterator_method", "require_get_iterator_method", "require_get_iterator_method", "require_get_iterator_method", "require_get_iterator_method", "require_get_iterator_method", "isArray", "require_is_array", "require_is_array", "require_is_array", "require_is_array", "require_is_array", "require_is_array", "require_is_array", "require_symbol", "require_symbol", "require_symbol", "require_symbol", "require_slice", "require_slice", "require_slice", "require_slice", "require_from", "require_from", "require_from", "require_from", "require_flags", "require_flags", "require_flags", "toString", "require_sort", "require_sort", "require_sort", "toString", "global", "toString", "Symbol", "parseInt", "require_parse_int", "require_parse_int", "indexOf", "require_index_of", "require_index_of", "require_index_of", "forEach", "forEach", "require_for_each", "require_for_each", "require_for_each", "Object", "require_create", "require_create", "require_concat", "require_concat", "require_concat", "F", "hex", "dec", "isType", "on", "global", "i", "self", "require_reduce", "require_reduce", "require_reduce", "require_map", "require_map", "require_map", "_default", "_default", "global", "F", "_default", "_default", "_default", "_default", "exports", "done", "from", "resume", "v", "OperationTypeNode", "DirectiveLocation", "Kind", "indent", "TokenKind", "instanceOf", "isDigit", "keys", "config", "parseValue", "config", "TypeKind", "config", "isNull", "document", "init_validate", "document", "getFieldDef", "collectSubfields", "document", "syntaxError", "init_validate", "document", "getFieldDef", "init_validate", "document", "getNamedType", "config", "getNamedType", "init_validate", "config", "document", "init_validate", "config", "sortFields", "BreakingChangeType", "DangerousChangeType", "init_graphql", "isIterableObject", "isObjectLike", "isPromise", "promiseReduce", "hasOwnProperty", "MAX_RECURSIVE_DEPTH", "inspect", "formatValue", "formatObjectValue", "formatError", "formatArray", "isJSONable", "formatObject", "getObjectTag", "getArgumentValues", "isNull", "schemaDirectiveMap", "_a", "integerStringRegExp", "memoize3", "cache3", "cache4", "cache5", "type", "document", "MAX_LINE_LENGTH", "keys", "join", "hasMultilineItems", "key", "indent", "block", "wrap", "printBlockString", "printDocASTReducer", "leadingWhitespace", "document", "config", "DirectiveLocation", "MapperKind", "config", "config", "config", "config", "config", "queue", "type", "_a", "isObject", "config", "mapAsyncIterator", "collectFieldsImpl", "shouldIncludeNode", "getFieldEntryKey", "doesFragmentConditionMatch", "collectFields", "collectSubfields", "getOperationRootType", "errors", "isAsyncIterable", "proxyMethodFactory", "asyncIterator", "asyncIterable", "document", "addPath", "pathToArray", "printPathArray", "defaultFieldResolver", "config", "config", "require_directives", "source", "config", "config", "config", "CompareVal", "require_fields", "config", "config", "config", "config", "config", "config", "config", "config", "config", "config", "_a", "_b", "require_cjs", "require_types", "config", "require_cjs", "require_errors", "Semaphore", "release", "queue", "Mutex", "release", "require_lib", "parse", "P", "from", "byteLength", "toByteArray", "fromByteArray", "lookup", "revLookup", "Arr", "len", "i", "tripletToBase64", "encodeChunk", "len2", "done", "uppercase", "t", "b", "c", "d", "a", "x", "version", "enumIndexes", "fromV", "toV", "inspect", "block", "allBlockScopes", "block", "require_enum", "block", "document", "document", "block", "docSet", "isArray", "block", "UsedValueState", "from", "self", "from", "Type", "isNumber", "validateName", "validateName", "self", "DataType", "validate", "_a", "self", "baseId", "validateName", "self", "env", "validateName", "validate", "format", "validateSchema", "env", "validateName", "self", "block", "self", "format", "format", "DiscrError", "require_document_structure", "require_sequence_structure", "require_block_structure", "require_contentElement_structure", "require_perf_document_constraint", "require_perf_sequence_constraint", "require_perf_block_constraint", "require_perf_contentElement_constraint", "require_sofria_document_constraint", "require_sofria_sequence_constraint", "require_sofria_block_constraint", "require_sofria_contentElement_constraint", "version", "keys", "config", "lexingRegexes", "config", "_loop", "word", "config", "PerfRenderFromJson", "config", "block", "elementContext", "require_verseWords", "verseWordsCode", "config", "require_stripAlignment", "stripMarkupCode", "mergeAlignmentCode", "require_renderActions", "usfmToPerfCode", "require_transforms", "require_identity", "keys", "config", "require_renderActions", "require_identity", "identityActionsCode", "require_transforms", "config", "config", "buildMilestone", "buildEndWrapper", "config", "require_renderActions", "require_wordCount", "wordCountCode", "require_calculateUsfmChapterPositions", "calculateUsfmChapterPositionsCode", "require_perfToUsfm", "perfToUsfmCode", "require_transforms", "require_renderActions", "require_identity", "identityActionsCode", "require_justTheBible", "justTheBibleCode", "keys", "e", "t", "s", "i", "block", "mergePerfTextCode", "require_transforms", "keys", "self", "keys", "config", "config", "block", "elementContext", "keys", "config", "PerfRenderFromJson", "lexingRegexes", "lexingRegexes", "lexingRegexes", "self", "listeners", "copy", "domain", "keys", "e", "version", "addListener", "once", "removeListener", "removeAllListeners", "emit", "init_process", "inherits", "inspect", "x", "formatValue", "keys", "formatError", "formatArray", "hasOwnProperty", "init_process", "Buffer", "fill", "isArray", "read", "i", "init_buffer", "toString", "inspect", "compare", "write", "byteLength", "init_buffer", "Buffer", "Buffer", "init_buffer", "prependListener", "listenerCount", "self", "indexOf", "init_process", "onend", "Buffer", "init_buffer", "init_process", "self", "init_process", "onend", "emit", "write", "Stream", "s", "lexingRegexes", "block", "pos", "lexingRegexes", "scopePayload", "specs", "pt", "Parser", "block", "require_calculateUsfmChapterPositions", "PerfRenderFromJson", "PerfRenderFromJson", "config", "PerfRenderFromJson", "lexingRegexes", "require_transforms", "document", "block", "chapterN", "document", "block", "newSequence", "oldSequence", "document", "newBlock", "block", "document", "block", "document", "block", "Parser", "block", "indent", "config", "require_item", "nv", "block", "row", "require_block", "block", "block", "document", "require_document", "require_sort", "require_doc_set", "document", "block", "document", "document", "require_rehash", "require_tags", "document", "require_update", "document", "require_versification", "document", "require_versification", "scopePayload", "graphql", "graphqlSync", "lexingRegexes", "blocksSpecUtils", "Proskomma", "block", "release", "Proskomma", "lexingRegexes", "blocksSpecUtils", "cjsModule"]
}
